{"knowledge_relations":[{"id":892,"source_id":"4e3192e9-65a4-4d76-aecd-d5bb87b83c99","target_id":"a9878038-a700-4445-bb42-78ba9e280c8f","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 4e3192e9-65a4-4d76-aecd-d5bb87b83c99 -\u003e a9878038-a700-4445-bb42-78ba9e280c8f","gmt_create":"2025-10-10T23:52:36.420721+08:00","gmt_modified":"2025-10-10T23:52:36.420721+08:00"},{"id":893,"source_id":"4e3192e9-65a4-4d76-aecd-d5bb87b83c99","target_id":"67ec7855-999e-4a4d-bb46-b0ab4547b3a0","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 4e3192e9-65a4-4d76-aecd-d5bb87b83c99 -\u003e 67ec7855-999e-4a4d-bb46-b0ab4547b3a0","gmt_create":"2025-10-10T23:52:36.421722+08:00","gmt_modified":"2025-10-10T23:52:36.421722+08:00"},{"id":894,"source_id":"4e3192e9-65a4-4d76-aecd-d5bb87b83c99","target_id":"4b269d5e-2021-4ec0-8330-0ad361efb025","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 4e3192e9-65a4-4d76-aecd-d5bb87b83c99 -\u003e 4b269d5e-2021-4ec0-8330-0ad361efb025","gmt_create":"2025-10-10T23:52:36.426811+08:00","gmt_modified":"2025-10-10T23:52:36.426812+08:00"},{"id":895,"source_id":"4e3192e9-65a4-4d76-aecd-d5bb87b83c99","target_id":"929463ca-5e28-4924-a594-941da705e160","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 4e3192e9-65a4-4d76-aecd-d5bb87b83c99 -\u003e 929463ca-5e28-4924-a594-941da705e160","gmt_create":"2025-10-10T23:52:36.43175+08:00","gmt_modified":"2025-10-10T23:52:36.43175+08:00"},{"id":896,"source_id":"73581c52-dd47-4997-aad6-03322c0beaca","target_id":"5eb4ef16-4d9d-4146-8fee-e15aa725834c","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 73581c52-dd47-4997-aad6-03322c0beaca -\u003e 5eb4ef16-4d9d-4146-8fee-e15aa725834c","gmt_create":"2025-10-10T23:52:36.441184+08:00","gmt_modified":"2025-10-10T23:52:36.441184+08:00"},{"id":897,"source_id":"73581c52-dd47-4997-aad6-03322c0beaca","target_id":"0d3db307-d6b1-45a3-ba8d-b94dcb54f059","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 73581c52-dd47-4997-aad6-03322c0beaca -\u003e 0d3db307-d6b1-45a3-ba8d-b94dcb54f059","gmt_create":"2025-10-10T23:52:36.447651+08:00","gmt_modified":"2025-10-10T23:52:36.447651+08:00"},{"id":898,"source_id":"73581c52-dd47-4997-aad6-03322c0beaca","target_id":"c92e066b-922b-42db-921a-847317bff3e4","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 73581c52-dd47-4997-aad6-03322c0beaca -\u003e c92e066b-922b-42db-921a-847317bff3e4","gmt_create":"2025-10-10T23:52:36.454232+08:00","gmt_modified":"2025-10-10T23:52:36.454232+08:00"},{"id":899,"source_id":"e5698a80-098e-4168-9145-4395fd1bc593","target_id":"ba5091c7-1c89-413b-9a4b-7f3e8cfc62ee","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: e5698a80-098e-4168-9145-4395fd1bc593 -\u003e ba5091c7-1c89-413b-9a4b-7f3e8cfc62ee","gmt_create":"2025-10-10T23:52:36.454808+08:00","gmt_modified":"2025-10-10T23:52:36.454808+08:00"},{"id":900,"source_id":"e5698a80-098e-4168-9145-4395fd1bc593","target_id":"99114343-7f46-4c98-8d4b-9bb0ee32b12d","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: e5698a80-098e-4168-9145-4395fd1bc593 -\u003e 99114343-7f46-4c98-8d4b-9bb0ee32b12d","gmt_create":"2025-10-10T23:52:36.455355+08:00","gmt_modified":"2025-10-10T23:52:36.455355+08:00"},{"id":901,"source_id":"e5698a80-098e-4168-9145-4395fd1bc593","target_id":"980830ee-5adc-41f8-b533-9f786685234f","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: e5698a80-098e-4168-9145-4395fd1bc593 -\u003e 980830ee-5adc-41f8-b533-9f786685234f","gmt_create":"2025-10-10T23:52:36.455831+08:00","gmt_modified":"2025-10-10T23:52:36.455831+08:00"},{"id":902,"source_id":"e5698a80-098e-4168-9145-4395fd1bc593","target_id":"9e29bc51-2bce-422f-8261-d82a07814f03","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: e5698a80-098e-4168-9145-4395fd1bc593 -\u003e 9e29bc51-2bce-422f-8261-d82a07814f03","gmt_create":"2025-10-10T23:52:36.456419+08:00","gmt_modified":"2025-10-10T23:52:36.456419+08:00"},{"id":903,"source_id":"e5698a80-098e-4168-9145-4395fd1bc593","target_id":"0a45218d-86aa-422b-9bfb-d9ebc44a89b2","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: e5698a80-098e-4168-9145-4395fd1bc593 -\u003e 0a45218d-86aa-422b-9bfb-d9ebc44a89b2","gmt_create":"2025-10-10T23:52:36.456862+08:00","gmt_modified":"2025-10-10T23:52:36.456862+08:00"},{"id":904,"source_id":"c20745b5-b5ba-4fad-a4a9-e623206cfee8","target_id":"8aacfec0-9e5b-4a22-80ca-27e9aac356aa","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: c20745b5-b5ba-4fad-a4a9-e623206cfee8 -\u003e 8aacfec0-9e5b-4a22-80ca-27e9aac356aa","gmt_create":"2025-10-10T23:52:36.457396+08:00","gmt_modified":"2025-10-10T23:52:36.457396+08:00"},{"id":905,"source_id":"c20745b5-b5ba-4fad-a4a9-e623206cfee8","target_id":"acab04c7-008c-4dfb-aa30-6af803b5d5b2","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: c20745b5-b5ba-4fad-a4a9-e623206cfee8 -\u003e acab04c7-008c-4dfb-aa30-6af803b5d5b2","gmt_create":"2025-10-10T23:52:36.457869+08:00","gmt_modified":"2025-10-10T23:52:36.457869+08:00"},{"id":906,"source_id":"c20745b5-b5ba-4fad-a4a9-e623206cfee8","target_id":"6f712fde-30b6-45ed-b4ca-94e417ca6419","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: c20745b5-b5ba-4fad-a4a9-e623206cfee8 -\u003e 6f712fde-30b6-45ed-b4ca-94e417ca6419","gmt_create":"2025-10-10T23:52:36.458356+08:00","gmt_modified":"2025-10-10T23:52:36.458356+08:00"},{"id":907,"source_id":"c20745b5-b5ba-4fad-a4a9-e623206cfee8","target_id":"8eea8756-2674-4f74-8301-09e063306235","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: c20745b5-b5ba-4fad-a4a9-e623206cfee8 -\u003e 8eea8756-2674-4f74-8301-09e063306235","gmt_create":"2025-10-10T23:52:36.458778+08:00","gmt_modified":"2025-10-10T23:52:36.458778+08:00"},{"id":908,"source_id":"7a80a7d1-6cd6-4604-816d-37b7c7c7eca2","target_id":"26e42962-f735-40ae-b444-1fb3394b0c40","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 7a80a7d1-6cd6-4604-816d-37b7c7c7eca2 -\u003e 26e42962-f735-40ae-b444-1fb3394b0c40","gmt_create":"2025-10-10T23:52:36.459189+08:00","gmt_modified":"2025-10-10T23:52:36.459189+08:00"},{"id":909,"source_id":"7a80a7d1-6cd6-4604-816d-37b7c7c7eca2","target_id":"531ca7f4-f05d-4b74-be34-6c3382098ca3","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 7a80a7d1-6cd6-4604-816d-37b7c7c7eca2 -\u003e 531ca7f4-f05d-4b74-be34-6c3382098ca3","gmt_create":"2025-10-10T23:52:36.459581+08:00","gmt_modified":"2025-10-10T23:52:36.459581+08:00"},{"id":910,"source_id":"7a80a7d1-6cd6-4604-816d-37b7c7c7eca2","target_id":"fa382a5d-8d72-40cc-b39f-ee7ad4a67971","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 7a80a7d1-6cd6-4604-816d-37b7c7c7eca2 -\u003e fa382a5d-8d72-40cc-b39f-ee7ad4a67971","gmt_create":"2025-10-10T23:52:36.460046+08:00","gmt_modified":"2025-10-10T23:52:36.460046+08:00"},{"id":911,"source_id":"ca9c74a8-9901-44c1-a72b-6509ee0d3ede","target_id":"bcf3bf08-a661-4bf3-98fa-65bac2391f52","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: ca9c74a8-9901-44c1-a72b-6509ee0d3ede -\u003e bcf3bf08-a661-4bf3-98fa-65bac2391f52","gmt_create":"2025-10-10T23:52:36.460458+08:00","gmt_modified":"2025-10-10T23:52:36.460458+08:00"},{"id":912,"source_id":"ca9c74a8-9901-44c1-a72b-6509ee0d3ede","target_id":"192385e4-80e1-46ad-a09e-12e3273dba04","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: ca9c74a8-9901-44c1-a72b-6509ee0d3ede -\u003e 192385e4-80e1-46ad-a09e-12e3273dba04","gmt_create":"2025-10-10T23:52:36.460903+08:00","gmt_modified":"2025-10-10T23:52:36.460903+08:00"},{"id":913,"source_id":"ca9c74a8-9901-44c1-a72b-6509ee0d3ede","target_id":"e2219534-de74-459c-9330-120d359789f4","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: ca9c74a8-9901-44c1-a72b-6509ee0d3ede -\u003e e2219534-de74-459c-9330-120d359789f4","gmt_create":"2025-10-10T23:52:36.461302+08:00","gmt_modified":"2025-10-10T23:52:36.461303+08:00"},{"id":914,"source_id":"ca9c74a8-9901-44c1-a72b-6509ee0d3ede","target_id":"971724e2-f829-42fe-9886-203007e83193","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: ca9c74a8-9901-44c1-a72b-6509ee0d3ede -\u003e 971724e2-f829-42fe-9886-203007e83193","gmt_create":"2025-10-10T23:52:36.46178+08:00","gmt_modified":"2025-10-10T23:52:36.46178+08:00"},{"id":915,"source_id":"ea2a0401-f03d-44f5-a7c4-1da714763098","target_id":"8b840c96-418e-4af3-9229-ef64b9133c3b","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: ea2a0401-f03d-44f5-a7c4-1da714763098 -\u003e 8b840c96-418e-4af3-9229-ef64b9133c3b","gmt_create":"2025-10-10T23:52:36.462206+08:00","gmt_modified":"2025-10-10T23:52:36.462206+08:00"},{"id":916,"source_id":"ea2a0401-f03d-44f5-a7c4-1da714763098","target_id":"32d29899-42db-4810-a8ff-440ad38e4697","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: ea2a0401-f03d-44f5-a7c4-1da714763098 -\u003e 32d29899-42db-4810-a8ff-440ad38e4697","gmt_create":"2025-10-10T23:52:36.462603+08:00","gmt_modified":"2025-10-10T23:52:36.462603+08:00"},{"id":917,"source_id":"ea2a0401-f03d-44f5-a7c4-1da714763098","target_id":"3d0ec67c-127f-4368-a340-0f9c92194bde","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: ea2a0401-f03d-44f5-a7c4-1da714763098 -\u003e 3d0ec67c-127f-4368-a340-0f9c92194bde","gmt_create":"2025-10-10T23:52:36.462989+08:00","gmt_modified":"2025-10-10T23:52:36.462989+08:00"},{"id":918,"source_id":"ea2a0401-f03d-44f5-a7c4-1da714763098","target_id":"aac62b31-c98c-4033-bdd8-061b6368958a","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: ea2a0401-f03d-44f5-a7c4-1da714763098 -\u003e aac62b31-c98c-4033-bdd8-061b6368958a","gmt_create":"2025-10-10T23:52:36.463442+08:00","gmt_modified":"2025-10-10T23:52:36.463442+08:00"},{"id":919,"source_id":"ea2a0401-f03d-44f5-a7c4-1da714763098","target_id":"3ed0f163-2103-42c0-b43a-9c336ee0653e","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: ea2a0401-f03d-44f5-a7c4-1da714763098 -\u003e 3ed0f163-2103-42c0-b43a-9c336ee0653e","gmt_create":"2025-10-10T23:52:36.463845+08:00","gmt_modified":"2025-10-10T23:52:36.463845+08:00"},{"id":920,"source_id":"ea2a0401-f03d-44f5-a7c4-1da714763098","target_id":"0784a26b-d671-40be-9e91-558585c560ce","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: ea2a0401-f03d-44f5-a7c4-1da714763098 -\u003e 0784a26b-d671-40be-9e91-558585c560ce","gmt_create":"2025-10-10T23:52:36.464241+08:00","gmt_modified":"2025-10-10T23:52:36.464241+08:00"},{"id":921,"source_id":"ea2a0401-f03d-44f5-a7c4-1da714763098","target_id":"f42a4754-d71a-43c1-b2a4-cec9507c13f9","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: ea2a0401-f03d-44f5-a7c4-1da714763098 -\u003e f42a4754-d71a-43c1-b2a4-cec9507c13f9","gmt_create":"2025-10-10T23:52:36.464694+08:00","gmt_modified":"2025-10-10T23:52:36.464694+08:00"},{"id":922,"source_id":"ea2a0401-f03d-44f5-a7c4-1da714763098","target_id":"1b2fa8d5-0ae0-445f-b4cb-3b52dd977e2c","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: ea2a0401-f03d-44f5-a7c4-1da714763098 -\u003e 1b2fa8d5-0ae0-445f-b4cb-3b52dd977e2c","gmt_create":"2025-10-10T23:52:36.46508+08:00","gmt_modified":"2025-10-10T23:52:36.46508+08:00"},{"id":923,"source_id":"9bef10f7-3c93-4efd-a935-f34d26fe0b0e","target_id":"d4a9c3e2-0ed0-4b34-a88b-93a4343f2978","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 9bef10f7-3c93-4efd-a935-f34d26fe0b0e -\u003e d4a9c3e2-0ed0-4b34-a88b-93a4343f2978","gmt_create":"2025-10-10T23:52:36.465545+08:00","gmt_modified":"2025-10-10T23:52:36.465545+08:00"},{"id":924,"source_id":"9bef10f7-3c93-4efd-a935-f34d26fe0b0e","target_id":"cd725ece-6015-47ca-afd2-53675ba729b7","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 9bef10f7-3c93-4efd-a935-f34d26fe0b0e -\u003e cd725ece-6015-47ca-afd2-53675ba729b7","gmt_create":"2025-10-10T23:52:36.465935+08:00","gmt_modified":"2025-10-10T23:52:36.465935+08:00"},{"id":925,"source_id":"9bef10f7-3c93-4efd-a935-f34d26fe0b0e","target_id":"052c5f89-6c83-4481-8599-d65ef6cbc5ee","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 9bef10f7-3c93-4efd-a935-f34d26fe0b0e -\u003e 052c5f89-6c83-4481-8599-d65ef6cbc5ee","gmt_create":"2025-10-10T23:52:36.46633+08:00","gmt_modified":"2025-10-10T23:52:36.46633+08:00"},{"id":926,"source_id":"9bef10f7-3c93-4efd-a935-f34d26fe0b0e","target_id":"9528e77c-920c-4113-aa93-85562786c2a0","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 9bef10f7-3c93-4efd-a935-f34d26fe0b0e -\u003e 9528e77c-920c-4113-aa93-85562786c2a0","gmt_create":"2025-10-10T23:52:36.466882+08:00","gmt_modified":"2025-10-10T23:52:36.466882+08:00"},{"id":927,"source_id":"9bef10f7-3c93-4efd-a935-f34d26fe0b0e","target_id":"46262da5-0423-4a8b-8954-953e8f604a6b","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 9bef10f7-3c93-4efd-a935-f34d26fe0b0e -\u003e 46262da5-0423-4a8b-8954-953e8f604a6b","gmt_create":"2025-10-10T23:52:36.467353+08:00","gmt_modified":"2025-10-10T23:52:36.467353+08:00"},{"id":928,"source_id":"9bef10f7-3c93-4efd-a935-f34d26fe0b0e","target_id":"a1247e57-5f21-4b27-8e60-b1b7c7138885","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 9bef10f7-3c93-4efd-a935-f34d26fe0b0e -\u003e a1247e57-5f21-4b27-8e60-b1b7c7138885","gmt_create":"2025-10-10T23:52:36.467742+08:00","gmt_modified":"2025-10-10T23:52:36.467742+08:00"},{"id":929,"source_id":"9bef10f7-3c93-4efd-a935-f34d26fe0b0e","target_id":"f511d5a7-9405-46d9-9c2d-ea83830e094c","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 9bef10f7-3c93-4efd-a935-f34d26fe0b0e -\u003e f511d5a7-9405-46d9-9c2d-ea83830e094c","gmt_create":"2025-10-10T23:52:36.468144+08:00","gmt_modified":"2025-10-10T23:52:36.468144+08:00"},{"id":930,"source_id":"9bef10f7-3c93-4efd-a935-f34d26fe0b0e","target_id":"99af759f-4ea2-4052-a88a-b6cba57ddf9d","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 9bef10f7-3c93-4efd-a935-f34d26fe0b0e -\u003e 99af759f-4ea2-4052-a88a-b6cba57ddf9d","gmt_create":"2025-10-10T23:52:36.468549+08:00","gmt_modified":"2025-10-10T23:52:36.468549+08:00"},{"id":931,"source_id":"2d3c8f93-2f72-41c8-b4f2-433d351c4b97","target_id":"d5aceb05-6ae4-492e-8321-8fa701762e13","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 2d3c8f93-2f72-41c8-b4f2-433d351c4b97 -\u003e d5aceb05-6ae4-492e-8321-8fa701762e13","gmt_create":"2025-10-10T23:52:36.46901+08:00","gmt_modified":"2025-10-10T23:52:36.46901+08:00"},{"id":932,"source_id":"2d3c8f93-2f72-41c8-b4f2-433d351c4b97","target_id":"472b31d8-3d2f-4614-ab01-b0d8e4558f73","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 2d3c8f93-2f72-41c8-b4f2-433d351c4b97 -\u003e 472b31d8-3d2f-4614-ab01-b0d8e4558f73","gmt_create":"2025-10-10T23:52:36.469392+08:00","gmt_modified":"2025-10-10T23:52:36.469392+08:00"},{"id":933,"source_id":"2d3c8f93-2f72-41c8-b4f2-433d351c4b97","target_id":"6e476855-9df7-4389-a934-5534914f72b9","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 2d3c8f93-2f72-41c8-b4f2-433d351c4b97 -\u003e 6e476855-9df7-4389-a934-5534914f72b9","gmt_create":"2025-10-10T23:52:36.469773+08:00","gmt_modified":"2025-10-10T23:52:36.469773+08:00"},{"id":934,"source_id":"2d3c8f93-2f72-41c8-b4f2-433d351c4b97","target_id":"48ed7e4a-1efc-4fcf-87d8-4f1263287922","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 2d3c8f93-2f72-41c8-b4f2-433d351c4b97 -\u003e 48ed7e4a-1efc-4fcf-87d8-4f1263287922","gmt_create":"2025-10-10T23:52:36.471503+08:00","gmt_modified":"2025-10-10T23:52:36.471503+08:00"},{"id":935,"source_id":"b3583c62-4d2b-49de-ac31-65e0f4740e6f","target_id":"4a7f5b25-d0a4-433e-a44f-55c4fc9b4a3f","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: b3583c62-4d2b-49de-ac31-65e0f4740e6f -\u003e 4a7f5b25-d0a4-433e-a44f-55c4fc9b4a3f","gmt_create":"2025-10-10T23:52:36.471888+08:00","gmt_modified":"2025-10-10T23:52:36.471888+08:00"},{"id":936,"source_id":"b3583c62-4d2b-49de-ac31-65e0f4740e6f","target_id":"ca109cdc-ccd5-4683-9947-1d2afa02f140","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: b3583c62-4d2b-49de-ac31-65e0f4740e6f -\u003e ca109cdc-ccd5-4683-9947-1d2afa02f140","gmt_create":"2025-10-10T23:52:36.472272+08:00","gmt_modified":"2025-10-10T23:52:36.472272+08:00"},{"id":937,"source_id":"b3583c62-4d2b-49de-ac31-65e0f4740e6f","target_id":"a2c8ba95-d24d-4f5a-ae7e-0fed25509220","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: b3583c62-4d2b-49de-ac31-65e0f4740e6f -\u003e a2c8ba95-d24d-4f5a-ae7e-0fed25509220","gmt_create":"2025-10-10T23:52:36.47272+08:00","gmt_modified":"2025-10-10T23:52:36.47272+08:00"},{"id":938,"source_id":"b9c77151-5578-44d6-8c88-6498d82be2e8","target_id":"2135a4c3-d9c0-44d8-a1ea-a0e033adf323","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: b9c77151-5578-44d6-8c88-6498d82be2e8 -\u003e 2135a4c3-d9c0-44d8-a1ea-a0e033adf323","gmt_create":"2025-10-10T23:52:36.473135+08:00","gmt_modified":"2025-10-10T23:52:36.473135+08:00"},{"id":939,"source_id":"d98338f3-9f11-4cc8-a39f-16a136e37c10","target_id":"ec96b684-1ced-4024-8991-83c41dc6b4a3","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: d98338f3-9f11-4cc8-a39f-16a136e37c10 -\u003e ec96b684-1ced-4024-8991-83c41dc6b4a3","gmt_create":"2025-10-10T23:52:36.473599+08:00","gmt_modified":"2025-10-10T23:52:36.473599+08:00"},{"id":940,"source_id":"8aacfec0-9e5b-4a22-80ca-27e9aac356aa","target_id":"205d3fc0-f594-4182-ab30-0d5574057684","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 8aacfec0-9e5b-4a22-80ca-27e9aac356aa -\u003e 205d3fc0-f594-4182-ab30-0d5574057684","gmt_create":"2025-10-10T23:52:36.474247+08:00","gmt_modified":"2025-10-10T23:52:36.474247+08:00"},{"id":941,"source_id":"8aacfec0-9e5b-4a22-80ca-27e9aac356aa","target_id":"31aa94ae-5035-4fd0-85b0-e4f7e6b97ad7","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 8aacfec0-9e5b-4a22-80ca-27e9aac356aa -\u003e 31aa94ae-5035-4fd0-85b0-e4f7e6b97ad7","gmt_create":"2025-10-10T23:52:36.474707+08:00","gmt_modified":"2025-10-10T23:52:36.474707+08:00"},{"id":942,"source_id":"8aacfec0-9e5b-4a22-80ca-27e9aac356aa","target_id":"5437c20f-4763-4258-acb6-f557eb0d235d","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 8aacfec0-9e5b-4a22-80ca-27e9aac356aa -\u003e 5437c20f-4763-4258-acb6-f557eb0d235d","gmt_create":"2025-10-10T23:52:36.475159+08:00","gmt_modified":"2025-10-10T23:52:36.475159+08:00"},{"id":943,"source_id":"8aacfec0-9e5b-4a22-80ca-27e9aac356aa","target_id":"232b26c3-df60-44b1-9086-40ae43fabd3e","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 8aacfec0-9e5b-4a22-80ca-27e9aac356aa -\u003e 232b26c3-df60-44b1-9086-40ae43fabd3e","gmt_create":"2025-10-10T23:52:36.475531+08:00","gmt_modified":"2025-10-10T23:52:36.475531+08:00"},{"id":944,"source_id":"d5aceb05-6ae4-492e-8321-8fa701762e13","target_id":"e5416436-17c6-4f4e-bafc-6946979b9107","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: d5aceb05-6ae4-492e-8321-8fa701762e13 -\u003e e5416436-17c6-4f4e-bafc-6946979b9107","gmt_create":"2025-10-10T23:52:36.47601+08:00","gmt_modified":"2025-10-10T23:52:36.47601+08:00"},{"id":945,"source_id":"d5aceb05-6ae4-492e-8321-8fa701762e13","target_id":"719dff93-0b80-407d-8cb7-e7cac22af963","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: d5aceb05-6ae4-492e-8321-8fa701762e13 -\u003e 719dff93-0b80-407d-8cb7-e7cac22af963","gmt_create":"2025-10-10T23:52:36.476484+08:00","gmt_modified":"2025-10-10T23:52:36.476484+08:00"},{"id":946,"source_id":"d5aceb05-6ae4-492e-8321-8fa701762e13","target_id":"009ccee6-74df-4e67-8577-2d36b2f0e914","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: d5aceb05-6ae4-492e-8321-8fa701762e13 -\u003e 009ccee6-74df-4e67-8577-2d36b2f0e914","gmt_create":"2025-10-10T23:52:36.476844+08:00","gmt_modified":"2025-10-10T23:52:36.476844+08:00"},{"id":947,"source_id":"d5aceb05-6ae4-492e-8321-8fa701762e13","target_id":"bc46292e-600a-47ee-b227-5640151f9ffd","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: d5aceb05-6ae4-492e-8321-8fa701762e13 -\u003e bc46292e-600a-47ee-b227-5640151f9ffd","gmt_create":"2025-10-10T23:52:36.477273+08:00","gmt_modified":"2025-10-10T23:52:36.477274+08:00"},{"id":948,"source_id":"d5aceb05-6ae4-492e-8321-8fa701762e13","target_id":"de5d6b3a-6f91-4229-aae2-1d07e6f7d65e","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: d5aceb05-6ae4-492e-8321-8fa701762e13 -\u003e de5d6b3a-6f91-4229-aae2-1d07e6f7d65e","gmt_create":"2025-10-10T23:52:36.477646+08:00","gmt_modified":"2025-10-10T23:52:36.477647+08:00"},{"id":949,"source_id":"8b840c96-418e-4af3-9229-ef64b9133c3b","target_id":"025ab8f8-7c0f-41bc-8237-405f83a7a5c0","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 8b840c96-418e-4af3-9229-ef64b9133c3b -\u003e 025ab8f8-7c0f-41bc-8237-405f83a7a5c0","gmt_create":"2025-10-10T23:52:36.478059+08:00","gmt_modified":"2025-10-10T23:52:36.478059+08:00"},{"id":950,"source_id":"8b840c96-418e-4af3-9229-ef64b9133c3b","target_id":"44178e7f-775f-4417-96f1-4e9809f11f66","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 8b840c96-418e-4af3-9229-ef64b9133c3b -\u003e 44178e7f-775f-4417-96f1-4e9809f11f66","gmt_create":"2025-10-10T23:52:36.478457+08:00","gmt_modified":"2025-10-10T23:52:36.478457+08:00"},{"id":951,"source_id":"b9c77151-5578-44d6-8c88-6498d82be2e8","target_id":"d9c67b32-f58e-4ab5-9d37-a1e1e40c06f7","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: b9c77151-5578-44d6-8c88-6498d82be2e8 -\u003e d9c67b32-f58e-4ab5-9d37-a1e1e40c06f7","gmt_create":"2025-10-10T23:52:36.478885+08:00","gmt_modified":"2025-10-10T23:52:36.478885+08:00"},{"id":952,"source_id":"d9c67b32-f58e-4ab5-9d37-a1e1e40c06f7","target_id":"7d45394a-025f-4ceb-8c38-6c59b3577a0a","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: d9c67b32-f58e-4ab5-9d37-a1e1e40c06f7 -\u003e 7d45394a-025f-4ceb-8c38-6c59b3577a0a","gmt_create":"2025-10-10T23:52:36.479256+08:00","gmt_modified":"2025-10-10T23:52:36.479256+08:00"},{"id":953,"source_id":"d9c67b32-f58e-4ab5-9d37-a1e1e40c06f7","target_id":"e87b8aab-1768-4140-b20f-23e4c5df9535","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: d9c67b32-f58e-4ab5-9d37-a1e1e40c06f7 -\u003e e87b8aab-1768-4140-b20f-23e4c5df9535","gmt_create":"2025-10-10T23:52:36.479643+08:00","gmt_modified":"2025-10-10T23:52:36.479643+08:00"},{"id":954,"source_id":"67ec7855-999e-4a4d-bb46-b0ab4547b3a0","target_id":"198ba559-06b6-4cae-80be-7f95e6dd36e1","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 67ec7855-999e-4a4d-bb46-b0ab4547b3a0 -\u003e 198ba559-06b6-4cae-80be-7f95e6dd36e1","gmt_create":"2025-10-10T23:52:36.48018+08:00","gmt_modified":"2025-10-10T23:52:36.48018+08:00"},{"id":955,"source_id":"67ec7855-999e-4a4d-bb46-b0ab4547b3a0","target_id":"6541d0cc-2589-47ad-b581-5790db711148","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 67ec7855-999e-4a4d-bb46-b0ab4547b3a0 -\u003e 6541d0cc-2589-47ad-b581-5790db711148","gmt_create":"2025-10-10T23:52:36.480607+08:00","gmt_modified":"2025-10-10T23:52:36.480607+08:00"},{"id":956,"source_id":"d98338f3-9f11-4cc8-a39f-16a136e37c10","target_id":"57d8eef8-2f98-497b-8ff1-beda8ff52f3a","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: d98338f3-9f11-4cc8-a39f-16a136e37c10 -\u003e 57d8eef8-2f98-497b-8ff1-beda8ff52f3a","gmt_create":"2025-10-10T23:52:36.481013+08:00","gmt_modified":"2025-10-10T23:52:36.481013+08:00"},{"id":957,"source_id":"57d8eef8-2f98-497b-8ff1-beda8ff52f3a","target_id":"2ced0744-8f18-485b-9dc0-99bb277c9f39","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 57d8eef8-2f98-497b-8ff1-beda8ff52f3a -\u003e 2ced0744-8f18-485b-9dc0-99bb277c9f39","gmt_create":"2025-10-10T23:52:36.481361+08:00","gmt_modified":"2025-10-10T23:52:36.481361+08:00"},{"id":958,"source_id":"57d8eef8-2f98-497b-8ff1-beda8ff52f3a","target_id":"64edcb76-a309-4516-9a22-e2d87e7ee76b","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 57d8eef8-2f98-497b-8ff1-beda8ff52f3a -\u003e 64edcb76-a309-4516-9a22-e2d87e7ee76b","gmt_create":"2025-10-10T23:52:36.481724+08:00","gmt_modified":"2025-10-10T23:52:36.481724+08:00"},{"id":959,"source_id":"cd725ece-6015-47ca-afd2-53675ba729b7","target_id":"903844a6-0d6c-47c4-abdc-c089a9c88244","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: cd725ece-6015-47ca-afd2-53675ba729b7 -\u003e 903844a6-0d6c-47c4-abdc-c089a9c88244","gmt_create":"2025-10-10T23:52:36.482177+08:00","gmt_modified":"2025-10-10T23:52:36.482177+08:00"},{"id":960,"source_id":"cd725ece-6015-47ca-afd2-53675ba729b7","target_id":"29bd15fd-11e6-4b8a-9ed2-c4edd7830a9a","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: cd725ece-6015-47ca-afd2-53675ba729b7 -\u003e 29bd15fd-11e6-4b8a-9ed2-c4edd7830a9a","gmt_create":"2025-10-10T23:52:36.482543+08:00","gmt_modified":"2025-10-10T23:52:36.482543+08:00"},{"id":961,"source_id":"cd725ece-6015-47ca-afd2-53675ba729b7","target_id":"99e319d8-b568-45aa-912a-264a6b3a63d2","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: cd725ece-6015-47ca-afd2-53675ba729b7 -\u003e 99e319d8-b568-45aa-912a-264a6b3a63d2","gmt_create":"2025-10-10T23:52:36.482959+08:00","gmt_modified":"2025-10-10T23:52:36.482959+08:00"},{"id":962,"source_id":"cd725ece-6015-47ca-afd2-53675ba729b7","target_id":"6f0c858c-ab8b-4813-aa80-cc908700b5cc","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: cd725ece-6015-47ca-afd2-53675ba729b7 -\u003e 6f0c858c-ab8b-4813-aa80-cc908700b5cc","gmt_create":"2025-10-10T23:52:36.483381+08:00","gmt_modified":"2025-10-10T23:52:36.483381+08:00"},{"id":963,"source_id":"472b31d8-3d2f-4614-ab01-b0d8e4558f73","target_id":"366f10cb-1ec2-45b0-b67f-9c2657c2dcf8","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 472b31d8-3d2f-4614-ab01-b0d8e4558f73 -\u003e 366f10cb-1ec2-45b0-b67f-9c2657c2dcf8","gmt_create":"2025-10-10T23:52:36.483838+08:00","gmt_modified":"2025-10-10T23:52:36.483838+08:00"},{"id":964,"source_id":"472b31d8-3d2f-4614-ab01-b0d8e4558f73","target_id":"8fc74ee6-17cf-4a8c-8227-2e539e6c544c","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 472b31d8-3d2f-4614-ab01-b0d8e4558f73 -\u003e 8fc74ee6-17cf-4a8c-8227-2e539e6c544c","gmt_create":"2025-10-10T23:52:36.484187+08:00","gmt_modified":"2025-10-10T23:52:36.484187+08:00"},{"id":965,"source_id":"472b31d8-3d2f-4614-ab01-b0d8e4558f73","target_id":"afaee586-e0c5-41aa-83c2-1b3ed67cce00","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 472b31d8-3d2f-4614-ab01-b0d8e4558f73 -\u003e afaee586-e0c5-41aa-83c2-1b3ed67cce00","gmt_create":"2025-10-10T23:52:36.484543+08:00","gmt_modified":"2025-10-10T23:52:36.484543+08:00"},{"id":966,"source_id":"472b31d8-3d2f-4614-ab01-b0d8e4558f73","target_id":"a0080c9b-b0b3-4985-a8e1-e10868c51548","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 472b31d8-3d2f-4614-ab01-b0d8e4558f73 -\u003e a0080c9b-b0b3-4985-a8e1-e10868c51548","gmt_create":"2025-10-10T23:52:36.484946+08:00","gmt_modified":"2025-10-10T23:52:36.484946+08:00"},{"id":967,"source_id":"32d29899-42db-4810-a8ff-440ad38e4697","target_id":"e412ae1c-c890-4d51-a92f-88a74dcfc62e","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 32d29899-42db-4810-a8ff-440ad38e4697 -\u003e e412ae1c-c890-4d51-a92f-88a74dcfc62e","gmt_create":"2025-10-10T23:52:36.485373+08:00","gmt_modified":"2025-10-10T23:52:36.485373+08:00"},{"id":968,"source_id":"32d29899-42db-4810-a8ff-440ad38e4697","target_id":"532f609e-66d9-445a-9024-f299cc10c3f2","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 32d29899-42db-4810-a8ff-440ad38e4697 -\u003e 532f609e-66d9-445a-9024-f299cc10c3f2","gmt_create":"2025-10-10T23:52:36.485749+08:00","gmt_modified":"2025-10-10T23:52:36.485749+08:00"},{"id":969,"source_id":"32d29899-42db-4810-a8ff-440ad38e4697","target_id":"5e514c38-a0e7-4460-8a0d-791646c79d11","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 32d29899-42db-4810-a8ff-440ad38e4697 -\u003e 5e514c38-a0e7-4460-8a0d-791646c79d11","gmt_create":"2025-10-10T23:52:36.486105+08:00","gmt_modified":"2025-10-10T23:52:36.486105+08:00"},{"id":970,"source_id":"b9c77151-5578-44d6-8c88-6498d82be2e8","target_id":"87de7f09-2b70-48cc-9d4c-990f51af692b","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: b9c77151-5578-44d6-8c88-6498d82be2e8 -\u003e 87de7f09-2b70-48cc-9d4c-990f51af692b","gmt_create":"2025-10-10T23:52:36.486512+08:00","gmt_modified":"2025-10-10T23:52:36.486512+08:00"},{"id":971,"source_id":"d98338f3-9f11-4cc8-a39f-16a136e37c10","target_id":"a1553b04-ee92-4229-84f3-19bbadb06336","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: d98338f3-9f11-4cc8-a39f-16a136e37c10 -\u003e a1553b04-ee92-4229-84f3-19bbadb06336","gmt_create":"2025-10-10T23:52:36.486955+08:00","gmt_modified":"2025-10-10T23:52:36.486955+08:00"},{"id":972,"source_id":"a1553b04-ee92-4229-84f3-19bbadb06336","target_id":"98a966d8-5c33-42ff-b433-f3f5c3ccd60a","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: a1553b04-ee92-4229-84f3-19bbadb06336 -\u003e 98a966d8-5c33-42ff-b433-f3f5c3ccd60a","gmt_create":"2025-10-10T23:52:36.487322+08:00","gmt_modified":"2025-10-10T23:52:36.487322+08:00"},{"id":973,"source_id":"a1553b04-ee92-4229-84f3-19bbadb06336","target_id":"cf18455a-adb7-4ee4-adc4-188584f778ca","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: a1553b04-ee92-4229-84f3-19bbadb06336 -\u003e cf18455a-adb7-4ee4-adc4-188584f778ca","gmt_create":"2025-10-10T23:52:36.487734+08:00","gmt_modified":"2025-10-10T23:52:36.487734+08:00"},{"id":974,"source_id":"052c5f89-6c83-4481-8599-d65ef6cbc5ee","target_id":"852e1da2-62fd-43e2-a2a8-6ae82e32852a","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 052c5f89-6c83-4481-8599-d65ef6cbc5ee -\u003e 852e1da2-62fd-43e2-a2a8-6ae82e32852a","gmt_create":"2025-10-10T23:52:36.488168+08:00","gmt_modified":"2025-10-10T23:52:36.488168+08:00"},{"id":975,"source_id":"052c5f89-6c83-4481-8599-d65ef6cbc5ee","target_id":"8a5ad08e-190c-4e28-bce4-b7234bc00f79","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 052c5f89-6c83-4481-8599-d65ef6cbc5ee -\u003e 8a5ad08e-190c-4e28-bce4-b7234bc00f79","gmt_create":"2025-10-10T23:52:36.492739+08:00","gmt_modified":"2025-10-10T23:52:36.492739+08:00"},{"id":976,"source_id":"052c5f89-6c83-4481-8599-d65ef6cbc5ee","target_id":"f65bb8a4-42b6-43b8-9aa0-56e132db1e95","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 052c5f89-6c83-4481-8599-d65ef6cbc5ee -\u003e f65bb8a4-42b6-43b8-9aa0-56e132db1e95","gmt_create":"2025-10-10T23:52:36.495848+08:00","gmt_modified":"2025-10-10T23:52:36.495848+08:00"},{"id":977,"source_id":"052c5f89-6c83-4481-8599-d65ef6cbc5ee","target_id":"a9972996-6e84-45f9-bc66-2dc99a5d04b8","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 052c5f89-6c83-4481-8599-d65ef6cbc5ee -\u003e a9972996-6e84-45f9-bc66-2dc99a5d04b8","gmt_create":"2025-10-10T23:52:36.496197+08:00","gmt_modified":"2025-10-10T23:52:36.496197+08:00"},{"id":978,"source_id":"052c5f89-6c83-4481-8599-d65ef6cbc5ee","target_id":"19cb09ae-a152-4b14-9f91-98d2a6a4cbde","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 052c5f89-6c83-4481-8599-d65ef6cbc5ee -\u003e 19cb09ae-a152-4b14-9f91-98d2a6a4cbde","gmt_create":"2025-10-10T23:52:36.502778+08:00","gmt_modified":"2025-10-10T23:52:36.502778+08:00"},{"id":979,"source_id":"6f712fde-30b6-45ed-b4ca-94e417ca6419","target_id":"031a9aa2-ed96-43b2-a345-51fdf05a57e7","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 6f712fde-30b6-45ed-b4ca-94e417ca6419 -\u003e 031a9aa2-ed96-43b2-a345-51fdf05a57e7","gmt_create":"2025-10-10T23:52:36.503189+08:00","gmt_modified":"2025-10-10T23:52:36.503189+08:00"},{"id":980,"source_id":"6f712fde-30b6-45ed-b4ca-94e417ca6419","target_id":"2cbcf05c-bb52-4630-b23c-b34aaecca91d","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 6f712fde-30b6-45ed-b4ca-94e417ca6419 -\u003e 2cbcf05c-bb52-4630-b23c-b34aaecca91d","gmt_create":"2025-10-10T23:52:36.503546+08:00","gmt_modified":"2025-10-10T23:52:36.503546+08:00"},{"id":981,"source_id":"6f712fde-30b6-45ed-b4ca-94e417ca6419","target_id":"ecb55a5f-ef93-47a2-a3d2-e3c8eeb73105","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 6f712fde-30b6-45ed-b4ca-94e417ca6419 -\u003e ecb55a5f-ef93-47a2-a3d2-e3c8eeb73105","gmt_create":"2025-10-10T23:52:36.503903+08:00","gmt_modified":"2025-10-10T23:52:36.503903+08:00"},{"id":982,"source_id":"6f712fde-30b6-45ed-b4ca-94e417ca6419","target_id":"0be4cf66-9e7b-4f80-97b3-e184edcacb37","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 6f712fde-30b6-45ed-b4ca-94e417ca6419 -\u003e 0be4cf66-9e7b-4f80-97b3-e184edcacb37","gmt_create":"2025-10-10T23:52:36.504297+08:00","gmt_modified":"2025-10-10T23:52:36.504297+08:00"},{"id":983,"source_id":"6f712fde-30b6-45ed-b4ca-94e417ca6419","target_id":"ee504798-26bd-4cf2-8fec-0c2f4344fa45","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 6f712fde-30b6-45ed-b4ca-94e417ca6419 -\u003e ee504798-26bd-4cf2-8fec-0c2f4344fa45","gmt_create":"2025-10-10T23:52:36.504654+08:00","gmt_modified":"2025-10-10T23:52:36.504654+08:00"},{"id":984,"source_id":"6e476855-9df7-4389-a934-5534914f72b9","target_id":"a2103048-e14d-48de-ba2e-21747433a402","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 6e476855-9df7-4389-a934-5534914f72b9 -\u003e a2103048-e14d-48de-ba2e-21747433a402","gmt_create":"2025-10-10T23:52:36.505111+08:00","gmt_modified":"2025-10-10T23:52:36.505111+08:00"},{"id":985,"source_id":"6e476855-9df7-4389-a934-5534914f72b9","target_id":"d3cc48a8-77bc-44f4-ad58-377d7d779be1","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 6e476855-9df7-4389-a934-5534914f72b9 -\u003e d3cc48a8-77bc-44f4-ad58-377d7d779be1","gmt_create":"2025-10-10T23:52:36.505473+08:00","gmt_modified":"2025-10-10T23:52:36.505473+08:00"},{"id":986,"source_id":"b9c77151-5578-44d6-8c88-6498d82be2e8","target_id":"d4a38953-b9e7-48be-af08-399b9f3e0c0b","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: b9c77151-5578-44d6-8c88-6498d82be2e8 -\u003e d4a38953-b9e7-48be-af08-399b9f3e0c0b","gmt_create":"2025-10-10T23:52:36.505826+08:00","gmt_modified":"2025-10-10T23:52:36.505826+08:00"},{"id":987,"source_id":"d4a38953-b9e7-48be-af08-399b9f3e0c0b","target_id":"6f630909-86ae-4a9a-9121-2f59c6d46bd5","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: d4a38953-b9e7-48be-af08-399b9f3e0c0b -\u003e 6f630909-86ae-4a9a-9121-2f59c6d46bd5","gmt_create":"2025-10-10T23:52:36.506231+08:00","gmt_modified":"2025-10-10T23:52:36.506231+08:00"},{"id":988,"source_id":"d4a38953-b9e7-48be-af08-399b9f3e0c0b","target_id":"aa425a8a-9ec7-4c3c-82d9-7bdb5f3afd1a","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: d4a38953-b9e7-48be-af08-399b9f3e0c0b -\u003e aa425a8a-9ec7-4c3c-82d9-7bdb5f3afd1a","gmt_create":"2025-10-10T23:52:36.506577+08:00","gmt_modified":"2025-10-10T23:52:36.506577+08:00"},{"id":989,"source_id":"d4a38953-b9e7-48be-af08-399b9f3e0c0b","target_id":"ed23b605-0f04-4500-bf23-561109911f70","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: d4a38953-b9e7-48be-af08-399b9f3e0c0b -\u003e ed23b605-0f04-4500-bf23-561109911f70","gmt_create":"2025-10-10T23:52:36.506934+08:00","gmt_modified":"2025-10-10T23:52:36.506934+08:00"},{"id":990,"source_id":"d4a38953-b9e7-48be-af08-399b9f3e0c0b","target_id":"4e5a57f2-4a38-4309-82e7-eddd79e2e778","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: d4a38953-b9e7-48be-af08-399b9f3e0c0b -\u003e 4e5a57f2-4a38-4309-82e7-eddd79e2e778","gmt_create":"2025-10-10T23:52:36.511658+08:00","gmt_modified":"2025-10-10T23:52:36.511659+08:00"},{"id":991,"source_id":"d98338f3-9f11-4cc8-a39f-16a136e37c10","target_id":"cd1ff556-53f1-401c-bfe4-f440f59f8733","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: d98338f3-9f11-4cc8-a39f-16a136e37c10 -\u003e cd1ff556-53f1-401c-bfe4-f440f59f8733","gmt_create":"2025-10-10T23:52:36.512623+08:00","gmt_modified":"2025-10-10T23:52:36.512623+08:00"},{"id":992,"source_id":"cd1ff556-53f1-401c-bfe4-f440f59f8733","target_id":"d4617346-9c29-480f-b370-e6f60099a965","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: cd1ff556-53f1-401c-bfe4-f440f59f8733 -\u003e d4617346-9c29-480f-b370-e6f60099a965","gmt_create":"2025-10-10T23:52:36.513086+08:00","gmt_modified":"2025-10-10T23:52:36.513086+08:00"},{"id":993,"source_id":"cd1ff556-53f1-401c-bfe4-f440f59f8733","target_id":"1d573a3e-d520-44ad-97ff-cf4649119936","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: cd1ff556-53f1-401c-bfe4-f440f59f8733 -\u003e 1d573a3e-d520-44ad-97ff-cf4649119936","gmt_create":"2025-10-10T23:52:36.513515+08:00","gmt_modified":"2025-10-10T23:52:36.513515+08:00"},{"id":994,"source_id":"cd1ff556-53f1-401c-bfe4-f440f59f8733","target_id":"0bf9a153-905e-4f0e-89ca-fc23d7d1227b","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: cd1ff556-53f1-401c-bfe4-f440f59f8733 -\u003e 0bf9a153-905e-4f0e-89ca-fc23d7d1227b","gmt_create":"2025-10-10T23:52:36.513917+08:00","gmt_modified":"2025-10-10T23:52:36.513917+08:00"},{"id":995,"source_id":"cd1ff556-53f1-401c-bfe4-f440f59f8733","target_id":"a18c8543-6173-4bb9-a74f-a4e8c3282628","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: cd1ff556-53f1-401c-bfe4-f440f59f8733 -\u003e a18c8543-6173-4bb9-a74f-a4e8c3282628","gmt_create":"2025-10-10T23:52:36.536133+08:00","gmt_modified":"2025-10-10T23:52:36.536133+08:00"},{"id":996,"source_id":"3d0ec67c-127f-4368-a340-0f9c92194bde","target_id":"2e8fa9de-28cd-4ca6-9f8d-a50e5d4d8036","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 3d0ec67c-127f-4368-a340-0f9c92194bde -\u003e 2e8fa9de-28cd-4ca6-9f8d-a50e5d4d8036","gmt_create":"2025-10-10T23:52:36.536753+08:00","gmt_modified":"2025-10-10T23:52:36.536753+08:00"},{"id":997,"source_id":"3d0ec67c-127f-4368-a340-0f9c92194bde","target_id":"631fa5bf-68d1-46a1-8821-afcebfc76b68","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 3d0ec67c-127f-4368-a340-0f9c92194bde -\u003e 631fa5bf-68d1-46a1-8821-afcebfc76b68","gmt_create":"2025-10-10T23:52:36.537157+08:00","gmt_modified":"2025-10-10T23:52:36.537157+08:00"},{"id":998,"source_id":"48ed7e4a-1efc-4fcf-87d8-4f1263287922","target_id":"b293e340-0b1a-4324-b983-1b6221ae35eb","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 48ed7e4a-1efc-4fcf-87d8-4f1263287922 -\u003e b293e340-0b1a-4324-b983-1b6221ae35eb","gmt_create":"2025-10-10T23:52:36.537713+08:00","gmt_modified":"2025-10-10T23:52:36.537713+08:00"},{"id":999,"source_id":"48ed7e4a-1efc-4fcf-87d8-4f1263287922","target_id":"fdd04305-fc2a-43a4-b033-723255d5d3b8","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 48ed7e4a-1efc-4fcf-87d8-4f1263287922 -\u003e fdd04305-fc2a-43a4-b033-723255d5d3b8","gmt_create":"2025-10-10T23:52:36.538129+08:00","gmt_modified":"2025-10-10T23:52:36.538129+08:00"},{"id":1000,"source_id":"48ed7e4a-1efc-4fcf-87d8-4f1263287922","target_id":"92a13fec-6beb-411e-a572-b9c8e32693a4","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 48ed7e4a-1efc-4fcf-87d8-4f1263287922 -\u003e 92a13fec-6beb-411e-a572-b9c8e32693a4","gmt_create":"2025-10-10T23:52:36.538498+08:00","gmt_modified":"2025-10-10T23:52:36.538499+08:00"},{"id":1001,"source_id":"aac62b31-c98c-4033-bdd8-061b6368958a","target_id":"28184f26-f1ec-4ca8-bd2a-cdba2ca47bba","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: aac62b31-c98c-4033-bdd8-061b6368958a -\u003e 28184f26-f1ec-4ca8-bd2a-cdba2ca47bba","gmt_create":"2025-10-10T23:52:36.538934+08:00","gmt_modified":"2025-10-10T23:52:36.538934+08:00"},{"id":1002,"source_id":"aac62b31-c98c-4033-bdd8-061b6368958a","target_id":"f6fc270f-ec3a-4f8d-a1a3-50bdd5fa1b69","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: aac62b31-c98c-4033-bdd8-061b6368958a -\u003e f6fc270f-ec3a-4f8d-a1a3-50bdd5fa1b69","gmt_create":"2025-10-10T23:52:36.539301+08:00","gmt_modified":"2025-10-10T23:52:36.539301+08:00"},{"id":1003,"source_id":"aac62b31-c98c-4033-bdd8-061b6368958a","target_id":"340e1bef-d105-486f-840a-816c68d0f8f1","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: aac62b31-c98c-4033-bdd8-061b6368958a -\u003e 340e1bef-d105-486f-840a-816c68d0f8f1","gmt_create":"2025-10-10T23:52:36.539664+08:00","gmt_modified":"2025-10-10T23:52:36.539664+08:00"},{"id":1004,"source_id":"aac62b31-c98c-4033-bdd8-061b6368958a","target_id":"ded6dfd7-a4f0-4992-b0a7-c1121c7951cb","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: aac62b31-c98c-4033-bdd8-061b6368958a -\u003e ded6dfd7-a4f0-4992-b0a7-c1121c7951cb","gmt_create":"2025-10-10T23:52:36.540086+08:00","gmt_modified":"2025-10-10T23:52:36.540086+08:00"},{"id":1005,"source_id":"b9c77151-5578-44d6-8c88-6498d82be2e8","target_id":"293cc077-874a-4510-9447-29a8af98c1d4","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: b9c77151-5578-44d6-8c88-6498d82be2e8 -\u003e 293cc077-874a-4510-9447-29a8af98c1d4","gmt_create":"2025-10-10T23:52:36.540482+08:00","gmt_modified":"2025-10-10T23:52:36.540482+08:00"},{"id":1006,"source_id":"d98338f3-9f11-4cc8-a39f-16a136e37c10","target_id":"cbdbb3d5-1152-4277-bdec-f210a27196d4","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: d98338f3-9f11-4cc8-a39f-16a136e37c10 -\u003e cbdbb3d5-1152-4277-bdec-f210a27196d4","gmt_create":"2025-10-10T23:52:36.54092+08:00","gmt_modified":"2025-10-10T23:52:36.54092+08:00"},{"id":1007,"source_id":"3ed0f163-2103-42c0-b43a-9c336ee0653e","target_id":"e061e253-699c-49b7-b37e-c3cddad3df53","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 3ed0f163-2103-42c0-b43a-9c336ee0653e -\u003e e061e253-699c-49b7-b37e-c3cddad3df53","gmt_create":"2025-10-10T23:52:36.541413+08:00","gmt_modified":"2025-10-10T23:52:36.541413+08:00"},{"id":1008,"source_id":"3ed0f163-2103-42c0-b43a-9c336ee0653e","target_id":"e1cb3e5e-4803-47f6-ab89-13ae4a8d66b6","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 3ed0f163-2103-42c0-b43a-9c336ee0653e -\u003e e1cb3e5e-4803-47f6-ab89-13ae4a8d66b6","gmt_create":"2025-10-10T23:52:36.541892+08:00","gmt_modified":"2025-10-10T23:52:36.541892+08:00"},{"id":1009,"source_id":"3ed0f163-2103-42c0-b43a-9c336ee0653e","target_id":"5b753566-5cde-48d4-8c10-f4f5b41e6f31","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 3ed0f163-2103-42c0-b43a-9c336ee0653e -\u003e 5b753566-5cde-48d4-8c10-f4f5b41e6f31","gmt_create":"2025-10-10T23:52:36.542256+08:00","gmt_modified":"2025-10-10T23:52:36.542256+08:00"},{"id":1010,"source_id":"3ed0f163-2103-42c0-b43a-9c336ee0653e","target_id":"b14fa4bc-4330-45f2-bd04-12765f9f2f30","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 3ed0f163-2103-42c0-b43a-9c336ee0653e -\u003e b14fa4bc-4330-45f2-bd04-12765f9f2f30","gmt_create":"2025-10-10T23:52:36.542656+08:00","gmt_modified":"2025-10-10T23:52:36.542656+08:00"},{"id":1011,"source_id":"b9c77151-5578-44d6-8c88-6498d82be2e8","target_id":"e9da5532-d6db-42cb-83bc-3ce668d5a876","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: b9c77151-5578-44d6-8c88-6498d82be2e8 -\u003e e9da5532-d6db-42cb-83bc-3ce668d5a876","gmt_create":"2025-10-10T23:52:36.543086+08:00","gmt_modified":"2025-10-10T23:52:36.543086+08:00"},{"id":1012,"source_id":"e9da5532-d6db-42cb-83bc-3ce668d5a876","target_id":"cf85393e-b0bd-46a2-9fe9-d8d775ce56ae","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: e9da5532-d6db-42cb-83bc-3ce668d5a876 -\u003e cf85393e-b0bd-46a2-9fe9-d8d775ce56ae","gmt_create":"2025-10-10T23:52:36.54349+08:00","gmt_modified":"2025-10-10T23:52:36.54349+08:00"},{"id":1013,"source_id":"e9da5532-d6db-42cb-83bc-3ce668d5a876","target_id":"348cdc60-d785-4920-affa-10f42d6b206c","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: e9da5532-d6db-42cb-83bc-3ce668d5a876 -\u003e 348cdc60-d785-4920-affa-10f42d6b206c","gmt_create":"2025-10-10T23:52:36.543847+08:00","gmt_modified":"2025-10-10T23:52:36.543847+08:00"},{"id":1014,"source_id":"a1247e57-5f21-4b27-8e60-b1b7c7138885","target_id":"e5736bac-a5f9-4cf0-aa6b-f53f9a3e1c8c","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: a1247e57-5f21-4b27-8e60-b1b7c7138885 -\u003e e5736bac-a5f9-4cf0-aa6b-f53f9a3e1c8c","gmt_create":"2025-10-10T23:52:36.544251+08:00","gmt_modified":"2025-10-10T23:52:36.544251+08:00"},{"id":1015,"source_id":"a1247e57-5f21-4b27-8e60-b1b7c7138885","target_id":"26651272-9afd-4127-b2a4-99801850d1fb","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: a1247e57-5f21-4b27-8e60-b1b7c7138885 -\u003e 26651272-9afd-4127-b2a4-99801850d1fb","gmt_create":"2025-10-10T23:52:36.544643+08:00","gmt_modified":"2025-10-10T23:52:36.544643+08:00"},{"id":1016,"source_id":"a1247e57-5f21-4b27-8e60-b1b7c7138885","target_id":"b07b4a6e-3bdc-471e-92cc-8999ff332d6e","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: a1247e57-5f21-4b27-8e60-b1b7c7138885 -\u003e b07b4a6e-3bdc-471e-92cc-8999ff332d6e","gmt_create":"2025-10-10T23:52:36.545001+08:00","gmt_modified":"2025-10-10T23:52:36.545002+08:00"},{"id":1017,"source_id":"a1247e57-5f21-4b27-8e60-b1b7c7138885","target_id":"51b1d8de-68ed-4adb-96a4-279b277ead93","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: a1247e57-5f21-4b27-8e60-b1b7c7138885 -\u003e 51b1d8de-68ed-4adb-96a4-279b277ead93","gmt_create":"2025-10-10T23:52:36.545367+08:00","gmt_modified":"2025-10-10T23:52:36.545367+08:00"},{"id":1018,"source_id":"a1247e57-5f21-4b27-8e60-b1b7c7138885","target_id":"4a350c42-98dd-4734-a913-f1b41717fc31","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: a1247e57-5f21-4b27-8e60-b1b7c7138885 -\u003e 4a350c42-98dd-4734-a913-f1b41717fc31","gmt_create":"2025-10-10T23:52:36.545721+08:00","gmt_modified":"2025-10-10T23:52:36.545721+08:00"},{"id":1019,"source_id":"f511d5a7-9405-46d9-9c2d-ea83830e094c","target_id":"6f25f78d-6b21-4ecc-bba0-63a4cce0fc72","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: f511d5a7-9405-46d9-9c2d-ea83830e094c -\u003e 6f25f78d-6b21-4ecc-bba0-63a4cce0fc72","gmt_create":"2025-10-10T23:52:36.546149+08:00","gmt_modified":"2025-10-10T23:52:36.546149+08:00"},{"id":1020,"source_id":"f511d5a7-9405-46d9-9c2d-ea83830e094c","target_id":"368b9c8a-da7e-408d-8f92-0afe4f0bc421","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: f511d5a7-9405-46d9-9c2d-ea83830e094c -\u003e 368b9c8a-da7e-408d-8f92-0afe4f0bc421","gmt_create":"2025-10-10T23:52:36.546501+08:00","gmt_modified":"2025-10-10T23:52:36.546501+08:00"},{"id":1021,"source_id":"f511d5a7-9405-46d9-9c2d-ea83830e094c","target_id":"5d027844-0183-4bb6-9ec7-b9eb936a6d69","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: f511d5a7-9405-46d9-9c2d-ea83830e094c -\u003e 5d027844-0183-4bb6-9ec7-b9eb936a6d69","gmt_create":"2025-10-10T23:52:36.546862+08:00","gmt_modified":"2025-10-10T23:52:36.546862+08:00"},{"id":1022,"source_id":"f511d5a7-9405-46d9-9c2d-ea83830e094c","target_id":"f7f6ae18-35bd-41e4-aaf4-0e0a59634ffa","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: f511d5a7-9405-46d9-9c2d-ea83830e094c -\u003e f7f6ae18-35bd-41e4-aaf4-0e0a59634ffa","gmt_create":"2025-10-10T23:52:36.547219+08:00","gmt_modified":"2025-10-10T23:52:36.547219+08:00"},{"id":1023,"source_id":"0784a26b-d671-40be-9e91-558585c560ce","target_id":"9387749e-6bfa-40e1-9cce-b4eeb62c1f92","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 0784a26b-d671-40be-9e91-558585c560ce -\u003e 9387749e-6bfa-40e1-9cce-b4eeb62c1f92","gmt_create":"2025-10-10T23:52:36.547592+08:00","gmt_modified":"2025-10-10T23:52:36.547592+08:00"},{"id":1024,"source_id":"0784a26b-d671-40be-9e91-558585c560ce","target_id":"5e6e2ab7-e698-49f9-8553-557e1c62b76a","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 0784a26b-d671-40be-9e91-558585c560ce -\u003e 5e6e2ab7-e698-49f9-8553-557e1c62b76a","gmt_create":"2025-10-10T23:52:36.55162+08:00","gmt_modified":"2025-10-10T23:52:36.55162+08:00"},{"id":1025,"source_id":"0784a26b-d671-40be-9e91-558585c560ce","target_id":"7e5282e2-d2bf-4332-a810-b29d871bb13a","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 0784a26b-d671-40be-9e91-558585c560ce -\u003e 7e5282e2-d2bf-4332-a810-b29d871bb13a","gmt_create":"2025-10-10T23:52:36.551967+08:00","gmt_modified":"2025-10-10T23:52:36.551967+08:00"},{"id":1026,"source_id":"0784a26b-d671-40be-9e91-558585c560ce","target_id":"05914796-2f7d-4a85-8d1c-2775613c6df2","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 0784a26b-d671-40be-9e91-558585c560ce -\u003e 05914796-2f7d-4a85-8d1c-2775613c6df2","gmt_create":"2025-10-10T23:52:36.552378+08:00","gmt_modified":"2025-10-10T23:52:36.552378+08:00"},{"id":1027,"source_id":"f42a4754-d71a-43c1-b2a4-cec9507c13f9","target_id":"664295b6-5d47-4b93-9dba-d0c995082e37","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: f42a4754-d71a-43c1-b2a4-cec9507c13f9 -\u003e 664295b6-5d47-4b93-9dba-d0c995082e37","gmt_create":"2025-10-10T23:52:36.552787+08:00","gmt_modified":"2025-10-10T23:52:36.552787+08:00"},{"id":1028,"source_id":"f42a4754-d71a-43c1-b2a4-cec9507c13f9","target_id":"a1b427fe-2938-49e9-aaa8-1158267fce70","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: f42a4754-d71a-43c1-b2a4-cec9507c13f9 -\u003e a1b427fe-2938-49e9-aaa8-1158267fce70","gmt_create":"2025-10-10T23:52:36.553149+08:00","gmt_modified":"2025-10-10T23:52:36.553149+08:00"},{"id":1029,"source_id":"1b2fa8d5-0ae0-445f-b4cb-3b52dd977e2c","target_id":"2438b51b-283a-4574-8587-f24bcfe40eb8","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 1b2fa8d5-0ae0-445f-b4cb-3b52dd977e2c -\u003e 2438b51b-283a-4574-8587-f24bcfe40eb8","gmt_create":"2025-10-10T23:52:36.553656+08:00","gmt_modified":"2025-10-10T23:52:36.553656+08:00"},{"id":1030,"source_id":"1b2fa8d5-0ae0-445f-b4cb-3b52dd977e2c","target_id":"d3c8cb19-072c-4eb8-8b1f-e80e385634cd","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 1b2fa8d5-0ae0-445f-b4cb-3b52dd977e2c -\u003e d3c8cb19-072c-4eb8-8b1f-e80e385634cd","gmt_create":"2025-10-10T23:52:36.554016+08:00","gmt_modified":"2025-10-10T23:52:36.554016+08:00"},{"id":1031,"source_id":"1b2fa8d5-0ae0-445f-b4cb-3b52dd977e2c","target_id":"10d20898-bf58-4603-a790-2158f1e91514","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 1b2fa8d5-0ae0-445f-b4cb-3b52dd977e2c -\u003e 10d20898-bf58-4603-a790-2158f1e91514","gmt_create":"2025-10-10T23:52:36.554361+08:00","gmt_modified":"2025-10-10T23:52:36.554361+08:00"},{"id":1032,"source_id":"1b2fa8d5-0ae0-445f-b4cb-3b52dd977e2c","target_id":"82c730df-b981-4a96-a443-40395b5585c0","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 1b2fa8d5-0ae0-445f-b4cb-3b52dd977e2c -\u003e 82c730df-b981-4a96-a443-40395b5585c0","gmt_create":"2025-10-10T23:52:36.554763+08:00","gmt_modified":"2025-10-10T23:52:36.554763+08:00"},{"id":1033,"source_id":"1b2fa8d5-0ae0-445f-b4cb-3b52dd977e2c","target_id":"46007df7-a3a2-4511-b121-1d5105e0f4a2","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 1b2fa8d5-0ae0-445f-b4cb-3b52dd977e2c -\u003e 46007df7-a3a2-4511-b121-1d5105e0f4a2","gmt_create":"2025-10-10T23:52:36.555144+08:00","gmt_modified":"2025-10-10T23:52:36.555144+08:00"},{"id":1034,"source_id":"1b2fa8d5-0ae0-445f-b4cb-3b52dd977e2c","target_id":"f0a4cdb4-9cf2-43c4-86ea-b2a331fd005a","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 1b2fa8d5-0ae0-445f-b4cb-3b52dd977e2c -\u003e f0a4cdb4-9cf2-43c4-86ea-b2a331fd005a","gmt_create":"2025-10-10T23:52:36.555491+08:00","gmt_modified":"2025-10-10T23:52:36.555491+08:00"},{"id":1035,"source_id":"2ced0744-8f18-485b-9dc0-99bb277c9f39","target_id":"a0f01ec7-599c-40eb-9e62-4d832f751db1","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 2ced0744-8f18-485b-9dc0-99bb277c9f39 -\u003e a0f01ec7-599c-40eb-9e62-4d832f751db1","gmt_create":"2025-10-10T23:52:36.556005+08:00","gmt_modified":"2025-10-10T23:52:36.556005+08:00"},{"id":1036,"source_id":"2ced0744-8f18-485b-9dc0-99bb277c9f39","target_id":"b6c2d508-9fdc-40cf-af7b-085c57910ff5","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 2ced0744-8f18-485b-9dc0-99bb277c9f39 -\u003e b6c2d508-9fdc-40cf-af7b-085c57910ff5","gmt_create":"2025-10-10T23:52:36.556359+08:00","gmt_modified":"2025-10-10T23:52:36.556359+08:00"},{"id":1037,"source_id":"2ced0744-8f18-485b-9dc0-99bb277c9f39","target_id":"ecd2e058-fe96-44be-8c76-f2a6d81ab8f1","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 2ced0744-8f18-485b-9dc0-99bb277c9f39 -\u003e ecd2e058-fe96-44be-8c76-f2a6d81ab8f1","gmt_create":"2025-10-10T23:52:36.556718+08:00","gmt_modified":"2025-10-10T23:52:36.556718+08:00"},{"id":1038,"source_id":"2ced0744-8f18-485b-9dc0-99bb277c9f39","target_id":"e7a84b89-6f1b-41c1-9dd1-1705de4470bf","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 2ced0744-8f18-485b-9dc0-99bb277c9f39 -\u003e e7a84b89-6f1b-41c1-9dd1-1705de4470bf","gmt_create":"2025-10-10T23:52:36.557094+08:00","gmt_modified":"2025-10-10T23:52:36.557094+08:00"},{"id":1039,"source_id":"2ced0744-8f18-485b-9dc0-99bb277c9f39","target_id":"1cbbe6c9-5aee-4b95-afb5-b4b9ba959583","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 2ced0744-8f18-485b-9dc0-99bb277c9f39 -\u003e 1cbbe6c9-5aee-4b95-afb5-b4b9ba959583","gmt_create":"2025-10-10T23:52:36.557449+08:00","gmt_modified":"2025-10-10T23:52:36.557449+08:00"},{"id":1040,"source_id":"28184f26-f1ec-4ca8-bd2a-cdba2ca47bba","target_id":"a8282e89-647e-4b47-9d94-7220788c2819","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 28184f26-f1ec-4ca8-bd2a-cdba2ca47bba -\u003e a8282e89-647e-4b47-9d94-7220788c2819","gmt_create":"2025-10-10T23:52:36.558462+08:00","gmt_modified":"2025-10-10T23:52:36.558462+08:00"},{"id":1041,"source_id":"28184f26-f1ec-4ca8-bd2a-cdba2ca47bba","target_id":"b14c4375-97d6-4eb9-b909-15a814294b44","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 28184f26-f1ec-4ca8-bd2a-cdba2ca47bba -\u003e b14c4375-97d6-4eb9-b909-15a814294b44","gmt_create":"2025-10-10T23:52:36.558862+08:00","gmt_modified":"2025-10-10T23:52:36.558862+08:00"},{"id":1042,"source_id":"28184f26-f1ec-4ca8-bd2a-cdba2ca47bba","target_id":"82d99e17-d70e-40a9-bdbe-4359f145ea65","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 28184f26-f1ec-4ca8-bd2a-cdba2ca47bba -\u003e 82d99e17-d70e-40a9-bdbe-4359f145ea65","gmt_create":"2025-10-10T23:52:36.559275+08:00","gmt_modified":"2025-10-10T23:52:36.559275+08:00"},{"id":1043,"source_id":"2e8fa9de-28cd-4ca6-9f8d-a50e5d4d8036","target_id":"4e365aba-487c-4f88-931c-8a6094e5ba2b","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 2e8fa9de-28cd-4ca6-9f8d-a50e5d4d8036 -\u003e 4e365aba-487c-4f88-931c-8a6094e5ba2b","gmt_create":"2025-10-10T23:52:36.559711+08:00","gmt_modified":"2025-10-10T23:52:36.559711+08:00"},{"id":1044,"source_id":"2e8fa9de-28cd-4ca6-9f8d-a50e5d4d8036","target_id":"37eb9b43-4eb7-4468-8338-6afe8aa786ad","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 2e8fa9de-28cd-4ca6-9f8d-a50e5d4d8036 -\u003e 37eb9b43-4eb7-4468-8338-6afe8aa786ad","gmt_create":"2025-10-10T23:52:36.56014+08:00","gmt_modified":"2025-10-10T23:52:36.56014+08:00"},{"id":1045,"source_id":"2e8fa9de-28cd-4ca6-9f8d-a50e5d4d8036","target_id":"915c2584-0390-4872-b948-ec9c7a65126c","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 2e8fa9de-28cd-4ca6-9f8d-a50e5d4d8036 -\u003e 915c2584-0390-4872-b948-ec9c7a65126c","gmt_create":"2025-10-10T23:52:36.560482+08:00","gmt_modified":"2025-10-10T23:52:36.560482+08:00"},{"id":1046,"source_id":"2e8fa9de-28cd-4ca6-9f8d-a50e5d4d8036","target_id":"f5cc0baa-575f-42b5-a748-e14a4686c3fd","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 2e8fa9de-28cd-4ca6-9f8d-a50e5d4d8036 -\u003e f5cc0baa-575f-42b5-a748-e14a4686c3fd","gmt_create":"2025-10-10T23:52:36.560867+08:00","gmt_modified":"2025-10-10T23:52:36.560867+08:00"},{"id":1047,"source_id":"9387749e-6bfa-40e1-9cce-b4eeb62c1f92","target_id":"4f0c09b4-1760-475c-889b-417d6cf38e2c","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 9387749e-6bfa-40e1-9cce-b4eeb62c1f92 -\u003e 4f0c09b4-1760-475c-889b-417d6cf38e2c","gmt_create":"2025-10-10T23:52:36.56135+08:00","gmt_modified":"2025-10-10T23:52:36.56135+08:00"},{"id":1048,"source_id":"9387749e-6bfa-40e1-9cce-b4eeb62c1f92","target_id":"cde97c0d-3751-494c-8e19-883e45949a5e","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 9387749e-6bfa-40e1-9cce-b4eeb62c1f92 -\u003e cde97c0d-3751-494c-8e19-883e45949a5e","gmt_create":"2025-10-10T23:52:36.564251+08:00","gmt_modified":"2025-10-10T23:52:36.564251+08:00"},{"id":1049,"source_id":"9387749e-6bfa-40e1-9cce-b4eeb62c1f92","target_id":"0fd77a32-bdad-458c-b018-96e46797f017","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 9387749e-6bfa-40e1-9cce-b4eeb62c1f92 -\u003e 0fd77a32-bdad-458c-b018-96e46797f017","gmt_create":"2025-10-10T23:52:36.564645+08:00","gmt_modified":"2025-10-10T23:52:36.564645+08:00"},{"id":1050,"source_id":"9387749e-6bfa-40e1-9cce-b4eeb62c1f92","target_id":"14bf5fd3-6e69-4f7a-a1fb-d682432a63b3","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 9387749e-6bfa-40e1-9cce-b4eeb62c1f92 -\u003e 14bf5fd3-6e69-4f7a-a1fb-d682432a63b3","gmt_create":"2025-10-10T23:52:36.565095+08:00","gmt_modified":"2025-10-10T23:52:36.565095+08:00"},{"id":1051,"source_id":"9387749e-6bfa-40e1-9cce-b4eeb62c1f92","target_id":"de38062f-dee6-40fa-8be1-a8357028a4c1","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 9387749e-6bfa-40e1-9cce-b4eeb62c1f92 -\u003e de38062f-dee6-40fa-8be1-a8357028a4c1","gmt_create":"2025-10-10T23:52:36.565563+08:00","gmt_modified":"2025-10-10T23:52:36.565563+08:00"},{"id":1052,"source_id":"1d573a3e-d520-44ad-97ff-cf4649119936","target_id":"3be18ebf-9cab-498c-9fd6-4d7cd862c1de","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 1d573a3e-d520-44ad-97ff-cf4649119936 -\u003e 3be18ebf-9cab-498c-9fd6-4d7cd862c1de","gmt_create":"2025-10-10T23:52:36.566182+08:00","gmt_modified":"2025-10-10T23:52:36.566182+08:00"},{"id":1053,"source_id":"1d573a3e-d520-44ad-97ff-cf4649119936","target_id":"8e58e242-20e4-4d4f-9487-f375d18b34e6","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 1d573a3e-d520-44ad-97ff-cf4649119936 -\u003e 8e58e242-20e4-4d4f-9487-f375d18b34e6","gmt_create":"2025-10-10T23:52:36.566529+08:00","gmt_modified":"2025-10-10T23:52:36.566529+08:00"},{"id":1054,"source_id":"1d573a3e-d520-44ad-97ff-cf4649119936","target_id":"4dd55257-a14d-4037-a10f-396bac420e7b","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 1d573a3e-d520-44ad-97ff-cf4649119936 -\u003e 4dd55257-a14d-4037-a10f-396bac420e7b","gmt_create":"2025-10-10T23:52:36.567011+08:00","gmt_modified":"2025-10-10T23:52:36.567011+08:00"},{"id":1055,"source_id":"368b9c8a-da7e-408d-8f92-0afe4f0bc421","target_id":"20697ebe-bd74-4fd3-850b-549d2e30c587","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 368b9c8a-da7e-408d-8f92-0afe4f0bc421 -\u003e 20697ebe-bd74-4fd3-850b-549d2e30c587","gmt_create":"2025-10-10T23:52:36.567588+08:00","gmt_modified":"2025-10-10T23:52:36.567588+08:00"},{"id":1056,"source_id":"368b9c8a-da7e-408d-8f92-0afe4f0bc421","target_id":"33163858-4bf6-4b08-b09b-886d31275944","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 368b9c8a-da7e-408d-8f92-0afe4f0bc421 -\u003e 33163858-4bf6-4b08-b09b-886d31275944","gmt_create":"2025-10-10T23:52:36.567947+08:00","gmt_modified":"2025-10-10T23:52:36.567948+08:00"},{"id":1057,"source_id":"631fa5bf-68d1-46a1-8821-afcebfc76b68","target_id":"5cd42e87-2037-4172-8dfd-aa208a0cbbf8","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 631fa5bf-68d1-46a1-8821-afcebfc76b68 -\u003e 5cd42e87-2037-4172-8dfd-aa208a0cbbf8","gmt_create":"2025-10-10T23:52:36.568561+08:00","gmt_modified":"2025-10-10T23:52:36.568561+08:00"},{"id":1058,"source_id":"631fa5bf-68d1-46a1-8821-afcebfc76b68","target_id":"1d59b46a-95cf-41b9-803b-75cfb1977134","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 631fa5bf-68d1-46a1-8821-afcebfc76b68 -\u003e 1d59b46a-95cf-41b9-803b-75cfb1977134","gmt_create":"2025-10-10T23:52:36.568924+08:00","gmt_modified":"2025-10-10T23:52:36.568924+08:00"},{"id":1059,"source_id":"5e6e2ab7-e698-49f9-8553-557e1c62b76a","target_id":"ded9cf05-660c-44da-b50e-0aebd5f70bfd","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 5e6e2ab7-e698-49f9-8553-557e1c62b76a -\u003e ded9cf05-660c-44da-b50e-0aebd5f70bfd","gmt_create":"2025-10-10T23:52:36.569358+08:00","gmt_modified":"2025-10-10T23:52:36.569358+08:00"},{"id":1060,"source_id":"5e6e2ab7-e698-49f9-8553-557e1c62b76a","target_id":"214beabb-f064-4a26-8d0e-79d1672b203f","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 5e6e2ab7-e698-49f9-8553-557e1c62b76a -\u003e 214beabb-f064-4a26-8d0e-79d1672b203f","gmt_create":"2025-10-10T23:52:36.569692+08:00","gmt_modified":"2025-10-10T23:52:36.569692+08:00"},{"id":1061,"source_id":"5e6e2ab7-e698-49f9-8553-557e1c62b76a","target_id":"c4a34b98-3fa0-4e71-a2df-2e2825e81c46","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 5e6e2ab7-e698-49f9-8553-557e1c62b76a -\u003e c4a34b98-3fa0-4e71-a2df-2e2825e81c46","gmt_create":"2025-10-10T23:52:36.570035+08:00","gmt_modified":"2025-10-10T23:52:36.570035+08:00"},{"id":1062,"source_id":"a1b427fe-2938-49e9-aaa8-1158267fce70","target_id":"b589ea51-e026-47f8-b8bb-c48ac29ced4f","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: a1b427fe-2938-49e9-aaa8-1158267fce70 -\u003e b589ea51-e026-47f8-b8bb-c48ac29ced4f","gmt_create":"2025-10-10T23:52:36.570498+08:00","gmt_modified":"2025-10-10T23:52:36.570498+08:00"},{"id":1063,"source_id":"a1b427fe-2938-49e9-aaa8-1158267fce70","target_id":"ea4a1da1-87fb-47fe-80bc-d97ee9fc2da4","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: a1b427fe-2938-49e9-aaa8-1158267fce70 -\u003e ea4a1da1-87fb-47fe-80bc-d97ee9fc2da4","gmt_create":"2025-10-10T23:52:36.570865+08:00","gmt_modified":"2025-10-10T23:52:36.570865+08:00"},{"id":1064,"source_id":"a1b427fe-2938-49e9-aaa8-1158267fce70","target_id":"ebd88e6e-db44-4540-82b0-f858296a7a55","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: a1b427fe-2938-49e9-aaa8-1158267fce70 -\u003e ebd88e6e-db44-4540-82b0-f858296a7a55","gmt_create":"2025-10-10T23:52:36.5712+08:00","gmt_modified":"2025-10-10T23:52:36.5712+08:00"},{"id":1065,"source_id":"5e514c38-a0e7-4460-8a0d-791646c79d11","target_id":"6086f695-7b1f-412b-8ea9-eb89ed8a2773","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 5e514c38-a0e7-4460-8a0d-791646c79d11 -\u003e 6086f695-7b1f-412b-8ea9-eb89ed8a2773","gmt_create":"2025-10-10T23:52:36.572002+08:00","gmt_modified":"2025-10-10T23:52:36.572002+08:00"},{"id":1066,"source_id":"5e514c38-a0e7-4460-8a0d-791646c79d11","target_id":"63389838-c307-4361-98c2-45d57dd87f69","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 5e514c38-a0e7-4460-8a0d-791646c79d11 -\u003e 63389838-c307-4361-98c2-45d57dd87f69","gmt_create":"2025-10-10T23:52:36.572409+08:00","gmt_modified":"2025-10-10T23:52:36.572409+08:00"},{"id":1067,"source_id":"5e514c38-a0e7-4460-8a0d-791646c79d11","target_id":"beaf4bb7-5a13-4b35-b7b9-92740dcade66","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 5e514c38-a0e7-4460-8a0d-791646c79d11 -\u003e beaf4bb7-5a13-4b35-b7b9-92740dcade66","gmt_create":"2025-10-10T23:52:36.572763+08:00","gmt_modified":"2025-10-10T23:52:36.572763+08:00"},{"id":1068,"source_id":"5e514c38-a0e7-4460-8a0d-791646c79d11","target_id":"e1315b6c-8d9f-4cf7-b9cd-32c9e0e1f627","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 5e514c38-a0e7-4460-8a0d-791646c79d11 -\u003e e1315b6c-8d9f-4cf7-b9cd-32c9e0e1f627","gmt_create":"2025-10-10T23:52:36.573116+08:00","gmt_modified":"2025-10-10T23:52:36.573116+08:00"},{"id":1069,"source_id":"5e514c38-a0e7-4460-8a0d-791646c79d11","target_id":"f79a7cfa-15fc-4dba-8f7e-ae9cf3970be4","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 5e514c38-a0e7-4460-8a0d-791646c79d11 -\u003e f79a7cfa-15fc-4dba-8f7e-ae9cf3970be4","gmt_create":"2025-10-10T23:52:36.573507+08:00","gmt_modified":"2025-10-10T23:52:36.573507+08:00"},{"id":1070,"source_id":"7e5282e2-d2bf-4332-a810-b29d871bb13a","target_id":"a402e10b-e335-4262-80de-920f7a252582","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 7e5282e2-d2bf-4332-a810-b29d871bb13a -\u003e a402e10b-e335-4262-80de-920f7a252582","gmt_create":"2025-10-10T23:52:36.57396+08:00","gmt_modified":"2025-10-10T23:52:36.57396+08:00"},{"id":1071,"source_id":"7e5282e2-d2bf-4332-a810-b29d871bb13a","target_id":"c1bcc0a7-1ccf-4734-ad88-1ac24d750d2b","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 7e5282e2-d2bf-4332-a810-b29d871bb13a -\u003e c1bcc0a7-1ccf-4734-ad88-1ac24d750d2b","gmt_create":"2025-10-10T23:52:36.574303+08:00","gmt_modified":"2025-10-10T23:52:36.574303+08:00"},{"id":1072,"source_id":"7e5282e2-d2bf-4332-a810-b29d871bb13a","target_id":"20e8415f-b0d6-4d95-abd8-d8da796c0c0f","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 7e5282e2-d2bf-4332-a810-b29d871bb13a -\u003e 20e8415f-b0d6-4d95-abd8-d8da796c0c0f","gmt_create":"2025-10-10T23:52:36.574697+08:00","gmt_modified":"2025-10-10T23:52:36.574697+08:00"},{"id":1073,"source_id":"7e5282e2-d2bf-4332-a810-b29d871bb13a","target_id":"8ffe2d25-5acd-4e9f-b58e-53ff16714b61","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 7e5282e2-d2bf-4332-a810-b29d871bb13a -\u003e 8ffe2d25-5acd-4e9f-b58e-53ff16714b61","gmt_create":"2025-10-10T23:52:36.575363+08:00","gmt_modified":"2025-10-10T23:52:36.575363+08:00"},{"id":1074,"source_id":"7e5282e2-d2bf-4332-a810-b29d871bb13a","target_id":"af166729-a153-41c0-b652-39e5ec1bd519","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 7e5282e2-d2bf-4332-a810-b29d871bb13a -\u003e af166729-a153-41c0-b652-39e5ec1bd519","gmt_create":"2025-10-10T23:52:36.575817+08:00","gmt_modified":"2025-10-10T23:52:36.575817+08:00"},{"id":1075,"source_id":"6f0c858c-ab8b-4813-aa80-cc908700b5cc","target_id":"839ba8fe-3f75-4f67-8315-2fe462d5a50d","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 6f0c858c-ab8b-4813-aa80-cc908700b5cc -\u003e 839ba8fe-3f75-4f67-8315-2fe462d5a50d","gmt_create":"2025-10-10T23:52:36.576349+08:00","gmt_modified":"2025-10-10T23:52:36.576349+08:00"},{"id":1076,"source_id":"6f0c858c-ab8b-4813-aa80-cc908700b5cc","target_id":"eabe95d6-f0d5-4296-82ec-7451e77b467a","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 6f0c858c-ab8b-4813-aa80-cc908700b5cc -\u003e eabe95d6-f0d5-4296-82ec-7451e77b467a","gmt_create":"2025-10-10T23:52:36.576707+08:00","gmt_modified":"2025-10-10T23:52:36.576707+08:00"},{"id":1077,"source_id":"6f0c858c-ab8b-4813-aa80-cc908700b5cc","target_id":"b23d6cd6-e9fc-4583-8d9e-4824d7aa0baf","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 6f0c858c-ab8b-4813-aa80-cc908700b5cc -\u003e b23d6cd6-e9fc-4583-8d9e-4824d7aa0baf","gmt_create":"2025-10-10T23:52:36.579966+08:00","gmt_modified":"2025-10-10T23:52:36.579966+08:00"},{"id":1078,"source_id":"05914796-2f7d-4a85-8d1c-2775613c6df2","target_id":"70ffefb8-f612-4b8a-9437-9ba703b1f429","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 05914796-2f7d-4a85-8d1c-2775613c6df2 -\u003e 70ffefb8-f612-4b8a-9437-9ba703b1f429","gmt_create":"2025-10-10T23:52:36.580683+08:00","gmt_modified":"2025-10-10T23:52:36.580683+08:00"},{"id":1079,"source_id":"05914796-2f7d-4a85-8d1c-2775613c6df2","target_id":"9b4bbb2b-50ef-4fa0-bd50-8307095d9c15","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 05914796-2f7d-4a85-8d1c-2775613c6df2 -\u003e 9b4bbb2b-50ef-4fa0-bd50-8307095d9c15","gmt_create":"2025-10-10T23:52:36.581341+08:00","gmt_modified":"2025-10-10T23:52:36.581341+08:00"},{"id":1080,"source_id":"f0a4cdb4-9cf2-43c4-86ea-b2a331fd005a","target_id":"876ec5a0-8a26-4bac-99fb-70bd5341a0e2","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: f0a4cdb4-9cf2-43c4-86ea-b2a331fd005a -\u003e 876ec5a0-8a26-4bac-99fb-70bd5341a0e2","gmt_create":"2025-10-10T23:52:36.581981+08:00","gmt_modified":"2025-10-10T23:52:36.581981+08:00"},{"id":1081,"source_id":"f0a4cdb4-9cf2-43c4-86ea-b2a331fd005a","target_id":"e8806b31-2bb8-4aac-82f9-a05ab7641b3a","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: f0a4cdb4-9cf2-43c4-86ea-b2a331fd005a -\u003e e8806b31-2bb8-4aac-82f9-a05ab7641b3a","gmt_create":"2025-10-10T23:52:36.582399+08:00","gmt_modified":"2025-10-10T23:52:36.582399+08:00"},{"id":1082,"source_id":"ded9cf05-660c-44da-b50e-0aebd5f70bfd","target_id":"6180a7d5-9a75-4206-bb77-a31ad3a5280a","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: ded9cf05-660c-44da-b50e-0aebd5f70bfd -\u003e 6180a7d5-9a75-4206-bb77-a31ad3a5280a","gmt_create":"2025-10-10T23:52:36.584621+08:00","gmt_modified":"2025-10-10T23:52:36.584621+08:00"},{"id":1083,"source_id":"ded9cf05-660c-44da-b50e-0aebd5f70bfd","target_id":"e889df05-674c-4a7d-b362-ea0a79c3d08c","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: ded9cf05-660c-44da-b50e-0aebd5f70bfd -\u003e e889df05-674c-4a7d-b362-ea0a79c3d08c","gmt_create":"2025-10-10T23:52:36.584989+08:00","gmt_modified":"2025-10-10T23:52:36.584989+08:00"},{"id":1084,"source_id":"ded9cf05-660c-44da-b50e-0aebd5f70bfd","target_id":"1c08fab7-60af-4df5-a018-325e92cb27da","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: ded9cf05-660c-44da-b50e-0aebd5f70bfd -\u003e 1c08fab7-60af-4df5-a018-325e92cb27da","gmt_create":"2025-10-10T23:52:36.585328+08:00","gmt_modified":"2025-10-10T23:52:36.585328+08:00"},{"id":1085,"source_id":"ded9cf05-660c-44da-b50e-0aebd5f70bfd","target_id":"c73281f7-b1ed-480a-b7e4-0cfc8c50c411","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: ded9cf05-660c-44da-b50e-0aebd5f70bfd -\u003e c73281f7-b1ed-480a-b7e4-0cfc8c50c411","gmt_create":"2025-10-10T23:52:36.585837+08:00","gmt_modified":"2025-10-10T23:52:36.585837+08:00"},{"id":1086,"source_id":"ded9cf05-660c-44da-b50e-0aebd5f70bfd","target_id":"86c70060-421a-44bf-9895-406b5e39687b","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: ded9cf05-660c-44da-b50e-0aebd5f70bfd -\u003e 86c70060-421a-44bf-9895-406b5e39687b","gmt_create":"2025-10-10T23:52:36.586187+08:00","gmt_modified":"2025-10-10T23:52:36.586187+08:00"},{"id":1087,"source_id":"ded9cf05-660c-44da-b50e-0aebd5f70bfd","target_id":"78aa1733-9cfa-4432-9057-3f31f1d44894","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: ded9cf05-660c-44da-b50e-0aebd5f70bfd -\u003e 78aa1733-9cfa-4432-9057-3f31f1d44894","gmt_create":"2025-10-10T23:52:36.58655+08:00","gmt_modified":"2025-10-10T23:52:36.58655+08:00"},{"id":1088,"source_id":"876ec5a0-8a26-4bac-99fb-70bd5341a0e2","target_id":"dc1761fc-1654-49c1-af54-e035ab4247f3","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 876ec5a0-8a26-4bac-99fb-70bd5341a0e2 -\u003e dc1761fc-1654-49c1-af54-e035ab4247f3","gmt_create":"2025-10-10T23:52:36.587132+08:00","gmt_modified":"2025-10-10T23:52:36.587132+08:00"},{"id":1089,"source_id":"876ec5a0-8a26-4bac-99fb-70bd5341a0e2","target_id":"6cf1cc1e-b6c6-474c-adda-677271819cb7","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 876ec5a0-8a26-4bac-99fb-70bd5341a0e2 -\u003e 6cf1cc1e-b6c6-474c-adda-677271819cb7","gmt_create":"2025-10-10T23:52:36.587523+08:00","gmt_modified":"2025-10-10T23:52:36.587523+08:00"},{"id":1090,"source_id":"63389838-c307-4361-98c2-45d57dd87f69","target_id":"bcce97b5-b5b4-4d91-92b5-59b30a307d57","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 63389838-c307-4361-98c2-45d57dd87f69 -\u003e bcce97b5-b5b4-4d91-92b5-59b30a307d57","gmt_create":"2025-10-10T23:52:36.589672+08:00","gmt_modified":"2025-10-10T23:52:36.589673+08:00"},{"id":1091,"source_id":"63389838-c307-4361-98c2-45d57dd87f69","target_id":"b7cbf9f0-0550-4d9a-b63d-3dfc62aaf102","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 63389838-c307-4361-98c2-45d57dd87f69 -\u003e b7cbf9f0-0550-4d9a-b63d-3dfc62aaf102","gmt_create":"2025-10-10T23:52:36.590089+08:00","gmt_modified":"2025-10-10T23:52:36.590089+08:00"},{"id":1092,"source_id":"e8806b31-2bb8-4aac-82f9-a05ab7641b3a","target_id":"8bf54fea-0bd0-405c-906a-28833263d52a","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: e8806b31-2bb8-4aac-82f9-a05ab7641b3a -\u003e 8bf54fea-0bd0-405c-906a-28833263d52a","gmt_create":"2025-10-10T23:52:36.590761+08:00","gmt_modified":"2025-10-10T23:52:36.590761+08:00"},{"id":1093,"source_id":"e8806b31-2bb8-4aac-82f9-a05ab7641b3a","target_id":"850f4fb7-1b26-4d8c-b609-25d624fad9e9","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: e8806b31-2bb8-4aac-82f9-a05ab7641b3a -\u003e 850f4fb7-1b26-4d8c-b609-25d624fad9e9","gmt_create":"2025-10-10T23:52:36.591115+08:00","gmt_modified":"2025-10-10T23:52:36.591115+08:00"},{"id":1094,"source_id":"b23d6cd6-e9fc-4583-8d9e-4824d7aa0baf","target_id":"cf4ba018-3d8c-432e-9edc-6f9b576004b5","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: b23d6cd6-e9fc-4583-8d9e-4824d7aa0baf -\u003e cf4ba018-3d8c-432e-9edc-6f9b576004b5","gmt_create":"2025-10-10T23:52:36.591722+08:00","gmt_modified":"2025-10-10T23:52:36.591722+08:00"},{"id":1095,"source_id":"b23d6cd6-e9fc-4583-8d9e-4824d7aa0baf","target_id":"16382d7b-d246-4b4d-bafc-c70b2a3e4a3e","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: b23d6cd6-e9fc-4583-8d9e-4824d7aa0baf -\u003e 16382d7b-d246-4b4d-bafc-c70b2a3e4a3e","gmt_create":"2025-10-10T23:52:36.592113+08:00","gmt_modified":"2025-10-10T23:52:36.592113+08:00"},{"id":1096,"source_id":"beaf4bb7-5a13-4b35-b7b9-92740dcade66","target_id":"fc1e66fe-ff96-4003-b63a-40e6fb76b6be","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: beaf4bb7-5a13-4b35-b7b9-92740dcade66 -\u003e fc1e66fe-ff96-4003-b63a-40e6fb76b6be","gmt_create":"2025-10-10T23:52:36.592488+08:00","gmt_modified":"2025-10-10T23:52:36.592488+08:00"},{"id":1097,"source_id":"beaf4bb7-5a13-4b35-b7b9-92740dcade66","target_id":"ff1240c1-0923-471e-a7e2-964baf6b3aee","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: beaf4bb7-5a13-4b35-b7b9-92740dcade66 -\u003e ff1240c1-0923-471e-a7e2-964baf6b3aee","gmt_create":"2025-10-10T23:52:36.59296+08:00","gmt_modified":"2025-10-10T23:52:36.59296+08:00"},{"id":1098,"source_id":"beaf4bb7-5a13-4b35-b7b9-92740dcade66","target_id":"a5c8245b-3775-4a4f-96ac-4238c9f9fc79","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: beaf4bb7-5a13-4b35-b7b9-92740dcade66 -\u003e a5c8245b-3775-4a4f-96ac-4238c9f9fc79","gmt_create":"2025-10-10T23:52:36.593324+08:00","gmt_modified":"2025-10-10T23:52:36.593324+08:00"},{"id":1099,"source_id":"beaf4bb7-5a13-4b35-b7b9-92740dcade66","target_id":"82cd8638-95be-4f44-9a6b-be561e5d845e","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: beaf4bb7-5a13-4b35-b7b9-92740dcade66 -\u003e 82cd8638-95be-4f44-9a6b-be561e5d845e","gmt_create":"2025-10-10T23:52:36.593677+08:00","gmt_modified":"2025-10-10T23:52:36.593677+08:00"}],"wiki_catalogs":[{"id":"1a0eab68-421f-4259-b391-3e8144347d27","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Project Overview","description":"project-overview","prompt":"Create comprehensive content for the TyxonQ project overview focused on the framework's purpose, vision, and core architectural principles. Explain its role as a full-stack quantum software framework with stable intermediate representation (IR), pluggable compiler, unified device abstraction, and single numerics backend interface. Document the key innovations such as Chain API pattern, counts-first postprocessing, and dual execution paths (device vs numeric). Highlight integration with quantum chemistry (Quantum AIDD) and support for variational algorithms. Include practical examples from README.md demonstrating basic usage patterns. Address the relationship between core components and how they enable hardware-realistic quantum programming. Provide context on target audience (quantum researchers, computational chemists, quantum ML practitioners) and primary use cases. Discuss performance characteristics, scalability, and extensibility points.","progress_status":"completed","dependent_files":"README.md,TYXONQ_TECHNICAL_WHITEPAPER.md,src/tyxonq/__init__.py,src/tyxonq/about.py","gmt_create":"2025-10-10T21:21:34.895655+08:00","gmt_modified":"2025-10-10T23:49:47.826971+08:00","raw_data":"WikiEncrypted:0MI1/XkBoMl0lTbK6t0Cn/+8FdvqrJ62ianMLvZj02dqzTho5arqNtbUziutSzUZOqm7yOpCxfwhmmzZqG/lBD3pMVXunyKmPUgiOnGRUOBEA8mCswpj9i4amCZFyCKrqO8joAge2YGpKLo34Otu+zqQWorSnehCbYG4zM452yUG0I1jXJu6fzY09gXQA8/cit3J1qRPx9Q6iDCbG+1cjyLSb+SAKMJfsn+gKJJ5IFZ9gOjOisJfWt8Y5SfMShFlPTbth6TA5Yb8q6AY1sx9jZxHoQhF2y7gnmwkjG5cdXhZo3ABilNPe7jZphPJSFVz4Ai4KFxt34G47HnJhT969RVYjzitN2p07zBrgujvcjX4MGsmXIQBtZoZczvB/jrynjt97fKV24AHlVnkG8cPd7693nqhCYO9JqEoI5QniInlGTkVkrQo8Ft6eZimcCcMb9T8GqUafm/VXD6h9yEPdUDwyboCRXcQzmx3Rbp+ipwauWC58cawVxG3e2XDWbVVZKl5Dmrkl7I030lxyQ36BqVjNter8mWyUo+qxk61sGzwiWc0H5IUh+6+IvOLAVagMLkm3y1RNT7Ki/rjlrUB6Gpa2O7QXgxCW53A9WDYCaRbsh5Jea8topuPu9Qq5/YkykliLSOSZSG/Thzi9/vvDPvd6wIrQlfmUxF3b/trz212z2nXwC0uWfiUBaxg+EYawWBORA5jYk7nd0FEVt0H+cDEJ2QO+4QO344IzN6NN9ibcyWdRC4MZs31dJB2QnG5ghrWLcoWl4lJbkt7K/kyyKRj/qXaWmibRfRM2nXE+jLmSP8KFZEcXbfGyz4KdMZNkWw5+mF6OOTAEp2rMYI1D7vVGv6TTMPkS6xee5VBYJ0M+6eSrjL82IYxAnUWj+uGe0f/HWd1YuaTd/4mijOYweVVRMiFJHvCti53GMrAoKY5ZWbo4RTHQhG5awzRL91sQaiFeTCzEt2E8lOPeWI1G6xsOTiLSVvb68melertucpNT6+r8iWR3+D19IIrqRQGvyPgXWAv1lXZawUdFdfteITMxuv/gxBWwnXoCiqTxKWyhWGG67axTuwdKFWSmSin8YCzau2PLeBgoOeBsk3X1BrOVCmY9uvRzHj/1DUnyfclJU5ieZIHyQ0JFne/EVJIK8WAhqvJoJSX8VYRJaQBV1U8tKolf7Lqijwb1yarFrRxIJ5LQvPwWf4nY2WEiEZWYFRjGCW/KrdlU64B/CD2TK1Yn0ccM0enUxW6Kzr8i4VI+eGU2yjrudi1mbiXQLJLcUa6/2CvP6PLIWQzciXxWZ40xC0LLSvycPuST6ufSFVmU0qxaXPd0x/0y0/jUjdqT4iLcj2UzIj485M8ORQIzM4qKq21xsZSDYkaq69iNKIulP4TSsb1Z2knjF98LIUuJo0N3e5PL6g3UKFw2rT7kn33+eBfQF5pymowfVHITOmLzDOW121hqkPs/l6IOrpeOqQ4iF5wJxjep/nNnzjmNPLLtrwxMFcZyqOyjl1mPLlYLhcqKmiDm9mdiJD/tTj6K4UJG84QjCW8j/iYoA4yauI4o0kIF4cBne7wiSZhN33JBLnudmUh5uXjBDqanf8AltpyeAx2/aptJlLZcgj5g4STW9x77KXRDTbBTi/hP2sLRo75HVfOZiIsKHGlGvj1kRR3tkbvxQstEEB5GADTMw=="},{"id":"0bfd492c-46e7-4150-9932-f585a8aab84d","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Simulator Types","description":"simulator-types","prompt":"Develop detailed content for the three core simulator types: Statevector, Matrix Product State (MPS), and Density Matrix. Explain the Statevector simulator as a full-state exact simulator suitable for small to medium circuits up to ~30 qubits, leveraging global state vector evolution. Document the MPS simulator as a tensor network-based approach optimized for 1D entangled circuits and large-scale simulations with bond dimension truncation for memory efficiency. Describe the Density Matrix simulator for modeling noisy quantum processes using mixed states, supporting non-unitary evolution and quantum channels from devices/simulators/noise/channels.py. Include configuration parameters such as precision, truncation thresholds, and noise models. Provide usage examples from devices.rst showing how to select each simulator type via .device(simulator='statevector') and performance trade-offs in terms of memory, speed, and accuracy. Address common issues like state vector memory explosion and MPS entanglement limits.","parent_id":"653a4c79-b781-44a0-919d-4ab57987530e","progress_status":"completed","dependent_files":"src/tyxonq/devices/simulators/driver.py,src/tyxonq/devices/simulators/statevector/engine.py,src/tyxonq/devices/simulators/matrix_product_state/engine.py,src/tyxonq/devices/simulators/density_matrix/engine.py,docs-ng/source/next/user/devices.rst","gmt_create":"2025-10-10T21:21:57.317122+08:00","gmt_modified":"2025-10-10T21:53:52.299846+08:00","raw_data":"WikiEncrypted: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","layer_level":1},{"id":"95fcd0d0-7c8a-4b89-a1f9-c3bf74024ca8","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Decomposition","description":"compiler-decomposition","prompt":"Develop detailed content for the Decomposition stage of the Compiler Pipeline. Explain how high-level quantum gates are decomposed into basis gate sets supported by target devices, with a focus on rotation gate decomposition. Document the implementation in rotations.py, including the decomposition rules and transformation logic. Provide examples of how arbitrary single-qubit rotations are broken down into sequences of RX, RZ, and H gates. Describe integration with the overall compilation pipeline and how decomposition fits into the NativeCompiler's default pipeline. Address configuration options and their impact on decomposition output. Include troubleshooting guidance for incorrect gate expansions and performance implications of deep decomposition chains.","parent_id":"e3263062-6a60-4591-8e69-dfabdcc9cf5e","progress_status":"completed","dependent_files":"src/tyxonq/compiler/stages/decompose/rotations.py,src/tyxonq/compiler/stages/decompose/__init__.py","gmt_create":"2025-10-10T21:22:12.664906+08:00","gmt_modified":"2025-10-10T21:53:50.280868+08:00","raw_data":"WikiEncrypted:r1dbw1ciiG74lYTjPig5UzhSvFd+lEfKwG8DRwv49yXkMRrMrpHSVsNBn03bqsTrXmHs48NTWjJVSsWNVCl2O7FWctICHaqVLY7a7hEMOpkplPu6VDX6N+gLtcl020A/uFx4NPtYZVwiJGv5zCdhWWB8y0EVQBnEurbYpWzQkmeO13KGspt3m7BClt1ThWZ1VNnv7BAYafphzuMfGLtfXwkEB1TnO6QSl0pCV8mQkIil7Mg6jtGTvF7wAcjoaTj3Yo1WLGKWsF/UZoorfGaX4X/yQVe3w8qp1oOhibZZW3Yq98TQVFoSXR6y5nBdbYfc1SymHNNw3QWrbZVFPcaufhyEOijBCiCwgCQQY0wSt4kE0xgzcQwJHEeSDMlb8unKLjQ78nMPbfRNAma5VyI4QnVvLeZqMuCJUq7Qo2eHz4rlaUsq574IZudctYzbOT8EgC9YodTKbfB2Wsm/yHd1lIHuZD70zQFeLL6L7I8XfSXI9v5GxhHV6UMgbrLxwR3kCM5qkyuOSJvWjUVDFaIvB+w6FfexLDDgL2LCMgukXIiGCI6H/zfuvNvBM4okwL6cIMfWW7JVXHDvY56cqnWEHzAURmIGA3h919SmibvnLI/ZRota0TfgTsod7ipksGRZ7q/AvdLLQZtNXfz6EbRbLcmgDNH0DzwxgnP+2gngBBdY8IYnLSXPUll6qbF6hLdmycEsbgjZfb1cuyjMgpQSdmO6JHCu/2F9eYR5giIH0YQgAK8nt2tP5Kx4aQJW1cG4de2lSYSQmG/uFwDKjqNEwQa34IdvQFFcIr1jcRGSKFFs5RqHEn1YYNqI6dJFYgecNYGFBfBdJzP8bVc0qRlziv1UPwm4LfTqAjYErEm2qGjb1iRQkSbL4Xb73IT1255mOLMvytSQJ86eSr3wOE5G1RhpIv91V6/4VcX4cWrVmjsXBA4+LWk4bP42OJHTJVCP/BiPsZt9lR3flmN849DCACPm9CWY4pYjy2tGiL/IFBZgsVx+QOYS8Gt5rgjSkKVc1ggZQPOt+rjYObO4OeDj1MPVDef1BZNozaCrqJeSFvsI1plb/E7bdrfr1SJX8VRwfIOIm4U4o0jAmhLMlsljSoN4WicNobq0cAkyPHi2jTn4S2e+FIWj4XKZbtXXJd2GPeyi72XwWL1m/xCvwzMnSipd01Hx8z3kEVlW3LgEyy8GvF1WVayCJQKFmtXq12q/cfgSrNoi5z0Tag5XAHrYO8EzQ8RJUcFol17MGwSEjl0UZf8AB9wdFop75rZYjKDub8fmSX8D7Y3haZ+/rAEJ9/Lmpv6SRklsvUW+nqll5byuTNXJZ0nekPD/Z4i+tMB5zhdzAtr66WQHcnOiKgtVSFovM82+PQI4DC1EU0Iy6P/IiYJF5GW8GQb/oUtTv1B8JtA3DSh2JccvBHr0XAuzwTvkKXdnvVJxdZIrqautRRRph6f105xjS9LkR+AjHjGG","layer_level":1},{"id":"0a956462-bfc6-464d-a19a-8011c77c1247","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Intermediate Representation (IR)","description":"intermediate-representation","prompt":"Create comprehensive content for the Intermediate Representation (IR) system in TyxonQ. Explain the design and purpose of the Circuit and Pulse IR as stable, dataclass-based abstractions that serve as the system-wide contract across compilation, execution, and optimization stages. Detail the structure of Circuit objects including qubit count, operation sequences, and metadata handling. Describe Pulse-level IR for low-level control and its integration with hardware drivers. Document the role of operations, measurements, types, and error handling within the IR layer. Provide code examples showing circuit construction using the builder pattern and manipulation of IR objects. Illustrate how IR enables deterministic transformations and supports both high-level algorithms and low-level pulse programming. Address common issues such as invalid operation sequences and type mismatches, and explain debugging strategies using IR introspection.","parent_id":"40147ed6-4474-4e38-b488-92b8dda915e1","progress_status":"completed","dependent_files":"src/tyxonq/core/ir/circuit.py,src/tyxonq/core/ir/pulse.py,src/tyxonq/core/operations/__init__.py,src/tyxonq/core/measurements/__init__.py,src/tyxonq/core/types.py,src/tyxonq/core/errors.py","gmt_create":"2025-10-10T21:22:16.25527+08:00","gmt_modified":"2025-10-10T21:54:25.938699+08:00","raw_data":"WikiEncrypted:GAYP+Q96byUZT4Py247W7Csxoyf7l1uH/SZ2ie8YahDjrN2raWInEQ6fFY+WER6mdA692efWyOcMWo2Bf4mqYtqT8mo58OGbpS9wngpH6njeiNWQtdiZxUVcKL43BlnPTL0d8uucmFXSdmmG/rcxragh0uzQ0ZDdiFJC3As8ptme1LXSFax3+P7n9l89GPVlOYzy1mQruDejap2Hfi8m2t3ZvbAfvf5lvmPek1FerH9li5tS8M1pnFPKwT9qPBZirhib1vKuEF3fkVdfZ4XnCeYtoI6CrtoMnyqqU3tYAUNydZCgJ7HqCopLwyIzRUVhuur5KJNqrCtSTzW6LKDlWeR2hYDpeirohtFqeIZTD/4yq7arsmjzqxqnJOVmL64GJj6/gq2DhDaT6ynezZ6MCiFU1h4w+gxDxbcDi9LR9jwA8cZBDvYKkvLzTr9+K11xNF8HRPWsGPObnlPQSVAqFcdRgj9vmlCDM6M7sKbdntBHPha9yTFJkTlJtUaq5zqp3ZtrUyAANkMdXA7Dj8cIf8oSs+C1ahNcszyNSePFhTBRA6kkSKLqLnxM2xtwIWtSKernYFG+yHo9PhzMUq42O/ZDEsN2glJk5X4iCN34wrMm+6UnBm24/VRGd4W7k+gsNcWsPf2TXpOkU9N58WuvFFAUKC9lTG7R0Zr/emiFOrPU0BIxXf/QY0Jz6rjttvt5+oOFP/syaZyoVR7ok4zg5Zrpz6iE/hKPFRy0j4V6o3W26EvPF4Anp+MpAYgIAvh7iR1Ccjgeq3QnoL6I+HgWHNSjNdqN2j71oi3l+EAQHQJPQRP4ml2ZkBATKC3d/w3RaWhd2qtAIn3TBqI8tmqxE3QrbFzFZVp/zEl26pv3hkY39vGlAa9shkjVKXmEz/hc8BA9JvSTaZ6O1MURA+aKD/sc1CBtezrMKxbDvcehic/HhHcVD5nYsMNw7+JSIZyIc57N5axof6g3TbeAyKoQ40wPjI9StVCE+G0m8DdDybETxH6q6wi047+zmaKUhUCwI9kbtE9XCs3diE/RVry8x85hnWIJkCy0Py6xoP8PYuNCl53KS/BR2OsxVT10fi70RHwF6Fz6jvuXGTod2hihz4MHRN01OJ7vgPGJfwSXqxIrBpY3wdzZzDBXrfbvmZ0aXaSJofNoapoklZnZc/vxb5DyWR48Jzo0sYpuslR5iuBtZeDWWVeiqclyR0EkDL9fK8WZWRD7IbjsiD0RjTikW144IxxGTBAk027VVcJLaRprehFBhYjItuCeUE3AdvySlUnqRG2FVQz/+4A4RsTxPJUK5xZJM11w/Ty0/c1P3/HkFeFZ4Kf3oRzF9jMbUc6sCMlKL0iZQODaN/MkpjN/lQvtR70X9Q6Yp01ui5A9+7zNADsT4eK9UaE0gSZ6Xhvr9/85WnYlpgenzD8rHYrIde5Eby1BD1ZQ90ekq3RE6Q4ZiynxGV14Q42ZL98mknXoPogqG9ZKIUebUDRUvtth9YAn0Xt+voa0YdNjf0DZtdVbtZp1wsv0t+U0vt/rHQNMrlhzaHGAEYfjJPfyQHh9u7m7ls4rJKC4VbALgREyhAcdAhQvJsg1ELth3ZX+033ib71OhrbVc9liNbog/7l7LlnC67DUvyExaCJA1Ulo54nc80l67RBDxWBqb56lVgdP6SfNfCxpcqV4hWNngic2rjCoDrpCL1HrTr3BnMFdK5GakFv/uY1/oOlaJMiJwy0u4ylq7dgVpk0jX5L7hJA7M5MgPGR4J4hZeNHd6A58fSdg2AKAuJguhKVq6ZkVQQmo8NTzD//jHbsHCDXgwVuxgNpfxKMyoDgRfSemmu2E01bYwgalaWj30Ohg7Qb6AF20otWfi/3l9Dg+T3Z1ms4y3A==","layer_level":1},{"id":"8882a765-e183-4f8a-82c0-6e3fd22d8151","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"NumPy Backend","description":"numpy-backend","prompt":"Develop detailed content for the NumPy backend implementation focused on its role as the default, CPU-based numerical computation engine. Explain how it implements the ArrayBackend protocol with NumPy-native operations for array creation, linear algebra, random number generation, and mathematical functions. Document its thread-safe design and zero external dependencies beyond NumPy. Include examples of creating arrays, performing einsum operations, and using the random generator via rng() and normal(). Highlight its suitability for prototyping, small-scale simulations, and environments where GPU acceleration is unavailable. Address performance characteristics, memory layout assumptions, and integration with the global backend context system via context.py. Discuss limitations in autodiff support and vectorization compared to PyTorch.","parent_id":"b689c08f-8318-4f22-884a-b1ed2f087ddd","progress_status":"completed","dependent_files":"src/tyxonq/numerics/backends/numpy_backend.py","gmt_create":"2025-10-10T21:22:31.954611+08:00","gmt_modified":"2025-10-10T21:55:21.720649+08:00","raw_data":"WikiEncrypted:0mENHrTvnEtdfNug7pH6gyhA88QIPBmOmicu6f9aDGmlYSAoGkKG5kcWQS+AsYVbtbbLCesduzyXqDdXA1jMpLTrFBFnV1+L6BFIvG10LHQMGDcukazXmoh7PsqQrJccuPJ6g0ApxMUE661hn1rBaGU1aeYf0hkTQ/YT6mn3nQCAcljBkKQBI8qEwLGY+cuMqh4IAhwuwJGpO9UzBc/4Wjf79xAdyzogyAI65h/ST1nZQhAB8CVrt1MYhbNj3/bmw4PBIj3fhtt8c6MhZiiX/hz/DqVKnJoUb+C0u+1zrS7AYVO/ObT4iwlFxUjorSARs3EoCwZVsnTJ4N6xOLqvM3Yv2CMGJdkYROwBCVY6uh9yhrlKWRcNm8vRGdKGKdgaqdf/CvJfhBUcCN4d+TAIQkx2IkD4yVRRBoajnk7uYvtvnjkK4TX8iXLMV0g4sARHQsrEi9ntIM4kZcIuS2UZZDMX0FseBf1fWCgjdUKHifRgeKnPIRtRqHl4I4+KUpAmi+ziUtow7KYqe+v2JirwB4UpLdHMzLtzeFN1n0GDNc+gMLLySFvHy0rywbYxBOMsfHSXSBLunfqGo6o3FrW9x6RHU5CZ3s5Y73ElV0Wjl5vrIKBxHoHxyk56dyS8iUIqDiKd/7IB6uDW4fob8hFyi4eD41+18nSG0quW3hYA630d8ZXnqUMddtdE+MKVsM307eVf2J1vdRm8gzIzrxm9MyigzcswSjd3tyluihZYmVKpoNq3rEi8ozHYskrSokFPW2P0e5CRGT5gOVHipBUu9lxA1qw6RtNdDIzuVB7s9tLOKWPRDcLSb9+L8vk6ro2vpDW9VACy2g6eEBzoJ5n8CS9bMPeVaFYrQA18MOMibMpWWU0pSUev3xBhvrarTAG2UHvA8wB1buSiSbCs5/lgNGEjXV8toBwIzfxXmIz+0/PAU7ZZ1g78Wz/x4R5QSekx9KXAbvP4TMhBQyMLhR0wYhMpKXZtB03Li0FPepkFCFN85+MJs2qww4v9umhGvWyS7HawVhv7pkHysOZ/r78gczM2H1gbbXG3Oe5ePdmOchhM0X2BlmEicasq/GNTHhwATw36AvjV4aHgu0ltW4hS3K7uLTL+tws7hgLB/8BnZO4oSwqn75+U8upABZ+r8e6Kq1+JwpAup2JjL5XGJ9IeDjOM+hS8SF3DuMEUISfwFr+jrFt9P9b1kUbbyoIlnXExMEpzdBqS4qn47m9RtfzOC9E5mVj1N3EB812sCNvd5y7r12JhmriaLdNetJ6HyFMAnXp3Xf4CrRWwMttd6oDqCU6KayqETlrUIEI6HGyzE048bZNteHuuN33Pq2KqtiE1aUHrabrrtjdPYFDSJkE2VP5Lu0g8SyModtEhgP8VobSH2tYv04ApptDVwlkT/IQaoK4tv0YiCoP9uiVxzWpTRiHfUsF3gewR0WGQ03JcEzMwD/RTzgQLHQihXQC2L+km0UpbnV8qiRRE70sAkie3Rw==","layer_level":1},{"id":"c3341845-1926-4637-abfa-16233e29389d","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Counts to Expectation Value","description":"postprocessing-counts-expval","prompt":"Develop detailed content for the counts-to-expectation-value transformation process. Explain how raw measurement counts are aggregated and converted into expectation values for quantum observables using Pauli operator measurements. Document the integration with compiler-driven Hamiltonian grouping and shot scheduling to optimize measurement efficiency. Include code examples demonstrating the use of `compute_expval_from_counts` with grouped Pauli terms and weighted averaging. Address performance considerations for large-scale measurements and memory usage patterns. Provide guidance on handling sparse versus dense observable sets and numerical stability in expectation value computation.","parent_id":"6e114fe1-b696-4897-9078-346dbc4008bb","progress_status":"completed","dependent_files":"src/tyxonq/postprocessing/counts_expval.py,docs-ng/source/next/user/postprocessing.rst","gmt_create":"2025-10-10T21:22:36.696443+08:00","gmt_modified":"2025-10-10T21:55:06.647478+08:00","raw_data":"WikiEncrypted:TP8KP13wWUq5FizrfXDdgqjkYY2YlDi/0d9H5UQiZkWX+4LCYL6NpKaeqdFu0iUD4UkaN/BnI9CqWX/m8GDKc/Q8A6cYD/KLPN+YItr5/3JjaEPxN/fcctE+/vmcjya063HnT9YQWqaY4jy4ekPgZ3PDSTSsW54k0n0ER49p9jd+lyKsBnAGEzYB9V0tlhLkbE8+B9KZCB/29xQHdm+QWaQOtNP0rAu0iI/2AQPnSqEOex/IWiE/RTqFMPeXoadD6aK4ok56MZm2gngIpMt7wqA5/FecMeWvXdsLiIhX0GIkUpZF7PAcrWj+MV3jb+eNTaMKI7Y/QCUm7utMEhar2ASqn0cY1FbwpwEqeJ1K1lpIoEwljdFTRnDwa8oFDuA3PQQBQ/vNlbBXRjm8air6+/wgEboRV+cwR+f1US9sQguobvKRVjvQJPgryRkzv5p3M26cRG1l5wZe4diOARjnc6g8FRNZRRp0P8UEphPkwEuh6r4hGh4yvnUBSMJ4cXtjcvqJNGzS7aBfJ28XsYgmw7Xs5t1QLoQcBpmHZcbHrpH9ocrV5vss3y2oK/3Sy5xk5TxhEWv+lkq21F2jCRRVJoKnpa2Mup6B65Zs4VlwkDGcRykQ6xIGVHQSPUV5C8C1veoOzHknAemNlyMkgObPO2pskKOQOj0BrZ/pva8fqHwiA8Vr4qHAGcXvDdB5ZtGOqniHo8+UEHRKBOkC8NcUXWQ9+mVri73om+sbzuMsaOafIKKg7K9MndFQKgNJ9J4b+0+JUzEWDBJtu1Arzox/urW/ofFpul+o9s7rCmvLBDu2ORVQxkrCkZimbnIEUpdhMDR3bk8qrL62jMA5ltg+8yr2aomQWv5gR1JryXDgxte3xBqepVEaop3yY5fyDIvRD8cOmxn/b+MvOHHS+OBhTWC8XjmyOtEj1xqr/IILxxBNtmU2W79a5vg8aL62c4HrCVi+T5m05VVuWpBcKIpFPQEkVuYcHSnrO0v/kBsMPvFsLEdxbNSBbJT2GRqjQCSsEobkXnuRl2TtSKyzZx3GvoCIeVOooOI8OPYhfDCYPcaX/HY8sgMDJHELI5Fo1aidpJ1VMhN8/+GqKiiWKt295e8AIiTm4aHu5Huw/64xDiMGRVFBZDyU5GkWczeywj9qgAkuJ68mnxlBtGXuvA/w+aLpYw/GPLsISZcJT1Xqu/3lb16NomX2oK0QPOzQsmXoVqjpZ4uSOAzHth7qYG7teI+9mrCOWUHflSnZsy5r9OjBd/sW8tS27U3mKTfohS4B1RfJvlAMR4qY2zDkYhdRrnookoYsTLYFrR2/J5y0VvJ7GR2f2kXH1b0lR4rCZInTZzlQM8luuFiukBkZsl6Fb+MR4+jMfkbDv/KnZ7dejJY=","layer_level":1},{"id":"edf523ec-869a-43b8-8588-fa64de51197e","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Quantum Chemistry Algorithms","description":"quantum-chemistry-algorithms","prompt":"Develop detailed content for quantum chemistry algorithms including UCCSD, HEA, k-UpCCGSD, and PUCCD. Explain the theoretical foundation and implementation of each method for molecular energy calculations. Document UCCSD's initialization with PySCF integration, active space selection, and amplitude initialization via MP2/CCSD. Describe HEA's hardware-efficient ansatz construction with RY layers and CNOT chains, including parameter shift gradients. Cover k-UpCCGSD's generalized excitation operators and PUCCD's pair-coupled cluster approach. Include code examples from cloud_uccsd_hea_demo.py showing molecule construction, algorithm instantiation, and energy evaluation. Address configuration options like init_method, active_space, mapping, and runtime. Explain relationships between base UCC class and derived algorithms. Provide guidance on convergence criteria, orbital optimization, and chemical accuracy validation.","parent_id":"7fc12bf5-cf13-45cf-b21e-370f5443525d","progress_status":"completed","dependent_files":"src/tyxonq/applications/chem/algorithms/uccsd.py,src/tyxonq/applications/chem/algorithms/hea.py,src/tyxonq/applications/chem/algorithms/kupccgsd.py,src/tyxonq/applications/chem/algorithms/puccd.py,src/tyxonq/applications/chem/algorithms/ucc.py","gmt_create":"2025-10-10T21:22:57.103508+08:00","gmt_modified":"2025-10-10T21:57:08.124464+08:00","raw_data":"WikiEncrypted:o/V1DzY9J1knzt5DomOylel/Vcih95CB37efb7pzZTSWqfgIEy1EBiqN6FnwUqhuPejGaO9su/t1egmMlLScbxBLUE9172qBYt1ItyZIzIbZjmEbQZj4D796ccTSLFeaZxPmQxIDEW5mrug6Ls8d0vTzJVUqFtkIBxZKxF/jkE73Wupuiu4V9xw9Fh0Hwm5sH3eqnBcUZGmh1vTJqVTSB6/RyVELcZs5qu4NVtSeYxSSorOyRim+BEyiaPN+JYYaZFi7TPvp2WEiG45Fr3vRrJqLU6hEMnIP3FPvUqXyDV4ptJXr0zsHYu3OUPvRPLJi72z6Zp6ipXnUSwfFwZYTx9RWUVl4doy3BAcfTGhAAV5Fq9J8M0ZyQdlFAc7dRtbC0N9kZ4995Amti3mvZ2+vhAlXul6yaPFnLndt54yChhSITF3+CKHMMXrjDn/zzDlSPDZpFN2C2y0x/6cPCB0iVHypA0vwGg3qGftx57fDCWx+J9T75w2tPN3oV5mRS/s2TH5XGmHDbDlDLSogKVZzfbosn61lu4hcyYsiuq0XNcNGVrtAgXiTschiaZcliPFhy4sbsbAQavkUYSm1cHNezfGjyKgLSJKsPBaoieX7GY5p2tK7tcGc/Tw7vJn/y6E2itQRCag7xnLZOUIccH8hS0DsFJH2d64Tbf0FYcwHeYpTMDoFjLQkCOjgP3bqpNxuwNjuFpZS0egGnD1rYCtXBq5X41DmYMLqQBBoLpRoptouWm25qARIC0XcF3Hdx30oFigkipiYUQ3SY5v9aPfxN3VRukkt3IPeAOotWNmQT64Y3NJMcw2/geC2Th+pWoTWT9DPakqiKSRSjJRjQiV2D6pzyF7QltC4gTJM5jb+6LCghjP4aJsa8ZJiCi4Vfr91YfC8gWzYhZrsIDbvYdHfsOLRvdU8hJFWcEgFWdZkewIVmFYLjigXGSBtJBWvLVOMcXqlC3lm8tKnw+XfTC/fsTVb39aidEa9D5L3y+8/pU4FuCmwOHvq6KVCQ5+9erO9yvCndyKXYZOfh7F5thiGgqlEtzb7FtuZUw05DnJHpDBvp/mB8UvPWUO/18xvfekEvAfu48/DSw4IsjbyWnLFFy9j6OFYJHQfSuIZHkKDpRI/5ulNSoKq8VF2XlzbxV85hhcXQfqDeiCyU6piyD5XDQfKeH89fTm9Z9pQV86FTaijQ/gW6kueGC0svckoG/Ld2TA4Y0HFXgxPao0+8uj1FWWRIcS+8FqBZySjA398uMEGXqwyVrq8ms4nwqRSQVvBvsCib9MuMC9Y1rhUNn1EiL5TbesUqYGlsJvD0OD7VFaRAS8vCOmXRe9IcuY1Oggn1W4p3N8xvPw0z9MqrTcyHV3PxQfGeeAEhhhRnjYOhS3x3bAFjXWV+aUlpFhg/fmH7/2hpnwUlxxHlU8CFAQKnrXqo0+ULif9QK845lhepJfl8mKCfvvLT/j+vYq3Nf3AkjXDZDra/9XzhObIgFDHdy7eQcvhQePrMv1wgw3n0yIEdkySDu84jNKEh1r9WGWwJM/LW5kqT9MSpW5o99heswEG8OJ36mfSwzkV1RMpAoDwBw86QJ2s+f95fzkrWNxAzv2v8NA6GFvDc6dKNaXIsP26UpwcINIalHufLsD3dQkcwjy71glgU8M+fc9hHMUUpbc+YJLYMhyRV52v1+IOsLvWDZ6S285X+rYGckgtjdim5ZSVnuJfugTWw93DD/2p5ICZ2Jeas55RD9o3Qn0+EMwEx9Hed7CbiyFv6Cx7tisNhtXLCdy3lJtSzZ0YsRN6imjiZkBroFzINipZu3EjJLrjpepCpLLVS7CEGjC6Dd9a3HnA/KhVPwNmS7qwHcuZUFTH3UT7ppPICvKkDNN4XmaFs0EVnhvQ4AE8F5pPlP4=","layer_level":1},{"id":"2908ee36-24ff-42f8-8ce1-1fa2d5c5a768","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Circuit Templates","description":"circuit-templates","prompt":"Develop detailed content for Circuit Templates focused on pre-built parameterized quantum circuits. Explain the VQE ansatz templates with support for hardware-efficient and chemistry-inspired structures. Document the QAOA and Ising model circuits with configurable p-levels and mixer Hamiltonians. Describe the Trotter circuit generator for time evolution simulations with customizable time steps and decomposition methods. Cover UCC ansätze including UCCSD and generalized UCC templates with excitation operators. Include usage examples showing circuit construction via the Chain API, such as tq.Circuit().vqe_ansatz() or .qaoa(). Address integration with compiler optimization passes and device constraints. Provide guidance on customizing templates through block composition and parameter mapping.","parent_id":"5f9a37c3-59ab-41c6-ac09-34c8680a8b44","progress_status":"completed","dependent_files":"src/tyxonq/libs/circuits_library/vqe.py,src/tyxonq/libs/circuits_library/qaoa_ising.py,src/tyxonq/libs/circuits_library/trotter_circuit.py,src/tyxonq/libs/circuits_library/ucc.py,src/tyxonq/libs/circuits_library/variational.py,src/tyxonq/libs/circuits_library/blocks.py","gmt_create":"2025-10-10T21:22:57.440553+08:00","gmt_modified":"2025-10-10T21:56:27.721187+08:00","raw_data":"WikiEncrypted:zSvuKm3NbN5brOrmzD7b44OaIHWW5Yy8jxRwi/OzLbQkWhDjlAfkbEKGaNtAB0Jsgqo7wTMRxKiZE1JNaJmJwiuRw22zsmuuGqSclO7z0vaQ3v7GDZrYJy/qPgF6auXqbAQ9m5fwuOvDO9Sl4IvIrucrg9qMiA83iUWSzD6xYb8kd/1rUFer431Leycpiu32TCqvUUaK8zkITer5jNGHS+roYXRGAylGz9w9DVYxd1LLNRVW2jM344kexeVi3oO2AbHJOBEibNxWr1U5oAGhKrZZ8K5hlrLHjc+YugIosDbOUYdoPSrBzW21tIuyWJMxy0ymFCtT9RIyPTXgSjvQI2gO6CobLZe9T+6WGCxLLQ+/wDdqGSrC59ujaKmEU4+4iJExkwYXrIlw0MZ9F+YKBoFumaxGUkal3C6sAdCEyWtEwm96U8rV3jSOVd8q0yA1+H0JWsLi8U6hsD8A2wemGON2TUo4XR921C5JH/OiXn/NsVwv7j1A+rLYWmLD7RA9GJXFIHrOEJCtVTylZOoc4WaiXHBaMPwugxN5IPXGc9VnbqD6R/Jl2NfKaN1vfmxYt8a92Oymb4NQytkFmVd34CxsK9k2jE62ITrs6ivKTLKnMKvMot8nWGmlgYhS1GdQwULf+0UYbDZLO0nMJgF1+et3R+3K8TMwbUs0LVJv5X8XranLeGXTvgprwdkScWfL8kwD2BV+HooARE3JAAbX5tCgvi5AQAe2/DOSH7GRI/sbnyBYmz60UFSZGoIkzXWytZRlmU7VSfHD4iF/TduXsIP40+0py4hZI6EoGWtHpVM5boApboHhHkxLEOGhbeJwOrE7m0OLoG4cA/MU/znQptqYyHJS25XgZ5mCYfJMZOwTVmnneE/suDdCskjiRALvMMRuBLAM04aHqrFn35uwimqkmussCaN1AH2OMgzgZWNq1jPwFFY5HpVrhXIopy1S08AEj8OE4qMQwM7OI7LlMpTbGj0fQpPcJtMb4jAXba+/8H7t7CxH3O2/+cJ39PPYHXIz2G9h0coWB8gxqwjXKZXigxuHhcTcINUxo3RUbrNjRCpuw+q/bO7OdTG9YW2O/atnrVzANQIQVirCnHkHvcEUWqoyyAVK8mWTKI1Uq+6lcZrvjr/km/mqR+R/kEXvqj+NPHbA1hzjAbPLLe78NAYSm6QzEtVzRqjGG3qgi2cZkcwbWpe0TL4a1BJbZG9aOu0FyfrOXSBM5emSx9u9/MSAAQ0JXCZVHWDMsOMgPeyxy5Umm2uzEy0FNVzt4IjTGDtorymKHjUKW9musC/RyFQzVcyOrhApXQW8JoRKPh5sEwS9bJDpM+s8mgHDc7brO9yJKBbLPFM4s2HuqZxwcOYtLeAbXNzsQPDfue7IMSB/eCSksBBcqfLTBu8+vmRoEenK8rSXXfqgdAXWm+MYvb7oLugqHRhRhrM9z0IuGV0ydSU8DQRTPeBukUSR/iLRszagmjCwasucOqEnTQm5Gp/pyJmnglvzf7LUUK2Wb2NyFqo1kXKGo1RgcVCgNcuzRu+tCmXMfcmdvqYRyZzvn2CVZfNTTcOrwRPqeUYgAV5Cse0JjhCim++KYi2Amw6d1lbHvD8/kV2iiSJHupk8Vn1uJKB7BA6RfUNbywwte3LE2UPrshD4KHDWVe3KQM1DAyQv3rQjOcJ49/23U//+Gu9q9cHKvUKrQDdXGdDS7cBkU4pa1oIVqkz5ODIsHoXvsDnEIkzFNprFlMyIjCPNzni2igsQuv6UnWvuU4rQtug=","layer_level":1},{"id":"fce3f19b-7a9b-429c-80a9-d262086cbba6","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Basic Examples","description":"basic-examples","prompt":"Create comprehensive content for Basic Examples focused on fundamental usage patterns of TyxonQ. Explain circuit construction using the chain API in circuit_chain_demo.py, demonstrate compilation workflows in circuit_compiler.py, and illustrate Hamiltonian building techniques in hamiltonian_building.py. Include step-by-step walkthroughs of incremental circuit construction (incremental_twoqubit.py) and data serialization (jsonio.py). Provide clear explanations of core concepts such as circuit chaining, operation sequencing, and IR generation. Highlight common beginner pitfalls and best practices for structuring simple quantum programs. Ensure examples are accessible to users new to quantum computing frameworks while establishing strong foundational knowledge.","parent_id":"be2b789c-6423-4d7d-89dc-b724ac123462","progress_status":"completed","dependent_files":"examples/circuit_chain_demo.py,examples/circuit_compiler.py,examples/hamiltonian_building.py,examples/incremental_twoqubit.py,examples/jsonio.py","gmt_create":"2025-10-10T21:23:23.916303+08:00","gmt_modified":"2025-10-10T21:56:27.036653+08:00","raw_data":"WikiEncrypted:OVW48CGFh2rQaIE/lBBJpPVbIkOJhbmPGBNTdoqNQGLI2WQgY+UYbr8lj0I9BnXlirICCk7TPS7C6LNfCqPcvbRfIY0vPl9lxQKFLK3TyhtUL6zc91LOvPcOf+FjxGvGRQuNYT0thKgEpv5HgBiVGYbLv1AsERPA1pp/lYoLW1OeLJ4/RUTa2ehXYydKJrUe/gEVTj5tDCHi6gMnCRFpuDOnANR1LZKRcEnnbiB3b0myRxPpJGfUmVr1ybn1fmodPMKNXLD3HrtlfjGoUhJDoZpyoewAPS2OXis8Zm30AbIDkTkHGlLQzARSiStQP8N5HlbAcMY+Y2szMwKZ62HbiwBpBGcBKzzgu4/4s5yANWC/JfWtehjZMJ9vR4gzzgs6NW1HF5BjCIh9iP3nelpSWb7jbvmwFCid3j4DZlTHnV713DnMQDjD/pNtMuV5U12UoR0KNvAH2ZFy22UzwE2YIJMlvMAL+klCRfq/yLb6+ykMm9L9Rdl8OMFD5po3opj+RNGXCtR+dOKU4sIUdWn+77HiWRbQsu9Yjwdz4nq90nHh3OgYWo493ZRLTqzBZm9u8WrFysYcMl0XGvCpkhMfgPkdHMiGZ3HfZN72DsyfYn99DVaVo7NwNdMRPxzXaWV1efca9uzF0Ai9kjOa/YZitx60c7LFsVs8uHXiJhv6bPe9ms7Rt088si4LYs6VID6hmvLRf+aQt3x2a9bLYawkSXU2GrLnqOn7pzXqIcVU+UDJfgG0jWw22aOSd3aUogq758/wZ+PLBpijSwhaWvdp6g+IDwwUp6Q8m+GtOTDUmRA0Y/xnvwISKUsGl0WQswvzetv15b1N2w0YDdf99g0y6T6ZE5aP3a0K6LdhXBMt/6oeis/a/vhZdr7F9SLlJzcQq2bV+2NoOswcYR7/QWUh6uFF6SQk0jzVuPUugZdCyN/+aDqHQHof3IYAo+Ysh0DV+YUPGNpK93lnd3mkGbMx3ntxMK7L3sn/YtjmQPSpqgc5/C1V8x9GVdnJSmcE5f4EyNVhLQhoSprUIErA0kVd2hdS01sBPv7qqQaGv6qQthuyt1enKdBvmBJkTiLA10UXjYKoo2AmGTylJiyeX82+t4DKt2C54MdroxFVD9KLwpAXEIeuwmUh1LIbiNWZtWQiQTBspvquu+X3GJx1GMxeoWJx4pVG/iGNa7+F4/sYBv+56LxmEUlD9cSLOl/imorLCTrf7QcTd3R9ijJIr4q6jo1c7bM0f9wX8P95TupncP7C1uGOI0FPvveDA8oBp44N5AcP+br1Z7nYiU8N+d3eAIeW6NoyENSm2dXVQv7Q6iDe7jGBktzF/fJZ40UmWae0pTVTrLxxPM0yl+13Jeap/2Ckw12JYxSnzTqJJZAdIClXHksbdD+1wHecgIdYQqsvRafz8vAcK9TBc929rkd4Ux2o/AyNg0QvhQdKE6MIOcisQngWu+IMxML6QiFl+shOtHKS9PE/tikk9lJ+C2BuR+TyWUD3BwDH1z92+cFux7RvyHx88VSgGS10vjFrlj86FSp1G4ygDQgETy/kF5PfQthJkwBnA33Wfgh/Tl7fdyk=","layer_level":1},{"id":"c5c47ac3-e9e8-4208-af6f-74020789ecf6","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Pulse-Level Control","description":"pulse-control","prompt":"Develop detailed content for Pulse-Level Control focused on low-level quantum hardware manipulation. Explain the Pulse IR design in pulse.py and its integration with the core intermediate representation. Document waveform generation, pulse scheduling, and calibration procedures using pulse_demo.py and pulse_demo_scan.py as practical examples. Describe how pulse-level programs are compiled and executed on TyxonQ hardware via the driver interface. Include configuration parameters for pulse shaping, timing constraints, and hardware-specific limitations. Address use cases such as optimal gate calibration, dynamical decoupling sequences, and custom gate implementation. Provide troubleshooting guidance for pulse compilation errors and timing violations, along with performance tips for minimizing pulse sequence duration.","parent_id":"0a04a277-3d67-4ad3-9572-9adfc478c2fd","progress_status":"completed","dependent_files":"examples/pulse_demo.py,examples/pulse_demo_scan.py,src/tyxonq/core/ir/pulse.py,src/tyxonq/devices/hardware/tyxonq/driver.py","gmt_create":"2025-10-10T21:23:27.645613+08:00","gmt_modified":"2025-10-10T21:58:00.125571+08:00","raw_data":"WikiEncrypted:k6HqU5Hmj11neWjN6pDXpATF8WOtiCsjD2Hdsdug39xTBK402N2wPOsyCVH4gfnB4ut4LDthMsw29LVIHqDrQXF1OCAKaYda/n7kj2cQQrysh+UgT/9Rg+HyhqIrgM4emLX0+sdXxLhFbLiHBHxvfI29EB4n/QJzbQ08+03h1fcXUfKMQznkicdTCmDQ2JASCboNldFo6lq6E3kLgLE+K6OmZYSOEqXVEIcT0Nv7x6bt6tvsCtK8Qk1BfkXMrorIGebODc51ztX0uQcxVYu1m+r2gx62x99jgyWFDwgGWZG+IZboAkaDOReuUyjf3KNrqpDqI//eJQ3oA0Hn6tYGKaSCGNoVvQ8piUnauJnnoBIUBtYQMW3uxjduIqD3UBU8Xtrg90l5CfNKXKo7S6iwNmJl/O4vL/VYEZHbzbNOyN4ozOBbDnwWapKfCdAA0sRzPYbeY6RD7YpnuT2Aq+AyzhtZmhNQ18TsdyzJuEJ77K5521d1NfjbT2oifIZK5llny5Mmwlc4xLBSLAd7ftiyFIZnQaVSj0shKuf7L7hstzO34I3VrCJk8gOK61rSk+ngiyZgs/7cwoMDxOEAHnTgaUL8MWIIEg/0FN1Qr9xwPQv8tHciKYTYSgGMMt651NuXrCFpIeyTw3FbwsfMWEP39CqZ8OgqehzjCghV1BJFy2DUAv0qyA6s6vnxYDcNvekY0igluqPHsXNo0z6zzx0b/7M0jXsxO1PSEWVqA8S0gauJedlKQXTD53k0OP8L29iug98YU5xjCH8qnKB9boL6bXXGVR664m/VS7alnbB46EeQbgC+mVH9o5Vz+siwo0O5EY9P1uTlddupZz42CYrdT3Soy3WDQdbBVGYma906M5LGg25bmPObqyMYoBY24+vqvtyOsFdE9BKSMkOgfJsXZo7p5jAR1ZrCjZltao2WptxTKVoTGMP5s/VQdQPpL0P39wSUQEra++RiGjD4nksGOBO2ZqpoqbNqiDsYFP0LeFHgUI5UihLosaXVFzX4arKX6I+OYtkovfw9IKrbkTKV37+NBUE6FZwUuy47DJ1lOI5ejbnFJnvras055ra3LySwRHT+1ZLlyrz7vBBmGTSqAkIWw+8F7m7OGuM2aClooKmOw6/kUKdG54/XGw7/3vVQGufSQ6nt82PW4QO3IAaRNNrxuedQqzjq3Hu2+LrgUgy89PNnamPigQaBhPsE8dqTcxrGwQoFNY5t0HoUwLwvsj0Ha8Kl9XrHG/9SMr5CtlSRfyFyx2IUJumqjDSQbAPAsgJINFxq7NfaRYeKHC+N62XPb7YjeigauJhctwHIG6vCGgjOp/txQQcwxyL0rKzc50wh8X/kLD2q/DVGnneWjZ9T2BmhoX1qHdItZeOIA2N2HphMVmBc4RjFLLTTR/44vu1JnZG1jjh9uXnY7qtXjnE5PRQRGIM8ZmFGT3fxO+ZbcvdxQfbHpO0Vk6iS0cvh2u2koCLEyNPVOu6jx4MpvCBaS8I/HbfW+/RVDZNNgba3DOj7YpNIF2thmDoxqkJ/97a002iLAmA9nxy8PJABDytl64Y7kygQz0zygezAOhmwje29MnF2errvQwW+A2f9","layer_level":1},{"id":"f522bae8-096a-4271-861f-fc9e8efec81f","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Global Configuration","description":"global-configuration","prompt":"Create comprehensive content for Global Configuration focused on framework-wide settings in config.py. Explain the purpose and usage of PACKAGE_NAME, SUPPORTED_BACKENDS, and default dtype strings (DEFAULT_COMPLEX_DTYPE_STR, DEFAULT_REAL_DTYPE_STR). Document the normalize_backend_name function for mapping aliases like 'cpu', 'gpu', 'torch' to canonical backend names. Describe the VectorizationPolicy and BackendName types for type safety and runtime checks. Include practical examples of configuring the numerics backend and setting global defaults. Address integration with the numerics module and how configuration affects system behavior. Provide troubleshooting guidance for common configuration issues such as invalid backend names or dtype mismatches. Highlight performance implications of vectorization policy settings.","parent_id":"d098b674-d19e-4445-8089-ef411e2aa603","progress_status":"completed","dependent_files":"src/tyxonq/config.py","gmt_create":"2025-10-10T21:23:48.188464+08:00","gmt_modified":"2025-10-10T21:57:47.619206+08:00","raw_data":"WikiEncrypted:QzMXozrdMRTwNbB9vHPY2sTkVP2qTuPhbz3emihv2fBAu427pO70aIDrnWx8LmiF+gQ2KnBYyOO5b4PgsKtfDJKC2HtGccxB68o8d710p8HQZg1/fBmlyGNy7OMfFLt5YeuShDwSOZjLBgGcleVGnJ6fq7M5uS/WAXf9rYwqDvpS94s177+GJs4WyCePKI3cvw76+BAiqcGNIaaKEguGwoZT2snzLQmARNEUvDs5ZuyTrAakpY0zWDdyI15i/7rY26m7YUhA5QOdPHiA6gq5x1DJocoPJwBSmsXVE8RnBtGUpH5jj+4zfCi+IZbCE/wBWfiMm9g8rlaFp59VUm5yFGn5nHCJc68B/W8nqpe8AMolC9py0cgeR12u+obTpsTrR1BXEFS87N/qkk+tKOkUxXTa2m1TyacWbeAr6a2gQGPcmGYgLAdYrC8DCbccMPDEpd764xXGJYShc0BS9g4YJdD1l9K7ajvmekGky+b96y/0CiTul0YW8H24Unft1GvfOhb9I/UHw5MT5VyYxbrriVM4giY62IRE/Jy3PVMm1DV/ngIi3XFX4Z9WLwdoIHcvZGtS0W0r8ELocnNWiRRRuUgQqom61CyeCPIdSoi/yQqjgbKNybCVkOgVONqD3/QzLYRI17lKUlEEY+XJiEgA9A3p0bht/bVlZ2kH83xGvvSNlEUmU1h/+BVXQIWws+eIQ7nztXem4mwd8egejZv+wHvrFBqZ9ls3nmtv3zNNyBosu6WqEH1HKsuXVwIwqE0l8UqsL9m/WsXjxve61HgUP+ri5xYFrol3J4juwzvRGvKumzAQuzpZtK++pp51qVcW5QqeRiDLanL3Fe77DR+5Yg8MGw/WgLWmsLXwCUg07AptFWDoSq8zH3TSiKeZpv76sQsygNndAAOs5FtSmhrcThfJcrFYjHE6v3BUm4EC2IVlmuY7l6C4PiJEMYYD28fXBRuMrN7SEskI8O5f0Xdovxjv+vKuNNpcwyezfcgh8aH33YjfRgmvOR3vR0RcD0TP94hmlBDHqEcgUtMMo278Ssd+kaQUe8H29L0johSHXINQXNVnV9J98XuSbXe4UYbrSpGgL4HZOlpRA4tdl03gVGivFbeZSPOSJh5EQG76FHUN5ftCqYDW13jZL3+ncfImp+yM2MHVqppumbbHwBBEJ5ta3QiUCqPZQFFwGBfyBZJDcpnqSIslCOEqh5rKH31idl3sgQyBmVrt3ylXFJZjhpNTiX8J+Gz9Mlfu6nhStpi9kuzwCWA+iYwBB2ZfV8LmkaSNX3pMcfaocqvawtpKuuv143NZekbs4y4SmP2rA17U9Blc+CAFDzkcFJKo/+c64s+xtYGiBr4jWLfp1gEZEuDh90LBi1XSog4zbg6AWkmvEQngFvG2Hxy+gRjvzGT33N8nGcfHbxKnpa4sSduOclEtny64DR1T+esuTBg+Xj0wRR/c8FvxHKO9kV2EhQct","layer_level":1},{"id":"cc8cafdc-4381-436f-8dff-751098968a48","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Core Module Testing","description":"core-module-testing","prompt":"Develop detailed content for Core Module Testing focused on validating the foundational components of TyxonQ. Explain test strategies for Intermediate Representation (IR) correctness, including circuit construction and pulse-level instructions. Document verification of core operations such as gate application, measurement handling, and Pauli algebra. Cover compiler pipeline validation, including optimization passes like lightcone simplification and measurement rewriting. Detail simulator testing for statevector, matrix product state, and density matrix backends. Include numerics backend integration tests across NumPy, PyTorch, and CuPyNumeric. Provide examples from test_core_ir.py and test_compiler_pipeline.py to illustrate assertion patterns and edge case handling. Address common issues such as IR mutation bugs, numerical precision mismatches, and incorrect gradient computations.","parent_id":"7972cfd4-c320-4a66-ac0f-409aa8b4cb1a","progress_status":"completed","dependent_files":"tests_core_module/test_core_ir.py,tests_core_module/test_core_operations.py,tests_core_module/test_core_types_errors.py,tests_core_module/test_compiler_pipeline.py,tests_core_module/test_devices_simulators_gates.py,tests_core_module/test_numerics_api.py,tests_core_module/test_postprocessing_metrics_io.py","gmt_create":"2025-10-10T21:23:52.769232+08:00","gmt_modified":"2025-10-10T21:58:22.526098+08:00","raw_data":"WikiEncrypted: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","layer_level":1},{"id":"6c8f6250-34f7-4454-9594-366d3852f97d","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Core API","description":"api-reference-core","prompt":"Create API documentation for the Core module of TyxonQ. Document the Circuit and Hamiltonian classes as the primary IR constructs, detailing their methods for circuit construction, operation management, and pulse-level control. Explain the dataclass-based design of the IR system and its role as a system-wide contract. Include comprehensive details on the Chain API pattern implementation, showing how build → compile → execute workflows are constructed. Document error types and type definitions used across the framework. Provide usage examples from examples/ demonstrating circuit creation and manipulation. Address integration with compiler, device, and postprocessing layers.","parent_id":"f53ef1ed-0ee1-49f7-a90c-99d15b936574","progress_status":"completed","dependent_files":"src/tyxonq/core/__init__.py,src/tyxonq/core/ir/circuit.py,src/tyxonq/core/ir/pulse.py,src/tyxonq/core/types.py,src/tyxonq/core/errors.py","gmt_create":"2025-10-10T21:23:57.624564+08:00","gmt_modified":"2025-10-10T21:59:24.437307+08:00","raw_data":"WikiEncrypted:C34GewOyK1SlumqKiPsSg2Mo0XTZ28pUNNx9YsxBB0S6DYtj2mzldyCN8yf413HBfib3re4t8sXDhoB5gw9el5EQmlmDrSlve9/QC9BGczgKmjmxI3fsQvxvMQIga4KDlDzXxfsZOdax/N7U0AwmAX5jq9lbz02aAh1CrxKdAYrweEtp3ya18nG6wG0lgR2lHUoSu/a/iS9d+bxy7WrKEowNA9xC+a78KLXQ787ep/ZU6gENkJwlCZ0gp+focXrIepuvRhXOfdCUhGG1BEdRcdXSQVIChiJin2Sj4PxU8iPUmH+glTmGt2kb0vvnd/kda8gnL7Cjzc4nUY6DMESpdw5HLv+HFroSbVVIBR0AV6a3QZD9FqteXbRdZz7d89UlNW9EC+sCHRWFXpM4IKAeo94fV1ClTNP+I+m/nDKPiTC61TfaqjtoLqEXO/W2syEzQKxEmCFz5OS8WA+EchMyMCUmHn/pNoi1sAKfixFxHMCV0k2d9VN37/WoC58y2l+YjjaxtZmiKYgtIi9UG0kTpNsMQLluyzLV1EOyZmgAdIPTG9F4UA4P1uK6dHahnXetp69vHXe7osGJ5ZMZ/U/NNHZ6AGG6SlNNMeTcmqOWmaYVxXrtbI41piBhy51ux5URwhOo8c/ycLkHgW98E6iQC/+VtIrs1YNBJ8hU1IXzu/InLlbsx/1ODhKkHabt1s5jmkNfNUxRwl9nhNLenRDaEy5JCvHY3PUZ/2LfPfSMchvlEtqttyT94dWW4PABN3yebctQ5wQ/UREax7UbYW8NuHlxiuQZhWPAmNwhHO8wkegkPLdnETe1B6SqTV/t1tHqSXETSjIA2Q1akWBQOnr2MPs1LNrlJoNcPK8erUipzVr4+wrEfxFA4RqrDZ+1G75pTwwoW5PVQ9dceWlQYlFlujNRnPN5Y+pUY4G5v/r7eaK0WaebSHe9mjPBONEkFYtcWeL/Xpw26IB+yRBEhiHI/fr8ujM6aMPlKIraPbfrYjEvHGIN2KteoNK56xLfAlR3RJJwsbJJ7qr4SHqjej+LfvrhsIj+VWbq06RgxE+FOrcPBcPc+/8sA01IvpAx+r7Gd+IgblEh/YlwSYMnbeoXat+/SkQjpgKBWb1OIDmB1SY5goeMpTnXFX4YvKixE9qyL3jL4Ornb/5PlbmeJ/Vw072XuS8OiDkc5wsTA3mlNllfTIrIgfALWW5HqXLRCj/+bOsOVpbNy5ZkZOcm/17zSS3XLoSLoHP9T95kRrZMQASB3VP0/7chaKNrnfen8YJ3x2RLbGwJP+M34ItsAuUdl3w7K+YVZNRL6VB3XuWv301dpffCGs3TBq4S2uQKJMRR7OAIUP0v7ImL7+sXu027wzk0JrCs0TQy0iLW0KM1czKrg0q9AVvWpmEFMwWYb/2WC78TIEfAHYeVzgRB+QH0iNEYYr5nDVztP5BylUDi7ig=","layer_level":1},{"id":"8fc7f87e-cfb1-43e0-a576-b8e3544748da","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Parameter Shift Rule","description":"parameter-shift","prompt":"Develop detailed content for the Parameter Shift Rule implementation in the Compiler Pipeline. Thoroughly explain the ParameterShiftPass class and its execute_plan method, which generates shifted circuit variants for analytical gradient computation. Document how the pass identifies parameterized gates (e.g., 'rz') via the grad_op option and uses generate_shifted_circuits to create plus and minus perturbed circuits. Include concrete examples from compiler.rst showing integration with VQE workflows. Explain the metadata structure stored under circuit.metadata['gradients'] and how downstream execution engines use these circuits to compute gradients via finite differences. Address common issues such as non-shift-differentiable gates and improper parameter binding, and provide solutions like gate decomposition or fallback numerical gradients. Discuss performance considerations when scaling to deep circuits with many parameters.","parent_id":"1a03aa9d-ae93-4749-a247-5aedf18fbeaa","progress_status":"completed","dependent_files":"src/tyxonq/compiler/stages/gradients/parameter_shift_pass.py,src/tyxonq/compiler/gradients/parameter_shift.py,docs-ng/source/next/user/compiler.rst","gmt_create":"2025-10-10T21:24:11.593764+08:00","gmt_modified":"2025-10-10T22:22:42.174903+08:00","raw_data":"WikiEncrypted:XrdctTWVeXLKnAGxKXAgOB7/yFsZxgTCiOvUYjLG23qOPO0wcdwJf4G37Ymana9aB7cZfvTtSGpFHz7iRF1IsW7WKD/K0tzdlTJXOlIYhBp92Y7GfGw3aYgsS6PyW0pbNJLrG/1sFJXcboXyhtnninwdniEz7ypIai30v8hl2ee31MRPKXrrfS9npYJG+bHznSbM43+WvgzBitEMi9mIwLOgmy81V1t6LwT0Za3xE7UzY7QDSGitbLsutmI2L2UTHLa5zivYjVf3QWGMBQZnDKSIlK+tlIgHy0jd9oIq0UXHgX4aX1Z+8AfGrnixFV3ZzEj+AUBmzZhgBKtFMPFd0JNS0GKnfNNTcWOCT1O7ZAcpREwuBzRt40+Mm9ZmmNFsEGjO+Cdltm81KFG28R+neFMoRuQaOjpIESpstS41QyanuHb2DWzUoZAb4Ig4LAu+jhmIx74M7TLSnlcHrhghVWgbqqaVzk9pqiMIUK0Z8fA/AZ5klOohwBKZoQqRYHj+ga2F4Zs1Zd2iMf/2vDcPYNPmh8ZoFTiiFPWVyu/dw3ZLWMmFQvzNpxTpJkpCCvGnTzS4komL8yBkyrh4J8P1ioifMuZ/4huNdS9m5OGxvnP8KfW79OdgUppNa/9CoiG/mDt91anlI1t6riOslAbfxFvFDeGH2gFJ+b7R3rRUq7pKEvVVFfT5F5rDuopFooYhxabbCgcIqPSx04bfF2vNqsqIRoPDT9A5GC+nzV7U2X32fOgsYqdFbN4H+2Ygl48fdrYevbCAEIV5eUff3Cd4ZvUZ3PNooerPD6MFRcanhJXMjUyusIUnwpw2julX+XTY33j4CnLL0G2ovM30X0Rjpsq7OeufUapzT8TVL0nC2lIhRA7NdOEqxwHQInN3xixTnVp6HfqDEyE7ouwHq6YRrkfj4lBsqELRxWKIJANcJoO0JACgJGQW5Om9t8rZCbjmV1u8so1XTODWziBTtyZLH9SJLRB9s0w6P5JOpQLX+RX9mIL3eMp8UL0AKf9uSvSM6vSPw1x4nUHzTvbo7uDRAg62vI67J1Bexy1PAbkec52UnwAnV61kTyg5abEl3h4BGG3wIBE8JUBtjz3Fua7g2bPTIu69QmcCh+s/gDPElSKIRV5O6Y191hgWHuTPUCV5dSIMY5zOUsYruFfFfzpjOB14dUyuqzAFxVNCk/8+1Rn7M9ueU9KLLegR4OAUmXlGR5nJ2Ajpg4s/jKuAEGalVC4jI4H7I5WuE2HIZrna3lT0fah4PiTVDtTfCZfe+rENgI9Fd/IIfusGZLzY1MWHZDtXQOLMUVH0PO34hzKEKulCSxjSOB+iWH5msOCRdOUbrvPx1q2oJoG80VZOm2ZAAIEouGD8M614qqoM18/EgensMvF3bDBQOaR2HKPXrDDstZ2CK3Rli7GSQ4Nc/eTmrqvy2/mHt5Hoof5sOtU4crA8RG1/5qNl8QWb1TlURjCPK2zDF/KS6k67TenV0CuIv5tUIEIfwU7z0E0jkrTFdXNH09QNYifYE83TaOcPkREcOTqPSX/n5uxH86fj+C6dq4dNs7WAJ1cKHpQzYTwg3q3ZIGkAfIQs22sjg462EaIzIG4rvsSyq16c0e3T6TVIBTsUw7XaIWReZeuTS78ncSEyoiFl3DtxILuFVq2u/lKPr4LU+JmNpGcmMCnGOj+aFY3CN5nQ2lAUKLtiaAU0LeoKmRSvmKGnjYVng0o24N2hcLMVQYUep8otTR1M/9PO3KbqxNfmHS+Lqtaog45Wys0=","layer_level":2},{"id":"71ce98b6-c48f-4ba6-8145-443b2a04d8d8","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Native Compiler","description":"native-compiler","prompt":"Develop detailed content for the NativeCompiler implementation within the Backend Compilers component. Explain how NativeCompiler provides a lightweight, dependency-free compilation path optimized for TyxonQ's internal execution ecosystem. Document the default compilation pipeline construction in native_compiler.py, including the automatic insertion of essential normalization passes like 'rewrite/auto_measure' and 'rewrite/gates_transform'. Detail the role of the compile_plan parameter in customizing the optimization workflow and how the scheduler integrates shot planning when required. Describe the output format handling logic, particularly how it delegates to QiskitCompiler for QASM2 and Qiskit outputs when needed. Provide practical examples of invoking NativeCompiler with different optimization levels and basis gate configurations, along with troubleshooting guidance for common issues such as unexpected IR output or failed QASM2 fallbacks.","parent_id":"0338adc6-5527-47df-989a-a79660d3a14e","progress_status":"completed","dependent_files":"src/tyxonq/compiler/compile_engine/native/native_compiler.py,docs-ng/source/next/user/compiler.rst","gmt_create":"2025-10-10T21:24:17.786196+08:00","gmt_modified":"2025-10-10T22:22:49.999037+08:00","raw_data":"WikiEncrypted:usOxbo1+QgnXqLT+QgfUsSj/Dy2g7lpMguWunEncnxuRBw9rHrAY7PeTZT1pVTzhzhXrGHjzdxU6HDn769K/bAZkpjHKlE4c8qHaX4tdP4mJ1BFbC+3IVQldmfDs0BMv5ENsjPa2UVf8nlwmGmLdVWTenN3PS9T6b5cF7duE+c1RCC3m77wY2axbNGpDc9KBt5+Nah8uYp/gnho8K9MBt7gPc6fUJsMCdzBsiRWJKZgHsLl6kmZLv3BZ5mkg3D2aPb0sChUv+g61k1JKiZehDq+xcQryDeL6u6Jr/tXsRI3rdxVhov9WNmN7FohaHXtsBUaegXCpGyRhXve1NJHRK6Hs+f9pzgYEdjtgAZlELAU9bZxzwaxhzVVYCrbKG8QXInJVOljv+4newBUif+WH7ojALioNUdG6uePwAvecCyPGIglqtTn1WEfoliEzpHjp2zj5o1fuiQqY4hUA09gGpB0nQNhFW3OV5irSQpYHzQhcjmorM2ERWoMAlJa4l3OCcakfkq/Zh7CJdWqKNVcgOAM3P09rY0W/h9KXX2iGM4db7ekDXRTv8TGQtQBI8PjvzPhqkeBaAs+mrIqKMjnHBQesrehrq0bxd2Ps8PVz8a/0x84hn308d9L/2gVsbevkzYNuB2Iqy6MYDxeCjRTYGHc6V6Maw9uUTZP+GivKHKMegqPL0VUKOpuPRUZCV8NyP5RfuxcdwXCgWMb6IDIwBTfp2mI9OARxGdBCbJ3LwDJB0Vz4mezhgCrz6GLdYXVQEwuaPXIvHlblQyrvvrpqdZ7omnuFATjUBqu04ploqIhSHI50rsZYf2mdK844eKuQrrIqLKVn9FOh66wdY5/ImbCZNq2gqxKpO/d/pvs+T/7c9ycjF/cOYKTBCqjsc2gb3+9w2i/UkWUEL2Ge0VRqTNFFLdPpXiO9n2PLs3e7B3OflCGT/ONwDpTFioD3q6F+hBZq4goLmXggOX+PuhcQ+NkkEEJ41UK6tXGxPIeQkGBEKP6zMMoLcvZxYQjtl7uFapfjRAhOydVPGTlmgBvyAdZWDavGbcCpzkDH0JSjgiDXU8eoo55STYCXn4hZP4dlCN7vgEG4Ek/fAHX9Sm2RzVnX6rhRvp9MIix2VkaOxBZGwJHz7LcJTfCgc3ucoUiLtkuhiaYxLhjSFn31/aFpMrnXrsPsjN0P8TDk4VqgyKaQvOP/rH6eSNBt/SBKuMwHELnaovEHhZJVaVMGkxHL0rK5q0tF25spMvAEWjlnLURC1gvCcma4Z27Blx4L0cVl1fbUX6x5F5HQBij10cV6oq0dMO8YLzui7sGTCOEXxvVQg/kJumtMJL4s2BJbupWY0JaE3Uuec0r4KiwI4ZwW2WtAGNB+H9bSnUuzM04e1HCMKKWMU1SQ5R/XpxB8A0U4bkd2s8Tt3aPEmxV0N611ROXrQYegk8Zi2iUUXyXeLoxA9iiO82iwz2l7PU/By09TdFT/5uDO1abLua4nirUHO1+6ye1oD5B0yL7FnMArYC/dHEkbUZ27NDd70iKxo1iKFuo+0p/I5M+DD53F3rLkkHuVaBh2dLozciP5h6DxNJcuIN4LeB9EYMZf3GRVu5cUjVbhB9o6TmprzBbkFp3MJNt5NllelqLDlVthcwu5rw5utdVCk31JKu2e04yChYSZBSxy1RxGKRNOTjAg0zWUtmxWG2AiPZ0g0GaGO2ZkqAtpyf9y2YoBFNPLYvck/XgS","layer_level":2},{"id":"681a8f13-d455-457a-ada6-6643d47e67f3","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Measurement Optimization","description":"compiler-rewriting-measurement","prompt":"Develop detailed content for the Measurement Optimization feature within the Rewriting stage. Thoroughly explain the MeasurementRewritePass class and its execute_plan method, focusing on how it groups measurement operations for Hamiltonian expectation value calculations. Document the _group_measurements and _parse_pauli_support helper functions, including their role in wire-based grouping and basis mapping. Provide concrete examples from the codebase showing how measurement grouping improves shot efficiency and enables downstream scheduling. Explain integration with the utils.hamiltonian_grouping module for Pauli-term grouping and describe how metadata like 'measurement_groups' and 'identity_const' are attached to the circuit. Address common issues such as incorrect observable parsing and troubleshooting strategies for measurement grouping failures.","parent_id":"623db65c-51f7-4fb3-bb49-e20dddd2cba5","progress_status":"completed","dependent_files":"src/tyxonq/compiler/stages/rewrite/measurement.py","gmt_create":"2025-10-10T21:24:23.77667+08:00","gmt_modified":"2025-10-10T22:22:56.078271+08:00","raw_data":"WikiEncrypted:r1dbw1ciiG74lYTjPig5UzGVocvUYFvkW29+0JwsPmQA/bZv7X5vIJyfurWvDoIxbz8UctmRHzKKYyldjlRMibaQ5gQRtlE+aLcbUd88AV0EohvzSpDmmJq8oPN2VqLELXZ9C+JEEatRZn1kT87rtqtywNZ38apjgpyaycyacnYSWf9jwzpzbZeuAwMUb4+aEAsn9UC1DaggmDSJd/NvnjsA8IYD74LFKAxRBz8pNv7+XLnHn28adJEW0zjj5vmpqOTBASY0Fn+f5DRzOBJoy0nxFu57V+aByrn/WUjzuxVRPgb2dc73NQpzo7y3sQ3fCVjOHV2Fti27Y3vdC12GUATcZxmwe5eH/mZMh7Zowm/i2ySsGR2ta1RKzbUHD6THlmoRgK0FvzpESxvyNttAUmF5mgimWj8YRjyqbIowVw8EMLAzZyn54rRTW1uvWSHayIMVnEEbB5P5bTDXumK4fKl6LQwbqyo4gqYdYWMi1upkVwVngI0PDc20RZWa2ZwA+V5R+oqraP3x6TDI7CY/vsln6d3536Hu52/kEUUNNFTDPqDxtMamhFk2w94KGpl+cqHRie4x09D8zkc/ZnREJNfBfgQ1ztMWcxNgyMChuvckCFSCpBEltpukx3pQf0QYKZ59In+jrw5N5asIa27gOccTax2k2e48qyTW+6zMUJtEsRMTZH3lY1EEGf6cN5s3UOmaJw+YHGNo+UR/Iqdkgeu7tieifGoscg4c5UpImIm13NMssdYUjQbpG0BCXQLuz9+UO/aYIx6RbqSXn/Keu0EccEHKLDB6+2u2bia92JzUbPgPFNTcX2oiZXhu+fWUuSjjDChjDkdGnNyRy/GmidaWPA9bYs8NxUgaoLyC+i0Px0zyrvgmhZTH+SrqP0a9iI+Wetb3LnGAk9SNpB+kczrraxn/4w2CeOcn3Lg2LZE+oBDrk8br/SDdOH6Kbpid4rNx21ClSXCD+ra0VhnZ87cvvsrac5M09olUgATEL24VqVLgIFLT6LULL8nY6YdHjqqJbiGsStZhp/1RNE39so8LoXa5nP/4MTP386Wvo9W6v+msubcjGgp88qTJmVQ7i6Yx05ylWX1nMYZX0bPLCdux3VtdmmIRLKbourn1hT5x27Nx38fT5Iq2LbeDB0Bebjvd5pg7qOwSoRIPuZ37NNxhg+dunxnP5SByAobJ9wxYiNVgtmiOSjsABASCrQlJG6pTrK0s9uMB54OLtFr4AtyYcKYuuD/fGGGWWek8M3hItONYdfv5CKfGLr4LWbnSv6y5CEsA1PC85YQohIDFBAMCS+5I2XIGF8dD8oqtatVZacsQnJ44+wWphznEHSdKT8vCdcLRHvpv4TBocUXMZpspllub3VTkDh8uPKhJN0p6MtJk1wz9DcaiNpKfSAckkg/tx3fmCwpIgHT5quDr7/pFX8qNQz4BwNx0TVAOV/tZaQHUvwXkwUZIh+c6gM/29VbJBjpnclHaJE60uAzJ+pqMJ0I6rCUMtQxx9ZVBPCC6Vwozj9aMUSaJTlNqS7gNE114WtABGx6Eh4TsqCslJw==","layer_level":2},{"id":"558308bb-a46e-459e-ab50-c56909d20de9","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Simulators","description":"simulators","prompt":"Develop detailed content for the Simulators component of TyxonQ. Explain the unified simulator driver interface and its role in abstracting execution across different simulation backends. Detail each simulator engine: statevector (full Hilbert space), matrix product state (MPS) for efficient representation of low-entanglement circuits, and density matrix for noisy quantum dynamics. Describe how noise channels are integrated into simulations for realistic error modeling. Provide practical examples of configuring and running simulations with different backends, including memory and performance trade-offs. Document the internal data flow from circuit submission to result generation, highlighting numerics backend integration and postprocessing compatibility. Address common issues such as memory exhaustion in statevector simulation, truncation errors in MPS, and performance bottlenecks in density matrix evolution, with guidance on parameter tuning and backend selection based on circuit depth, qubit count, and entanglement structure.","parent_id":"0cd0b4d4-c089-40e1-9589-664bcb6ef57c","progress_status":"completed","dependent_files":"src/tyxonq/devices/simulators/driver.py,src/tyxonq/devices/simulators/statevector/engine.py,src/tyxonq/devices/simulators/matrix_product_state/engine.py,src/tyxonq/devices/simulators/density_matrix/engine.py,src/tyxonq/devices/simulators/noise/channels.py","gmt_create":"2025-10-10T21:24:34.530687+08:00","gmt_modified":"2025-10-10T22:24:03.125904+08:00","raw_data":"WikiEncrypted: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","layer_level":2},{"id":"e948006c-6a9e-4afa-a0bf-dff490882d5e","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Compilation Stages","description":"compiler-stages","prompt":"Develop detailed content for the Compilation Stages of TyxonQ. Thoroughly explain each stage in the compilation pipeline: decomposition (gate decomposition and rotation optimization), rewriting (gate transformation, measurement grouping, and circuit pruning), simplification (lightcone-based circuit reduction), scheduling (shot allocation and execution planning), and gradient processing (parameter shift and quantum natural gradient passes). Document the invocation relationship between stages, their domain models, and how they transform the Intermediate Representation (IR). Include concrete examples from the codebase showing how measurement rewriting optimizes observable grouping and how lightcone simplification reduces circuit depth. Explain integration with device constraints and numerics backend requirements. Address common issues such as non-convergent simplifications or incorrect gradient pass applications, and provide best practices for chaining stages effectively.","parent_id":"24dff1fa-63ae-478c-9b64-1abf59a976c9","progress_status":"completed","dependent_files":"src/tyxonq/compiler/stages/rewrite/measurement.py,src/tyxonq/compiler/stages/simplify/lightcone.py,src/tyxonq/compiler/stages/scheduling/shot_scheduler.py,src/tyxonq/compiler/stages/decompose/rotations.py,src/tyxonq/compiler/stages/gradients/parameter_shift_pass.py,src/tyxonq/compiler/stages/gradients/qng.py,src/tyxonq/compiler/stages/layout/__init__.py,src/tyxonq/compiler/stages/rewrite/auto_measure.py,src/tyxonq/compiler/stages/rewrite/gates_transform.py,src/tyxonq/compiler/stages/rewrite/merge_prune.py,src/tyxonq/compiler/stages/__init__.py","gmt_create":"2025-10-10T21:24:35.552909+08:00","gmt_modified":"2025-10-10T22:24:11.877214+08:00","raw_data":"WikiEncrypted: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","layer_level":2},{"id":"408ab438-3ad3-4721-aeec-9bd022aed485","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"ArrayBackend Protocol","description":"array-backend-protocol","prompt":"Develop detailed content for the ArrayBackend Protocol in TyxonQ. Thoroughly explain the Protocol-based interface design that standardizes array operations across NumPy, PyTorch, and CuPyNumeric backends. Document all required methods including array creation, mathematical operations, linear algebra routines, random number generation, and autodiff integration via requires_grad and detach. Detail optional vectorization support through vmap. Explain how the protocol enables backend-agnostic quantum simulations by abstracting tensor operations. Provide code examples demonstrating protocol compliance and usage in quantum circuit simulation. Address common implementation challenges such as dtype consistency, GPU memory management, and gradient tracking across different frameworks. Include guidance on extending the protocol for additional backends.","parent_id":"8237014b-8913-4e25-86c3-7aac3af21348","progress_status":"completed","dependent_files":"src/tyxonq/numerics/api.py","gmt_create":"2025-10-10T21:24:53.872715+08:00","gmt_modified":"2025-10-10T22:25:12.44894+08:00","raw_data":"WikiEncrypted:MT1u3O30u6zzWxWdrSiKRdSj3WbUU09jri9TmpLv6V/myu21Kl6mB/62UwFHCqko7xIekKXi/1h7kmgM28lSx5Wf4OvTnJoIOmclPpCP5kduU6d5yUGe9VJGKFcdJKSSLpL7iRg6cZzH55qMaqfRQbqa5O1Zm6wpzzvBp5T7RT+jycmtvuP6m8qjs/kyTnbQjqXOAoltWWDEiEfb/MLv/y5AEeAPx2xmx4GAm2EI2XYMASmiglaqRtNugSXEcV+TLTrvQ28EJXRMGBgbUdJt+UE6m0liHFhyIiZ8ra6XMYa+es+lbWe2ONtrWm4sik+KfJx/v+vCdAaravaS+YOTw2CN+NceRjU55KAN5dEUDlKh4idqI2wsdpNMJ+vSpe0FfJNpfG9roHd9iYzGIm6HX2UvaMCKEZXcOYlorNbd03BCuQGp4nFTYMnXA5MpIM/ofxO6aiQ7b/iUPcOGKdlQiOf+PiqIlcGI3bfrxihU+AbmCDuSmq4YDQJV0XpSfGD7E7V0LvfV8uwwrWyJ3lFBr45NIvEsF02nERGjgitvMOPLbvYAptp6+jgEgHDSAA3bg0K9cut33D0whkw+AQ78tCc/CnR+ymdWEK7JLu+5R19NVFAa++wbKPegyXYNhL6pM89EyTmbNu2eft3n2MSs5M+cfXz9aGdKAojubQ6lTkmp7B+76BUSOnINly7a79RG9IvS8l5u/sYTAI6q6wb2DPCllm4PDgzxyPL+tROW5+wGuc8DGaBsAmmBl4qBC6ua6cXzrs15rvMOlLxCSEL8A1+nlvHcwNy78p0wjTo67XE7XPoOw0eoXC3DjTq0S3cnlY7ohfP0Nsxqt7nVgZFo1vWPP7RJZMZAWrJazYC00AcWvVh6XxZ+WwC+LLRlMUc9KsPI2Y8G1/sOdkadG8IC48nXLdd3DDMB6IN45iR3gfeI5/Vn6b4R3R/8P5c/rqU2j/yd7UQVWT6iGkhYmc3psRNU1r6LmFWC5rrZQ7Mtd5hgx15i1LXHMxjSQ8Ecgy1DCN8Hm45YxQ8XVsX5Hm3SRcKcPLY6oNXbrP8j7d50sZzZxLGaGfj4lBOTHfvc8kgJOHGGMKCJJ5XjthIsXVH9Z/+x+MADvSKzzqs1UDejr9cTgDNFp4bH3OjIUYczo3uRk8GnmYGIkupEqggeoXjdiiqTepDc4rREBPRI95i/9VfA4GtXEcvd/lxFC5vXgwQU4zPbRsrON4KZYgDyr7Qj4wcNXQRwCfhoXC+Yet/+BxLXX+uDVkke3BKNbOsJQnwsI69PU0ALSALJu9kHkoWU5HzoFVIiueBoMbeiCas4iZRKXidJz2anQNLOS77g82N/Folsz3LiXPuequRGDIQ1A/yTEzHDA0RKBgAm1AY+qvxo9xMwpjho1qEee+PrSCnUrh3g3+3Jim6AN+7yxOe/oLgvDLaHTyeFrQ94f6ZdBBmwFp5Sz1AnPHdi+GCtwJVzARhRbmbud9pAeNEd6SGoEALDvRCiQEdr4ikle7BlMhg=","layer_level":2},{"id":"55dc198c-7342-4f99-a7e1-148956775108","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Readout Mitigation","description":"postprocessing-readout-mitigation","prompt":"Develop detailed content for readout mitigation with a focus on the ReadoutMit class implementation. Explain the workflow for setting single-qubit calibration matrices using set_single_qubit_cals and how Kronecker product construction enables scalable multi-qubit error correction. Document the _count2vec and _vec2count conversion utilities that transform between bitstring counts and probability vectors. Detail the mitigate_probability method's dual strategies: matrix inversion using SciPy's pseudo-inverse for numerical stability and constrained least-squares optimization via SLSQP solver to enforce physical probability constraints. Include practical examples showing calibration matrix application on real device data, integration with execution pipelines via the execute_fun callback, and handling of edge cases like zero-shot measurements. Address performance considerations in high-qubit systems and numerical stability techniques such as probability clipping and renormalization.","parent_id":"1025635e-2468-4594-8f2b-fb991b09d9fa","progress_status":"completed","dependent_files":"src/tyxonq/postprocessing/readout.py,src/tyxonq/postprocessing/error_mitigation.py,docs-ng/source/next/user/postprocessing.rst","gmt_create":"2025-10-10T21:24:54.836417+08:00","gmt_modified":"2025-10-10T22:25:23.385702+08:00","raw_data":"WikiEncrypted:TP8KP13wWUq5FizrfXDdgozXkegcNViXw+UZJVVMUUMECjVLhiRRcXNc8HpYyOZQS4RKrzsizbp6UGx0QFgaFslnJS8r0mp4AGz9BpW+1QOQZQbQENE8ZC4A/lA/7aqd3x3ZF020LGJF5EJ1WOrdoEJuoUnOf4dm8c+A57yCPvuHZoREej0aLKqXy4s7/oGbfitMmRs1EEMxpQpVqIoPYcSYMV5VFwmIGOtmTh9ObVRXT5bJe5vbPUsVYNjaIIzV1NL8sQZB5dDHhL7AX01NkZTFtWgZU5jXoXaKvAby+QjLNKyz133ATTVbYUAxjYHMRX0kqgvTE7mm/arfIjtDGcMut3nduN9MvI+hqr5wRpWWbV9bFM3uSIHTT5ogpHnC8MPXxCFM0rQamCw682Cy1Dd4R5Dy2sCcUKNyiJrsMuQnGJ4Jo0t1gV9y1l5w0GYu4WZYCeCQXGWWVo0LtI1N/rrw58uwjsO7AC8yD5eOox0+uNjq2rKnX5NQ/BDIvmvAGIKZuQ0JcvGgAZqARl0QfrHTBQ90JtWpRzLjz5LDjMmIu0BD3Q/hcstRGbl4eZ32sIKiAFym+GsI+xqM/FXW9Zhv/fuuKgdB/L3deysBDLVrcMFKc5SfgcXAEB1jfIBp37zYPxxTm5nbaQD8PYe8ZnlIjg8VCTgeuUHvDXDFqpqnoesTp3+sn3QH5hvH2XfZbUDocbW4LPJ3HAJ6MJiRcOVUvloeIP5geeWFXQBriddI/msfWEIuu7mckXbcczLIbFSIBDuG2WY3NcFHdqFSaCGxcoRe0ezmiC1AtTPxkZEfS4YBJC3lhQkAAVTx8dIvfqRts7uUmxiH2utJIQbvO5G0Qu05Rqlcfxa/IBffeTNNfRRDnlyK4aIIeiYLXzpzTSNO2DLdFleuG45T+qhkNYCu2XsGBgpYbM4R61mihCwk3maZijI2imvnFp0X/m2AVDYeJXJO2NF2siAnYTx22TKZn+L2C7PU6Vb3cKqap7pdfs1gB7xQxqzAqAvf/8yIyfA7OITc+IIJMWBkhirYne+9DCWGwMmBJvJ1zRRsc72L6fRKP7ROZ6DrYqQVjsW0xX7Nef/4bRjbAfsOJI7Q6l6ZPyLuOIKneLFgTqF5fokFmHypBY94L9XUwCOrD6zz2y46iE/15HszItJLJGVtvPvR3KWf1B2FU08TuzEG+8Apj4dVtp3OZC7/nz8y17wQm5r281jAc+u9BvZGdJEQ72kkjFhHgFJrhVX6DJPrXd8t3uI6p1AXRtj167fiMTtsUiPZIJmcm4SX8mlz0v18jxz1BcH3G4iUVGYVKySB058rO1nvxD46Ep2fzZP8uHWS6Y9yAbaynDqPuk28bk+EGk5jvNMwufFeOGJV4zup3BfiXC4IMSkeXQFp8ESx4SsfTGW7sHRFYfSMOJPQPhEMg09mFomc2usSkXow7dxquaav67T9SdECsviOqWmfqZJLhia+zzGE9LIYrPHZw5bcuSCTbgXljVt2YzarjkuISo1nSLqxwxzO0ALGzMOJaCaV4VMN3mYfS2ZQ5e7mrUW1BjWGxwOurZrmY2OaIK7zzx+OXFmmBE4FN4Zv8QxWw6JDgt2bYPQ8F8Fbpm4f1jCSqEZftmYQ+lkrExSoAR6P3nYLHAXciEbvEu9s8sv2WdZT+Hx9RQwvmWvca0fXM0Z8LErjVOPfZzeAWS+dQIpRdENxSaiwuWbC7bIsIuByUpfgWnKvJ9NbGsnM/JQKvRnvMnpIs48CPsaZ89tgvqrX0LNkJwvQm3iwtIIpwxjsLmJV6VPzYr1ru8GwQW8PjlRI59JICaeVc9WWlUF157ERLI8=","layer_level":2},{"id":"8f054d9d-5117-4000-8298-a61ec1acd85d","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"UCCSD Algorithm","description":"uccsd-algorithm","prompt":"Develop detailed content for the UCCSD (Unitary Coupled Cluster with Single and Double excitations) algorithm. Explain its theoretical foundation in quantum chemistry, including the role of single and double excitation operators in approximating the exact wavefunction. Document the implementation details such as initialization via PySCF, active space selection, and amplitude initialization using MP2 or CCSD methods. Describe the screening and sorting of two-body excitations based on amplitude thresholds and energy ordering. Include practical examples from cloud_uccsd_hea_demo.py showing molecule construction, UCCSD instantiation, and energy evaluation. Detail configuration parameters like init_method, active_space, mo_coeff, pick_ex2, sort_ex2, and epsilon. Explain the inheritance relationship with the base UCC class and how UCCSD extends it. Cover runtime options (device vs numeric), convergence criteria, and validation against FCI and HF references. Provide guidance on troubleshooting common issues such as slow convergence or orbital symmetry breaking.","parent_id":"edf523ec-869a-43b8-8588-fa64de51197e","progress_status":"completed","dependent_files":"src/tyxonq/applications/chem/algorithms/uccsd.py","gmt_create":"2025-10-10T21:25:13.852275+08:00","gmt_modified":"2025-10-10T22:25:34.806554+08:00","raw_data":"WikiEncrypted:3DVPiLqw/Tb+pJKfzjhN6qSWO4tPxe90FejFXWcsncZbXa/7CJsDxxpv4Sjoxp7muU8f8vu3CynIaohwmtZnXKjtodq3n1V+dmQteOQ1AzMelsiLQGOu1d3Q0udVVvKbrZ8mftvwNsWFD+vETEjyg95Mldr6gBfhwgJQl8NsEDX/dOUTCxbWy+1jHQbM0keOWk6szr7YssI3SxT3tVYDeTD5sz3CljbJM6uwi85mSFcbLdQW+3JAOXDKIsKjJcGXCkCdSPzzi/pUgoupGQtTdTNEsvb8yK6eG4BPqR+SAs3P2HubFOh2NzdgWxIyJI4k/NIYE2OM7v84Y4udkodjLXdZ7dSc9W5fTkrsshZKUHKS39oB07SjDgu+edSqtdpF/nLCjpolThd0MvoNXC7MnA5+MXshCQzDPwRu1cKP8ddLzM2hwkoN6ybolJTuTDHn+iJpgKvryphkvFPCKjPx0fjVnYJyKSCQa4HLm/SQUbZHxAJz8n9drxmRi3jc2ADWDOSsvWGGqeiPJvyB7v5mS0viH4EViF0KxtN0x8Wy4OD4ou51TqQhosUfAS5ZAJvD2QfMSu54cBIXmtZvveMdaB+YlxOpYkX4572W0uMmLq7HLuMqsHFkAm9ay9Wr05riKPhIxHCwKTGFiiIKswuv0s4kOULJ/RRNhrOa3IQNJCxHVjpOfbWmsl7m/3d8VgQATBfdnUXN5czikEDuzsAme7vRa833TdO53LuioufUZk2P3LDCM4j2VfNKKyFAZCYXd73uB+P95iOCBABpehRTtxg0tJC1Ai7NgBpRNT043IVFDEb93NW0SIWTaB2/wiYbhcPev1ULGc5Q3CGOXUznIBQqZSoHHth0MlZd4Y3W2NLmSNuBKYyZVAiqaXym4pvQqV3IniCJkp9Dn2CnzQxlWbGULgjci65amop64OHHMYLnQmDRh2kefrNa1EbPwug5Bbg/nXvQkt4lo3E/nxKbG7oQ36N8yeWVGhrxtN60QclUAfZQbT68d3c401fXhoWtMRLPz+oRocRwrT6CNd/1zvo0Wxn6CBxhko0/Tuxr9w2Dr0i/k5wJCLb/AdPi2aLbB77wTDqj9pIwbg8NUJjIxln6s+IeuNEt8Recqat2IoX5SH3BvNjvr7sGpKT4ESbCVlwhAnvx6vB5S2D0UK2WFuBFPdmceokiO2lV7aGbNYbFFpEMJb/rzzxYDtl7SX8FZuPspT8Np7ARA4Gm4Cd69wKmq4LH9wqoMqtoHo3dXMM80DPV8AidweYVyBmEKv0fPLXQYQazlypn2W+uV6VJw7I7mm6k+zahdO5x789AsWXwVVcUiZnQPkiBeId11cq8G+v15FNeAqNqUQpm6agCVyeFlmvdAD7pakH5BjUEyxPoBzZxmgPWB89ZGL7kTGO48ISyhv5qIo5JipxfuNZeqwfMLzIJEaAvQW/Ru2yHxQUid5P68mb13ylU/tDBrutmglGCnzeS8nkPQIH2vD+7+79+Q81OY5cHDxBYzem3yZ52s/zyqu52Pv8lSzRJOVhbUlKumgVtrFm/RaFZPCaN7D6ao226QgT2C+pni0bsTZKv+Q6fe+LJrcfBXzTEftZ6OvChafg1xz2s824LSl4Q9fgp6GtJtYfhcUmbYR94tplI4wlNTa0XmFv24kqJICkS6NXDYw0JbxpeRG195vT3N7fjzeplhkWo5AQFAoNMP4tRPSFEhQg9PfPWEPNf4M9fSCQZlloGJCmzGy3mytNGj+xe+uUnWuaDGviRY44LIek4jPWocGJAysmcU61nq8aoJU1fIZerdPn6mnUC5+rZyA==","layer_level":2},{"id":"e222d9e8-97cf-4e27-a5df-222d0d987fa1","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"UCCSD and HEA Algorithm Examples","description":"uccsd-hea-examples","prompt":"Develop detailed content for UCCSD and HEA algorithm implementations in cloud_uccsd_hea_demo.py. Explain the configuration and execution of Unitary Coupled Cluster (UCCSD) and Hardware-Efficient Ansatz (HEA) methods for molecular energy calculations. Document the integration with cloud-based quantum devices, circuit compilation workflows, and convergence behavior of both ansätze. Provide side-by-side comparison of accuracy, circuit depth, and optimization challenges. Include code examples demonstrating molecule specification, ansatz selection, and result interpretation. Address common pitfalls in chemical accuracy assessment and strategies for parameter initialization.","parent_id":"7bdf7164-b7bb-4e90-9d5d-2f730dff0972","progress_status":"completed","dependent_files":"examples/cloud_uccsd_hea_demo.py","gmt_create":"2025-10-10T21:25:24.005287+08:00","gmt_modified":"2025-10-10T22:27:15.09498+08:00","raw_data":"WikiEncrypted:3DVPiLqw/Tb+pJKfzjhN6nk/11itslBYYSjrFpZcIKQXPyCnAoOwLrBuc41MgJJ0/i9jThZ44/jkGrV40AmIg3DxW18Sstyft5uNy+vuCNKgLkZ1yoVZnzrp5epLzOkm+KEKByLripmNI1s4PdJMNnW6iquo2EwztpD1RnInyl7f1IYSjSSpTUafQxpG9TY0xV8hWmKD/9/Fvgh4BWzQC0acn+u7Xs7PNHtFl7nHfxmok4ppsIIXiFMJsSpfn8Pa1Ed3JiJMiS0xjAxfbXg1FrKmtjpufCN/YvJe8UXSY78RO6xuxRJDw8msOoXoIgmh3q3UHfTjdQvs93E3jXdj23DMsvDylCjiTxXXCJKQx6Va0id8fljVHuECRBeukQMKQRZEFGb9Vb+03+SHiFYWoDEuJfo/rPRkjSEA2mD8q8SL3FcQKe66z5TphDUS3D1dig4R7PfizrlyGkOAcHAoXZAn/iBYgfQCRoYDOg/oTEtwEE9tRhQ7gXiYvupRut3yEOZNx2JCRUgwM/Tfl3/dWcFUA8WsHoLnQgzpcD3O/2u3LXTLCEuB7Iuska1o5jUGQboJHkPR48JcdvyOcV3NvcPlMAK7zRyUMv92Ag96ZQbhDXq+kwPu+cUjS7BQ8SricsCJOqB5GpoEfuWFYoRq9a7T4eBif8ajOBOMv2eWZZNSf972PKm499HUmH+vM8ocI3dwOxrPNpt8Ei6sV5AKw2EyEkbpiPHCLmKKQPXaBpeKldlAFCwkfSG1EpEvyULPn+kowY4sV5+pAFksT+VZ2ccyJsAL1IPVP0Uuwbb9pz1mut/1MN1l9hww3gSrkYJ+qe4NPlu6V34ow1fvT0lQ6u5klZsyDq8JwjwCEQ7GPRWA4bcIDWEH1nfBUT4NNlP6OvVzPYzWEvf8Ax0CCxXLzKp34/pZi78kq5i2/hxjrseENOWjoQxre8yScgUwxn37BEz6hxBkNGkEhk8oRqvAJVnUSsCA6kc45c4XbOB8EJ/RjbHSC2v4EkFSqqd17WSxjvo/qaZo+QaN1Hra+t66F3+OVBU0/HLNLLSNuQP8h4/WWKDWAUFx8p4DfVFvm6WXf/on3e09xC1ONPYISLDEW3lLzGbezP2JS1LzsKbTcfsMWnOcQqG6evPjVFtiR27Y36Fl/xwY5OxHQ9TbBMpz9wPH7kXUd3hYLlioJcehWO/4EfzJo5El1HJBxAQwLtQCy+Z2dQ4i6GD/65XyewmfYyBewMh7LDHvMNofxcMEOX13lFv47Z1eg96kevTi9Sm38iMfA+/F8mopKfYLhVw9PSB/UcPQ2sn1KbsjHTvMzIw=","layer_level":2},{"id":"8da2b236-1373-499d-a4ad-35b11c0d9286","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"HEA Device Runtime","description":"hea-device-runtime","prompt":"Develop detailed content for the HEADeviceRuntime class that enables variational quantum algorithms on quantum devices. Explain how it implements the hardware-efficient ansatz (HEA) with RY-only or custom circuit templates for quantum chemistry simulations. Document the energy() method that computes expectation values using grouped Pauli measurements and shot-based execution on simulators or real hardware. Describe the energy_and_grad() method that calculates gradients via parameter-shift rule with π/2 shifts, batching all circuit variants in a single device submission for efficiency. Detail the internal grouping cache and measurement prefix optimization that minimizes redundant circuit compilation. Include examples showing initialization with molecule-derived Hamiltonians and execution on statevector or MPS simulators. Explain configuration options for provider, device, shots, noise models, and postprocessing. Address performance considerations when scaling to deeper circuits and larger qubit counts. Provide guidance on debugging measurement grouping issues and optimizing shot allocation across Hamiltonian terms.","parent_id":"21884915-2785-4d06-874b-5407f53d00b2","progress_status":"completed","dependent_files":"src/tyxonq/applications/chem/runtimes/hea_device_runtime.py","gmt_create":"2025-10-10T21:25:30.565045+08:00","gmt_modified":"2025-10-10T22:26:30.890261+08:00","raw_data":"WikiEncrypted:CskFJSJQGyfARSd77Otz4UWPELT/BRyppJLNGGloVJI229iXGEyW8o9CoywZRkzftq2aHhHUIL78i09lUWrn47P3RTte/MMtDYgDqt4qRX7i+0wokrpQX4RNcCr6vUZQPEVtnpnNhQSS9VqjFuNwoCdoA2gDzyuBxD2S0+LmXfbxd2dMuZgI3sjkU1vzbhVnuQRB7LQhXZl8fM+T2CGocqaYyEl4A3ilMPoB9lv6LLMBdu996uEv/vwzkZketomwUOZbwkOTUhpJ/rxO5pIcMfBnSzBaALaeVD4GslwfTCdQ3wXxTCNHr2dd0jEOcMJ5Ht1esKvM5UlBzkhABXzgpFR184fiZdDEEef+vLCZbp4omyy+KNtmTC/0bt/gPPOMUpxrQVOMmqoduKaDUAp2+YElPom+14Scz+0m2IGPzunvIIq8NSgPOzdPsnu+4cw7LF/bxoFXRSWCzKgen54+4mBPzPDi5Lqy1Jd0s40Rj38evlmEmUSY21zbwEoa4jIW2/KFJ9QQmllb7msjZyVlRe7+VhJVcbsL++duz0Zbr5nAzjKTStos4nTBtymcOIFIlK2AQpCxnC3EXMJZtzGW7utWDvUdLbd8MEv17WZqXu4OvsvC08DipBHdlqdMub55yHjlOw/H4XLJHqvWSE3o3ykhohhDew/PR3iWV/jGNTA6zu9rAnYm2Q+Sez0RNNWThLgJY78cWANouvK73w1a/xAMfvVBY2SGo3WnLifvH/nmMCLjKY5zQ+bD76IukiLV0FzT7TRx3DpGWMHIOhS8hVpnbHo73hL0uaeNu3TylFecBPrNX2/54ErbAwndHg61etukgXm48HRr+VuguszWPOcd9R1dWILmjefcEQAiiPdRKasMgCYga/jZfSC26nIiVmnOdXOlNF9AOa9k5N/VactUChIEub342ERJELtxRn6Oiie/r8Yw1g05LxaL5tA+/9CJ4j0JevnvgN0e6qUSHtktz2Sq8TtPo9Qvjc1+RnIMQX+jDHksu0fQDCSsJPaRGSdUE30UFCPXlVZt9o5E2vRqWk30HAK/xB7IdUb5XE9psNqKRIbGWa/46xRLVlrNIfaanoAc1BjiyZOeti/rSiu086bA/e/qX3p64fgtx2swTA7Z6asz85YpdI+S/Nh+SLcWYxmr6pYka3nr7biDp/tMtLh89orfdtX5+1YLm1pZabPbbfr3hoZIVL6W704IMzw5lyFA6+NOfIbdLxDNwjqW+LP0cWX4xERKsO0Q/XQBmY8Yt0hqrZHMEE23lCzE5pmoPehy/PH1gDTpdufjQZvOun0mOviLNrrQCljMAVEjkrb2/KwdoRWexI1y5DiLPWmf2WduriB/4AB8d7udVa3yMXeZTpa0AcGLE3tJK1lMNMiD1XRXPT4cFcYfNVbfjAKvmj63mxTKIYGi8Ew1F9XUT0VVIHg7MMHuqcxkwYrPvVBHHFjUMBZ+n6FltaytD3YJjJ1MzRCwOs3kaEStcKqNdL+sZFS36q5rsM7HVJKgruuf+F6qdPr3tIIKg3GfUEkE/RO538PfpZfgoJJLz8kQs4hmYkRDhJpSgbVZmr3hSE0lfotcOrdXgBd9z5ir5FEkOcDKCwIfIBZtwVYDORlCFGYgWWJO/d5n+KRqLh9eFZhvK7/vYZMd3WIPWWbQSLaL53ECl8MmA8+kUE6gYYcaO6JlvBESA/4cjOvaphvufengfnxLV1F7wpnA9mFiyQJTpzeRjDI/zcEJGLNiJXOthHdGbu2RDXM0817QyaewYhwhwFKv8JSTqoC6qTIOYkxP+8zpAWmenw/+4sX8JtaiXL1wWOcJUItmtSH3gREE61XXoDTVxuh4OI6u075hEePoILg9qa7DwTHCBo0222anixXnI5zJzQvdHV2guE/mFeNu8tQLm0C4MVt6Kztn","layer_level":2},{"id":"56894733-43cc-4b83-a6f0-b73a5caf8a90","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"High-Performance Simulations","description":"high-performance-simulations","prompt":"Develop detailed content for High-Performance Simulations focusing on JIT compilation and vectorized execution strategies. Explain how hea_scan_jit_acc.py demonstrates accelerated parameter scanning for HEA circuits using JIT, and how pytorch_scan_jit_acc.py integrates PyTorch with JIT for hybrid workflows. Document noisy_sampling_jit.py for performance-critical noisy circuit sampling. Cover vectorized operations in matprod_vmap.py and randomness handling in vmap_randomness.py. Include implementation patterns for maximizing computational throughput, reducing compilation overhead, and leveraging functional programming constructs (vmap, scan) for quantum simulations. Provide performance benchmarks, optimization tips, and integration guidance with accelerator backends.","parent_id":"24f839b8-80ff-4231-a0d2-bb943e93ce61","progress_status":"completed","dependent_files":"examples-ng/hea_scan_jit_acc.py,examples-ng/pytorch_scan_jit_acc.py,examples-ng/noisy_sampling_jit.py,examples-ng/matprod_vmap.py,examples-ng/vmap_randomness.py","gmt_create":"2025-10-10T21:25:43.522745+08:00","gmt_modified":"2025-10-10T22:26:56.21426+08:00","raw_data":"WikiEncrypted:SQyeI1tMN9st6cltWqcQtCmlzLvCo1amdd4Z3u7JtWWJlMSHXQBwfSjNCMF/mBRzwh3AALKEainWgDOwI+ErAmRonyOROO1TFwrEhnHOmb+b8ulHJuJX/T1IyNtvyWeEuOWqJOgVL5DglWI8M9iGSfwYIx+P1VmbRuVdILW1jeq/R/aGRa7bBFFVYP1eOqz5NHZsDtJySrp2YjXr6RjXyR8lYESJbzvZed+X/MFWWXM7S+bi9YXdO9ANTKkNjUtp89XhSsrikkxMgaE99J3mC+FDv4CltFE0yrpJD0tlkRpOpqYajhmHyGlv6+I/hIpNIAKWYJvtJt42K82G74tCCDZkzZbQ1dZHq/7/gX8Hhx0K759d3iKa4X93CWzFEOJJnDBrgBwXkmYFaRgZJ1svmJxY8mPHDVbeTe3gcAdp01uGjhV0S/90yPATDIkZeJXmHr7htUG0uadeZNiT6j7dRlnkmwMrHL4PAbI5pRtZPQgO1GWnKdJSicAK/V2gHEYSl8tpu3LxAzEFzsYbvRAKoM3xBWN9JXX0x7MFvfswDaN8gAbuZwPghs54qSvhJLojxMAumVQflGurh33iywySe5t91aI0VKDfgtwjnVoeVSik2+XTpxwrJpViiXzhi/VO3voMZUiWfNNGe9ASMslkEARHM9k8RI02T+sAVoEbEByiTCvf34LgKsMEhC6R1+vJ4kMmmWmk7AWbQ4WURYLudeF+0ZZrmFVLENjW4bzhQstGB9rloOVKINoS1bglJKft3ImYwfevEmg08wVTrKbi/cepsffkvhKzhPDi68IMv6z90i7cfR/FqFl00HmjovKG+zlD8dMnEOxnhE7IR0e6r4Cq6bKSuNbPJkJz7lQH3cZk/Lk93b4R4hyiv+CthRXTxpWtcK92xLL8ZWL65Sd0Ka5ObM7OmA9jIPAhLjTb3JU9WYI+zL/ZRKihgw/Z4NmII0miWSNZTt3WlioFeikId9nKh0CcLJxuOlVDHKFp/J+/150opY1ld9gFF/VW+N9lKk7GSUtSNb99GaVoNiQ000SKYi/wEcoIA1hXm8gYC1IKSA/W5t1uOl2IWNmqvR/mnk9D4x+I3+kL8UV436bOsxgQe8JoDEOAF//pOG5BDJaKF0YhE30lkuKW9j7mY8o5zgpkqEylLgL0KVFWtfl9U+xm7Nod/wbtzf237jGXQ8LjvkKh5u8oS/UVIqC5bCrt65hs/hfyvJIDMS+AmN6/M/W9AAS5bYiyA1aTn/ojdhzXQnZZZHk4gpTIQ44I6izychweuVXp4hmMm/52nAbz9kx9AF8JikJoo8Hw7P4qcv3/OZa875k/RBQ/j8w/ymn4+9LjlJ3ySdf/JYeuShVk2ClSIq+/htVnYVsDWBWW6aW/ywfrBwqI7CoD1oY5tFhaHwYfmYIG/rWoV9yTUXujSNH2nSq+kYEoRbzomxfireWIFZw/6QTnbFA2WZ7S5AIRJU7YDuOb8+DpzEFIEFDKTvO8WtnD86UBEpuVq6Ee4+7bi/CHDbjqU5g5XZSyPV2xWWA0bgLtKwReabWRdBHxuP3mV9VhoQtQowxJLlX3vN5VyL1EBuNokuoKjK+J8rTJ","layer_level":2},{"id":"69c81c3e-5f0a-44a6-b5df-5e96b452ed22","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Readout Error Mitigation","description":"readout-error-mitigation","prompt":"Develop detailed content for Readout Error Mitigation, focusing on the implementation and application of readout error correction techniques in TyxonQ. Explain the construction and use of per-qubit calibration matrices, the inversion and least-squares mitigation methods, and the integration of mitigation within the chainable circuit execution workflow. Provide practical examples from readout_mitigation.py demonstrating synthetic noise injection and correction on a Bell circuit. Document the role of the ReadoutMit class, the apply_readout_mitigation method, and backend interoperability with NumPy and PyTorch. Include guidance on configuring mitigation via both numeric and device-based execution paths, and discuss accuracy trade-offs and numerical stability considerations.","parent_id":"5b5d6df6-131f-417f-9e77-eea9ca79ac70","progress_status":"completed","dependent_files":"examples/readout_mitigation.py,src/tyxonq/postprocessing/readout.py,examples-ng/noise_calibration.py","gmt_create":"2025-10-10T21:26:00.190147+08:00","gmt_modified":"2025-10-10T22:27:34.758409+08:00","raw_data":"WikiEncrypted:YCVdSYvNUzxIsXWJNM8a0h91ltIG2PubnxmN9oroLzivghfb/64od0tM46ghXHvuD/+iO0zvufHAzmNYXoIZdC1mQDoyuNUdkgoGG12znO8yqkLaDz3i3NOFNNUi7HWv38wQeUDR8qSetU72CzQeh1xkWccy0u4cjLQEAnaVwBsFo0ZvbgMKO1IHgI6B9oYRhwnpbPFIfMPp6pxxLghs4xbRbq0a2znrYKWTzLF1Zo5vB9wIIPrCa9p6ode6q1M2EQ8q3EtQQ5u71zhzoonMbQcEZXg9q3Q8n6baOVoaHMbTBdMu2DB1DD2H7myKW6IcoBVYdPJI5KA8tNbYcWQWL2Xdng2OcJYYoZi2j/KeonpA2g3Z4eiHbupszH8b2wkmXhDhF+CPyGWiCigojm2Z2ACA4fnJ/BZHJEqF1q0YJR6xh3WXIRzfwelAM8/IqJI8mxLHhPbeFXTbUVyB4gRXAsfxr2RwoFpk30nOPnz3EqS3qyFE59514h7UJXDIiTFbwrV60YMNTFVPZEw6aEefJzaI/n+5q6+AzBnu1ansGqgCXCa7vpVeUbsIC7QbPMOWa5Em41mBGOkQF7ClWJtTHeQABS29c033g0wRWW/TL1dJiGOMn15ckBm8YGjvJfjuuBIlOrNM8dhmHX01mJdhN73LinDN/wylpIYNTBBDussGAAwk0hprVh8I1nYc01BAr6l0xNIwABL/rU4fnB2Hqn3vaIhlGoRMBmTKxhHE08RR+PgQaZeo3o0E79JcPwOfzKVFXacvKyMYUFkdyFuyD1AwAGEx7igXlDZSHVSrH7tAa/hlc0NIIlCnaUGE6T8xKdH/36PQ1WpF1+E9ThsHK3a++r4oF69ICgpJNfiyaSx71hY1qPPmbuAktQd6n4OiJRce9jmfaLhNwb8QrN8eaSwiL5FtsBVlnUZQMszgu0yUYgfByi8Slvsp6K6oUGB8PeLu0SBcIEQODtkzh9bSQ8IUlfAec42n8mw0VdsVG3taG+FXlBVhLwCGekWvdrHTvay87B5T4lu1qJTTEyg6iD+u++s4ykeY2SmbA19kjQWRicwVDesNi0HBNkNeN6+lMHzA43p4vAEeSPlztAd2EJblyXTKRjSr59qToSGIQboxQ3e/Le8Kk2TR152j7ObzLzZt6CZFkIz5mjrlD7cfPN92nnKYXGdhfXF3YtLZMnFwISTH2YBnK1WH2LzxstEZCqkPrgQoeMCPBCHPF0u9nOAAUCjB8JkADtkBPsfcufrb2J03crug+385dT1QQGu1ud4dL7i07QFDPLM2Af9cbWYZI8Kw9IDfDp4R1JJxoApGdrqWpJ7KGz08dMYA4b1RyTSI3CPcm109+gnHcoU/n/bO/RxhdE09WXPyr66jRi6TrgY5NJORzcmn8Oj0eVwbav4dMB6Nsl25OyWE70gUIkH/9OCtmGlU+9OSXZP6kTk04cEjPR7WLTfyZGI2iKmy3wYu2btdp/VMRGk2lO20LhiKHdw3tLgkNdz6mg5m/SE=","layer_level":2},{"id":"16498fa8-9146-4dab-8293-52bc16016348","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Autograd vs Counts-Based Differentiation","description":"autograd-vs-counts","prompt":"Develop detailed content for the autograd_vs_counts.py example, which demonstrates the comparison between exact autograd-based differentiation using PyTorch and sampling-based estimation via counts. Explain the implementation of the ZZ expectation value computation using both paths: Path A (numeric backend with statevector simulation and automatic differentiation) and Path B (chain API with circuit execution and postprocessing of measurement counts). Highlight the trade-offs in accuracy, performance, and differentiability between the two approaches. Include code walkthroughs of the build_counts_circuit, exp_zz_from_counts, path_counts, and path_autograd functions. Discuss use cases where each method excels, such as gradient-based optimization requiring autograd versus hardware-limited scenarios relying on counts. Address numerical stability, shot noise effects, and backend configuration for gradient computation.","parent_id":"5d091cd5-87db-40a8-b6f3-190eacdf7e76","progress_status":"completed","dependent_files":"examples/autograd_vs_counts.py","gmt_create":"2025-10-10T21:26:08.350781+08:00","gmt_modified":"2025-10-10T22:28:35.979959+08:00","raw_data":"WikiEncrypted:E1g6JoQ/+tldgiURjRtLnfOzzab3a4i3Is5AxdDyXpyDTguJIKQqvBToe0IKbOcufs5JGby5meXzTDzjcgqaD1PHcEM5u79wwDBWimT6qw8bi9MhsmIQOvEhzXK+gfU/sOceyPEy/icC+8CFFON5q/x4epZ4nkuzHaKBxioULsYnzFUjOeDW8BkOdYsGfPgpKm0bAG/4+KoGTU2Q3Sdge+xEgdnUT5/rYXM/GRmVEYkFwbz67jDJTYgmZTgouEPOMPF9/40vDTj+fSSr5xOoEm5HMD9DzzDE776Gp+7OiygQau1dkWVyPkR7ouRSS+mZ2nydNjjvdudQOc2qKvHfRQ6ogqnXJBXbDAlurMJzUtj31+2mL6d48WyM2r3RMj4seMfXsUCjTCEY8R8j9mJJx4wVf7EYokkugfHkSniaPkQG/53ZnBKFuslLJbmVD+xl5DdlRxJDOlhwiWwn//rSshtIa1mTt4/XJMdBRAlOomQk6J0mzELF6JtY/DKTKUt988ICNPtFwpaz2JElsMcgrJF4VyQUl63QmA3GzfM6Mvm8QBKibHD9jloJRcsd9NmTSdWkpTKPW+415vBxIl3Ju7CURelQegB5TeNsU0LmUvpYUk3HAAAEHh9z3SIQsDX8QVUUFKSoO+CSGvv0g2SztGc0Urnfanv7Pp3eRTZ1Ys9QwP7EbgXEPmCJy9J/rhToQAtE+sC/zyTZbJ7RcADy7u+QDclpHIYAXjzOWlcFRuMljnyKavzTnhShJSulNcfJWU06nRBIwBM1eKF1RRTrJpePH2eJvOmFXLftiZp64THoKXOq5EP/dbLj/WM30wXuaHNW1S+j7rowjrM6fTaOGMowDbeL7O+LXPTUQ1J9ihsgAY4LPJ841XmrTKT6PHK1Tn3WAde6B46/5xvjJwrYMRWZkepcdk1S56vqGUQnp5GRyxV4D8hkL0LxZm2AUpMNQ4xtxybjlFUNnstUjWHEbr2bAW9Wrhd8TaRC7kG1mYPz5MdzVompzIGSl/gRViJ7erJouNF6wGGSzo9ujX48soMFItb7cFwl2dryNJm8CJ37ME90vHFodu3lwpL4mjtNsViSXFXEquOH3UbMpW4fSp+SvKu6vBZWyrXBfSMPt/93FJirgKXPqkGDiLqfu6VsCRkf9tuEKPkfyy/GTQazHBiWHkeWkhCJzHjsWTDD5EqHwXjpqf+w2B+whFXH2m9feXYYM62pxjrC5w8We8o8YbuvnYXLIM0xIF4jbV13vI+AcLHy0Y+m3BuJuecMugTK/vJT4CBcz8BDh4GclUkv3xCozDkTU6+7Kk/wODJfCB3gayXArwKQAO8DfMoBwZtPJFdP40UyEdgBjmulhV+WUFX6dj18QpyeJhzC2sfDwqV8HV5VuZtsnHPA66E0HvpgGS69ZO6tky+v/rjUdYg1P2prflAdpvB1V7MphC24vzcB+mXSCzXGNdi+/3jikwyxNVPyTUfkF4JMfjTQmRrb4HaHZV7Ijrz8P6NFiOXyYkzzC+4DCIvf9TgiSXsg3p+eLulDWiBuxPqXBvCPc1GR/pLbAgD3/gEFHyGWLWqxmbmuf9/iE4EkmrcJ+z8GCsR1Z+SHriGznSA6+EMNPPuhLA==","layer_level":2},{"id":"53e3dcc4-a5f4-4102-a2c2-55a3187171b4","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Intermediate Representation Testing","description":"ir-testing","prompt":"Develop detailed content for Intermediate Representation (IR) Testing focused on validating the structural integrity and behavioral correctness of TyxonQ's core IR system. Explain test methodologies for circuit construction, mutation, and instruction serialization, with emphasis on dataclass-based IR immutability and editing patterns. Document verification of pulse-level IR components and their integration with circuit objects. Include examples from test_core_ir.py and test_pulse_ir.py to illustrate assertion strategies for operation ordering, qubit mapping, and metadata preservation. Address common issues such as incorrect IR mutation side effects, pulse-circuit synchronization bugs, and visualization fidelity. Provide guidance on extending IR tests for custom operations and debugging IR transformation pipelines.","parent_id":"cc8cafdc-4381-436f-8dff-751098968a48","progress_status":"completed","dependent_files":"tests_core_module/test_core_ir.py,tests_core_module/test_core_ir_editing.py,tests_core_module/test_core_ir_extras.py,tests_core_module/test_core_ir_instructions.py,tests_core_module/test_pulse_ir.py,tests_core_module/test_visualization_ir.py","gmt_create":"2025-10-10T21:26:16.547183+08:00","gmt_modified":"2025-10-10T22:29:00.25248+08:00","raw_data":"WikiEncrypted:IEJgPSkSwOTCPtzq2ZLPK8gEbp8WvGinDVjvMO3sMrGdbP3l3EJ9brBJleCyt68zK86g3lqaUhE1RCHH9bSwKrDNSFOwlRnkM788U9t1sTeMUBZofBtKjdrAbIl5h1QkVsAudASBvLQY154HCmZYsDOvIBDte7IJE3NwTHnSfsV79AAl3A2Qw1XCQzIwF3oTevmDOBKzPdBROBZ4rNuV3xKoEBix1Wmoi/NYl4KAofvqX4ri4ZDt0F1bhfS6CHAQBdSE25j5hoht3KsFyBdpUsNlbU6b322DKSyiUMME43r8PIQzO9683G51HVKV/Xuruhm9K9WZLa8qiwFUi9DCRX0gyQgHgMDgaImcYIltUtPTjOGDTKnH5npbATI7EYoCDvQaWc8G3YozHpaOe3qWG23LL1mJmr41oRVstgQDhB5aKi/1CvLzJQGi/wvTEnYr4s+VNi75OhcP7NsFu3hYmROCDxhVhccCDJ4nHZ4XKfOAXKJ6w0mK/SGcdfKtLUOxdlBZXx3uEiHF6Rzt7LJR2kHXPWBLo7fSLtL2MXrATgiLyhwrZyEmN8Ia3VDlfNmGKExgZepxJnwG+0JRUFLHnvcS7yajsA+/4AqKDuElf2Z90N3aw1hbH6/Iu/8CQgNPrCScZre3bJkn/PCKuz2eycux9AYSLspTrBdYJMCFeuOaWQjVbmpPy+MVhprVF9+8MYHsZENuvrtQusuUcZFq9wF2iFRXt9Wyd7eJtCZCEthlzRDTTAqowcTXlTlSHu+vhUnUDY4Wazon7MUVZG8wBr/T7DKdvpKtqO4IDYUhOuNAhdHJcp8YEiJprA5d1xdxvbN20LiBzqq3E9eIt56WG5T6ZO07IsXtRKS8RkzCSjh2SVEDr+d75633gd7wjmH/SpbY+ATovFL2kZ4b3sBx2IKKpWaBI1PfPicL5gZrY4nO3qO84+X9cIsHUBwTywSzHezcMRfAcL+Yb+W6Pvu3kj5rBuEosZ60Bk25fXUMOSDbVKYcQ8FEhVzaecDZUIdsNghckkfw9KML2DBmzacqqAFMvf/XvSgRVTyoRVW4T973AO0ebuh2wX2XPREPpLDVArzgBxNoK5IaXMvjSTzKCPm7fmPfVV4QvOpFVFRmkP8Vu71BP1YlRvJFjqZ1IgjJPCV7Sjl1h+R6NVP6E2QJkkv0q7dTL4nUoJ1qI501g5lUeB0Flv0xqA08bWuR0YZ5dqQJvnN1A5a5YZD8SgUzza82uLEchrsDvoDqRI9WIaglxrY4/ZeDjk0Am/jyzGhc//eTFauxWSL7A9Q6afxkvwiLWs0BPl18CRkTI7rEPsBngECd7jDGZqpQJaXlpfSXwkEUJlM+QKPQa5+tAyu3ljDO0Sl1dr24+0N2g+8iUS4P8PczdnEQK91+8OdaT+W7pP0bCG6SiP5IA99PTHWFmFfVMCOqLavu8Gm6YfwxRU0Gu9CEatqXQQdKNNk1Jg1EkbnUCTtsy3rHBTZX9FUI5+uPkdGh4ZbodhRGpV0Eyxz79dbOa04hqs/FUfk+1Y3jumqz5exjNYtURxNDz8la5Ta5rEOIEmkZHCu1JOOtObu5d7wehYwBcAaEgW0IHyOx/hQj9Fgt5Y2OT6im1Gh820y2V5M6s6tBaFpqmSV3eqgzRXTUeYRtH66tDwtEON1ElMQPjXYJqw0WBAM90Fdv95REKOPYUYscKOUW7Ii0imR8H++vMsi9Q6fEXxIuSWKklmiA+6tkNY7pdFIbBPcB5Q==","layer_level":2},{"id":"f7db03dc-e925-441d-9288-36b26bb491d0","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Basic Circuit Validation","description":"basic-circuit-validation","prompt":"Develop detailed content for Basic Circuit Validation focused on verifying fundamental circuit construction and compilation workflows. Explain how test_example_circuit_chain_demo.py validates the chain API pattern for circuit building, ensuring correct operation sequencing and IR integrity. Document assertion strategies in test_example_incremental_twoqubit.py for gate application and circuit modification. Cover compilation correctness checks in test_example_circuit_compiler.py, including backend roundtrip validation and instruction preservation. Use concrete examples to demonstrate expected circuit structure, operation counts, and metadata handling. Address common issues such as incorrect qubit indexing, broken method chaining, and compilation artifacts.","parent_id":"66b4fb87-da4d-4649-9598-2ad8db90abc1","progress_status":"completed","dependent_files":"tests_examples/test_example_circuit_chain_demo.py,tests_examples/test_example_circuit_compiler.py,tests_examples/test_example_incremental_twoqubit.py","gmt_create":"2025-10-10T21:26:23.666333+08:00","gmt_modified":"2025-10-10T22:28:30.366056+08:00","raw_data":"WikiEncrypted:OVW48CGFh2rQaIE/lBBJpB3vSgg9l9O5WiPN88H90nz6b94fyRsadtZ1lPhOzLNhiV4a/Kyg0JzGs6Flxxzd/66DalKg0jzi8g8JLkT86I1GnJvmLu2Bu2SCdP83tWYzYNfoChOADQjtIz1cW1wxVdZ10VY3zZ66yNE4sfj7nJ3/XuMcgUvtXNc4OQpZ479NWFcPyeTh4de+fmd6pdrZw5+4ngYDjZWZx99uBifs53cjViHQJ+kXJ1p9R2bDmPOcGmQQkJ6K3ZU0cpuqg99SzS2nRcR95wI6KrZJadGvGI8FTbxp4P6MO/RnkR/WWdrc6/tQMSmQdxs01vuJMq6i9oYIyj7B1MTnBWF8bcqMF+3OrZtDvXQSs4d76cq5sEEonBqv56CZnrbYdX6N4FpLkDWLiVXOLBlTNs+WtMAru9q3neal+VbuUqS+ATcs+N73bhKbewKVCnEPTS8J1Urw5MtKQ3efj+344oGQjkjUKiZlDF+355VifulG6J4dr1AiuGeqIH/K1atsjOehj06kVmhBSXz6Qei64p2njGMZILZXTjXq63MFK8AipCjcNjCG4gUOCvvzqFy8FAsOx5aBTZhIJAkQJa9cd0gaVgWBsfSm1FSZYs6pfEZ8L7nZbqd/vWFutwdd1fRhj2v+awKCybXjooaVTk1ROclsGxx26USxTTRblTK8k6yjCmOp+CeI9nA/5K1Knk5uTwPsW1Thovbtd84ZaH89JiqhnVqKiq7FD/1Y7G6WaHcuRF0+y79wPo67mrkCgGBNY1s8GBVX8LYIyQA/swjnV5fT0FLxsXeIA3V3IUIUHG6ARrHM7jZ4S49+xJ8GE5B7ZKz/gcFr3fBSOmXFDlJiot1gF95RaU2GDhmjQy+4BANsiSieEG6zOsE8E48Xa1aoUKjIYMt7Fc1JK2c9iUK6oDgSJQ/2S7s1sk1mUItHCWsCoIJvdJRVzhGaS2AckY/6LI0VodRSxtaqsQBG5wN4Phi0RItRaLa0/QlnQDQhx7WrCuP+B1O05RNVs5DD1oduqk5IVbdBTct+wh7HWifxBpc6Z565H3715Z/tWPh89MDhAoW9QYH9b5q9PTYQYM3ucaWgKokVhIT24V8w0jAthH76gCMLJndQy397B049kBov8f2zv7lsfYhESMAsKlrzvY47wJXK6Q61j1PB/LCmtsdUbLi61DCQ+rA1PB64mJlAMafGOTSVTdybwM3r8zoCgk8NWdhe4kVdDofayZ8s7BWRckE8K/c8Nkk4J9am+CUFU7mN5kXtC0XCxv4zEbRXbkPhbV3mCGnRMyYCI7vqulEQbNIGPKkjoi5h/aYKSOJIc2VLUgh2Lf8M5k0p/EYcGe4FvBuT1Y1VMED6hyvgJeHnoQiqvJWnrtX1gazyxoNvy93pa/sipcuPrp6sIjaFhbK6lcQWSXpMDagJTGU4Ojf7zHYb0qm1qS8eR737L6Vx6OO/Vv2Usm5FGi/1HcGgWlfim85apWobB8yUf3g9zIXE4uJxZ4SUpSvjwKdpb04MF8gH3KkVsPHAoknEXhBuVnmjrZDqaQ==","layer_level":2},{"id":"42a54b63-7530-4e4e-abc0-d5696e50a24c","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"UCC Family Algorithm Testing","description":"ucc-family-testing","prompt":"Develop detailed content for UCC Family Algorithm Testing focused on validating Unitary Coupled Cluster implementations. Explain smoke tests in test_uccsd_device_smoke.py that verify end-to-end execution from molecular input to energy convergence on quantum devices. Document test_ucc_device_runtime_smoke.py to demonstrate compatibility between UCC algorithms and both device-based and numeric runtimes. Cover proper Hamiltonian construction, fermion-to-qubit mapping via chem_libs, and parameterized circuit generation. Include examples of expected failure modes such as non-convergent optimizers or incorrect excitation operators. Address configuration requirements for backend selection, shot settings, and gradient computation. Highlight integration points with the compiler pipeline and postprocessing error mitigation.","parent_id":"f4e8439e-a568-49e3-82d4-e512b2d06446","progress_status":"completed","dependent_files":"tests_applications_chem/test_uccsd_device_smoke.py,tests_applications_chem/test_ucc_device_runtime_smoke.py","gmt_create":"2025-10-10T21:26:24.530351+08:00","gmt_modified":"2025-10-10T22:29:33.396874+08:00","raw_data":"WikiEncrypted:58L44RkG1+soOHKx1CUd179hIEnVzcIvCizHM/KOO2ppT8pqdHk85sF/gtfpC4A/uZmqwWCAHjb/JTWr26gDK/coE0VTiyMnfJEjmYanf5bwybaIjGJgpcMyX8mBR2twWRNlfUFUhI1hvKjDGxmv++ObL3zWdMSBCb3A60gmPloyTn03DyDxUXruOs4SH8CdzJEDrYCdkVXOLMPlv7z0mOAemeyIp6xjHGXb1+UekoOb2sLgbZp6z+YA4mnxNsaypnvBDIAOipgddrY4rFC0umNaC36+ySYUhsA+JC9oISE0v4eq3VJMJ76k6RhyBLfccnQq2tIxIZEgcUpaVRc2arsOnRHb1Rt+k7SAevIPdifX1LPzVPwB349MaWvZmHMgLTH68HfaI+1ZYomgmsrMcN+7VuIvXZl+26s6f/wrijT/SsnskwGy57EWe05FJmj+1mVWmGxz32bH1wBpjy+Qzuuxjms0u9Rog7v2ENGdeyudH0Dy1shevwYoD5xH4WhdA6IeXKPp3kDACbviWM1GWaK3l3xcEoZeWkm0o5xch3nz7GvbZ3OVIobbJmcrlLdX8M0qeJ/ePoeQaH0s4C9C5S23zDdMxKltyozwFEmI7ivYsSBvUxF6GtKlO4LDA4UQi1EQzjsdvaEJyWbI7k+NtVIn4hSBvfMQO9KcZ6AetXmNn8o7AYpUIvY3NwggegylRfyn++4GgH09Vx7KrXuZeUwy2Wrgkxu25TPxm/wpx6wQHoRwAGwommXN92SBg4xj7Bw676I2SXhG6LUpOVuOBw+c4baXO5qZPqtRWlo9pGG4z6dhncMvXcQ+jTDDgEwvzEyGebSQnX/IpbPFK/ySkvRcegoSy4JmI0o0XIHl2gNJEtMRhR7E1ciCQiy2kXXl46Jp8DtNaJJYkVEiJ/XuiJD0fCYUQVKK7T/7e9W3w5q1hNp+yTmF/8d2x4LBMKDD6LAL3KehW6B729zLOjRp1iQ/4+ZJsmN6raoyZVANZbJQB9NzJYsKdB8+rqUI1OqHxMWCIKJ4VZIGOYHOI/cE5rXrGjq5OkbkJdBIBawu38+oxXi/ugjYoyAmHrGXFjjV/3CM/2o06m46XlZyqfuLMRkGBsLnY24pRl81s+Tvm3z0dTEG+2w1OkIOeEJDuN4wJBl1bIviTnawUjoQvOVe7DXA5MrxQOKdkr/MpI780cME+jNbt/6saFHYMS9/KAuMB6hOE9vZYDDm/nsdh9qFlL9w5WU4kG9u5ws1OJe4Qkh+kaWvaGdZAAcB0+2aUtPBhRKpA6zeadcaCQl9aWOaBdPXmM5wEIXsF40DewBpqpXqCniktbquCf7Gl308ShgXQMLpl7GYJaTIrF6s78Z3mifJBQD+z/veNxuzE8tWekvwIbTB+ms7XN2rUg3sJP78jb+t8VUvjBxs+JgPrjyDbu2q11gBDtRU1TR5nmZOCYF2QINmVUH3RSzcNQziuf/a9kNymgoZowKrmvz70WdbWqNuVBRiku96K9FAUZvEc3imd26o0+OOJpA9IKZHTl82jnIlHmjiYOrjYFAwg2ZBUndE0lg+v8f5QOPtxhZ6+OfX7+gaRlbThjnHOrd25W4i","layer_level":2},{"id":"66f9f4c6-043b-481c-8e37-b60febe1e2a9","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Molecule and Hamiltonian Validation","description":"molecule-hamiltonian-validation","prompt":"Develop detailed content for Molecule and Hamiltonian Validation focused on ensuring correct construction of quantum chemistry models. Explain validation procedures for molecule object creation, including atomic coordinates, basis sets, charge, and spin specifications. Document testing of Hamiltonian generation from molecular inputs, covering both sparse and MPO representations, with examples from test_hamiltonian.py. Include verification of PySCF integration and SCF convergence checks via test_server_chem_compute.py. Address common issues such as invalid molecular geometries, failed basis set parsing, and incorrect fermion-to-qubit mappings. Provide code examples demonstrating proper input formatting and error handling patterns for malformed molecular data.","parent_id":"240da10d-b9a5-4dc1-9e43-c75cd2e4853d","progress_status":"completed","dependent_files":"tests_mol_valid/test_molecule.py,tests_mol_valid/test_hamiltonian.py,tests_mol_valid/test_mol_construct.py,tests_mol_valid/test_server_chem_compute.py","gmt_create":"2025-10-10T21:26:37.043454+08:00","gmt_modified":"2025-10-10T22:30:00.698946+08:00","raw_data":"WikiEncrypted:56newAY65O/xr6fhbsvIX/3Bs6nJcnbYUNW59L1DcednqKYOzlKQlTwB/U2qnPrDD2BLJ22/MWOsQElTOA1F7+PtPogr+r7hFlfMqNdDz0rOuL1iILF4bHdDTVhvW7NTMObz356eQP5lVqjMg/HZ6lwoNtzCVlWYOexyUfXCQtVA8YkltwUOMqjS1HmD3Omnf9c8G8vgL6/efUwP55c9b7S8AI3kPMOXMcZbm5slLZYvPODT2CxRjnBVjvifHFhNy14w7zv06CXrfc/70P3B4cpKv21igRUAJLTxIXCrAzOURAA2OYnITtP6LDssGveOu9upZlUzBuUfsXK+eDb3sGBA09tMjwgnSRZnmCARvUhbgRPON/FGy7Yj3WcrC7BhLEH9yFEfzkpmfnZeWsCaKtT3a09aYik++6a/GVZc/WIeVPEo3CQVbsKnZSuW5MUb3Y05KuRIo7ib2+xrFEUEwozyOpRcWQAFJGWRFjF2Td1e8BO+MZkTvaoDiKvbmhzQYK+JotXDxzDSXja2Zoi9uBvbTPFARFSIESBJkytasK2tpp+6Bh+D1j13WgJvM23JrZoS0dM73hjbBPIDNvqTaZFk2BvoOMClwioAusGN9Er7oVPrFbAewj/1M3VqGiOtypTpsGMWDA6UBDQa/L6q8butct9t31mcu31JxYUflyHIOilcNXxk99d8HAWFQnxQ0tGPESFNV5j0XbFtxV0ukORlq7bN8SFBz1X2ScMJPe2GyGJFbVjU3dlrM9Lcj4OvpvNSWF8vFR7lhK/K8JaFDU7RW6i7nXs8vyTssHMn2kO/bWsY2SfjBHYeq9g8J++fiybciBx5C1nsfxxJN4JQpxWe830gzwylOv9ociysvJpcKiA8dJRJo+nW8paH8y8FuCDEJP/m+QTih1+/p/vC1kmdkOmVxXEPPnMePCbW4deluus4EE/EMdYK4y4SuFaRlE7sfuzDwVk/NaIgW2bxrFStdvKY45hS1UPBorqMSgwUBbwWBq9x2wCfkx0Gz6dSyP230RllIMImkUQgE3zrZhaUCcU2q82kWgSqoD3iiLzED1wVaeZJ1PQzD/PPbQnaVwE6n8ljkhHMsKKciZAQvLq3IHWMnhvl84LuumvDfo6+ZWQnX2LFeNXK441ncOCbS96EfFE/V3cZqLU2PNp1S/n7adm2mXKb4PhX8KQgbCzwAB3avpuUEKaioWuH529SsXUWyYrvw8FL+ZVMECouC2h1HUUPjn3ZVAPKuEk4EUQsD+D1eLqv8EThMfYuObeNnEcyWexE+v3EHzYSCsOSlybGZAQycF1gzMywT5KIQeQW4NlBi2KkexALYf/QGgOD3xgkzsxDm66xWX/fpyoeRAwbq6R11VJVLt82X6PJ1emuk5z4mKOlL7riuQ2HftvxjcVxMs0HMBl263i7N36fPoJyihuN6h/SJQW65sO2Z910G8Kgy8hrtoqBkCiY7bN8r9aeq3EE5Mccok+00ZxQ5UDf6UPy9y1I1V3CpssaoVasLowQr/heAL5+Cj4NIsrTlaGYAFEaiIHRZSmVF8R9eVFs6bXgDoa8I36ceIHARZjoqjWDtqfc63WrwZKoLfcC5mzpvphUo6V0I2lbo7P2YyBj+2/5jT8z2JPj93HSGcV2EAKhDQnaauSgAmS86x8KVPBf7V0d/lx258kukSDtOA==","layer_level":2},{"id":"6de1b768-8382-4ad9-94f2-6d78190b69fd","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Circuit IR","description":"api-reference-core-circuit","prompt":"Create comprehensive API documentation for the Circuit class in TyxonQ's core IR system. Explain its role as the primary intermediate representation for quantum circuits, detailing all attributes including num_qubits, ops, metadata, and instructions. Document the dataclass-based design and structural validation via __post_init__. Cover chainable configuration methods such as device(), postprocessing(), and compile(), explaining how they enable the build → compile → execute workflow. Detail all circuit construction helpers (h, rx, cx, measure_z, etc.) and their in-place mutation behavior. Describe analysis utilities like gate_count(), gate_summary(), count_flop(), and get_circuit_summary(). Explain JSON serialization methods to_json_obj() and to_json_str(), and provider adapters like to_openqasm(). Document execution methods run(), submit_task(), and result handling with postprocessing integration. Include usage examples from examples/ demonstrating circuit creation, manipulation, and execution. Address integration with compiler, device, and postprocessing layers, and explain error conditions and validation rules.","parent_id":"6c8f6250-34f7-4454-9594-366d3852f97d","progress_status":"completed","dependent_files":"src/tyxonq/core/ir/circuit.py,src/tyxonq/core/ir/__init__.py","gmt_create":"2025-10-10T21:26:42.090369+08:00","gmt_modified":"2025-10-10T22:30:06.15797+08:00","raw_data":"WikiEncrypted:C34GewOyK1SlumqKiPsSgyxPbzbrv57Z+bAIz3tLX3LnKSG6ek9kx+LdsajF7jftFaW+qVzO9Htl7gRdcttNeQvW3LqbSwf3ld7Ce4fstKLl90yZzc92oO3r+kKeZNOJYdCScuO/3L+x1PEsLqc1Bltnx6RKq1FscF7AW4aS9nNHvV29uhFdeVdt4B65YQ4i1R6s1zYzlSUbXKc10Ry0tc9d552jAS530rLGiIXHLY42W/FH2w0Wm6jJkS5gmPZB/56/yLeF+NyOipPXcFEVX9+HKmk6iq9ASuI0SGYTJX6dRvPZfsBRIbENIis59Nqw/VNlJk24I4+eKAPgv8U2LWdeaAFvHHGPbuU7XxQGz0xy3Mtdxg9UyHBkCFNv5EBH3Gg7ZvIOmGU9dBU36e6JKzH3pWOqZ3DPsZMbHgu/fbD3pph7r8SA/5cIb4wSFSRlhnRBdZ7YpztJ81XcA2CgnJL5G7iKTNkeJz1/lIumGFw46I9IrFMjl7cdOdfNw+I6h9GRHZD/GaUMp5Jsm+PRhNTzZKxV+y5tO6iA+rZiL3sanklYTUTQQHvel8JQ0bx9/1C4XuPWbQqLD9a8QihuTq0tQX+0ts/z+TBEBCZ/i0/SAbScTBa+9DV5+bkD8iClgAqTFKFSOlKy/t9V6NCeTx/e+zD29UxRNZ3EgPiIVu3JwtbLXoP2JLC3sACSf0jmi1l9RVzmIHjWbb4bUglV8EWE9BKM4YSTndWGvvyk6I6yDOWDZkjCpyl0DlUh8Lf3ZxsP81dR1dhq6Dxg7AgcOYA22KJjpbefFBxLEzweYGq4WM6i5UANuPi1GUGY+ejd0anA/THw0D69zXN5z8PwaB3aGGwkQshG+WfZ+z3f1Yg2livSf8uWJ+1QipJNYJ8V+oyushF0leXMj8lv+bxlvxjF0e6po/AW6COzR+ZMiNsOGJuo49RO7bE3zYPWUfaFdPjwT+wATdHRF5RbuHFK3RyeyxCIMC6yYncIV3nl0mbB3LHQgyM4rC+sz8xXXk6UYqHRhYuV/dPdwuHnIC9VKWrEanvwZbaUrO6bSn5hT0I8gEGtx0FR2j6/t1u7z3YXRikJwbPNKzDV4xSkvqhLQ72TOuSpMcxwnXoO/TqtV0K9oMYD707iiqeFgspZpdMPvIHMRijir+80vHDf2rE02cztczYo4/dw7MAuDqkXStt5Enhj0juFOuh0Th5A5CGmwS++4DJtbJb8HWF5yFFFc24Yzon09GirGmJMMyXTpYZ3USSdENMS80z/bn+xEhZKqknHmz5vHPGs+P1DtbgTREXyeeIMG1ubnEfA+j+3/w6OjjtMFdL+YUyswJWG1Z3ud8BgakUW0/j5FUF6IkF5LHYa90qjPrJ2uvAhUJbXVuic0jYSGP2HQf2cQruPEeLhQ9BJK98eLVL9+65h3IcQViFbd/fqkBSYTdcX8SchNGo3x82uFuthQVHqYPbnhCmGlchx8vHS2DezMDXTr8iSqB//QrKtF1b9byOPLJWcUkueUX7kBGgs6gx36su1rGtDVn74ZX8N4efTBjdasAadhE8S0gJGY03p+7dT7ZmDn4yWcMjso1UsEJtjtuUOC/LyIPWReoywqPbE2tc9NxpEziCrl3nV0cOETkYC+lnbVTO/cOWT1zf+5hxYPKmwvBfJ2oteTTJBsXqjcgeA9KCUG82fy+q7j8NnqRIFv4I6zH1dD3SnI/4ImZb5QJd2XQLQiXCZTgu6cr5YbYQZs5q0Jnxgi5wNx2DbkpcU+LzYVQRUytOVA7+afhD1Qe/20VRciEPQ2R4HKlzmuU2kpHOJmlGmTHM+SGasr7f6C33H2bvt+ACo/ojtXEqLcp8WQaE/b0oroXlys9itb471g7rwxWrpC35NId+sku3RcWWPQ8ZjqYrhDzvexR3dV6rBE5FlI8WkwUYCc+mTwZWdQbkZi0aI/YIVPHFMTuEug2ki2xs=","layer_level":2},{"id":"80d82a6f-12e2-47f1-8284-d5d5c2086b88","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Native Compiler","description":"compiler-api-native","prompt":"Create API documentation for the NativeCompiler class in TyxonQ's compiler module. Detail the compile method's parameters including circuit, compile_plan, device_rule, and options. Explain how the native compilation pipeline orchestrates stages such as decomposition, gradient computation, layout, rewriting, scheduling, and simplification. Document the integration with Pass protocol implementations and the execution flow through the compilation stages. Provide examples from examples/ showing native compiler usage with different optimization passes. Include configuration options, error handling, and performance considerations for the native backend.","parent_id":"53dddf26-4ae6-4200-b5af-45fca433de77","progress_status":"completed","dependent_files":"src/tyxonq/compiler/compile_engine/native/native_compiler.py,src/tyxonq/compiler/api.py,src/tyxonq/compiler/stages/__init__.py","gmt_create":"2025-10-10T21:26:49.778471+08:00","gmt_modified":"2025-10-10T22:30:47.564326+08:00","raw_data":"WikiEncrypted:r1dbw1ciiG74lYTjPig5U3CvgS8B1T3xdJxVBfM8YRbjXn0dnX6KVg8E0PwASGsGCA6GFGrVRINVNXuQghTcw8mFAUtoB4d79PYz5nNVc+oBfXJDhrjE/hfTquK9LIa9WRd+wzPaxdsyUJsC27XUSwk3ak/axV/UH37grwqh/jSTguq6hC3zyYDtJOGCrUUIdM3Tff6yg6CnFZJCc/sTDPOVoTg6OAPd+d7JIgsHjdJHALD12eZTPtEv15j6I8GRBpLey56oD6LqJox+kfQcKiv/IqZ6lvqZe43mB9YqGrwo7ZLlacaC3CVcJl8vXp/0jdSMXU8LighDwusNV7dG9MFE9cGNYqFHqhYjEU1eu6i91Xzo9xEkhz98O1DQkwkVAAmKejbYOn4rrtE2HXIblSnR2ZypCWi+KtHEy+xfdzNwcyu6aUZ7rZ9x4+CzqQWM+vh+w85ocKIVm/jIAMFD74NOdLcXAxk5f9/qN2KvpieKj1yDZeOrypZ2nQGWc2/LADvkdLSMynRN0BxcKuzke6YpKM4vH6Z3kitzDuqUyYRXWEeS05UrHJXHyNxSaMlEcaXIOSsjSyuFKFYlJu2yNN5jm5S1qkbV5M3DpHluJt6eb16UZB4gpamtUfA3QmR93LxUpnIO8hYOzKTsGsCWgP9BgXzZwpyiIEYTlRm/WHz8wNnkYOYj5JY+HVqVRnh9YoYS69uYV4oK+F5EGFWXpGKQ0FvXIBwHjle87dYhggmoRvpcYd5/CV2MCy7aZJfx1v6ISBR+q1MHuqHT8CkxfJ+7yPlYmWeAd6i+r0cnoutVQKHhb0GjcuYbezHcqifiYJwPBgtJlQeoXpontouOxgSS9gjnR8MX2NSdnUcrR7S90sqmZ7mTv1tynwyFMZCURcCf1C9w4RU3t9lCOg/RIy2kNIWsBnznzlVzMBDdBWzr/wuGCNBELhgc9udjhivozw49wjX+UL4t4Ipq1jeft3wzj2kzRvVHB9ketAADguPUf3yls0bLq9g86yUnRY3xzKgI92w2OH+7N1f2sRaZg1uTYYakFR42Xas3nkszeBPBIJcfin/AkE7v9u44rwW++n5LqHcYQqRgZntkGT4yvQEf2YJD3L8KoXs53jOVRjOs7qOlkMZlOSMFTMmjhtlKWyYesBzi5dijpWxOUeEHuS4Vf9CJmNUynExVVgaWaMUQPaEU7j563JqjrBECz9WO+mDE6hAGYXg5pknxSaDe/RPeNMZh6LxHz0dmNcTH6a3uYDy0JK716RRX+o8xRWU5J+1bJ4a0BixZAQgflEMQ54whg/toP1okYOje8KwOl8ynSUWjmpOTlqBEs+ds3i5TG9JtucgMwANT83RS1D2S2y7LR7i3ccf9o+vQyeBTz3k9bO2un+jKAT5igEKQ+E2PIH3pt4sapzIodYdoOvU41/hf3NabvqmxOqtNNFNOh3Q=","layer_level":2},{"id":"c0aaeb49-cf8e-4379-951b-94612e4ef81f","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Simulators","description":"api-reference-devices-simulators","prompt":"Create API documentation for the simulator implementations in TyxonQ. Detail the Statevector, Matrix Product State (MPS), and Density Matrix simulators, including their respective engine implementations and use cases. Document the noise channels module for modeling realistic quantum noise. Explain the base simulator driver interface and execution workflow. Include configuration parameters for simulation accuracy, truncation (for MPS), and noise model selection. Provide examples from the examples/ directory demonstrating simulator usage with different backends and noise settings. Address integration with the numerics backend for array operations and with the postprocessing layer for measurement analysis.","parent_id":"4ac4cc07-f04e-4128-a47f-bfdca70bf55d","progress_status":"completed","dependent_files":"src/tyxonq/devices/simulators/driver.py,src/tyxonq/devices/simulators/statevector/engine.py,src/tyxonq/devices/simulators/matrix_product_state/engine.py,src/tyxonq/devices/simulators/density_matrix/engine.py,src/tyxonq/devices/simulators/noise/channels.py","gmt_create":"2025-10-10T21:26:52.796032+08:00","gmt_modified":"2025-10-10T22:31:27.858254+08:00","raw_data":"WikiEncrypted:C34GewOyK1SlumqKiPsSg1Q7++qbaPnmH/WOa1nfihoEI76nJu/yUvX9OSHNDJqgj3OExbRoDP0DjRj2/ZTV7a49obXpDOuRjHGxl39QCMBVPGFX+s81rQQQp/GccWk+jClZGWQCPqcliP7ZfFCOTWdYnP4Pt7LZbmOHbPb0wT9GtOYGKaRGBPa7RWlDqsR3c75vflYAwRxVXbxiHW3yYNkxebrhKFytH3dWpF/cJ1xzqFHYJDj1MQe282IlGcK3O6t4W2fjR542DHd2Rq8q/G/b3x0dMYRJ61MkXwlMmg+TvqIxUZCPOmAN6aHJiIv8RcRIbpamRxAA96SfKLcEtWqik+srKcZifmOzRVatBGQx2JXTQ8lSG2TkxGLZ34Gt2nEyz0kN9jwohfs6A6DoTsQa89qxtl7NyrtZ7YYFG7EYwylcFqfuBj0ot50YpKBUZZi0rWqElTPzXKHWNnRHrKMEtWxelA4qb8kxeivSCyz4caMmgnr3ZJf5lDy7DbTEuk/njWcUqZK8u6D3tBZgBUYbyA7T6zbOMTPhri/SuQp1bevctq3Ie/PdjtIrJtY0GWv9pFycJW43kIS+ALf0iLfAug27zj/AWcwk4V3O9LWOO7mpeW75bn7l0QZKYvaZgtGlXktqJE/O1X5fZH6e1UY1NhgmUwBCA500FRrq3Lb8RdLCaHI4iCV8Qv/6Y61RONodjkRwd8A3MK2L16NnjuhxesnmDjnNnCF7GFexG85XdJQTd+m638J5hYuivrtmAJjFsmR9nlUbfhi4vEwXYTrL9+PdRr2gdwl+mFD4RpYRVaOupLMYF0fRlGLJQ6yW+dWCgbcGFXFweVj2P1nIUH3/V8VoPVdjYG6nsvl43WGYlDd0M56vy4aVA8oobYsM21Cee+nnVJgW5DU4SGrUy27qvTV4DK5KMngFK+ebPPI05qKKDdBvAB4stzC5uxOiBYKxUwSSnh6tBjyndoBQ6/P1kNmalEBjCLO+ACXNsCsXcTI+bqAeXQopgeTFOzvwLsnhG22k+8KPVy9kMzBglTiSWd/yubyiAuZLbZ73dRvgWDWD50PplqyHkF3u/SviZ0j7zydJUi2Ftu4CvSKCU1UXTwDB6lLz6t57XQp3dufZjJNkg4vQLMwNndZm9sSt2YCKOmfYbR606eAs0QuwXpwIruDWeM4Xw700JzgrKEJh2catcprnxCBo9QUHSSmsB7YOGWN5cm1RAkwsSg90AysfqnM2j/ha2C/tXgVYM+tbQev986VcPmqUMS2AYKpBdlPJKn3Ul0hO1d2whJHpGPRDr+gM2PMhOoBZY64pNh9f51ldT8VgF3W+7J0T9XI2MZWG9fMlHceYuHyr1ndOcsFR+8PCGm9ow9nlA1M8R8kxE5WlcnentaJ6sVC4HYJi+Px63VjuxJNmhkodCE5BXAtmU5Coe5p6R92dLWFcAoNXp1AxwQO5FrXV/uFRP4u4Ve9DgKXVRQHM0UP/DBqkPc7TBd6/arlOplTyp+2uKOUtqF+VcBUuoUBdGXw/mMF0pd9Ywowc+KJDR5AqrQ414NQWRLyjx8XIX6il6b1L8BZfocSAqZnS5hSx7ib9EwPJgOyyLoI0lMG7Wn5loL9gxCred/nOMo9ay8yzZBbH4dHcfIDL79yLVPXRO1jqx2jDY2V+myl1ERlLE3Um9syjyupjKMw1AQ4V8d6kCb+5dw699wIa1XTYvVHdr9k+ik8jcWx81txOvEk107SMddF5ZCZQjCepYROcfiadt4SvohR1FMREHW2UHf1N/JHHe/Lq","layer_level":2},{"id":"e8bd0624-be4d-47ee-a6bb-9f7c7bfb08c8","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Core Interface","description":"numerics-api-core-interface","prompt":"Create comprehensive documentation for the core Numerics API interface in TyxonQ. Explain the ArrayBackend protocol as the foundational contract defining required methods and attributes for all backends, including array creation, mathematical operations, linear algebra, random number generation, and autodiff integration. Detail the NumericBackend class that provides a class-level proxy pattern for accessing backend functionality without instantiation. Document the VectorizationPolicy enum with its 'auto', 'force', and 'off' modes. Describe the global backend resolution mechanism through get_backend and its interaction with configuration. Provide usage examples showing how users interact with the unified interface for common numerical operations like matmul, einsum, svd, and normal distribution sampling. Explain the role of the interface in enabling backend-agnostic code across simulators, postprocessing, and gradient computation.","parent_id":"82a3713d-b244-4c4d-89c5-0844d8d02c02","progress_status":"completed","dependent_files":"src/tyxonq/numerics/api.py,src/tyxonq/numerics/__init__.py,src/tyxonq/numerics/context.py","gmt_create":"2025-10-10T21:27:12.158148+08:00","gmt_modified":"2025-10-10T22:31:11.615903+08:00","raw_data":"WikiEncrypted:eXTykzkDgCICZh19Bs/J2BkYDKNaijYG8c2fytPV/AuWluSce2jzpN6X2KVqDEcfa+J+6He8nDvynzkKyLjS3TMooP6rtF11tKCh7IRXz7WhEUVIS8mfr4UOaj2Y4F+lVTeb9sa15/Kfg29JU0hjV4rLFrlTKTdDKnJomln1spRqYqO/nUFQbcVcPVLdADoAJEqE1SYZBD/qv/RPJ4KaLK7iYCTvZ1ZjO66BZfgLExFjZclGm0F+ZAtTRAZQ6H6Ja88P5FtTHK/nq8MQoaenOlnMMe/ya6/gFLMBTMVVkc4myrkXpMNKM0yxDJL4Zulo167ubLc+BicM+6CP0DL4rl/LeI2vxOdngUy2l4XVW5sUaz+M+4vygAQvrEW00N/J/jXoFIyw3RLG8M/HMyP5LpPT8aJN/C5aF/lujTa7liOjVxsXw2ZWEW2AcM5wGKQQ2DqOonm4Gb3AgcwaoCPrxOWqM1ZqoESU11y39dn1YLoRnHgR9Oq5fCjatbYlWtn+gBNVfU0m3MVs6fwN1+Er5Ff0wAIHmkRHJvSpdt5VdExX12lPO6rmvnm5jgqWiUkYr5nJFOWQMo3hr786qTqDWyJLupBBegNv74l7PAUylQ5iaUl7zcL2CsRrddtCrXr/QZdbcPyJkgtTZBIflhxOnHpRqm4h7jpdDpn9e6YrB/P+2bCeSVT4F54Fma6P5jTP/CX3hM1gIHCCJw5ojJ9Cfi8HFM8R9wuaoOYIhuiJjvNUerGkym0kHPeSDQBnlzH386gb01yb5il+AYSdbsFk14SJ3G7krBbPXX/8fkFFclnxXB9ZOglkjr9XgTrU8XmUBP1ADMeKBy2C5oehoKMsO8LOLyuxvBZorOM2tPV2KvQHtwX4Z6z7T1YirVHFLQlPKZGavz0120/Y0vNPaFS8lAHMeSU7M8z6FUMv1ZuRR6T0yVVaxHNuXe9x7Gxm0l2rvVq2tMuMdH3rLX6SYt0dBE3vq3Uxu9EJySdFeRAWULsQLrMdcVXs7nSvpvEG+guze6b6oAKo0y/H5QnTDn8z1kJrDNX5jv7qmxnIwaVJqIqSkIseN59t/jausT2jhLIXJrhojVfOAGFZCHbdbGZFf1m16zAFWrFKVMnKRWZD58uO6AD7BiNvgs8BPD223S0osrw4KYzGderm6aRLQWS6ktq+pOUu4gGUcyg8tpqP8d3lgoxQyaUrd12KiQiiBzGbSS3sIVl+m3KodDMl2JVzBekVmzBp4x5RP/fGAHyBd7Pej063lbUqv+1ZkhMDDMpQX1wSi3T+tF3HmlWKNeiWmblZpNThDyj0vc2pX0D0uybEyKfqEVvyZf5SP/AYg6OtQbwDQ0h9a55BR6NBF/oNTjyZ5D/aOKStxbj6xmw2LN4Q05SzmDXD07t8l2l7oiHxMq0yxNbB858uFZE1ZGGju0MhqP0SZHDeCFxj/JAVr+0m49OWV9CAL3sitSdHU4p9fN6tSJFvIFK5gH5JpfJBHPd8uGFhab5PbR2CFndhwni/WCZQBcgSlQy3FqXHbvF/IvH/uZwZ0i7hBO8Zk/z4ucctCae7y64nBRjVVho4hC5h157Zq1ECu1rPdGmMyK+nR+VgJoVsj1GzSD9Nb7uObQzPjWvkqWyee4CkMILCGbnysqW0bx20x/XO20X9X4sRebRJ/bybGozK74YRb5vcRbor0fipZwY6MsADL7y2YkzLGVbgnyL8hpXDKXBSUuXBpS5+c8r82YRS2fyu5ga27DVN6sRXsijgPmZVFN0jILEH/c6QFsFEiBOVhu+pzmZG5+UQB5Aczn/zgFgesr8tKg==","layer_level":2},{"id":"b677f3d1-718e-45bd-8846-a9da593d945e","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Readout Mitigation","description":"postprocessing-api-readout-mitigation","prompt":"Create API documentation for the readout_mitigation method in TyxonQ's Postprocessing module. Detail the ReadoutMit class and its methods: set_single_qubit_cals for configuring per-qubit calibration matrices, and apply_readout_mitigation for correcting measured counts using inverse or other mitigation strategies. Explain the expected format of calibration matrices (row-stochastic 2x2 arrays mapping true to measured probabilities) and how they are applied via tensor product channels. Document integration with the apply_postprocessing function using method='readout_mitigation' and options including cals and mitigation strategy. Provide examples from readout_mitigation.py showing synthetic noise application and correction workflows. Address error handling, performance considerations, and compatibility with both numeric and device execution paths.","parent_id":"83498097-8e06-410c-bf59-2b4a228d19dc","progress_status":"completed","dependent_files":"src/tyxonq/postprocessing/readout.py,src/tyxonq/postprocessing/__init__.py,examples/readout_mitigation.py","gmt_create":"2025-10-10T21:27:22.018675+08:00","gmt_modified":"2025-10-10T22:31:43.317237+08:00","raw_data":"WikiEncrypted:TP8KP13wWUq5FizrfXDdgpnYgW2y73+035jyfbLVI6XSdLZaUo3vukyGopP9626xBuiBGEWimQp0Fjvn/m+lVgicac/7pSFaaRXQc1nd1eqNrMyiW6Xf9urC4m/RslPUTfIJMfGHfAs2HRYRSaq1X3SuwhPPp37Y5yTJnjtk4tMPL34Hcb3Cndt220BUxdvBlbQB6/xQgKc0cLA4p3PBTQz0IriRQ6oDyVDYBGqa2OR1jFbto2Es3NEOeRvV2G0xEutpyFVX+IFIHqIz335c+D25lT58/upP5OQBIzhZuF1q/tOYS/KwHrj41BPex6S4fN8E5lUNiEM5sJ+mxRAq/kmncwNRQRmxXuQrozwLq09dTjPz1/tr8CRmRKxXrEdLq2ngKf9jK6IMirP+cn4+5uFGzORvrup7NwOOgM/Vk+BkFH8NyrOPnM5Fw5z+SoKqS6V687tp+Bj1dI/cvSu/91iLps0aO5jhJ7Cqe9X8ov/KVLutn1b8Wfz6sSKnC0vjJuM91NSfriY1ZN4LsNwvdEzQvx0B8Ele8CocWDPhsW5QfDoaZ0uxJ58ppqKFOqhdPZV5SlSi9MUSfr7XzYQc9j5yYEgRX7wHXyIrbCZHFbIGy8w/nzIe2hvKkSt07fvCne87olKfkgLn2JmEba3o14CXKOW6EIPn8d5/d783QprX+CQJBDVIWRCCEptjiXK1pEo/QZNod9P61vtVlRXQThxllj8K/wtMVSXC1uLa9wahYnf5AdT014mlidCfFRESLbXINBsGVPftmDxzCPmxffjBlJJ6NufZRGk3jHt9CTcQ+534MX0QyTG+/18VndZR8PqPmAlMA4qCaDTZGOugunsSEokpsCcUJ4L2A2mDZ+fGREwaeGjGXguGO5T22gPUunosZk4M3MV1/HdzMP4205nPUt+S+9j3L2TohOivvBCfkDUXFLtkFR3dhcdAhiyklPxX7P4l4jt/NKFqEjv0IfG4qGfRclc++XX1rVoGCYjDHYY1s3u1UDDQXtz/tC88oZhf7UQI31/F360AWsNoEivP80F19gY74FMIlEdlTQsBByTIKUsRZDtU3YJ0gFNx3FOXQnPxvPy3zgJQPjHpjk9L69WgSroONDBnmeEtfDhaLm2ZayyDQ5Y0/EzefEAjgJT79sYbEl/ohO4+XEkpRmio8YWqR/wHBxLAjoUoyhkzlPkWRepvI/8ndlJCMaG8BxX8pfNCD9Vkp1pPghQsvpezRpcHuXiuMgvkkvCk/g7USEWtL0xqDmBwXuJKjSv/kh4VCNG7VqVv4V7I7jHiLZszNEPUiCwKHFzEUAmz2xNo0BX5DI9i9mepOmrYPW6Od871bHOwmtbZwrn2lOPNfdHt4HEkkoMM4Gm/sFVxbWAunC4am9VsBJn22poDerRp4YFuxPnME76mAymjOQigVj+lAC8eaz/EPBjhdlYRaifn++gndW8XwqsalZ+ttaYkJfdeZnq+l9RHSXxRPH3/cLOADygNST6hgpFeGG+gDxi2cSi+DwceGw3AUAJKAziPhGj/O1bp50GIpm2qtI9gyvv8HoMOAnPRR+S4lOfoVGSYJb0KZ8zxZ8L2U0tb/bccr7zRCm6Dggr0sQRUuEymTnbj+iBXxJdwaOlsWivVQRa37JbeRu0rolebSuE6fdStB0zyXAZ333nJLL8IA86d3Q==","layer_level":2},{"id":"d5c1aef1-5986-4ca2-bba8-ba24a030df89","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Circuits Library API","description":"api-reference-circuits-library","prompt":"Create comprehensive API documentation for the Circuits Library module of TyxonQ. Detail all circuit templates including VQE ansatzes, QAOA/Ising models, Trotter-Suzuki decomposition circuits, UCC/UCCSD templates, and general variational circuit builders. Document the block-based circuit construction utilities and state preparation routines. Provide method signatures, parameters, return types, and usage examples from actual codebase references such as examples/vqe_extra.py and examples/simple_qaoa.py. Explain integration patterns with the core IR system and compiler pipeline. Include best practices for template customization and performance considerations when scaling circuit depth.","parent_id":"597e341d-c253-4c4c-a540-40ddd08797df","progress_status":"completed","dependent_files":"src/tyxonq/libs/circuits_library/__init__.py,src/tyxonq/libs/circuits_library/vqe.py,src/tyxonq/libs/circuits_library/qaoa_ising.py,src/tyxonq/libs/circuits_library/trotter_circuit.py,src/tyxonq/libs/circuits_library/ucc.py,src/tyxonq/libs/circuits_library/variational.py,src/tyxonq/libs/circuits_library/qubit_state_preparation.py,src/tyxonq/libs/circuits_library/blocks.py","gmt_create":"2025-10-10T21:27:23.208934+08:00","gmt_modified":"2025-10-10T22:32:31.922894+08:00","raw_data":"WikiEncrypted:C34GewOyK1SlumqKiPsSgwvphYGzcvsk3C9IAaxg2TN5TG4h5UoM9zZYQFO/2lypwaMphQ2ZJAzRRkNvnSC0RJbXSsLkGCaVoFBQSuiLPHCqCXHWYPriRgIC6zM24u4IM0pYCycSYq2eeQOyMS4Mjd0IANA1uWIwVpJQP9COsQvfp0jRgXVgewUciv2YPraHVtYFRim4MiiR2YyEuQ6HdNIpwLm0q2aXJAWc2Veoe3qLfdrFA4A5jnJKa0QkdMO0g7jYQg4JYUSeUI1146Pb6cwOoYN/EFE7p6aS9eUXZGREaIwHTDXfOOiZD4kkfMdtPe3+MZ5t3CsctmNnyvw6kw/vfzsBZPrDnc15LZ0IXTL1Ioh/xn9AgxCW9TS9R5ILSsMFah3OpptN8+9iM48eC5MqIlgP4hNLdhb4zHlVYjq5952jLKvl+2XXLGO6L0MX8+coWFYKJbVPG7biiUM9UGxditNoiRVW75QuANdRp+SoPVFYYXkZt9qHpG7qdORh0mAl+PrKVviIH4KsrIrfLpdHARQbZrVP1fiU7yxX8FjcqRUrTm42OHxvzl6AH1Jy8z4Z1Q8L4nlVaHYR+waqlV9btDqkIUYmm0fUDYkRSZ/cCp5ZgH7ButT2MRsnOZukusiF6mlMLSvvdjcbpnmErX0Du/GAxBS9zXhTLaaTsHocfB1cd1p/KXtflMrxAEiBjg6vxnRR/Itj0Z4H1MY/EQkAZfj0ptUiD1eGaOIATB4dsXLoyMXTsr8otDLewFfLeHYOuE5QJECbbQfniOBNXjpD6Reym3Gt6y9d9GJepSNaEtjuGH+sFyjqxJ12uMJv20QDT25A2dbOJqiPs2HraKn7EWnRLdx1xe5RYMNcjqbathKrhHkYOea/Y7bjNPeMLF3TaDf0CeATXiFF96XfEJQQKDCDx1OtCPlcbNoejuTxoithc5VM1KHdyOrjbFZwtqUnwMBL9qRKBLi4MLHvP1rauuKWQKvVfSJ3x22fSSgj76XSsMRr8rAUwxjUZzEr6J6d9bCq+/XZs7mSVENUBuiPTDkudXxASeNKJhttrLfC6G8rYlilDd7vhlnvRuNZV8oHyJOrrzWUsX53Xhe2ypGOzGKh4FbwnVVOTNa/011+ML5ZC02yI7fnZSNrY+EftnMej8caU8X3j7vezDn0MBPlt9DVAYZyKdwGBBmTwhyk47f2AHUHCTr8E0hAY1ly7A2LOmiDaedmx3G/CeQfpnv7ngCGju8S4JPklRalvbN5ZjeYO61txT5RBnJxV6ioADD5CXBhORrvg9udsEdPx9ySF6b26CYzSq4GQ7tQZzm0HltY4qsYDzBuWXJAU/NIetzEfzjLuKwW9zClZ3fq1lW/GTHTKCOPNgQRVC3hmzQ6Yq7SU3JIuF8NuOcJxTlBaLagiXAD70pATs/otJhbvzrpJkuwbJ8v0nKddKSPTVPBVGWaoHltdGew/tjGoKKq9gwwwiWbXgz7MFEzZxWCaDVELCVHkDiYcWIwSDqmCNE4MiBCJCOcc/12HROj4bhUVgOz+ZcPyPodASIz44nxi03glvRAASCO7mpcV+2Sig7ewhB3hPJUtVSgEWKmwagLBmrrpKWFXR3neRDeZzhbEic1SjBGKy/n1SmfnlAcRxK9bhX1svJsTu5Ip2oIQy6ZtFZYdCkHkrat82QiG/oScEXkJm9Xly7utt547W64xHnwIkSzH7qG0u4avnacNLc01YbeV/SNSguAgbF/eYkgUnufuF+8KCI0QKgTiJ2oOc+3t/P3gTkEkoH6j+ZMAYp2+L6swQhuNFa3gEog2VecQZ9spHpnIc/ZREWKv8BTuAtUALQk4BE0jR8G5vZhwxu66cYwBfFalByvIjp7hPXuI9BaPQCRziSuvJk5bWGj/s/DeCcjFpvkLcCfvcbarcsmF6hymTRqYfEBIUka/nhh5g==","layer_level":2},{"id":"122dc7cf-96de-4e8d-8267-b2e1f38acb09","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Device Management","description":"cloud-api-device-management","prompt":"Create API documentation for the Device Management endpoints of TyxonQ Cloud API. Document the POST /api/v1/devices/list endpoint that retrieves available quantum devices. Detail the request structure, which accepts optional filter parameters, and the response format containing device specifications such as qubit count, coherence times (T1, T2), gate error rates, and operational state. Explain how to authenticate requests using Bearer tokens and provide practical examples from examples/cloud_api_devices.py showing how to list devices and parse their properties. Include information on error handling, response status codes, and best practices for device selection based on hardware characteristics.","parent_id":"b08e6312-36d2-4fe0-8059-1572b13c8cf4","progress_status":"completed","dependent_files":"src/tyxonq/cloud/api.py,docs/tyxonq_cloud_api.md","gmt_create":"2025-10-10T21:27:47.479425+08:00","gmt_modified":"2025-10-10T22:32:23.107632+08:00","raw_data":"WikiEncrypted:42GucIVlAI9L6q+fifwcxUrDkf1Egf+cnyee5zYURMoToeZGr9SwOjOpWstGScT3UxneLpj4Nx9/ixAuxQjzjxPwR4gG3TuE1jzHbImA3vIgz8M8ifjvomS/vXZ89c2oEaU2pkY5vvKfm07/s5PfhIHKR5lPd4Yz9Lmx7aVrLtjoahdiPZYXpyRSPwC/Ch4poCRYNUWSYM6tld9EQyKvJnCzBdCrVS53NP2QsxW9fQAZpe73ox9NeyZxT4RsamagNxD43uMGWywGf0TVxeu2kyX9ePDBS4pi+DkkDOjfXPmvwonJNLAOePwpOF+6Tmm+BCKuBKbS75vKoedwsY/8J3+7lwkVNxR4OQWrtR6PeLgojkx0YxJmxaR1gFM+tnihj8L69yduJQPquCZGXApQxr+sU4QmN3OPkkOC6O71xLEUyG0A3q454aW1yco47bzYH7c6vgMClH22Vad030RuAkC3EMW8DqxRu1972OciN5ZgeCeDbf3LQZ2aRt2rJbsfY6xFwO2o31xcgjZAxfGhbPbCFUf21pU71u7WlDwxOLgCCWm4fup1V7hi4ONnEpi8EDQUdQ7CgX5Km0vsF5ujE9vUtq+x7g/VDD1CsGNO9/k3CxUlAlMMpqjxhmBKXaRDbqQdnsEzUX82ygapw94N8OtlyCkpg1tXR+f4nRRCftCBHy2XqJraa3gZIDN5SZ+gn9WcFZB1LqdUyoFsB6KYofJ4o//0+VfrBUHUziu71e2IWkgA6GwxAguvMOjHzwy4f9ael6rzwa7qjMac4tVGw1ive9NOC9xlaSQjLBvCRl5Sw75D1DnIHjRDqjzzPSVsdYJCHoO3nm6Ew87w7AAaXX+zy3/13Vn81z/Kc50eA/J9Ceda6Zsn/TUbGCgRHscL08lPvsb6jS/hJRXjn3CP3D4s9HpO8dpTV0rQlU03WPKC0dN9HDGoewl9VBi5k/lRh04PCvjJE60LenGnoUe2HNOmQ2p7M3aIK/zBGeh5M4O89qRTegiz+1+g6d+vngEDjYFjxjgwNyHSOjpJIDk1ZOOYMxo/lKZYA/3jKWeJKtJu3EAXWgCPMwyh3+Hci6ZQQIYmT2zH4XHx9HkJMb31uq23zijF8a/8sXLe0FsJLZh19CmEG5RMAMzzRyy8TAbG+4YauXsJVTVrVjEMkz7VkeLpiUkeVAATa4/z3GvxWpuDtBH7hNOKa2fClLOyhNzI1DHamQLnm6WP5sC30bs+s8h8wvbxWcAzXXm4q3bXOzSE1kPd+duFKj+W0nSi8sgifAnbBZeAnNM+jP7xF/mRfIxS2qCvRVzJ0IQn3QfeDjkcDmaZnb4zrqXVme8DnXNmb5cwRyo108ZJnw24P07ioNVBezK0V/1d1/u0YiQmSXv7cbcUwu4iPqOCERGm7F3xymSJ5R47hfNETnhq0+orUno8cBrJwYqwWx7dtsXgAN74WeEKfdXs3WR7e70TB3n4","layer_level":2},{"id":"836ceecc-5adc-408e-9147-464f7ab8fee8","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Decomposition Stage","description":"decomposition-stage","prompt":"Develop detailed content for the Decomposition stage in TyxonQ's compiler pipeline. Explain how high-level quantum operations are decomposed into native gate sets supported by target devices, with a focus on rotation decomposition and gate canonicalization. Document the implementation in rotations.py, including how arbitrary rotations are broken down into Rz and Ry sequences, and how decomposition preserves gradient flow for variational circuits. Include examples showing decomposition of multi-qubit gates and parameterized rotations. Explain integration with the Chain API and IR preservation during transformation. Address common issues such as numerical instability in rotation angles and over-decomposition leading to circuit bloat, and provide best practices for controlling decomposition depth and precision.","parent_id":"e948006c-6a9e-4afa-a0bf-dff490882d5e","progress_status":"completed","dependent_files":"src/tyxonq/compiler/stages/decompose/rotations.py,src/tyxonq/compiler/stages/decompose/__init__.py","gmt_create":"2025-10-10T21:27:51.837926+08:00","gmt_modified":"2025-10-10T23:08:31.943444+08:00","raw_data":"WikiEncrypted:P6dWxJD00Fb2I8T/7fqMcttaEki2QhYHvk8n6OVtGic6fVXyysQxt+GfEIXCjujsVyB7ABHIE3z5xIMkHpxgqBSTUr61gXH7brAN4Wc8pyYBf0qrU21EUdo6ndP4QN7vZER/X9qXZo0lPVAEY+JVJfEXsrVNC48sDN7CH3e1l7dKacuBu7N5YuSb4qohIcqVs3pG3Zm+3suf+nRlv/JMlinb7MQCsIjDaNlrR9Yacue+J6eKPWw2cPjpY2miEzysXdxWQV7MQHYgH0YmNzHhqNbtV4hUoh+Wc+heYcZBo90TiTEQClMMCyt8FBfT4iQh4rTkcl0qx5OtJxZehqWmTntDLVdugZsOfPibKIZS1MN4H1MFn3PXf8s0wL/THAWj23BGrcgjMHW/Pp++gnWs0uIGTcMgUqymPDxsTsZ1IjKB8g8xSW6jcswdfMnwYHSezDyAiD0ffB/T0y/GzB2oblgiN07M4XV0OJFoKLYYLGIbN5S/crrwXr8oT9ZexEx5zz53cng9PTbKIXUaCCqI/NSJWpyiUl5l6krPTXfj/A/7XOQUZGreXO8dakskA9SucI+0Tld1SlEPjJ2yLwjlrgixx/DXBbdI12BnmMW0VBwTP6sXhxCZtUGst3z+qAzijT7ep38fCavyZsTF0jR7CoNkKKogcXe3FicTVtIMZ77VgDBDGZo1n4mI3E8rdaNwZvr/JWUkRycol5cL0suA5Qi+QuR3IK7Lvrs2WaXKjOUyLjcXN0goEIVCQYrYllBXJA6ysZg+CFXljFyXYoBqErkIdlLEPtVJALeXi7BJQo1bPJgfsa8sp7qmHSqiAy0NJvN7mIbBKASSZRfmfyd+SFOZiebWvWnf2N1Z21TCr+A9P+rw9eUV4jyzk34FdKt8ndmg7tQBdNKqUohx1t1MYFE3RdAR7EtZtppgbc2ufieqTxuzdLLaoNVoc0bc16ApaQ3X3dAwXdccl7DdU4dhfVUNXAxpAlz1jUFFXTCHmBLs6pI1tBI120OqnPh+d4gamg4q+B7eXQxn3JIt4FqWskmOqM3t2OAdlyYarGIhHyM2jXcEHRCwaBZjzVmn/4lU6ZcAsoyp7nHF+BtTLORN3/VFaL2acnp3aVXSOQSqm1iS3hWNDbOc/eKpOvVw8w/IQ889OBUytyUzpYQeWvV0oMV5yFvOF8PmHmx/15SkR7mEevVjZi7bFH/AlQ3Bsc56uHJu26yJfTLJWhBUHw5Z5J3Gtfaf+R12wNc8Eum8nFt+0Q2+j4mgz67w3IEQtfp7hOGeWPNbqhgX0k5++r6LD0ce0sRnUBnzAfa2tS8HxC6gnmzqBylK86TRvPamgZymPnpGlQ86Yys3+VdfH1ChiV6t1k5GQJx4qpRWzVuB4Te/AnpW0GqgTijtVHGoQsnw1AgS6AT1G9LALLmnGj1xhuL5DHwZPvU5Mxc7dM24Mtx0yfFNB2KroCPl3NJ/hkqFLn7fXwu2VTL+NzrPYq67b7cPfdGhel4hP/5zO+0vSCq2+OerQXBrPWQ3pvWhvP9CoH0elAMt0CRUJQZ341Ft3g==","layer_level":3},{"id":"9bdd7a13-4ef7-4811-ac40-cd769d89c4e1","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"UCCSD Algorithm","description":"applications-api-uccsd","prompt":"Create API documentation for the UCCSD (Unitary Coupled Cluster Singles and Doubles) algorithm in TyxonQ. Document the UCCSD class initialization with molecular input parameters including PySCF Mole objects, active space configuration, orbital selection, and initial amplitude methods (mp2, ccsd, zeros). Explain the excitation operator generation process with pick_ex2 and sort_ex2 parameters for filtering and ordering two-body excitations. Detail the get_ex_ops method for retrieving excitation operators, parameter mappings, and initial guesses. Describe the e_uccsd property for accessing final energy results. Provide examples from the codebase showing UCCSD initialization with H2 molecule and energy calculation. Explain integration with core framework components like the compiler pipeline and device abstraction. Address configuration options for different runtime environments and numerical backends.","parent_id":"61df0675-6efe-434e-8be6-66c5bb88ae9c","progress_status":"completed","dependent_files":"src/tyxonq/applications/chem/algorithms/uccsd.py","gmt_create":"2025-10-10T21:27:57.612219+08:00","gmt_modified":"2025-10-10T22:33:14.278442+08:00","raw_data":"WikiEncrypted:6Fw6zeKwEGma9eKCQx5PdwHc0Xt/4VzTCZtbbMbO4EAjyCf0AnN6JqGXDcaNuyWOBPlfT5/EJ8qZt+svyrxZj7DzQ94K15p/nCyljZ3fMFeMn3iXZCC4GPlWrvF3J02yFFJZrRSgbhgeGx6o2zG4eJGPhNew9E/Nw3qqwTibeHyrvac9jSrDdSm0NvNWAa9kOByWfRhqF/PdSRVyr/aTl8Fv3Awtwb/10+PfhXz9o6OBd8HUq4MTUcC2nwlyeUEwDHdrOQxK8USbXrmHPHL/nshxTgicVMV7hFtSU70377KxDUMK2+MepXW+5aZcs328cBFYBhFAL2kwfpxD6JQA7abtj2931dCHBf29NJqbVnSeNpscQDEXzGhA9eqcTLRhN1nz89yE7gYslLsHPX1XiWf6/3Mo0amA0Go5V96jz/SqQX7JREzfIFZBFqlRppq+bqcBryI2P2Ba6dJBkWwboHkNzt/mjs2wX6lBOrcX7C3ASTNpA+v1XZQzaM7egrqsTLX90bti81cL719rlCr68SHzhRDoapd4Az5wG11Z8qt2RhynJC/qJZgl/HFML5Qmq6Rg9YwYLEDQPUu+2ei1QfInG3OsB/BgnAWyHGp5QgqGJBOVD9bhdzVYyNyawBze3DbXjy4DZB/Gpg4wv3GsBBBmfFAYkase89lHraVdGAfQzWJjxgNKtcHMwJ4rijeTV+eu9H0KFOX1uOhnYnE0TvkMIHXSaWNqBc/R03r01omMJJqOF78LaTLc/NGL3O5KPJ7EiwOlkgLtkZKDNKJ36nGKDQQYNGGqOAEz+H/ZDxO5earjOQd8PZr5Ljgoy+cQv9WfTGXW/ubvWbEBe1p4f93ohbAoYHrr+SHv2GchEy+etTZhRAMsefq4m86TwZdQIixZVYxyrJvCf9Kna6VyCRALeGEyX9XNU+rQKxcMKODIbsZI3Vw+MxAZbCnDqyZeqEODFm8SlBYqmHCdVemnEGOLDTeK0PhdrhR9jfQeRmhnzOthxb2l7aJpmRpTqpY05LgjpMN7g15T0zJkSdlHIoTubbGbpMXcxA44LKI4SdfdBmHaUc/sVHCqlTuf3TbhDx6vcfzZXUsO3k/QQUkxIWWv8YBHlUFlub24uRsEe+cerIMlFQtJRop8hILdTk5AQeaJF2baxOewt9MzADRgvxr0tSrSNH0U1bR+wIUtetmQfYZ5KW4UGPTwfjujb6+wuiKKxi7/0TQ+OYb5kcqLvyUU6UY3QBfTI4Z1Bvihr8Uqq284fUmNmqYPA3oNiiUf6+KcBRdoVsB66r//YlQBZDpmr31mmOnS6tp5KbCKoGpACtV9x89o7yUdBXFv3XGJv5TWl1D5TIbPIEpf7+KOYGRXTtm33HE/TZ9NUJ1YnEMGUEBlqLTXFBYZ/O9YXQd/WxVj/AnfFYdQEG1fCo7Rot+BsQ6+qq3I2mGjV9ww4/ue9mvFCLVk7CPpAAu8c4C5gyOWTXkaIbMseWfGXEv0ueZXwEhryIpDKrDCjVnowJRFkBvZ++ZnGGYIlRDL4sNg6XJxY/wTffFpw7GT8wbSy/qp8Rs3hMwMn2iHNNmYjJ+TWAPDWI+sqvJ1T58HjU942a6vqP5Vsgai8xH5wmrhzQMTM7Vw8H0paSpMDOf7GcYuop2d9KxspCreAMDiBCz57fO76IHz0aKZNCJic/YJ5BSj7ZQ9FeQthiTWRtUTuUQxqnI0dnqtLDnjtU2n2kGh","layer_level":2},{"id":"5e31ad1f-058c-4c77-80f1-dc476029b1d9","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"NumPy Backend","description":"numpy-backend","prompt":"Develop detailed content for the NumPy Backend implementation in TyxonQ. Explain its role as the default CPU-based numerical backend for quantum simulations. Document all implemented methods including array creation (array, zeros, ones), linear algebra operations (matmul, einsum, svd), and mathematical functions (exp, sin, cos). Detail the finite-difference implementation of value_and_grad for gradient computation in variational algorithms. Explain how the backend handles data type consistency through dtype constants and array conversion. Provide examples of using the backend for basic quantum state vector operations and Hamiltonian computations. Address limitations such as lack of JIT compilation and GPU acceleration. Include performance considerations for large-scale simulations and memory usage patterns. Demonstrate integration with the core framework through the ArrayBackend protocol.","parent_id":"9e22ca4e-a835-4f25-a17e-1639908dbac3","progress_status":"completed","dependent_files":"src/tyxonq/numerics/backends/numpy_backend.py","gmt_create":"2025-10-10T21:28:05.620332+08:00","gmt_modified":"2025-10-10T23:08:31.943272+08:00","raw_data":"WikiEncrypted:0mENHrTvnEtdfNug7pH6gyhA88QIPBmOmicu6f9aDGmlYSAoGkKG5kcWQS+AsYVbtbbLCesduzyXqDdXA1jMpLTrFBFnV1+L6BFIvG10LHQMGDcukazXmoh7PsqQrJccuPJ6g0ApxMUE661hn1rBaGU1aeYf0hkTQ/YT6mn3nQCAcljBkKQBI8qEwLGY+cuMqh4IAhwuwJGpO9UzBc/4Wgq/3k7dqtsu/D8ApAq/ktz404bAzDmwVJ2nk/Gkjzx555BBzNPaytOVPsO/yfLtWPTqUfzPLti1at/sNEpSAPNPtiw1q0QCD2BmPD4DlpMjv1zElMSLdJsQoc+H9X7B6iMlBXdNCfGiY/enAX3a3gLjD8cbC+7tlnezOM69j6BjPunjz5K9MgJb3+MyQX/ZkVaisZZnGdJoagmoyUDN38Gj2SRb7YnWCPOVLOoD1dizeU5qge5l4Jh9x1f0HCB17VrluUqiHoTo6z3v6vSo3t909flYvDTBnqyx6IjFaaBEMdbx+p5zbBeWGxsB0cKLT5sEofOQr90nwSkalyB92M+EL+3eiLIRnXKC+0/44TCnw3qbukyHfZPMe4e5puGYlRDHTvzpPzOTdaAqrsoyw/i1yq+vtc6sWJjhQNRNH3OKEglyc6wEuq7szzq8KnfaBjpUCFBRU6FQ2y1Zc0f7JBoISVbfCIq64EsGinWDPtFCj3HjCAFVkxEHw42c+JvsgWk9IFBg2Q/2ZuARZq12UGVljnA0JcAc1g7tFxbxLaArasrhL3mH3yJlGc2xe32dKBBhSdk52aMqGA18Vs0de7Idq9CTSWPs3/HN7Elht9Tf29HrdS2QWuvYExc13mG0PiMC/05u1IyCyz72VswOzn+96SPLvckRUsJFRQgZg4Zh0rRofu8zaLbmelPe6cowXU4BkPQqAa+ounxFd5tnCAIxK3XiCw/npom8oRXKLvuu6t44nXfSwC7dGsKR3HKbo65a5PbFI/6d0aw9V/2lt9lRDVFeJfaOfJxGPcRzUUGtOPS2hZTYL0GjzczPcsuBN859alqGi21/3ofaxE/aJg4rseCiz/36RP8FlhXIf4dFp96L0RhBBq3bNBaLlkvxNfj2Rvb7MTQyn8E4eh4cV9eHGbknYZyDje/yK81uAltuEU/O/zau3Pv7NHBNWjh8VTLPpcMES92xWrTQchiSt02yVs11Cb1+GeVtCN4auw3WqzU5aI+XMCecCkmFvSrxl2jUXsnS7263PwgoK5di6ufpC0UED/cIMAHMD+hmBSyN0Ij1plEyLVMRt1loPhx9cJLiR1EpjUOAl8bM3ApwWLqhUDOBhnlMUJTxmXPyAI18dDFZPswdROOg4U+ZRka9HcCYfOiTxSfiAJhnvxVOU+p/WZe+QWpbry7VM5PtrEFM8ly+Pux0JyM4isjRXyc9IrG0ZbV8ZrOEfKkd4FAbSTTdxm4DQ1iVs5evk8CBA4dw8hDb5ZJcN6h6q713oy3GWu+EjLK/1HFNLGhLnSzMnfk/pOgu1T0mLko+xi3I4I8X","layer_level":3},{"id":"f5209b15-a952-473c-ba24-cca725679052","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Performance Optimization","description":"monte-carlo-noise-simulation-performance","prompt":"Develop detailed content for Monte Carlo noise simulation performance optimization, focusing on the layerwise slicing technique in mcnoise_boost.py that reduces JIT staging time by breaking circuits into smaller templates. Explain the vmap-based batching strategy in noisy_sampling_jit.py for high-throughput trajectory simulation, including the use of implicit random status flags for deterministic noise application across batches. Cover the integration with PyTorch's JIT compiler, the role of static argument handling in compilation caching, and the performance trade-offs between staging and execution time. Include benchmarking methodologies, real-world performance metrics, and optimization guidelines for large-scale noisy circuit simulation.","parent_id":"902b7d04-efe8-4ed8-988d-8db59189d4f5","progress_status":"completed","dependent_files":"examples-ng/mcnoise_boost.py,examples-ng/noisy_sampling_jit.py","gmt_create":"2025-10-10T21:28:17.503698+08:00","gmt_modified":"2025-10-10T23:08:31.94421+08:00","raw_data":"WikiEncrypted:i14w9QYhKLfKkkfn6X2Uvlu6V0pNqw1uIBo8IaRAYSlZfA8YDGXyDujF2hdcD0Z7TkqY+iHqv9O5I9FV7rZ8o3O7+39v5i9+ecIc07EGgXq0GizWl35r2XDu9vNmQHBA6RFMXbhucxzsXvK8zAn5jg5YeDQtQ8jFjqnZ+dgQJuvfI4JFfk9DVpyIHR1XXfpVAKQ/kRI5MgflDBt+cqM7LCN9+dZYlwkaY63wU5T09xzff+tTT796u/2o8zWoagdUKpLTfq906jkkkN5YEP0mOsVQnCv4g+AjFuonM+uMtxgI4Qnq7pXszZNnfC+F8BMdOl0QDUj8ZEXKdoSUDMthSrSGuKtbz6ApugedplfWUON3zK80+ixVGZNTeNLDLAzRJeTuDc5cBewLFj3ZxYedLgIloJj9b34kbrwG/jGicnjH/J5d4ymunHs/puiWXTGOSA+nYx2RIQ4jUe36TPWpo2gNn2y7URU4CK8y8mtEfzlfczXcT13aMkck1txunJ24OPNBp8uy4hY5cu+4xsakZDGNU7TY7FlBdmnMiqgdKWAiTwYoyrmZNJvdxWw7VXWVCEq2LJLfZEqGoDtkgc+OyG+yvKBk24ilaSjUjLsGHwERRrOTVq5mFKH4Xq9i17fA/Z71efXQydKrP7PbXd8NA4WDb0J2PdXhj6FTdPExzS58mnjpZAoYXw+IBS3N1RvUEOqy99GklU86EcSgCZ5qAdGniE285qYL9MEvbH5AUvnBTSDPxyHs76YHIWNpFnHQqJZ5bkdW9GazgCNNB4/kOwmH6TEEWYtcsvZtHx38OSyrULk4VcjtZC9thmZvvi5HcrtIa2ateiLdhJ/JFlSLJ4C3fQq7MFiWxkeDGeIRuhrAZH8TDLXkgIFsRLlBy3Ftn4wPQHpLKC4x8746D5mrWytEwmhOyK6466k30oUBF2pbzBiHesyPsBOS3pTM/ZzRO7orMg8rU0JiiB9LQ1cGRw8q8gL+oA433TeRck6d5A4x+FWIyWMY5sbT1WdtIJXoZgZltjTvm3+v7Nokm4F7MfH0FE96XQQzSXppTlZyWrWcpCkduoBN2dOwFD1efXUN7Z2gWE8YZRrAlmPi1h658bduOXitQ0yztVC0sX3K2Wo3XPjcwMRGvP+k7LwyoWhfdbwsVyzustQzJZGe1d5NXE3b0IV2103GrG7U4eG3o2CBNkNV9sRKDOXfZPPMvp54YEILhdsjEhpWdYoQQHh+7Zujqz5t4kpfk74TLh+MbUkb4HOu9gU2Sb5oiDKDSXeQMVW97hRrfkpLLgmj6/C8EgDgEaeleqhtnAdpj/XTLaJ+yEUR9pw4+ZhYJLlTY7P+23mKLpC4Ep3lClQz0u/x7WHSD32yJN9CyS3vKZSu7M/xVKJVDfOEH+CpoVRohzBjgsxIw9HOMzrMcQOfymJrEYft5FzZ5FPP/qwlyk0j+EhfR5pzo51eQ5Bm0O6Xf+/Ue++xTPh8XjSjZXcI8F2yMg==","layer_level":3},{"id":"8804d78f-e964-40b5-bcbd-e7221e840b3a","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Noise-Aware VQE Optimization","description":"noise-aware-vqe","prompt":"Develop detailed content for noise-aware VQE implementations that address finite measurement shot noise and its impact on optimization. Document the comparative analysis between gradient-free (SPSA, Compass Search) and gradient-based (parameter-shift) optimization strategies under noisy conditions. Explain the implementation of shot-limited expectation value calculations in exp_val_counts and its integration with noisyopt library. Detail the parameter-shift gradient computation with finite shots in parameter_shift_grad_counts. Cover the configuration of shot budgets, convergence criteria, and optimizer hyperparameters for noisy environments. Include practical examples from vqe_noisyopt.py showing side-by-side comparisons between noise-free and noisy optimization trajectories, and discuss the trade-offs in convergence speed and accuracy.","parent_id":"2d106356-b31b-4b80-93fa-30421fbbd322","progress_status":"completed","dependent_files":"examples/vqe_noisyopt.py,examples/vqe_shot_noise.py","gmt_create":"2025-10-10T21:28:24.425515+08:00","gmt_modified":"2025-10-10T23:10:05.021219+08:00","raw_data":"WikiEncrypted:oIcq6zzNaYrW5pfGoSa0fpX+j7mo9icvHwlfq2I7KyflxmSNEYZSWw+AaEGZcSCMFJcXCXMQkO86vPHrDoVoPlUxQ4MeCkx+/6KsSIIeROwskkmM2kVsfawGIvlfL33yGL5G/FBCe8yCRncxnVNm2Chl2iTOJflEqVS2GAAc9qoNNbLk2N1SFis2DTrwM0auzd5IE3jEWYBvGdDtbjmGnRZ5baBDI+FyOLKClyAKBFFJjZELQXCTQZa7SRKeeKCfSvAnatmJd2H82AnHRA21Ip5YZmO72t0cxKprWsNgyR4kfJLhzvUtA+ioyuTJl1l0MYmAJIxnSpqcVSmWh/5l87WpvoZJBzzhuXoABlyRO4VwewhB4pcwBu6sIa/9zzl3QU7fuxfM+HBuz4ZicKnXp71IyB6uFnVeVpvmhgVU4DRWQZnWO+a/XW+fDxVYv193OkiN9ZnnXp8BPIes6aQGCx8hBgOnS6IV5lIUmp1leZP2SiXYkJbOQLupj6soIjHDUfPJ08tRg8NJb2CmIiY6DIRECpKIJ91L1VXk6AomsW2doSb4TtykatddMMWgesAYjgzb1RR6vNNzUqBfafLAMXJ/gFjbhRRXZgOsI5Ha/qw4chASSakQ+pSzASA5Ho3LEnw3Ze4b1BnT9tiP8VJct+N9LJIwaZsSiHWvYqgo2wmwE9h0DrpEGZD21Q9YYGYehlJx85QWc6iqS+2jEvjvPz6G9+miBvi0bhTfOq5yLNDfnCjQo7Rwh26orhLfOMsiS41BiYAKqh37rFTcvcZ9umkgO8u3tvgAZ9NTlSZAfmHEOBlLn/FuMnKDqfsbz4r+qzv58DUsV2qD2FRaxm7lzzB+pXccAzfWmVA6C3b9kawfy0BwPUCQMnATfGFiUUfpu0DNGWHG1A+1QBk2gNgUzjvi+9+ym9R38KEBo7qOk72ZJnwVY65F/qxO+vzOEBvV1CZTwcrguJ2PMGpoZCwZ/NVdLxOpHLjMBYAHnumSuypqxXDuF5VB75vuMdGqokDnqeBzGD4cpO9Ou/CY5qqAQR/pBku5UiE1TU9ZTG1Xl0rxahpYsUyvd77VeNPHM+jom03JhZNw975ioFQmd18ApNeYo2q02QEy4xT/KuUXp+S4FdixGniArZWF07lx6UgsviAM2J2stA5KP/L2YmIv1gZK2cYIjozYhRX43tV63mBSQJbb1RB2ScncMMI+9gTOUex+XOlAjJIdkbzTSfZ5NSe2lChu3go8Ws08Ep4JoSpPvGPUib5In+LLKdmVp8Swlgd162t4wmcq7MY0BdYaJBrYzRb0uNt2H7a3ydFwLOW8H70kR9hAnX2EBVAf5G/JYxF5VVHevPTCtAwAEkgq76juOV7iObgkSwKvk8hRzvZ8G8VbkqFE/qVbXYWs3yiu2tzZMaeal8PZ580e4VtmKEpAW9OpNMXVaO+RjEkhhxM+LY0Al6tOKMz3inSZ/eHzL+k3tdQiY0HhrUwRdCDGsJhi2eRxMJrU5SDm3CkCu0bUdlylzaZ4M75vqzAHMecojigQJRCbtr47jK5XWHJqDA==","layer_level":3},{"id":"d0167ef4-00dd-44bf-9464-e284b7458d72","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Decomposition Stage","description":"compiler-api-stages-decompose","prompt":"Develop detailed content for the decomposition stage in TyxonQ's compiler pipeline, focusing on the rotation decomposition pass. Explain how high-level quantum gates are decomposed into native gate sets supported by target devices. Document the implementation in rotations.py, including the transformation rules and circuit rewriting logic. Provide examples showing decomposition of multi-qubit or parametrized gates into elementary rotations. Describe integration with the overall compilation flow, configuration options, and impact on circuit depth. Address common issues such as gate fidelity implications and device compatibility.","parent_id":"8508fff5-2f92-4c35-ac55-80934ab85c63","progress_status":"completed","dependent_files":"src/tyxonq/compiler/stages/decompose/rotations.py","gmt_create":"2025-10-10T21:28:31.939471+08:00","gmt_modified":"2025-10-10T23:09:59.223294+08:00","raw_data":"WikiEncrypted:r1dbw1ciiG74lYTjPig5U5c6zK+TOaM6JjRg92wFMAAyRCdjAgukK5yD6NVXcrrec0bIRZLuXNKDw5K4dE07QjSi/xxjoPLTtzDrVdtllM3Q1C5QDcLZbDDtIOZXZpEfmhPiWd4jpeIwIJ6pgzNmJwkO7C53f3J2W+Ar3U6G13fGqaPOatBYYI1ktvPFbSXnMy7QbUoTq1SPXShAFqTQWl32LacbRkkHsCAKCT0fQZQ8Xl1ww7RVEzWDN6rHZ156nKDRegHEoYrRto8sWrQP/70jLlpVl/6BpvbYqIIiJcabErFHreBWcfltn8wnRWuy5mUC+yBzitoH207tqCp89qEfXmWQq8++EkNUHgsio5EhZEh7RneLq0iB3jxPGxWx2r7hIVq6PNcFVusNVHH9i3/uI9SHZDeVbx22zQe+yQ4p8hTmQRH9si9U7p9+Krm3TlxuAQJMex9TJf/7Mh8Mr364uCKCUigd+2E/fypFnlELMzwvpaort8dyWBGizpVgfTdn9JJUvYvN2K+7j6txVgTB2jTguiIYJH4EssVGkGF5ZnZ2EOteJEp+onVfZecX18PPVBNB2jL1Fyx1oNRG15gfVxOCDMfUf13EEIfrBvLFayzQ+gqnm4O/b7dCxqTzbo6rvQ5IrK/hKgbrysnmESK/FYYYMp9mwo9fenYrmP/6DITHPcvl0OJfs2iOeOdmwxAowzDlrgAxX8BEBrhuJh1b4t8xZJMjybupMjSNfVceFOKghnRynKDhsSZVDkak29biBh8RRUxLqVigmdHiya0QqInSeK4+xsYx30nwNRZO4LbkqO0qb+lquEl1XC2bJLdhIooeKgGqVSeh8/Xh1Z3uwqXon7CELQmVfMt/dJI8ovsYjv/EZJkO+eFBlMcJSBGer4bBciWc9EyRhBJwTa8h/6VPm1UQhCG05xzJc320Z1oVW/cC6n1FuoyOZzW7R/fniq6yjoG9wWttl48b1/TWWRu+URen2EqoDlupWEf0xyyA4yLajZflVghTEKdAlRhiMetfynrWv2B5UliT/VPhRyszTWKoJ8BJQ9ek/FAtBv/pmh5QVboWBMFCKhkPYax2gPpBTtHlz4ZSzuuCX4lj5nG0IPStfTw+1/hofIWGnZKNWU5XBUzK0eoETIj0hQdSYSS45omZ/2yzX22YvZSpn+aLul0XT6KhPf2x+oU2S/oZkv6PsWe2KkHr5nwXHYS0rD0vVs+o9JaQ3W3TcQ==","layer_level":3},{"id":"41c67a10-496a-4043-bbb1-4b6372ee6c43","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"TyxonQ Processor Driver","description":"api-reference-devices-hardware-tyxonq","prompt":"Create API documentation for the TyxonQ-native hardware driver. Detail the authentication mechanism, device session initialization, and job submission workflow via the cloud API. Explain configuration parameters for execution settings such as shot count, repetition rate, and error mitigation options. Document the mapping of abstract quantum operations to native gate sets supported by TyxonQ processors. Describe integration with the compiler pipeline for hardware-aware circuit optimization and layout synthesis. Include practical examples from cloud_api_task.py and cloud_api_task_qaoa.py demonstrating VQE and QAOA workloads executed on TyxonQ hardware. Address error handling, job status polling, and result retrieval patterns. Provide guidance on performance tuning and hardware calibration data access.","parent_id":"f408be04-4cd1-4017-b39e-94b815d79ece","progress_status":"completed","dependent_files":"src/tyxonq/devices/hardware/tyxonq/driver.py,src/tyxonq/devices/hardware/config.py,src/tyxonq/devices/hardware/session.py,examples/cloud_api_task.py,examples/cloud_api_task_qaoa.py","gmt_create":"2025-10-10T21:28:45.873386+08:00","gmt_modified":"2025-10-10T23:10:14.433419+08:00","raw_data":"WikiEncrypted:C34GewOyK1SlumqKiPsSg1Q7++qbaPnmH/WOa1nfihqGUyhWvBV/VwHhgdbCp61DusoKS0Z6RvdpzPkCcyo9Y4y4wS2QnVzk/5hNpDS/BoukAjZ1wKVU/kQsI1yVGlPlmo8L3RNciO3lmo/VzdXb5SdDJEkniSaRCIwYh6jTuPRAzimCV072LKDUcexQqdtcbbK8xxpRdf/uXYkURSGLaF6jVJT09bEO6fp3RTYfETslEy8inE6suuw36xN5Cri94FjunbKsPAf893G6+hUtuzCDH27LTTQXsNf6sHXcX4JbaEuD1kILrdJNj3DgeZtGa7A7i1h8eKGMZSEI38ibCsaPqaiOai2+Q2AF6Fq9Yl3Qau3c7BGiG4IG9vpLKyi6WbPOyfy15kW0ZVWs4j4t1wDkP3tlopHXxXou8g8x244kTe5YDzw3kvg5SQ6lLtMBccVK6RudUSuMpOI08jRPj/U42PU3/1oF6cKP2iSLI12y6BDHefVZlqPENuMS/K7DwvukOKho1FI02nh8o8aiiqlv1p5ifqr0501YzswsOcKsXqsuZWRrbU9t0i7papLWKUzqtOLETzlTN47U+Fc1R7CEXDj7sVIsfJZNYWJ+nPZlDo0wQDHkoXPDs8TiPlYmjkol49KTb0KL8sjd3sZuRKbojHCLGUPcSqB1gieIn4ZWFKpVAA9kNJ8raQCuuGMX2GevPO+F4BTxL8kG19d7BrF5tj0ANDu+rw8ImwzI0SXAQxccaQINHEZi+ZsUh9+jbdjBioY6If9GheLt2Wdd+lGG+mfQFTR+RpzBPVTFnIyUeXxgn5eWcMqvTpdh4DKAiXXjzVhGYTJscdxEqNfdmZNDvhEsFVWSLi+0C164VKqNxo/BoAl4O0ApVSamTAnsOFaIl0zn2B43fw+IX9zdFFVlafUSFc/m2v2d6if2vr6FJaVGDK2xzmrmvGQbsKaZBlX+gnG7gyUfQ8/45Qxj72pBJ4tLEVAkm1rcS17EoxtRSBMjoMyXwRR4iRhMyZqgynkq99GYLRAfuO6/EIRgNPyeIuJ5C1G5foMnQc1+W1Y5w3/QLIaxdi/vbkRAlhjhBjWwffILeBCBP+XkRQT4a+N6gpDBoSGH/aRQeCV96sToSNOGviO/SDz93tczjlhisKMNYFId9r3WJe0jZ4QU7iJsrsJS3kJmPvDx20AVv669FdCs4y5h8EDS1nj/r9Kev8h7sakoHYzxI4oejRheVkRstTRZOJKY2lCuWqzpLUzxHrFYSk+bAYmqbXS6NLvAl+AwhBL9UyRjgEF53MWosDDDvEdayDuKovN6b4UG1Vg9I9pEJXxfr7FyfqHJSEzq10LQtH0srIuCq9wKdErdPvcMgar1ELLFhrGMKkmLKSZZLHWn86IYZY3K1rFHVQvzyBqWgUPg6/pbAMW+sb6xlfZ6+j5Mn7uoM9z09SSg29zlrBCtN1D+j+NQ2UE9+LUYi8jqXOp4TVuxMPsF5qjwhz30OsI8spd8ouJZiLw1PNES1GasFBa+RLX959ro2OXA0yWoXJsA/qGIZwT7Z3yiS0ld6S4gTmPB6DVDFgTzuaSeA8eJj4dZwMn9hE8W8/LIzy2Z9UnvEZJoBHgJNGgGyLLSS4TJGXiRw2hwbeG83sDmWe0PzBF15oY0F5p8btR6c/z7Vv2FrhkD0lqSRlDX+rR86Bc0gp9GaNIwbeh9JZQ=","layer_level":3},{"id":"a80bc55c-3284-4428-a22d-23c5d467e593","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Statevector Simulator","description":"api-reference-devices-simulators-statevector","prompt":"Create API documentation for the Statevector Simulator in TyxonQ. Detail the engine implementation in engine.py, including initialization, circuit execution workflow, and state propagation methods. Explain integration with the base simulator driver interface and its reliance on the unified numerics backend for array operations. Document configuration options such as precision settings and gradient support. Provide usage examples from the examples/ directory that demonstrate statevector simulation for variational algorithms like VQE and QAOA. Highlight performance considerations for full statevector simulation and memory requirements. Address common issues such as numerical instability and backend compatibility, and include best practices for leveraging PyTorch or NumPy backends for gradient computation.","parent_id":"c0aaeb49-cf8e-4379-951b-94612e4ef81f","progress_status":"completed","dependent_files":"src/tyxonq/devices/simulators/statevector/engine.py,src/tyxonq/devices/simulators/driver.py,src/tyxonq/numerics/backends/numpy_backend.py,src/tyxonq/numerics/backends/pytorch_backend.py","gmt_create":"2025-10-10T21:28:52.76945+08:00","gmt_modified":"2025-10-10T23:12:10.394662+08:00","raw_data":"WikiEncrypted:C34GewOyK1SlumqKiPsSg1Q7++qbaPnmH/WOa1nfihqUmo9KaHLF3ukaJkGLIA/YvvGq1cwvf8dEDuu7Kp9DJebGGAJ/nyIStAHj6PJh0bPICMOU5JEU+gASS6D1dlJRx1YBELes11QFMXpEd50IHmxXHeeBZi25fZOcmZCgd4QCr//axf+MjmnuG5ww00sV+JCeXF1jpcXhobDaSv59szxtlUdx0H9L47W7prxWBXjUNDy3YcrN+7yxOF/jNF/nAMubP4y9jRYgeiyUj8kVq917gpIRDvUbLel2ThaCpjGUYYc9TDRmUUzM1GfvT5G5Tiu3DuDe6pkmUEVfSs12T0Xp1nAmFDOYJjXlMy4JIpfTzu4NPNho190H5y+FRMzfEKwn8vczuzU2N09B9JmVOaMiLTGHeWtZlVcDUyLx//10aZzzbJ6nKylKZPn2Wpzab/zjUTbZamPkZRYSGdPX/o/VzjHi5aw5j7YJKS6fXHtWRrceDxduDBCuu4uI7jJ/93kKO6eIApPbY969+2muIX2iF80W1V51GKo8aaoPYQghT3t7a+XgfMO6TQab4GDngw7mfvtCYuKLjdFWddahx9eEwoN/hEDVhuiUAHm+bRnYPU8t01hO1m2RKU45DM6+s2fENALCjWJJFl+1hMIrcz9HjEbpzcp11VT5HdLhyfr6/hCYB62wqRy5DyaaBQDjpF7ZFRHuCv/MlD1rSSXevwH8t438PQ9aZgrpljejz8u2wQJzpFyzZZgZ+h7y0z6B0pKdXoBgtj7W4EbEuRmNhUQV0fPHHkCpzkM4p/c38L5wkyGO1ehj6PgfhLje2L9kxbysWOAWJpdUeDextStY1pGxMWStjFH/1FmOs1J6DucAg1ZHZsDaqT6WPOT90Z4MtvhM9fH+IX9jssYYERep5zbOanp8CpLAqII+meIAkI/fMxhpeaoSJz4BSxBFz3cMJY7UcocviKJBHC5caNxMXDsC0VzH3MGMZ1nkroSB4IkOOkwExHTr6WR+D8rwGwnrFhjVPWUpLkPpHB3V5XKsZfjdxsuQgH7LK9TkDwWUWDar3CJHOchpW32qHDg/SZOesybjgzUp8j/kIQammAGnClB/raV3vFVNWgaIIQnyyakABLngYnUSD3b465GnNyCdeu7+PJgp063dGNdYU+7dhaOMn5Qv78LDUrwn/k8LPz8fHn0Oz85XUbctZUmDg7zCi6YUcZulM6gKcYV0Gr5qphaA0IK5YKZYhL/xQOsYGfXjqoy109XQnzqomzao/26/wbpUTK7kiqsWIWk/inZRUnDZhe3D+ylpaH4jXpdZ8Z69sNZw603oXR5YZGXKuHxqt2ZslotZDRj+PH+dbIcvwyfygLjYvc6b7OawMpG9fG36OALaahR6rzYG0YBmGkizKqoXjzaRk3yMTuAkOh1ZdlYk3pVUrbbrD75PkczzE1Lu7bDXUGG74WcxrjLp3MP1oXi2iEWqIwyOiY6FcPar6KbkwLHaIBYrYXNuGUxb7SYJmRytXVBCGTcvUvT3HheToQ/2ZfowOROB5sQXSTHN/1qtpSwx1O/jQgyMcAouypRZddlZzUShz9ADrYENW2lNW/BbXXpiXEi0+hCPFRwkIGrGiVFbyE5uAWwmSkdBft19pFyBd9orVM/ySxMFSWknPAPN8IuQZOOWMZQaFe5tuFx61jcGxj/VNyVS4l5WFgCF/PHueVYU6YEgM99rdh6/hxApWvvsgWl58HAh3nQnMWGsdT32krvhR3HZOFxoqzxQ+tv0Cyqxes/vTDVw9gjUjXPNc0V05IprmyhU+k3dzDX5GWoWEAgU9ADVWQgqhJgr1vB9YF8rfh9EkQEKMSd+","layer_level":3},{"id":"dab9665d-78d4-4f19-866e-2f23b7be5fb8","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"ArrayBackend Protocol","description":"numerics-api-array-backend-protocol","prompt":"Develop detailed content for the ArrayBackend Protocol, which defines the foundational contract for all numerical backends in TyxonQ. Explain its role as a Python Protocol that enforces a unified interface across NumPy, PyTorch, and CuPyNumeric backends. Document all required attributes (name, dtype constants) and methods including array creation (array, asarray), mathematical operations (matmul, einsum, exp, sin), linear algebra (svd), random number generation (rng, normal), and autodiff integration (requires_grad, detach). Describe the purpose of optional methods like vmap for vectorization. Provide code examples showing how backend implementations must conform to this protocol. Explain how the protocol enables backend-agnostic development and supports seamless switching between numerical libraries. Address common implementation issues and compatibility considerations when extending the protocol.","parent_id":"e8bd0624-be4d-47ee-a6bb-9f7c7bfb08c8","progress_status":"completed","dependent_files":"src/tyxonq/numerics/api.py","gmt_create":"2025-10-10T21:28:55.811743+08:00","gmt_modified":"2025-10-10T23:11:33.918903+08:00","raw_data":"WikiEncrypted:eXTykzkDgCICZh19Bs/J2HJ4GiXaRhd3vTPxN4vUeW3+7HGJr6DtnP5PWYnwng5QaNOmL5DWgzIafCv7VjGc2/wGQ+Ip/PbN3zfAvTAIG/tD38IQQ2ZAdGE4JGmikbCf71Ftmg6J/Op6tiWATpHXn+JCRany3wS7/00bpMgB7VXkq1T7SxdMtqJugh8A2ciWSLD5mPMHRgPKKuYI4y8P8TM0+DhHHL6z21l5++tDp2KybTj3YVuADoW9anSBrAIBMk44m2/T7iXJ+3AwuAQpS+o6nD6ix9m6ERUE9ZsJW0d2a3l0X65bX3WyT0VghfC0x2X68ixxBXV6hARqnO3I8ZmComVZ5poSzbe2atDaYEJX5zuoosmp9shysL+oG4jizmFSNAE8ENbhGy/7M+wq0oDIPtqUHkqAaVQxK/yNddtjrKApXLfJIABfsxVE6u0LwwkCSdeEUDCRULmLU+zfQJvgk1lLmyOyTtnhVAk0vB6cVdBTqohESwAbOLS77LmKrzhm3BTzmmWzGCqHVe1xJFMfW89Js0IKNqh5Woo8uPLHBzPLisVKvap0l6udQZOqcCp+jB07MDKT9LuQvPXch78qlNrgVd/eeD353kdouftQQnkOsPtha6sGgFVLKO7d36831KPvZVb001D5sPLutIYftaZ7MauGhk/LRFlJVEhzX3Talt0LZfQfkXNbdgxw4NOmwq0TQqjavJ01hHtTV4TNlzWfEmY93LqFjGRL84ymgpNVihyXQRioWiGU80ZKq7pAMfSCs8rTEPBgWMSHLEOnM61FijtYPoBYlHZOcfFz+m+dbXLllX87sIcrsc/hQ1mQl4R0CVUZWSmfFGhEQoTDldGIBY40ge02ED1zySWOFQJA3VCkXdgkHJzqSSgMKffhyM8JemEF0En+d6+VEbjrk0v0rswaGHCcq3RjiHwZVXOn8ZDKC6bJidssNO7Ykok68VHrHcGNtxjBBj7nK2pO/DEOp5lMPBReM5V+2FYPDKnUJZ5JfXfY2xP5LPKN0rn35x1zImnPZr7m8Enly1TOkOtvQbZ8fGejKzxgEtn3NpyXwXCag7jCB9C49dsEmX1sKlrBAdpfLf2e7J0TdMxDFlBfd0CJib+yOpCCFyvUzyu4oHgNOnVGi30JATmv8I3yJmGY+O7wha+2oqDeZdIp80SFvkFab25XcSrTD1YIaJ8Kt2W62WXonbgG9Lw3ngWsWORbCfQa9TZgAF8OrLcfaX/oCfe/ncxDuIcBwkA9OPbUuPwB9HcemMBXHH0xC2z8EhOIJrIbGp9hB4TJBQ+wwTzT/laL1zox0AzlAnGeF5j+TYVJysiLDIeCI5+RUxOVeQv827E3AxHd/XhoGuWEevgDOavoGWMAevu/rTFtW/HvSCU+Rn3DVIy4mZYQaklaz1EZAzsJv5/spLqchsLFlUPC8KKJTtUbGPX1cArLXRrzAnt4iyKrXMyyCxzlHaCC8YuQA2TU5Unpfz2R57gMTrMR9RmHswpjrdww7mnNxDTdGVxiHJ7r793Kh8RgB5W8C70eZrqaaZ8EWzAA11HLOXmAE2CDTisL4KS07UM=","layer_level":3},{"id":"c4c05f68-9315-4d95-b71f-26fb64ba1b27","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Quantum Library Kernels","description":"api-reference-quantum-library-kernels","prompt":"Develop detailed API documentation for the Quantum Library kernels in TyxonQ. Cover the statevector, density matrix, matrix product state (MPS), unitary, and Pauli operator computation modules. Explain the common utilities and gate operations provided in gates.py and common.py. Document function signatures, tensor contraction patterns, and numerical stability considerations for each kernel. Include integration details with the numerics backend (NumPy, PyTorch, CuPyNumeric) and usage within device simulators. Provide practical examples from examples/timeevolution_trotter.py and examples/sample_value_gradient.py to illustrate real-world applications. Address performance implications of different representations and backend-specific optimizations.","parent_id":"f5c3c08f-a7e9-42e2-8c07-6ddb5fb47bf5","progress_status":"completed","dependent_files":"src/tyxonq/libs/quantum_library/kernels/statevector.py,src/tyxonq/libs/quantum_library/kernels/density_matrix.py,src/tyxonq/libs/quantum_library/kernels/matrix_product_state.py,src/tyxonq/libs/quantum_library/kernels/unitary.py,src/tyxonq/libs/quantum_library/kernels/pauli.py,src/tyxonq/libs/quantum_library/kernels/gates.py,src/tyxonq/libs/quantum_library/kernels/common.py","gmt_create":"2025-10-10T21:29:24.279336+08:00","gmt_modified":"2025-10-10T23:12:13.123027+08:00","raw_data":"WikiEncrypted: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","layer_level":3},{"id":"d6824d70-ace8-40ef-8087-5f5af1c80e00","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Fermion-to-Qubit Mapping","description":"hamiltonian-encoding-fermion-mapping","prompt":"Create API documentation for the fermion-to-qubit mapping functionality in TyxonQ. Detail the available mapping strategies including Jordan-Wigner, Bravyi-Kitaev, Parity, and Binary transformations. Document the fop_to_qop interface as the primary entry point, explaining its parameters (mapping type, number of spin-orbitals, electron count) and return values. Include implementation details of two-qubit reduction in the Parity mapping and checksum code usage in Binary mapping. Provide usage examples from hamiltonian_building.py and hchainhamiltonian.py showing how these mappings integrate into quantum chemistry workflows. Explain the role of reverse_fop_idx and reverse_qop_idx in index ordering compatibility. Address error conditions such as odd electron counts in Parity mapping and unsupported mapping types.","parent_id":"5cbeda6b-e47e-49ae-925c-755196501fc0","progress_status":"completed","dependent_files":"src/tyxonq/libs/hamiltonian_encoding/fermion_to_qubit.py","gmt_create":"2025-10-10T21:29:39.4213+08:00","gmt_modified":"2025-10-10T23:12:51.694631+08:00","raw_data":"WikiEncrypted:5f2I+3eR0GPEzObW9eh9RkfdUJShxfvfX0JoC7jsw8O/zWnh7Xd1/Ena4eZ80ffpSf6Sdjn8nkOB8ReVa6UjMXUxB6gvV+JJLty+tF9N1nMcxgTgfu5AYCMXY3OXNLxc9x/5Myyi9vPWbBpm3jEgq7OKVVNAL8hVry4OPzmxhkkUqTozSz5RDrMYi3mnQT91pLS8UN5i18ygOwiwYfmUttiKINYb4lfxhcsqoxLCqQybZaqNIS9zh5j8OFcgaFQ/oehDF0aG4Yvvelug7Wkl6a8nIK/aMbNH4GuBPg8W8Lng8dv7e38Kpr9K1EgZ46xehQcUv8jUIX3qMG14wHN2ex2yplOFQfax7NCA+o7jLadoPLWqC6D2VYuf9MoU4HBLBPA+cON61bv63GsfESCH9aDwOfQsQ1nSsqPpW7YVPNXk2fKWVmS1oaqS51DN8zq35K7mPZ32xxsxfCU5kSHDE+qsgDJcuIisY3aDc9RI7I8hxmn0CuN/uhIH9sz+a8WorIem6TzccBQP4OH3QYgLxwRqy2UPMFhD1BuWKeCptIxxfpyTxKBw3CnJ2/JNRH7hqRcWaGCN36Qv7seCSrCpJ1miijsFJvjBsgswCOrqhF/Gv4sI5zvejVe30QnuMOKTGifn0TeMG5UJJouDpdLWOj3Uuy4nPQOoZSWamgiaKEtvUPhJ3/p3d3NzmjYZBizyp9aJyoZm1Zczy5ZOlfVfHvWei0z1cslAOixK4JmAxTFmgE1rJbiUkxw+JcVAyQLjT1RJTKK863HCUeLgNqtXyyRlTFAFr4S8M5eMVm+QD0VJ9xHTUnrPvzSaCmLdsjBrquXdfUv8a9hPOwLgRmX2bu3AVvTowlKSo18ftIHtDNAWVSGXcjyBXAUSmn2MzqQX0y9Pn7jACu/j1fAOWvRtxc0zszTm2Pp1/bYq7G0tdWLMxxfYjoup0huDTZ1Qt3wUy7+pVd01UZD6RpkgxC4zsbpr5lNIRSbonCzfMbz/6LLqb0Jno3KnKEb45IXJMLqhIhsRiVKuedViAevdE9sZX3izrY/wuOZgcFNj+X7ZPgSnzKxAx2RHFC7JZbu7jIvUHpyp/nsHvcFqsg9uf/bdrMF8qrku1Y0GyLMoM+hM0tR4+Ykwz4zS+/xolQKZcHTHxkCOpLRdUvVkueVtkSgG2VLDGf4NFc16rUTeN8vK387PA8zXnqmUbLpi2Ek4xhX58EJrwrrMzBgy/Ob91D2p/JaAai+LOTvtSqM/EvvpueX1n7xcZDyIefOU6iDJdwWw3fYCU0hV+UyTPcOn5T8/6aSeB1RevY6ONErmzVPx+4ojlwzESdStwyPsVxfp5JL5VRAEAzG3PRPaM/Q1LriOGNF0v+7hY9Vj/d1K7Az4C2E1Uj9cAIb7QQvpWr6sK8Ithff5zRFvE+tfapKiucK7xFxg17OHvLtFOsBtV1sAP/R19palSZhjQKmHdaob0168rCbmuf8FnMXrOOtX3Qf6NZx/k8BuBggBnMIDrma4Llt/t5sX6u4t2XmKTYtmwRIy6dCdSRyav/GXxNa7zNI4bVeVomnI4riw8r+dN2aDhxRjykPfxWrstyBOzRHtETZoB/urOrYWTSv1s0Kdlfh9HjCSWDvTe1bCL076FmHuOW0=","layer_level":3},{"id":"b3922f83-67ff-4866-aa1b-6b2f5107b748","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"VQE Circuits","description":"api-reference-circuits-library-vqe","prompt":"Develop detailed API documentation for VQE circuit templates in TyxonQ. Document the `build_hwe_ansatz_ops` function for constructing hardware-efficient ansatz circuits with RX-RZ-RX layers, including parameter layout and circuit depth configuration. Explain the `energy_from_counts` function for estimating Hamiltonian expectations from measurement results, detailing its Z-basis assumption and coefficient aggregation. Cover the `parameter_shift_gradient` implementation for gradient computation using the parameter-shift rule with ±π/2 shifts, including shot allocation and basis transformation requirements. Document the `evaluate_energy` convenience wrapper for end-to-end energy evaluation. Provide usage examples from vqe_extra.py showing VQE workflow integration, and address performance considerations for deep circuits and noise resilience. Include error handling for unsupported Pauli terms and parameter validation.","parent_id":"d5c1aef1-5986-4ca2-bba8-ba24a030df89","progress_status":"completed","dependent_files":"src/tyxonq/libs/circuits_library/vqe.py,examples/vqe_extra.py,examples/vqe_noisyopt.py,examples/vqe_parallel_pmap.py,examples/vqe_shot_noise.py","gmt_create":"2025-10-10T21:29:43.35909+08:00","gmt_modified":"2025-10-10T23:13:34.151823+08:00","raw_data":"WikiEncrypted:C34GewOyK1SlumqKiPsSgwvphYGzcvsk3C9IAaxg2TNDKbF88Jq+klAVm68ro3JFFMCFBniQbAUXa3ElK/f4QloTAbAvDwv+qETKYjaijHo/3EWtv6QPhvoFy+MGGeybzXvr9RhyFWGU2yFlfXub4OODW0RBThJjxfYIdhbY8Y5Qx57stjr3mIXyowxHsFHEnFtukSnVB9bguWzCfqHUkosDHyxfwcD+YgJTe6I8hAagt0BaclwzdAz1xzKkJprEvJ5a7dK+OmQwWmITbu1Bz2NCLb/vzPg4Eb0JGw4D/ndD5VmKkAg2mbLbUex6xaSq0U5woJVIQrp/fY05kDAaqDhh8z2Y5GR/V0r7dU69zXZB0RR4rSM6txD9Du1kxSNpBeUFuGoxrtyUoHdBpECOSt0OzBEKISym+YWB1Zy7BQwQrpnEJ6KGZL+zHpQQ4sVjyLh3PSe2sIYmXassMohig49pSyMKHrgYjqjkvJvR3GfKXCqMhBx8GHLYQc9K98ld0YfQJmDmLIswmMi6JK4lReNk+5JjCmAoE83tBQ3AtBjshFLQH5igt0x9ZRcy00r6WbBkk4giUhYJgu/o10ajX6RPnJ4FujdGg7Jr1nkq2oOg0rfkcR4x2w2YUlIaJs6os7DWUqal/9cfmquc4GG4Yrqj3uuonSZFq5VBqSmR6wmb/sW6pGBZ6t6nSyNas5nASeScg7E6pOWojv3gJdc6Y4G4KeGQ7MSZ1UX98LowU42cUIzexTW5b715nZXW+aBux6QBRpiq4O8ALEIg7+PX4i1jyPmP8xYSiqnHKnhXVqGLfmpys8j8v9O3PwR/90pNiiEgEfttD3UZCzFbyJV3+wPqn+gI9eV/mPARaTWzSnNo5ZNc7QUqs24QPHR23ti2SgX+r0fhUTYA42fCc4VsWnuQ+nCfD5bxGymbybHlR+qd4CNrPSt1RDcEJdUNUhBltwp8gdFnpqRwvzNfxNm4NTRvp04drI1b3zyjoRiOdraxPziCstr7pBZNqYAiwEe73383P3Fpf1VJG9MSRAZL8/p3lHp+yZ+UYFE5K+z9lXbGtAL0MaXW4+scx1klsu2WwvTsT0Px3yrvXqid5a2BpMMIFoyzEnTbgMkvDGtdim0lp4MdSAZbyPEewTeBaiMZTaHybXtnnBLYRBbSKXi4/TtclxyvJMh8t4vj8Gy/DwRzBI10QkHUYgEwU0VthKBSW92FrzbOJrx0lfAiXFqpc7Qo7EMYztn2COX3qpRGi0DXl/9BumqBbDM7EFIAMZc2S9dE0kDZM9ohLXKLweZMy/e8b26LPKVr2Q8LckruBBm/SkmIhD6tXr54F9dP+6zQ3eTbMYGDBXZZ9O4rp2QD/JNymFJEoG3foN7hWXLyX5OwfanjzizqhdzDOMTrg6SI93avBAlKdXmVhGyihdFWU6hIfbtCQaLNn4U/hzCb/C8RTPOKZvn3E9xK5mKUssKCKm2X8rv2FtD1nUQR9nzIv0vSqqIZfvdFU4ANXJVJ0skzNfDacDJww1N7rDUm8pK+XZxuUR7MUwK+UMsAZqGOh7eq3zWEY0Iw6Jckc81FBE8zveCkNVnvWfLrDM4vElLK8IloCJUKGo0oF3hpK40eroukgm9MrusT4HMh74Xb+gvtdMkP7vkPBvQ4UK2MYFDHlt6TXCNMX/qtpeNDpUzjVBYDQZeGh96B54SRmBUlss+IBHKNirTOhCqRFNC7tR+lUgaU0/nbeY1IlOnF7EHUVt+cynaFghQ5pTcoLCg7tN1EUurkxZ/gj7dEJz/M6/pcbfjCI962exRIBI63uq7kLQAF7XEiL5ZhjPbwUcavRUg=","layer_level":3},{"id":"2ada98b4-60c4-40cc-ae6a-72742aea35ae","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"SOAP Optimizer","description":"optimizer-api-soap","prompt":"Develop detailed content for the SOAP (Second-Order Approximate Optimization) optimizer implementation in TyxonQ. Explain its design as a native second-order optimization method tailored for variational quantum algorithms. Document the algorithm's interface, hyperparameters (such as damping factors and convergence thresholds), and its behavior during VQE and QAOA workflows. Include method signatures from the soap.py module, describe how gradients and Hessian approximations are computed and updated, and detail integration points with the compiler's gradient computation pipeline. Provide practical usage examples from vqe_noisyopt.py and vqe_shot_noise.py, illustrating convergence characteristics and performance trade-offs. Address common issues such as overfitting in noisy environments and provide tuning recommendations for different quantum chemistry problems.","parent_id":"14432827-d5a5-4774-b749-76056af792a2","progress_status":"completed","dependent_files":"src/tyxonq/libs/optimizer/soap.py,src/tyxonq/libs/optimizer/__init__.py","gmt_create":"2025-10-10T21:29:46.522758+08:00","gmt_modified":"2025-10-10T23:13:44.818504+08:00","raw_data":"WikiEncrypted:mQTetUyqAd1osAW1jpeHl6Yx1Mt6GkGyAGLwM8lbxSFUS6edy+4zEoQZ5YDSFpXs6OgW0W3Xe7LLkjwPjcgddZI2+CPaIYomGckOwMAMmvGS+i0iik5yfzsWIQMoMH1kncWWQDhVdo+8fKz12D1wXF00vdjASZQdjtgfzN0/oRuAbkPgEC8jq1O1x2L6qzuNdBqrBf1d+OrQVywoMIO7apLbypSlycn0r6D5A3G4zLF8ddpvO2fPQFUXLVsAfdIufziX9Z7XP1J+Ef/evpwykGBEJNyxHLnBJCmDYlppbrVpDtdAlJORF8aeQ9DLdeOJdSWCZYUhj+q4oJk/O9H1puaeOpMkBrNu51Wmj/eJ0y4vruIMJTX+lyXo1AQQ5AEHTssdZI603arypREyjPpNPTkDRIqxIi45nnJYr6v3s6CzZjw0i///beCN7EfVPkT/xpsUOv2k+hdqyIf41GBCu1j4NCUiRHYfCMjIeTfGsCTU2L23igjwnu1OjGyZ8eDPBLaOsclm/BOkZ7buRWZsdsYQQwwxFmAci+cKkaj2cmy3GwCZECaikl3PLrync9THx+BQdubf/HsIhllYhc5WYgpvkqW8/KXXLQItrH7p7wWzQybw46gMIeVA3OtQ4nzkIS1R0G6OZDFXgOg2I36odFoOjIVliMgaefHuBS2KnqHiaw+uCJmHparVbGiqE0qdRnrUAGd0SkmVi49oo15qOPVMra0kDrDFsNtQim7nODh0aZg6X2E91+rUSpDm7UeGRtsIQQJ9mSw29rp39zhcDcw0JDpgFMqRhVaGDCK3ZccaqYE8mWaoCgCWrtnY/30r9LmlMwt2oNB6K5Vwhjd2g89EUqR+jyZCNK/QbkrAOEVD3LfY1zAMeNqGEeRqKRg/siJES4zCAcxPKcaFnqukC4gsQujuuRwZEnR8fJVqJiTOcpJ1v2HWTNx9l4aljpZj2kgqem0Uqctm1naWMYC53SU8CYgjlHMum/PBejIwRC6kGkAdKoN70TRrSS7PbsM38FXodEf9aPaCllLDVzWMN8AXiFw+Hca/QwPHNB/NZXIUgLj0Bg5lS02ad+BoRqdAMuaS++hv8pDnIs8ugxjgyODsfqHTJScY0af9kGIj0++kWJowSTB7RhOCczE5zlZy1Mgrgt6dE3w8zX26i4IPYX5SfPg/bZtd8BqAS4YrHIAONauTfRTtabna+WgOMVUdI/muJIkWoLmkOF0QAje0Edrat3DPM8VxGAAi8ROVGy6L71d9HZbX7EEg818VAZmvSif8qSSPcaGfpiVP3vsCCMfwhNesPSNXlYA3/bSFVnJWR6WKCK9bzfeEtBHftVfs+v8cy8c3qLhdSDaT/JRi/XRiBiPUrIsVpQv1gLsnFPC65Q96NxdFcx5ZXqVOb1mzYxWj+Mig2JUwDThDLr8hzRoNV7odA7rewhX4ZqkDQZZFduVxXkrU7JDotQg7FxGY4w86IOU7S9JHrhoUTbO/yfRbAzMHrgQGF8iK8guixP3hkQyCO3mWRwuLeGrme6qppwlL02/WE752/Q8ysD89ldgzm1jy+mfbnq4G6A3Sowke+2uJqwKnlH0foPH6VV6GLPF0N22E1/BPJNzS9xHgMQmGpg3UQVkiyL3EV0bfpX0rxHe79W79o5g50VvprxyjKEzcNuXIjLUYhdfCOyxoGAf3OKQIQW0RtYT8G4GYXjgWfHPFNkCT0O+DceEikJOF","layer_level":3},{"id":"df2a8baa-b1f6-4960-a54e-3a2001012daa","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Device Runtimes","description":"device-runtimes","prompt":"Develop detailed content for the device runtime implementations in TyxonQ's quantum chemistry applications. Explain the UCCDeviceRuntime and HEADeviceRuntime classes that enable execution of quantum chemistry algorithms on real devices or simulators using shot-based evaluation. Document the energy and energy_and_grad methods that implement parameter-shift gradient computation through batched circuit execution. Detail the Hamiltonian grouping and measurement prefix caching mechanisms used to minimize redundant operations and optimize measurement efficiency. Describe how these runtimes integrate with the core framework's device abstraction layer and postprocessing pipeline. Provide practical examples showing configuration with different providers (e.g., simulator, hardware), device types, shot settings, and noise models. Address performance trade-offs between accuracy and resource usage, and explain use cases where device runtimes are preferred over numeric runtimes.","parent_id":"257c9ab1-368f-4c86-a241-63baba469a92","progress_status":"completed","dependent_files":"src/tyxonq/applications/chem/runtimes/ucc_device_runtime.py,src/tyxonq/applications/chem/runtimes/hea_device_runtime.py","gmt_create":"2025-10-10T21:30:01.453287+08:00","gmt_modified":"2025-10-10T23:14:48.73132+08:00","raw_data":"WikiEncrypted:W4RZ6LTz4rg+RteR0TdbvBNDueoXXSKSWuo17MTsSQIZAJDTWUeLuC54bcVU1eWTubXRsFjB4yZh5lvkXS1d/NDLbvHviwnuyTspfVwrhoOSWOHAEomz87qPIqoVqGBc6N9v8doUnLKgbvqgCOHKTPfsJySzZ2o1wl+EJgpxbXgr9rSjBLH4F0ENV1aTccqnaQqkNzzsZu50GAABOMtZt5j2v+Wkir4gCX4KvwqJapiWCk5OuORn9cmcXpB1flor7fAR3pVeUoN4BXTw8xNor/pc1z6/fuMUHyL3+LTP3ROq9YEQIwVjphC4CXayYidnz4IRHYrC9TkDEwnpmcai6R6KX4N1qEq8MOmZ4JLJifi75fD2UpkPfHmcTkLXX1o5Q10iI6lmcn1mjUEWzB8F6TBHutU98w5MPSVyRnvaoKGQakjXxd1K1FdsAjjKwbFy1p7jF/uJ/dk/Rz3OklGAeNCzPvq/2MlgMnwk9jERAiz7ll5Rl/1AX9nJCELIqB1srJEltqhP5XS6CVWwHhK0o/p8yRAD+AHZlZAzhpR2y7JCd15+BaFivp1G+SUR+oauN1cXv0hl6acttN6HHph36rt0fJlHjxD0jKw3lyM55KhVg5tnrifZZ+R5H5RyCCLYjX4SjYI2CeeMX9lk8dE1bi2rRfO/UvNs7P7acoS0HPM6ItYiBHlQqqs/Ud/u1KXDkLRVNetMm6DOKwW30VSP4eEG/CxVQF6g4zvk8ncH8UlcFR2Mt3z1K23lTePB9FcV+oMZZjlfTxBoXmjUk+UhAY7mufI7ETTrX7jHNlKgHnsgE+8u4bf4stUPcsc/UpdrFlfmBltQRpfNeT/zB12gaNHrGM/zNl3l5nutBlnUorGqPL6E7XqdYeb/s8KSqeRBRJweWdbb28FM35mYhD9UX9I/qBR5zFx+6+hwjmQ8qyD8AqZVmpgEKwbD9dGEZyxR3Ofp+ERtYrODmVmlCiwbIQm/X5BUPT+6CsYIOkaBeXqDA4qJrbyHvm0u0t6fkCRZcP+ub6EZnpATX0/ybKiACpYCE3+0XUSFIrI36tUcv/gNyb2CEGEOJOpi++hto8ToQXbrRL6p5zLyRw66gR0DgOfDTjg7KtuqDpAGB9oEd5F9onAJKnsqviWBbRx+yDW+LsEJtPrb9Y5mV4RTkyylZThbXfXo87Wv4fiRU4ctxxc7zELF6WfxLnJLLsV9INu71brCcHg6T2MtX/U2cnGiF/Oiz0gEmUWSFRh7A6TtihgUrE2cjEUcy1yb0u7OOYiPXfNWtfWXRSGiMZw9ztN5pglWtNNjjsaBvjLNKN8Twr2JvtNEbsr9pWlsBeptzj6zwXfBiVb0ylu8GL1wfJlZo3KecArenJ9leftwB4/5jKyU/ymuIXgBWPHBtVAKm2w7aCiu+Yb59N6dYvnArte1adMWBQbdFfg0er6RVOUFyT9BgMmok0m1be8RKllRxlAgZTCT1vDFSfP8iq8YDBTv2dr16cUI2k5XfjUIQ4pAvMF6yvOzAeUTPR1ylC4L2wxpPkqDn8JmUmBL3eQZTs50UhnAj99XEEXyTaIliX66iHYS+llC37WJnU9x4NfokClGzugfexBqYdodmVRpDAlasHasL7mC76ixoL50e3dJH/suWoicUndl0+354hjcuvfAHE00H+C7H7ipFSmgTIU0oso+PzFuRwQvYa56QxfMxTXBl/G0YJz3CF6bs0nLLI4enDBBxBR5bMwcAsT5Ed6lk7k+6YLeCuU43QtmFgMb+hLjIKkRgZwlbN0eDZVuROtkRGyxzW8cvkL+nYFpd8h/oZZ4A4aTOoXtEW0urcO+Mz+odlCMauespqgqcjMgj4lciPRH2GmQVH9OyYL00oX0xYfCnuW4gegB3jA2JjAHU6Wqxp3uZNpvYhaoxX5V6M4g","layer_level":3},{"id":"7a0a123e-fe97-4556-b48b-bdc2bfd3b6bf","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"VQE Chemistry Benchmarks: H2O Molecular Simulation","description":"vqe-chemistry-benchmarks","prompt":"Develop detailed content for the VQE benchmark on H2O molecular simulation in vqeh2o_benchmark.py. Document the integration with OpenFermion for molecular Hamiltonian generation, the STO-3G basis set configuration, and geometry variation setup. Explain the fermion-to-qubit mapping using Jordan-Wigner transformation and the resulting qubit Hamiltonian structure. Detail the Pauli term grouping strategy for efficient expectation value evaluation using measurement optimization techniques. Cover the use of the HEA (Hardware-Efficient Ansatz) with linear entanglement topology and its parameterization. Include analysis of the timing framework that separates compilation staging from execution runtime, highlighting bottlenecks in gradient computation and shot scheduling. Discuss memory usage patterns and computational complexity scaling with respect to qubit count and circuit depth. Provide insights into hardware constraints such as coherence time limitations and gate fidelity impacts on convergence. Include practical recommendations for optimizing VQE workflows in quantum chemistry applications based on this benchmark.","parent_id":"c615a941-7e0d-4ba3-b2a7-99078c612d02","progress_status":"completed","dependent_files":"examples/vqeh2o_benchmark.py","gmt_create":"2025-10-10T21:30:06.970089+08:00","gmt_modified":"2025-10-10T23:52:36.31238+08:00","raw_data":"WikiEncrypted:RfmNQeFbVvaQRCvHN7aKT9QNlaoD8fpbuKsTj/pt/hnIqEw196iPUkYmUOa10wykYj9MKF+3w0w4zwYUZ6I6qcvibgpbyWaSLgm1l24Vamr8Nyckx4avBeotk3V2mkXzQLVjVXXO5l2HAp0RqWLG0RP0TNznXEopH2qCssbLuyM3d+S33TXsUE0XSN3On764I5kNm2wi9ukhKD0gzSJn1iSnpJCLQgI2zSKGB7okEqP3ceCCDyRal5mPyNrB0oGx2skf72cFQkNodM8blV7lVzV03PPhcjnU6IbxRDgJev6mOg15RmniA5e/QPbxZ+mtmKy7ug2dINgJRGNc1PaqxkMFPCsaDsaFTSJBlN5QfEMhA30MmXhV7jqpOVDH3oQfDuqaWU8KX+eWkdx3uj03C4LQ4fJVHIRgBoEB8t49sN3KJgNdLPIDlG5O35SA3JGB/mJZHrU3h6cZqCDKfMA+fCmGUa9CGXRyt1fYUN9sGmKOoAWYvZaCD1kwNb/fPVD4QmhRZWeJNbUAkxQMqVNC6uAnQOHa4wb3KywvKYx/XfHLagGTnqiHF5QZxNDpOitMKjWqs85nEQ0cVj253tsidCtHXIaklKZoTG9GgLZhEB2kbrX17ydcsDw0ApQJeQrFUjl+967OoXqHbbgaj85mTBTwXYn2+5zNplIEGsNNGqv9bFisPYjP+rTGWqvYndzGNOa37DK9k+Iz1ySl8izNZ7hNVBRSwDuWZIYa+XdhMBmpr7bkOVhRj+ZAEea6HmLrJ16uDDMBHqG9LF3hLcwkX+sSxu94PMH9BU162cYHtHKFHclaidCtDPlHsQwSFTeAcTL6ncLmWilkRyfm70Gh7I5VEBrkRmFBscaor7UoA9BktaLxZpGdLlJ36ZwC6yAoNh02UPyoemxhLItJSiZ4kdJG0x7WdF6U74ErHB5x8LhMx5yFptKOQS6biZNPg0opVZZ0G3xXrxdzx/pm4+rY7B8EjI6sKj+JQ1xpabH5SexMxsfs9UCdJWRA8sxE9/SrGP66DK6+ePdt2kvvTw2WYsqs8zNyH/tA67MZ1TlJ4rOPss4iEkavshQ/0V6rSIj5kmk8Grnh/be08YilqHnKGmm4PEiGaQ6qhFWLLUIEX+rqv7a2D13yiYZ2zpKHbcvuqRPvfHevL1YFSYiJbZ0lh5B4zPZ7mgQW98uckkH4/1Z1kBJ9KqVZFBtuTQb4kgO4vypK84aE58qO5T56Iv+uCiPmadelbCXA2sADZFFNoOua+Y03Ur44niv8ItuDl4CSXya9WiHVySeziIPbEUv0S6bahIawLMlvibWdlAOd2d3vDqd4ogWHvn/rBbKV6vqbouWJ/cx3XOiRXtqEpbRsC2EQCQ45KamPjXgRcJ6u5YpZwcIv79URXCS4EG4ur1MMFBMiChViqel52nTImGBZhP4VowoDB/E7tWR0Pi1TXbpcF81RGPn5gmMz9/iNGu/T3gael/cDuhA/rEB9suDTysVDy6tBxaecRCfg4SOYRMLhAzp66EPzazt2jvrU+cmEpw1zNE5ftYXy4yV38zggGJjWUb7RJcfRwYZytHcplj0jDNOFmOKPPwA5ouEMRpXfuI9ugcwHX7dSKXsfxKL6hwuLIQH21brgnCDfV9fCTCJ7JbRRw5X+4l7kdVM2svB+j16MeqXuE/GJb1o3HVLWF87n27jFtI23QQFExdCqnlz7U7i+ioHDNnZekkxiKdZER5KIkli58VdMghiM6iYdv+yC4WL9hmBxGrMW4waYezTVKsKZekpIDek7c7R14UqFg+CqTm4/y6m3XguQ/gbK7wRZoJzr3nbXOe6MO8PmKZOPRmuJtlnPr18P3Lw0dEHiIMgDO1vTY+lkY4e9AZR5ukn+rrbIRiA9G/C6Zkvnd35YFlAyMUw5usKuLMZ0E5qX","layer_level":4},{"id":"d3e933fa-59b9-4f76-be4f-3b16e4ebe15c","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Task Submission","description":"cloud-api-task-submission","prompt":"Create comprehensive API documentation for the task submission endpoint (/api/v1/tasks/submit_task) in TyxonQ Cloud API. Detail the function signature of submit_task, including all parameters: provider (optional), device (optional), circuit (optional), source (optional OpenQASM string), shots (default 1024), token (optional), and auto_compile (default True). Explain how the function delegates to devices.base.run for unified behavior and supports both circuit objects and raw OpenQASM source. Document the device optimization matrix through o=1,2,3,4,7 flags and their impact on compilation and execution. Include examples from examples/cloud_api_task.py showing both legacy-style OpenQASM submission and chain-style Circuit compilation workflows. Describe the response format for successful task submission (task ID or list of task IDs) and common error cases such as invalid tokens, unsupported devices, or malformed circuits. Provide guidance on best practices for parameter selection, performance implications of auto_compile, and integration with different backend providers.","parent_id":"b26fd035-234a-4623-b465-c72f588078d7","progress_status":"completed","dependent_files":"src/tyxonq/cloud/api.py,examples/cloud_api_task.py,docs/tyxonq_cloud_api.md","gmt_create":"2025-10-10T21:30:07.281183+08:00","gmt_modified":"2025-10-10T23:14:42.83942+08:00","raw_data":"WikiEncrypted:42GucIVlAI9L6q+fifwcxdeNxOBiu3eyaFlOgzwaAreeWfTQaT+MRhTcyevDGoyVAOqrNiShO8p+EeWPG0c3249IB36tcyuDsSzQhT8/p/gN/R2RXhhXxUoeA4ijNU9mcasr9zWkE4Pv5K4w8Zs35mf+tTilL5d/d6pkqiOt/OaljSWH16/eM+YmvDIO6NZsKLXBcFqWbPbAXj8ASLo+bZ+E0YPoh6nS14hE587Lp14M2aFZUG44w+gIpcWx0EnAB2G2VHY+7uKlNALWCct0SJA81KZMv8PeuUS+h3V6Hfj1Zx+/RZzffTXWXJEyFXOei3ujEIQ/EOCzE+pTLXMbzViTPahrRF9N7XqB5z4DL6iMjD0/pFWDNfCwbrzBNOjIXiDTCMG8ATW3MghQcAjro6WIkTbYPyVsW7cH+tW9Da0lQeBfDs75K7pHOEr1hflqO3ywWbpweRD0LdP/9L2qCGvTc5V3da2FREOiOkkm5SVhkNAM6yfhuc96SLKqEkbowewo87Cc9NUzAyDYzvscKbErSxi/XVpFKh4ghIniNycJJqhoQGIaJksBrG3WY8Ayc63fq3OefI3/ERuQAIFU/PYeaLuDI6l4iNHpgS5hxmH2tMq0hvoNBaSbDtB9aZAGsUdoIogYU2W9j+WdNMEQRm6vIzFRjKuFPF5ArBPZGBEEH4FoffiYqk9CCUWgAe6YHy/gOzjgzEtWZHL6ha5WMNdHqXR+vWWnB0qV/zhBTIpMEmjJur9N4P9fTAmSzoLirT7NF1Xyj8xBWIFZ+FV3RCkb1QWG0Ly4WUhUyWl1rzMiqnVE4c+cEXukS7LyujiT2EZ5F6DQIxdoDyUD4M1n2t+jRNJOjPKs7E1osHb9Y+AKIJpeRt8Bh/GmuVpp4Hqcitku0H5JZovqp5G+NeUANrihPaO3pYf+Cw4zWvckcsCMBxclTSfh8l8aij1BN1/VTmF7jqoheG2QrEZ6I1OS1m0be+NZ9+Ehr7Jp1nq7X25YBznUzOAKup6RGpNdikQ/azreCKDO8nVZ3GSd8dAlfoMRn/Zpy4/1h7CsbK3qH3JkcWBHmy6Rxh1NIPR5Ucm5PauizJaGkygC79yKq68vggJU+JGiK44k6BvXphmEFVnt7nT5jI/qfYw2bPWh/W83nnAP0yaZDoydBPzNh7NNpFWCBqE0kEpfNLj05tF9iyn3Bcn0OacOtKAEAl9c1rkDAIwyFIDE//A9lQRcsgNwjgBosW2BXoMB6OWGdOEnaqPIDNNKRs6PTj8PuWAu5ZNjtZJgtmhdw5mnwggqFNxK3yOr3Y4BT+/WNvdL840N+PernSDWxnHTAPAnjldTTfO0QMexf3xaEL2FfIyoO8oyKHaNjDJPUtJq4cuKrFsQWDXLPMgY1uytueBoD+lIPBrtIAT1+ztHoxCEfxEMdZD0Aupu0UxZDAy5EwuISIHpx5RVT5Y8xi9M+FWoBCD99Nmf9lzg5xVcvwNZPSuLx3t9DXjkHQtb+TYJYUpgYp9TA9R6JT55Gi7m6Rbchzn7yGA8U/7P70n8pd4w7xzo2Nbsc4C6tIQu+0iYnIVs5Bqs90l5/REKnbXfO7Up4SpUgrOlwGfJuzr4jAcCC/add5GUDRo9rinedZJxhdLvPVbPDV1UB0MQ/IBYGMRvahOH+zQCEXshzH+73JPDPAZ5/hfVf1iL1AW7zbdKUVaWhWkYfDPj7HIIRRl3kB2fGDvQ5eGmx6j2i/b0/bX2mS7YMcy1vGu+OdQynMliyRO0hn6G+RpyB5so9URtwbLs1v1xeT5MF4aesVq46PgJJZTsUCd5Y2dKK9bGMhvcolRwQrHkqvC/T+cZfDV1fvSaFNxqgV6OfZT9ejfODdGr4loENXYasgJgUp3b5jFI1SX1MhxJWnV6xnJnj1+iYHdU92I3bLbvlxv+GFF1AeTIDAQDOqBkJ3JfgiD+JE+pM3SDe8k5U+M=","layer_level":3},{"id":"febb5e7d-f0ec-4c3c-b5f4-60e961cc3e7a","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Parameter Shift Gradient Pass","description":"compiler-api-stages-gradients-parameter-shift","prompt":"Develop detailed content for the ParameterShiftPass in TyxonQ's compiler. Explain how it implements analytic gradient computation via parameter shift rules by generating plus and minus shifted circuit variants for a specified gate (e.g., 'rz'). Document the execute_plan method's interface, its inputs (Circuit, DeviceRule, grad_op), and how it enriches circuit metadata with gradient circuit references. Include a code example showing how to apply this pass to generate derivative circuits for a variational quantum eigensolver (VQE) ansatz. Discuss performance implications of circuit duplication, numerical stability, and compatibility with shot-based execution. Address common issues such as incorrect op_name specification and metadata collision.","parent_id":"1e5e1639-6c63-4d5d-bc4b-c485be44ea96","progress_status":"completed","dependent_files":"src/tyxonq/compiler/stages/gradients/parameter_shift_pass.py","gmt_create":"2025-10-10T21:30:15.109955+08:00","gmt_modified":"2025-10-10T23:40:57.631013+08:00","raw_data":"WikiEncrypted:r1dbw1ciiG74lYTjPig5UyYFgYjQb1hOw7H3ykIdYW/67LQoZmO7cHXQF3cmmvsWo7VW1qfLtF54minjI5jk9bkdId4UeFUSY1/NAuuWXF+7GEym+F892jOYQaDd0Bv7PPLBVlknDNgZ5UOqJVHLnYh0l/m/Fkn/byE9vZYGlr1kubYlx1FoDHpVdyExenrIij8WsQAlq15M9cJXVSvNzqVYsTRcP9YHVMkCt3dJgrX1xlMWK90zHOfFbSxiiqJuOF7wOf80itiNlio5FQ+7cVZGjlrCCcpjcRx/hmBdd3IE1jFPQTFUMkkpBl6P2BfJ+UchYkRXglQOvCicmuWSt+6ZP78Jwz+lT3kxtdcgSpnC2naCgf5aWhNbaZP8b+vdTtfU47ggZE3W2jgk1+7Y556nbnQ1PbhrBESamXRpMuXvGd2XovoX9P45oHPZSbkUukK8TEnveP+8kzBdDVXQ/hruVQTyCM9eXTK2S91Xze2HYwNd8wmdD8a1DyjDmHaPRLS4uze1UNmpKw19ChIVJnOk0ZXtoZ48QMRTSGhTqIV8MFzLUOCoWGFYZ877M/juufepjzUYJf94fKCzU9MQaFGU64xBHslEGWsZy+LMGrfvqPvCFQQsfynBq4UM8y1z5lmCiPEKkDehugKgQbHHoUp7V6jaU1OLV2O8L/sFS2uBIEZaIQ5wWR+AzQglbCI6re695c4xR0ODYqEokcuUAqD/YQ8XDIWthrxzdGZ5i3yXks9WPWg4gCw+7/BUwTsjrVZqBxXidNrDcc1gackiEsJPpjfeHJMn7NwbkwTXn/o5fwUdl8+monzWCEaum5in4oLwrHDHqpPP+TZmS9UDmkNBO+39B8hnb1r2jOtF+IKkomhBO/AtQvv+7Ufn80izsA8+rG5bixhddkF7OhZ9Ic1wWHQICMvz0u4ig2YhDVpfT9hnIB7Ykr2fgPZZfFB12/jOo7frOl4zk+l5+/6n8By/LJT0rmHRLEr7SRy96GNbElZBpeTxauARgPGzYDPN6Ee+tZVB79Q1WJ1IMTjqRrc6EiS8KWxCCPcgxT/4TZxoX/6g5xbXUyYpbdUfIFzUOKRtIaa2NbpORFOt1ffUj0hleJKB1BhK5A8c13pmv5qQqZNSywxawZ2uUY3d4rSlO2elsx0EjeQbLIKaZ+H5xpsGezhUqw+H6TnEBj0HaNaOYLvt5khuWwwka1RcVtHwtva/JZmB9XCQfeFBQ+4L+1scoxfHPyhO6MJjYOwuXO7Yn0hTnrGbFVRJS7L/BdkxAZcq+B/FuMTC7eXfG7dZkadmR8GiHP3fh0mYnAU+RzYB6Ul4V5Kzxvifb9/BKUh3I+5aMFNsCbmyHkcGid3yW2zSis2J1UGY72G8pLB62icv8r8TSxCMF1RmVGg49ONZD4xXH372cPoFodlaz7kMWLlAJfEGASKl6lRUNYhEx88=","layer_level":4},{"id":"178bf0f6-68e9-4d21-8af6-355a6b04ac7f","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"AutoMeasure Pass","description":"compiler-api-stages-rewrite-automerge","prompt":"Develop detailed content for the AutoMeasurePass module in TyxonQ's compiler. Explain its purpose of automatically inserting Z-basis measurements on all qubits when no explicit measurements are present in the circuit. Document the behavior: detection of existing measure_z operations, conditional insertion, and non-fatal warning emission. Provide a code example demonstrating how a circuit without measurements is transformed. Discuss the rationale behind this default behavior for execution completeness and its impact on result interpretation. Address configuration options (if any), integration with the broader compilation pipeline, and common issues such as unintended measurement insertion in circuits meant for state inspection.","parent_id":"b292168c-6a64-444c-aa77-1b87d6c36550","progress_status":"completed","dependent_files":"src/tyxonq/compiler/stages/rewrite/auto_measure.py","gmt_create":"2025-10-10T21:30:29.151719+08:00","gmt_modified":"2025-10-10T23:40:28.213314+08:00","raw_data":"WikiEncrypted:r1dbw1ciiG74lYTjPig5U0HJ6OlSrwQwGI2vuY5+G6c5DBUQl1oJ6bUbEXZavFsKNwOetvkZS29nPXkbZX4fhfR8jRfksSgHNAyMxH/KfsPoHeQr+waZdilpgdlWAvDaRA9/nbbi1fIdyX0kUA+W1FgR/PrxcAhHuR6xLVXgf/TGLoNwcnmnAQ6Ake9Lst07K+jUUNPE4TV4lI95GX1EIGwN/+bbKtQPNVEyNiEFdBrQj69rhNw6gMD3i7gOLisbtWqIJGTynsvJGruH9+SU0imPF/7obVjTF+ovauPQb/5lLbS+TH4amUm8u4/qdb9YTyDxJldPbCTKhOscPWR62RZRldOH3Icow8FOPISNfI6PjxtWcqJ5BwJLU10/EXrSv+N9CVJqzC0dOS3fiJSi167/2KlLuyaInkD918jUvNBtqcA8wQX2oPtNg+R8/wMKKBpzpJxSpdt2tmyCVRSr98veXDjoElptgSt8hNqe9frNVXBBpDC33zUJPW/AbpGIW5yvpHldPJ5gIyBNj3oQl97fYW0NE0hZN8sYqJX92PF3Sp28aTFEBe+cwJU1bBxVJ88QYTU13rRTga6E5l/y/GU4bJpdsF/telgB2AQZov5YMb/dtpVdsYYHmKrxSOwzaW25UYsAFruMqOJ40inRjAQOgSOMIoT331CdQbfQZ5QoTskTIVJtsU3DK1I15SCbr0Osx5YCkExZnXZ4GIVwvIDxhqSpPXwL21DndZF8fYHcYQJ2Cj4GC13XkHks2YifOIo3O52L2IGxqorR48IVKa1dPLVW2l67LQ6vkNj+HPFv3u6f8x+5m8ivDJ0LTb3qcR2Dw+YSnrvJsi9G6yWMbd00g8WIwsPoLgJR3I4mOkGu7gIaKTmm9wgctjqyyQ0bHNnH4feUP02H1vGYDeNvnyCT+wzPp6DxDXXF9aNB5ZLD2jGMvbutQYemjMTmGEhvf7aoB+QTzbO0X24AobeK+/0LhfFeK/FqKBpma6a7FRer1L5oALZGijOOqqcbviFkNGywuwAGbJvIz6Dd5GVzlTV2NINfpcFQkyczKFetfEOyyAb1S0W2wnm+o3B31gSbdqdVhUzwL6t5bhbCOmrKnWpPRj+yeN7u1L3vMZs6F/HEO12pLdv2CAW4xepH5jj4BuvjecXf024mkVl2p/PQb6NPyZjbUS5Q6jS0MXcP20qV2Igynek5o2yqEXO4jem96cWFH3TuIKUSCJAsof7B+mu3XJdrjUJfnTfrgmjxcdRHVGaz69vec4PU1AhFL/9gpwsOOZvHZEeq75PBPDrZQC9tAPXyxSGlCM/E+YU+xAYsk0zkbwEXr+htSO4kuTyBcijgcA1b94GhsmHXS90MFbOhTsIJyr2QXXPpAvR26JlZdurjXDq5NXbpbgAVlurd","layer_level":4},{"id":"078f46c0-ec0e-4c17-97e9-eeb269fe3bc1","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"UCC Device Runtime","description":"ucc-device-runtime","prompt":"Develop detailed content for the UCCDeviceRuntime class that enables execution of Unitary Coupled Cluster algorithms on quantum devices using shot-based evaluation. Explain the initialization parameters including n_qubits, n_elec_s, h_qubit_op, ex_ops, and param_ids that configure the ansatz structure and excitation operators. Document the energy and energy_and_grad methods that implement parameter-shift gradient computation through batched circuit execution. Detail the Hamiltonian grouping mechanism and measurement prefix caching that optimize measurement efficiency by reusing compiled measurement bases across parameter evaluations. Describe how the runtime integrates with the core framework's device abstraction layer through device_base.run and postprocessing pipeline via apply_postprocessing. Provide practical examples showing configuration with different providers (simulator, hardware), device types, shot settings, and noise models. Address performance trade-offs between accuracy and resource usage in variational quantum eigensolver workflows, and explain use cases where UCC device runtime is preferred over numeric simulation.","parent_id":"df2a8baa-b1f6-4960-a54e-3a2001012daa","progress_status":"completed","dependent_files":"src/tyxonq/applications/chem/runtimes/ucc_device_runtime.py","gmt_create":"2025-10-10T21:30:33.19793+08:00","gmt_modified":"2025-10-10T23:40:52.017534+08:00","raw_data":"WikiEncrypted:BQH/b67c9S1z4REKC7h3Oox0mJ0Ta7A4dlg1SJ4lt1Uk4MrdbLFQujJbzswnnO/73sp/luzuR3I+zhLCoeYc2YNgsBjenWrjRpP6Wi3hPHCUt61cN9DHq0TmPvkmRCmXCwX0dU3zWlE4ZmfXzwObz/ms2/0XveQBoeI1y9c4N9lblIYXhxHImaPBUICKxG44zBI6OMDVvi8HrD8WdVSILa/UZ15h5PkqEcIf7LRAofBgZRWFewvVxNnZAvsJ3+TxVgaldSl4INy6mnzHuTaEXyUMuLoom2scbOzToJD1FBy7MVzD1LgqVDm13wyPUEJ2LvRr57gRNmZQNQdrLv70L3jRp1kySbHmucmnaFufJ4Q4Bh+Lrt7DHDSjfjWRDlak/m9lJE2IcMxQAF3FqKJMbTZ13h5wSdRWoBEpi4HL5LIYOk49kvAXC56ERDKygsjDw0fNtBID5ug4VglqzNs6dC8BA8IS21RTssoOkK7UIGGvNI2Y7r+7vzXkwZ1Haj8AX5o5u6K5lmH5RMbk0okViZjo0mIbU42ACmRfEP4lhyFZGpKUAJsSg7kOdI2HxlTGuzKl+Slpqg3LQK2lAM/4pVX0pWatvw7jbxWjKUTdp3tnMCHcFAcUOn9Vn7KYgNNaay4S98L6cLnX9DC6ORfCSHAUknx6/LWTO2ngSRMIlcs11U2OzSNO+BkdAsakg9FKjFZipgMp7Bpp1OQ6FzzmLcjm/XxKqKwvZ4qu6V1dSilBmyz6AQdEjI0zB0rlKliqfcwQgQ8oE7TgfyYoQmDLk1oUbscrtvQ9kp78f/EBrpjJ/hXOknxr3UUIALeMjjnWZe2tqqStWaL9YhNMTV/ysTy0p+qyXOoA70Eky7nkwHt/BABCbbHwxAI7d60OYYX+1zQChjVxjW984E4nobGFCTDd24PUwdqyngFF0Jn/GkVAtDwORDsx73RT20CDNxrgygWtPgc8aSotjVrEwylz/8p/MWQjnbwlebf8a1pTT6SyHFnMnwRLQktmDVNJIIVLxlTCwLqHdfs0zNGiysybVdFpqiU7lLx/rUhajvR3qL5D54BOO/wRKGrPZj9Oxz2Psqv1CAV+TJE0QxwkxtcLBvs9eUUTdOyrxU6dDnrw7Qbli9FO9djPZCi3xT7vTmsYw8IHbsJVt0StofdgXJrb+8zhq9FLxdJXStaCzriaWewvaGxlY7XBLTqLzpLiPBBadmDzQU0a5Nwr261X+GsmpgrVepoxvAzDsSg4jwGrsFRU+O0nXDv+BUmTrId4/m6xmsqLRcZtHm6W/Dscfj1ziawdCakQHzdtYRuxSm5QqIq9bxonl5k4zohpwJNfsXRAuNGTbxvClceQWnBDKw1OWi1cFF3YOL+62vLRhEaoUS4zT0C9zKoTfrIKRBQtudx/XIaUwbcKLeGhJxdRy4+oA6KH4pqIML6yNYyQN37wvja+fi6RJsoQDYSK8pA7baTLYhdSefj7GSYnrC/RGav3E9emJUQeLedbT/3NmKGYTK/2iNOGLN1d90M8iqjFzYBWEN4ZH2E8fufEHd4rX2LkR3hid8JWvSRMhtH8qvxU/cfjC1SG0EmTx1T/1FKx4xD4dyIpjlpS2Y79PReyTUgQbN2av49XSYHd6Ffb0SPvGYzMJfaScQVe2Osr3eYJpagmS1qshag+MG/v3xLABVkNMlI/v/SrDMyEpssDcbaDlAL3DH6QMg2RMPBTeJkEeebsqwLwxuw3UzByGSjuEcmzHGqvC9FDvJbei5HoF/PqePV67eJ3sgP2ZS10EHVyTUasjtckLyKyCibOB1xCOVMSEigb18eA6Jxw99xKE5I/PBpO3CFsUMheF1nOw+8wuWYdnzji6Pv8i4BC/Eicdw9wA2vS1FBZvCObmABQhDpWNpvmDeWzrp2XVIsq9zGlikWI/ttX/p1HmnR1LiPPL8xiDM1Se1Vid9h192VArl3uFAd7ENfBxo0D15R7yPbD1DeXpOVqypQ0ac1J35XhVHN5zMwNQNwfD/omWzQ8XlBkWuKHnounpd16XnLKBClHjwvD","layer_level":4},{"id":"312a66c8-8236-4249-9b03-7ba64fef2f77","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Statevector Kernels","description":"api-reference-quantum-library-kernels-statevector","prompt":"Develop detailed API documentation for the Statevector kernel module in TyxonQ. Document all functions responsible for statevector initialization, evolution, measurement, and overlap computation. Explain integration with the numerics backend (NumPy, PyTorch, CuPyNumeric) and usage within statevector simulators. Include function signatures, tensor contraction patterns, memory layout assumptions, and numerical stability considerations. Provide practical examples from examples/timeevolution_trotter.py and examples/sample_value_gradient.py to illustrate statevector propagation and gradient computation. Address performance implications of full statevector simulation and backend-specific optimizations for large Hilbert spaces.","parent_id":"c4c05f68-9315-4d95-b71f-26fb64ba1b27","progress_status":"completed","dependent_files":"src/tyxonq/libs/quantum_library/kernels/statevector.py","gmt_create":"2025-10-10T21:30:43.572176+08:00","gmt_modified":"2025-10-10T23:41:45.812215+08:00","raw_data":"WikiEncrypted:C34GewOyK1SlumqKiPsSgygb6tZbr39HfU/NYGshj5UiAYC6shHCS97r3LRvFmIq+Ve/cbSPAS2O6bWyvBtReJ0y+nP+Xwku52Hq+wdB57NmWdzm7axhHO+zqYE27ETY7ZhgiaiZrOnDIyhNdVZEp/67z7CW5eVsWN7LbGQsigwTFQkma9VcBZXZFMhcuT+HwOYUuZeCJK4HD9GtSj0C6mjg39EUNTZj7xUJ5T+bgv2ltZKopyiJK4bBwibbELKAcJ1nnArHvJNwcek6GwrKJFxlM7zK9+mNvDYdXlX8efvZgTgdecBvQvEThcNzNJm8ATeLUkNMvEei8JZSjLxkb5tBvL5qKCBtNscv5AOtMdq6Wfz6oDRvP5K7NhbozudBMKmg4JTozV2VGcSjtx3wyxKncjVw7xzuQXslscAPXq8Yvzna4/0mkh92RDb2M6HaVEGCaUiY+H0YT4AakHqovtgrhj2CxYTV0rLKJ+l+bg5BH2/0K+k446IoWACFR+pfReK6k5BMv6rLA9gsUgYxfypevoZcRwm/QLLYfNP0zZ9qLdhj4uSWXzFRkdh6sQ0ZYxOIPagcAnI105Vhmmj6YPHeCmdIbGIquNeC77syXtIQK/QCRRRjN0iaHPAzuBuBg2kBf3kQQncZW5jy1AWuiwRiJHo58vY8mRyDfyk446Ez9tHP1u2KBpk97uLO6p5ZA7xHGhqxIbNLQYRFQ0eiLF1MMDt01OXW+VErqurTFYi5POhpPSbOBsqdsIh2PBMrUwOlV7NRiPWFWogUoGJtKpj7lr79WAdaPisDTONr7xyLr4nMa2u+WfrZt/moaYKblOQh4yDWydL9/rXBdr+fQNZikZYCNVHGcMtXawvY+NBdzckg2+9QevXARFhQiMgNAHU9KQE5bouHlRXN0u2Lq5UC9fG9nRP33SLR0vJfQofeTqtx1nEazV4cmRmvHz4ldaDge6uBRDByaWMCanw2WIKQrRoGs0oduASN4a4UE+K/+fWxQbAJXbbyQRNKLEInAPdPfpSTK5Z27USrpqZMOT8M+SfoQGJ33yl9ylFTO9GRFdJUg8UTHo/xkHcMhteMVxe6yD0pEEIuj64Fj+3sbpsE7STTF57Gxwgs3EzuL23FfVJdLshSEsD1Jo7sM6KnOG4ZblR4mKgxCtZ1RKuKrRzqSikAm/wHxTkiWvKYpg+LOKVzCOoqxeq/v5qkfA83KLdxtSyjC/2PmDa4PArY0UyShRPiLlnv9fLI6WD7tRrvZBgcpUUmJH/ejaFM1S9wbIvGsjaZ2/VlgC0k/iMdQC42p0LgO9bgWpPd4PcS4aOjM33okQv08WLoK2Ou/BHVcwXnuz+FXRH9xnvvMl/RuvLtD6xPUrAc9u0pETrvgfsc4gWcraie/hAfM80B9/mG","layer_level":4},{"id":"564d75e4-cfae-4277-8b8d-35803075b973","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"UCC Numeric Runtime","description":"ucc-numeric-runtime","prompt":"Develop detailed content for the UCCNumericRuntime class in TyxonQ's quantum chemistry applications. Explain its role in performing exact numerical simulations for unitary coupled cluster methods using full statevector or CI vector representations. Document the initialization parameters including qubit count, electron configuration, qubit Hamiltonian, excitation operators, and numeric engine selection. Detail the internal methods _build, _state, and _civector that handle circuit construction and wavefunction preparation in both full Hilbert space and CI subspace. Describe the energy and energy_and_grad methods that compute expectation values and analytic gradients using direct vector operations. Cover supported numeric engines (statevector, civector, civector-large, pyscf, mps) and their performance trade-offs in memory and computation. Provide usage examples showing configuration with different initial states, excitation operator sets, and Hamiltonian representations. Address numerical precision considerations, alignment with OpenFermion bit ordering, and integration with the core numerics backend. Highlight use cases in algorithm validation and benchmarking where exact results are required.","parent_id":"113cdd2a-565e-4e6e-9dca-5a978489b1a7","progress_status":"completed","dependent_files":"src/tyxonq/applications/chem/runtimes/ucc_numeric_runtime.py","gmt_create":"2025-10-10T21:30:51.371793+08:00","gmt_modified":"2025-10-10T23:42:10.092521+08:00","raw_data":"WikiEncrypted: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","layer_level":4},{"id":"eb608613-86ea-47f8-90bd-e757064f2c22","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Getting Started","description":"getting-started","prompt":"Create comprehensive content for the Getting Started guide focused on onboarding new users to TyxonQ. Explain installation procedures using pyproject.toml, environment setup, and basic configuration through config.py. Walk through step-by-step examples from quickstart.rst and circuit_chain_demo.py to demonstrate the core workflow: circuit construction → compilation → execution → postprocessing. Include code snippets showing the Chain API pattern in action (e.g., tq.Circuit(n).h(0).cx(0,1).device(...)). Document common first-time user pitfalls and troubleshooting tips. Highlight key entry points like circuit building, device selection, and result interpretation. Provide guidance on selecting appropriate backends (NumPy/PyTorch/CuPyNumeric) and devices (simulator/hardware). Reference real examples such as cloud_api_task.py to show integration with quantum hardware.","order":1,"progress_status":"completed","dependent_files":"README.md,docs-ng/source/next/quickstart.rst,examples/circuit_chain_demo.py,examples/cloud_api_task.py,examples/hamiltonian_building.py","gmt_create":"2025-10-10T21:21:34.898033+08:00","gmt_modified":"2025-10-10T23:49:04.720394+08:00","raw_data":"WikiEncrypted:qfgbutC7oyxR6nMxrwk1ODnNMBEQ3/sG78fQT1yXWjspqw7wFsgcSykO0UmGZY8QTKN7XNoRj5gLcQItLpCOKXutiG+6VCjcMYiCHQKLTKH/M62xXhJ4VLNyNPpb1HPTLgbGo5drub7WBwmGiLDYX986+pwQiBsOKHukx3q6sU0y7+SVzUCYdPVA2SuGJfQGxIiqVaWP5m6wQBw7Q+Nt644jDO61z2ktA5STAKCasGjESjRqaepJ0dq0UWMB2m74J1LYbtBSJBw2Fs82p+G0r21ycZ6KykJ/mNqzphFxNqPCLwRrFf6DiaLRTHvHqGqrqUdKKTa9jJE3Ow+NRdVJ0PxubpyWpbFHKhr44Lo90TuPMLK1CK0SqH8MHaIdopuyh7OeVCxIa1DtPtCEQjGSjZ0YfnojgRVj4SGsL/J1cw+rIn4Z2KT0kBMoJR9fCgbnGRQAxuNSC1UJVdvf8V2WW8gvQMr2cvY9oaAiJgNdn6nvMuypgGVCSwbTesbxpQTvu5tcr5g1zjk4Sb6NJeJg7qmJw1GAFSpWOYmWy1VM3u2bxy34jA1/GHZYVZ/juTrLhSySnOnhsH2J7sFmtpYrZF8v9WKENGJOHbRPaiRLiVVV2GZnNXkphOH4jAJf07mAhiVPO0G2bb+FfQmJCmfau2fkFREqKB7NwUUlJmqFvCbn+hzIQwUlZyGfZSfNsizOtlEv2KoO/jElQz9IIjywQhDFscjJ4k0AY8pahAapd0w3WDJeTLlnIidukI0EszTOC22B+wXKowWPt7N3Yt+0+dit4lcyIRqQsazdCwRNV4Lao0TUJl9QVcEbRp7Z1JeGZz+reCQuHcdDAJmiLHUS4a6ud0NmUzXkguuy1zqlbouYslEyHMEyc9m25RWuzK67MCH0yfrmC0vvj88Oeqo22VrG769DPtgkHHDjxbz1VW6JflZKo1mJ+yjm8YFc8vrfV0uDC4/MbsUoJbLE1ndCoybJuqErbg7nOq2CGZkjZ9HgrwnDfMoNKpU18L3lDBRXtLkeYz9LCuSLwj0Gal79m/hN/b0CGEjWhITm47Xq+3NJf9TGjoYBFZulZrXGJA/QboFGWzbHk6/ZzMewVBnlWQ6PdQ2K20tTAN0NWV3537IbZCANFj7DiWefnoS0ry0mV/juHr04VPaEuKRVuDJGNvMqzUUyBtQt5RuTALx2eLaPOehntviCsw9APNKcgbJE4xfh2uCSl2h+7GdkDhusOpCrPpPeYM+6f4WUi8p8NM5vK0xawkWOYJqZ2NBABwSAu+BlcJubX3q0naQErf4YnIZhDXQnYlp5ZsydAuqFW9EFWJjJcXWIfXvsDb6J5bENE+lhOi9aJNnrLnmfQmMTV/6J3gNhE9sri8xkTIujudUAQwVFJmmS1QbSowVQw4WjgRjn0avNBodQezB6SfZnjQW6quI9e1kxq5s5B2L9gSjcSbdTL9jiVuOPM73hH0+nhOi9FpA3wlC631oBmRH/DZm6+JKBupTFgyuEJhCzsVkTvSbujfOtW6SxbdZgDnypsv6UAfsU6/2tW1ZlSPMtPbY+fU7AXYAIeq3b01L/LuJarHRjrTZ9Lhw/M72NQkrjlsW0zL4ybElq/MPTvskr3aYHfLry4wf3F3hEHwkfMvbNyUI8z5tSdCQPA8cdVnqwFD9I2EwxRclxCae/GO3EFW22O729/jznNzvjDuDw+xU="},{"id":"f751dd23-285d-4789-a3ee-7e7751afc26a","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Hardware Integration","description":"hardware-integration","prompt":"Develop detailed content for hardware integration via TyxonQ and IBM Quantum devices. Explain the unified driver interface in hardware/driver.py that abstracts provider-specific details and enables consistent execution patterns. Document the TyxonQ hardware driver for accessing proprietary quantum processors through the cloud API with low-latency control and calibration data integration. Describe the IBM Quantum driver implementation that interfaces with IBM's Qiskit Runtime via RESTful endpoints for circuit submission, job management, and result retrieval. Include authentication mechanisms, device availability checks, and error handling for network and execution failures. Provide examples from devices.rst demonstrating device selection syntax like .device(provider='tyxonq', device='tq-1') or .device(provider='ibm', device='ibmq_qasm_simulator'). Address hardware-specific constraints such as qubit connectivity, gate set limitations, coherence times, and queue delays. Discuss best practices for circuit compilation targeting specific hardware architectures.","parent_id":"653a4c79-b781-44a0-919d-4ab57987530e","order":1,"progress_status":"completed","dependent_files":"src/tyxonq/devices/hardware/tyxonq/driver.py,src/tyxonq/devices/hardware/ibm/driver.py,src/tyxonq/cloud/api.py,docs-ng/source/next/user/devices.rst","gmt_create":"2025-10-10T21:21:57.318304+08:00","gmt_modified":"2025-10-10T21:59:57.969748+08:00","raw_data":"WikiEncrypted:mreTO9no/433iXIfBSqne7jZxfC34XmDix3vAiV6aX0R2BwupNJp6CI8WDpVZuFPLbdUfefk/bbbIO5jmgLsHS+gqZlD/vYdVis7Bfu5+ZRD2zzguwKdHEkQprskwo6LssiBDiukbsMZJPXCv0uB3pfy6MFZv/YDznygzE4APD2jZs8HFIP8TeEnXqXORRKeiK4GklNEqvGzzyD0tiL+3oDCBWyHb/y86h/vMEIL0K37ypki3i2h49nA2SKevx3dBoSFyjV2ZZI+j5LnkGtx9hf+ePcg3ef28D7BZ9LMXX4KOWfjlyIJvytdjZmzB1jjPnDt14LzIGhNBA8p0RxslG0N99UrdQ2rrZ+8Sf+ItQkw84NWfUWe37fIe2NnWRLJEQlFHiIDXGACHWhGWynRkFL3OpmfeL3IPnb9XK8OYPHY9fbJ9GJHaIjynfFaDPOd7MUZ3I7zoiy4GUkdVJ57xrMChK4JqzalW5OmlHhGvJLc40b1uLZiJ+n0IB0VKIuB8qJs5biykjcX0OjyKBKQBXVwyRJjHTy0Z+LS9Wh5lhfRZ+YQCe3fkC5MRXKmXmn/6nz4GwyCrFfLyZT+iLf4Jbf+w3CC7508ZKg7h/q2jS/rYeUvodfo9yQjCwkOAaJ2FoCjVTotXFJAocuhSp8nxLXCTcrD6cmP2oj7Lk0V6/j3wddd9OZIvF4SFAw2V+lcVaKmrEckQJkXFxm+mtLsuirTP01vm7CJOazjOBh5moxWWCAb76mB0gvH2vWc0nfoLvZhmvR9pfXIl/5k156ebti5kSE/3XGurb1uKWV4jtGz5n04ZOdPS4i4srP9kmboNgXWqJ/XnpdtWC9CMh0B6iTgKrmIzJ04+AD82hccm8U3S2IuojPc+hw43biNbOuqt84SYYf9Q8vbdXUzzVtb+Wrw7e3J9QSdr3EsKG4SwW0ZOju5JDFv1Fh6Bw5ROx/AsQS5ZcCV8/MGHwzisrqhs1MWdYEI0Y8zSW1NANtzDdLgl3CYAegWptEaFY576FjK2wiAzIyLots4gC07lQvKXSVyvt49AAornWSTcKPIw4DWrXp9iBZY+l4m3ga27JIkIMFb523EG+JZU4kiQK/JnwBJD/qxSOLc4DSCF1L5jefOS+KgvQlAq1o7jE3xtpL3NsaZKmkubzRcyHW+WBvz7qiK338x2o/4O+URMD5wBKp22PXRlNCIsF8idbOueQuzG8X9vyyMi58503sBUiscGuNHxo06qsBOR9q4h5IsjtFuRvfm0Ik7+2n4Am5p4NMrerkeWXsa8CRVpnr56JvCJ3WSJuDmxcf6fU9eDh7GA5YxN2e4J/F4HyuTXidlOM8XWAjMiYGPrK870TSyxvmxqjBozxyIsgpvXldIlZo7dZ1YsMAyXKa2E/jpCEwqQJ8EyEXOFX+HfBC1vZwRvN/CjnZOtU9CixR0W/IL0SenlxmqISUic3EPdQwvqPU7n15RwbytsbciJHLDn2cIbiD7iTpx9C0Kz97O8ucRwDsaM/6HfWGVKEut6C5jhGgz7Mxfw9G+DnO7EccE57ZTqPuU5UkIYDOhY6FaKBJmlT+6BH0VEOrGZlwGNHpdsk1h3c6A4xODP4xNcE/xefPhR9xx8JAsA9teiV3Hs7Wgz2EOcaO5z3sQ7FnQnsdOhmD7/MOJ+ZavC2+JsgthibsccwspK3T21xT4uKCLmBcJjjIf6wvBOYSpkRfEmp1hdpAc9owt8MzBmzcjX9O+AzqEEVihENMkHJz+xmXQxwqD4oL9TMVAb4/X+XZb+nr4oGLORxyBU7GXU842hIkSzMmdHeU3ygm4NUEDhdIExT+NFcfc1BMIgfMIN2NAOnlUjaZ4CLrjS+kEj5jYVhvnWlEVa+8bZbncz9AwHjjzqHKDMXSwhCfi4GhbRSdjICleSett5hw/ILkf+BGnSj/joQRYhbxpqUreCOoR8Uib/Fg+DCYlZns=","layer_level":1},{"id":"1a03aa9d-ae93-4749-a247-5aedf18fbeaa","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Gradient Computation","description":"compiler-gradients","prompt":"Develop detailed content for the Gradient Computation stage of the Compiler Pipeline. Thoroughly explain the parameter shift rule implementation in parameter_shift_pass.py and its role in computing analytical gradients for variational quantum algorithms. Document the Quantum Natural Gradient (QNG) pass and its integration with optimization workflows. Include concrete examples from compiler.rst showing parameter shift applications in VQE and QAOA circuits. Explain the transformation process that duplicates circuits with parameter shifts and how these are scheduled for execution. Address the interaction between gradient passes and the numerics backend for final gradient computation. Discuss common issues such as parameter shift failures on non-shift-differentiable gates and provide solutions.","parent_id":"e3263062-6a60-4591-8e69-dfabdcc9cf5e","order":1,"progress_status":"completed","dependent_files":"src/tyxonq/compiler/stages/gradients/parameter_shift_pass.py,src/tyxonq/compiler/stages/gradients/qng.py,docs-ng/source/next/user/compiler.rst","gmt_create":"2025-10-10T21:22:12.667346+08:00","gmt_modified":"2025-10-10T21:59:46.639027+08:00","raw_data":"WikiEncrypted:r1dbw1ciiG74lYTjPig5UyTv627Bx1rykhCdynwr3gxhbUtn9dop1ds0TbA0QCFQTBwAPEZpIWQCsr/BnoUhsuL2Ff83AOTPDax1xdv4mZqOsJem6EN9UXrd19Q5tB6fhoQxoYsKyHP1XfdUD+UvD/oTkc2Xph4X5+egBzXgu7h3pzj/9LG7dN1OiQLTOXYO3s9t0//F8eSqtyaZzNp0kfpVl9sopRwIuKfqrTds1046iETqbKsWJ5yq5cE3DcdZgzk4jifmCyehPBmTVg0XdvKuGm4QXzm6s7cpMk/6dCEISNm7U+ownA2x2BByqKwZyviQNa71sQtcnV6jtJw2NO8VnfPJbO4Aj15ApraMFVhjjr/6nhqRw2xzUKLtuM0wfBp8rNchgcDSQPkgArNOTHQrpp+oAUsE+OFQnSPn9L0YymDjI7CtHPp0UinANv34b4bjdim668cxjrH10qYqxPn+IW0YFv+FEe/ketrdHgpJ6k0X25fFn2MEOLYCgAhXiKyeP+pskzZPCgQvxI11QIp+EANjuOTYiO2d46qZRzdc6P3mDOKv1+UiAMwwiQzBKQMv4FtecT6NHlpQb5JbvdTDdPGvx3qbQjzjsNdIEr8Jcwf/EJdP0qdjIRgcAr3IAfMHROt2A60l/mjYqd1OpWxL3RaI4H9ne+oL2uFoWY3bAlqlWTdm2F+PemzZ6Rsh5ZdGwr2/PdnaH8TGKsZCzxFavgC5QgYpTkrS9U1WLtE/KQ2ZFSNiI/ptdAm3YSqlJ3dAd6eTbCp+mP4gmCNEoqKoKH/0khd4rUQRUQHJIwnMkZD9zHjQwC6efpuyh9FWr54ipuHIjn3V8wXEYkm0G90d//Yy8JE0Qyl0Erg0rTJHKZHhSfnytIWbloH+BijU4nWNm0UDpTLdHElitby0KW8FQsB6EnIQ/5wTW8O7Lx8vSEhBExD2CRdQXodaomxJGcjgk9DCMZwdb/wq4oLH4zIfVXvj7AD3/gGBswW0cypW0fppuE4XjbA6O6fpGvp9fgucDxWJbQ08NziKo7HfwWcU4a4dD0OHj2wkYHp/qEruxHQWTDsqze79JUthmTn7Ntb9zVqJ86+lSnV+XjwPXGuJXU2Zv0O6tmKQfhcdu54cVOw552UzXzyp0QDAxzrbF5ugAerdmkq576TULMTWytDEUR6KpzLebU5V3Fqhrmsg92xWqz2tqtYeVl2xwM+qpJqiKFKo+jRqw6FU9CXxpZ1YlAcI8jr6bl9/lhQxDnn5vBnlI9qG1wgPlN744svLwBgkmTLwDKPP6TSI1A+FF/xXK6ZcKw1zJn9sreD1SPlehQBrk9Lz3YS9LccgPM55v3JzwyIj4UY36kjcceRlxc/kWPeN8d0EqrqeRyszhn8w2/7SX3UdTF7PQAHctJkQnHRlAXH8+5jv0i81G1mm1YYd0AA8m38/JIH/3HR+ONb9aiIQH9bo9xdI8LyLbabrfVzAS51Cf6sApQAlUfG7QXS5TEKZ3U0nO/PswYt2CzAFFoZLZU2w2WgDwBSIryMtIMARXqj7kMxxYCz/q2/y5b7a59t93gFe99bZj+LT54kqsEDLIbBFMQEBgwr207YyV1fs5R5P37UUd+QxNzLPaQ==","layer_level":1},{"id":"24dff1fa-63ae-478c-9b64-1abf59a976c9","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Compiler Pipeline","description":"compiler-pipeline","prompt":"Develop detailed content for the Compiler Pipeline of TyxonQ. Thoroughly explain the modular compilation architecture with distinct stages: decomposition, rewriting, simplification, scheduling, and gradient processing. Detail key optimization passes including measurement rewriting for observable grouping, lightcone simplification for circuit reduction, and shot scheduling for efficient resource allocation. Describe the pluggable backend system supporting both native and Qiskit compilers, including dialect translation and round-trip capabilities. Document the API interface for invoking compilation workflows and configuring optimization levels. Include practical examples demonstrating compilation of VQE and QAOA circuits through the pipeline. Explain integration points with device constraints and numerics backend requirements. Address common issues such as failed passes or suboptimal reductions, and provide performance tuning tips for large-scale circuits.","parent_id":"40147ed6-4474-4e38-b488-92b8dda915e1","order":1,"progress_status":"completed","dependent_files":"src/tyxonq/compiler/api.py,src/tyxonq/compiler/stages/rewrite/measurement.py,src/tyxonq/compiler/stages/simplify/lightcone.py,src/tyxonq/compiler/stages/scheduling/shot_scheduler.py,src/tyxonq/compiler/compile_engine/native/native_compiler.py,src/tyxonq/compiler/compile_engine/qiskit/qiskit_compiler.py,src/tyxonq/compiler/stages/__init__.py","gmt_create":"2025-10-10T21:22:16.257085+08:00","gmt_modified":"2025-10-10T22:01:24.310377+08:00","raw_data":"WikiEncrypted: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","layer_level":1},{"id":"7c4e6d3f-6fa5-48af-b8d0-79d590675b42","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"PyTorch Backend","description":"pytorch-backend","prompt":"Develop detailed content for the PyTorch backend implementation focused on GPU acceleration and automatic differentiation capabilities. Explain how it implements the ArrayBackend protocol using PyTorch tensors, including CUDA support, gradient tracking via requires_grad(), and detachment from computation graphs. Document its integration with PyTorch's random number generator and tensor operations such as matmul, einsum, and svd. Include examples of enabling GPU execution, performing backpropagation-compatible operations, and managing device placement. Address setup requirements, error handling for missing PyTorch installations, and performance benefits for large-scale quantum simulations and variational algorithms. Discuss interoperability with machine learning workflows and limitations in deterministic computation due to GPU non-determinism.","parent_id":"b689c08f-8318-4f22-884a-b1ed2f087ddd","order":1,"progress_status":"completed","dependent_files":"src/tyxonq/numerics/backends/pytorch_backend.py","gmt_create":"2025-10-10T21:22:31.957115+08:00","gmt_modified":"2025-10-10T22:01:17.282206+08:00","raw_data":"WikiEncrypted:rx/OJQY68vYlj8susheNJKA3IsXhBUhtMJLUY+YuhRDkHmpVYHYOTWVAH5j89Gy6xCVUMcL2FUQi1mLTHoHBrVspA4iI8BMXUeK82t9ebT30RQDfJ5JFgeQSRW2VG1uMOvzK6XD+N1RrLgf56zqtcewJYtOrC2X6GKK8JKsFuDJZLvlEjMPQJTDCBSU/EJFEnBC5pH4YeDLGxG/YKRBTMmFiiXz6ZtmXsf9U6TQY5L43IQBgz1572L/GGpdQfLMrcyoaPiF1vLImR/9VdVbExmS8QaCiM8NQ2MAUEG8fJHFOu6USJwsWyBGoYCcEgruH75Pc+uUimYqH9r742KFHm6OPnDdBy/T5/s1+izwvcm+529l64sOAUzBp8N9CSAgj7njKEQu+tEle5y3oefqj9G6BKRBHBFhNxxyt8VDhliy5XASa09v9COKbErk1A1Pe4LD5bKRi1N+T7qD7e527d3E8GTKCeH60WD3+566pioO+WrGh2HtXbFU2F65bd5R/E1kk2NiZIV/IXJUnCZjx4ENVp/eJnvvHL3kO1LEzpx1O5qm4ggDwtefQFKRdTKhSz8FkrVhvlT/I0qqpfvCeC2qJLTPRUp7z7V/fo3uxUu/fkDv8p4r0WIiD/5bBZfB4rY1XB4xCPcPitSADRtnGDL7Q/ee70oE0g5DP8xwIbWvlPTxL47zaPrgtE/nemDe0k58S3qnCCBwUqim6d3CEHMYd6EBEGwUgp7LjBngoRXFrLwxiYOejjeyRlNHh2NxewKcDRT1JGJ6BJz2HwAUrr+DYeAtsfP85Q1FxXJNhFIFMXMIjT0NNA/0rEM0kbF+mluVr/mUvKyfTZiFgx5IHyY+bZQXYWGWEDTjdhHEIaxkMmjzEvWkdoUlmfG9I0Neqfp9Kjf/L2x13jn3aehGUwN0AIGThbpnT9t2aFvO0Xg0/3uWH/X4cUOnksxhXRdT7WEXfqN1+lhD1XW6O9a/42h1AhghqmpP80CfzDW07gegN6bY5ZOj35pOKzYvIiK5/LiehEUUQkmSxmKu4d+fID8Omhm5xcjIirNh5yQAJZ7zCBdVKdYk12KfnzbSkAlRorHOX0AoLw252moLkRbnd7yC500dI+cx8gbSQh95euEYlq3nPIjlSma3MA/Iu7bG1OD2vJAZX87kg0Mupk6HTvThRNIG0+Mcl1DvytEUj4dMPXMzFwA2wEQDWoGqmTc9aoxedmP5zQfSZDNlBIpRm/mUlGR/n4qwarJznl+hRFr0h/g2vXXHoZso5RDFbS/AfqDdc+yCY1/KpcA0B5fb9jsoPgvc6KtQUA1/TQbA+EH7AwIcgzQHvh/aMgHRNkuIweeSv2BMjR5SG5OU9A3fksKnqC4MIcaRyCn3OaQQzhQUoXMZ3EBavWKH31XGsWaTNQIXd6XRBELsIsD9WjmqHRO912w/TERTAsCLRnLUzUQWeEnID8oFBDEonS727loOJ4G+KgsXQJvoZlErxGdgPgZog2dkMqIJ44kNFcIELOWA=","layer_level":1},{"id":"1025635e-2468-4594-8f2b-fb991b09d9fa","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Error Mitigation Techniques","description":"postprocessing-error-mitigation","prompt":"Develop detailed content for error mitigation techniques with a focus on readout error correction and noise-adaptive processing. Explain the implementation of readout calibration matrix generation and inversion techniques (inverse, least-squares, and Tikhonov regularization). Document the workflow for capturing device-specific noise characteristics and applying mitigation adapters to raw counts. Include practical examples from readout.py showing calibration circuit generation and correction matrix application. Address integration with hardware device profiles and automated noise characterization pipelines. Provide best practices for mitigating overfitting in low-shot regimes and performance trade-offs between mitigation accuracy and computational overhead.","parent_id":"6e114fe1-b696-4897-9078-346dbc4008bb","order":1,"progress_status":"completed","dependent_files":"src/tyxonq/postprocessing/error_mitigation.py,src/tyxonq/postprocessing/readout.py,docs-ng/source/next/user/postprocessing.rst","gmt_create":"2025-10-10T21:22:36.698854+08:00","gmt_modified":"2025-10-10T22:01:18.735128+08:00","raw_data":"WikiEncrypted:TP8KP13wWUq5FizrfXDdgskPZ2v86+BX1/JvcVXaLDJzMtlYyYJgr8IrPBMjmnUdPh3iarTHM8b1jjbmmoD8aq3jLvrKYmCMaq+3WjLA51EGDGA5DVSjjRYoY0jIBYwfHO3nXiJWKYFRUm3o0AkngFuIWqCbvvuYgFyLsMdB1Pc4qIqbYrphxc1/1fGpjsmWZpV4XLAgG4vUDqf8kWScSPFlKxPmsxqoXO7pwVrQSkjA1ZpUmnvV02/4uFzDjJ+K03owYUK0TX36Mu5M1UHPtUr7t6kOXihdYp9lxJSiuDDFugnGp0J7QS0J8+eDQ06vS2ZUpN9npTa1sV1f/8Kr0/NM4XYi/69L9wjCzEmSlPu1dZ417s+pgdLHSYd/h8BdKJAHnIhp3aOugUOP8/CJdxC91xGZ9qsiyQELFPHhncXpj//NzdqA1F2VZ2q7fBfsWgrqNR2Mct+7MSM1fSEvBM/VjX6P/Ac0rdP9Nz2bITRL2Rel2SetFcVa9LrZsAIXDxeIul2+xiq9updgzEOb/TkJWX2QpqvaODtDEhXbcgNBCLbWqmfMLid5NVAEqQiQ1yv055TklEfAwdAPvrUa+r99tZ8ZFf3QnaX5ey/KceGehqdsigjoEKojZz7XXtLeoSOID0JP7unLrbqU8evGFv82xRiDflCT2XJOPYH7FqsG8YhI6BrV/dCqaDFavl1+p/w1kEchxxvdUBnd/MZJCpu0HV5Yk7Yy3AwGZnW4NzRTIuFKcwiFufuFKQBy920kGWfKtp/+8Ng2/FntIYPgzaAM6P1i8FMBX+u7qtlzM8B+ABkIWw4JOjLMd4mfIgeLHFdoDHie0B/Wi2wD8KUfzv4w82Sv3orYV1/EAQEFsDsXWffzb7pROFxzMkGjQHtavjKqLZAV+dzYNtjWCXG24qRgPKBJZwL/rHyPnrflT7TW4hjP+fhmqCPVveeJwsmhYil/ZdcHczfs1nd9kIoE1XHMKzSuJmD2G9hspmziLUwTGK54h5DaZ8BcGDPfTszHG8E64nKO9LHCn0MMDqbz/wLE3Ftsokz5z1G9SLvspLcp4I+yn9lZfntaigHGYyiz+J0goFKBlKa6PVujzFt8IZsdflKvEhCysCd1NiwLS1LCxT79mRt2Yi0Mvpg2ju/AZ2c/MkjlH0rm8Z0nc7YfAfENTBWH5v/TRyYCCS9Y9O+VhW9844sJDip0Mj3SyY75JvfcgXM1EcUwz0q1OjdITrmk2bl7Po16yOFy1TTwLZEdQXBY1zWKOUroC0Y4ZxA9Oz/HKe/0qOixZVNqPRRosFt2ZJ81Gp5STAmquPyJKv1KrwPvuuRbjCv+SFOdukxkkmQO0UcPm0E3XRT4E+usN4ww29yE/u0mazvEaaaRu/ZXRJn5az3rFI3WdtKiNZprwHKgbCjhSmHKms9KMaKIaRnuK3O/WlxQu5mmy3txKXyxvOf10G7gVJHzML9/R9tB6l1C+s8BWm25GxVOR2lDIISPYxgOdshhR+q1oicIYkDxVbMdQ4BOFOyDl9IJTUMqIn3kjuWtl20PmOklcGc7x6xemNGNvBkzz+HDsR7pUvF2XjmFgM8wjyuQzIYc5zWL","layer_level":1},{"id":"803af8ef-6286-4940-8330-8480eae2ff8f","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Molecule Representation and Hamiltonian Construction","description":"molecule-representation-hamiltonian","prompt":"Create comprehensive content for molecule representation and Hamiltonian construction in TyxonQ. Explain the Molecule class design and its integration with PySCF for molecular geometry, basis sets, and electronic structure. Document the hamiltonian_builders.py module for constructing molecular Hamiltonians from integrals using different fermion-to-qubit mappings (parity, JW, BK). Describe specialized Hamiltonian implementations for pyrazine and SBM models in quantum chemistry benchmarks. Include examples of molecule instantiation from atomic coordinates and basis sets. Detail the process of generating one- and two-electron integrals, core energy terms, and spin configuration handling. Explain how active space approximation is applied during Hamiltonian construction. Provide usage patterns for both built-in molecules (like h2, h4) and custom molecular inputs. Address numerical precision considerations and symmetry handling in Hamiltonian generation.","parent_id":"7fc12bf5-cf13-45cf-b21e-370f5443525d","order":1,"progress_status":"completed","dependent_files":"src/tyxonq/applications/chem/chem_libs/hamiltonians_chem_library/hamiltonian_builders.py,src/tyxonq/applications/chem/molecule.py,src/tyxonq/applications/chem/chem_libs/hamiltonians_chem_library/pyrazine.py,src/tyxonq/applications/chem/chem_libs/hamiltonians_chem_library/sbm.py","gmt_create":"2025-10-10T21:22:57.106082+08:00","gmt_modified":"2025-10-10T22:02:43.834567+08:00","raw_data":"WikiEncrypted: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","layer_level":1},{"id":"c6cedf75-b743-4003-9940-317421d67b64","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Hamiltonian Encoding","description":"hamiltonian-encoding","prompt":"Develop detailed content for Hamiltonian Encoding focused on fermionic-to-qubit transformations and Pauli operator manipulation. Explain the fermion_to_qubit module implementing Jordan-Wigner, Parity, and Bravyi-Kitaev mappings with their trade-offs in qubit count and locality. Document operator encoding utilities for constructing Pauli strings from fermionic operators and converting between sparse and MPO representations. Describe the pauli_io module for reading/writing Hamiltonians in OpenFermion format and QASM-compatible expressions. Include usage examples showing conversion of electronic Hamiltonians to qubit operators using chem_libs and hamiltonian_encoding together. Address performance considerations when handling large Hamiltonians and integration with measurement grouping in the compiler pipeline.","parent_id":"5f9a37c3-59ab-41c6-ac09-34c8680a8b44","order":1,"progress_status":"completed","dependent_files":"src/tyxonq/libs/hamiltonian_encoding/fermion_to_qubit.py,src/tyxonq/libs/hamiltonian_encoding/operator_encoding.py,src/tyxonq/libs/hamiltonian_encoding/pauli_io.py,src/tyxonq/libs/hamiltonian_encoding/hamiltonian_grouping.py","gmt_create":"2025-10-10T21:22:57.442219+08:00","gmt_modified":"2025-10-10T22:03:00.074078+08:00","raw_data":"WikiEncrypted:5f2I+3eR0GPEzObW9eh9Rn0R7vwXQEWLh+1PNEwZlbkXzWVrcTWhaJALvPi+a+lIMP9fbObpWA8XpecKlFpIHfEjK/O8O3hvN4ClXl1k3b0JjrrXlapUqpB3uk0c3ypXVKXQi6wC9cvdhIjqjeajGDTuc3DSZ7yZSuecut4S8oyrY/3GLXXjn/V7kfzlYjsY1nRY99drrj4X/BIKNmlxc9H7ya8hHk84UjKmQOSwh7VpeoUoyN/1zWRf8QOtVn5uI3OS2btktuqU2uBxKFzTBjg9I5GH2169VahLucBy2aZGK1Gqf8JhWOVfrgWPfaI0EQwaRLqQxF4GXt/cMbSvOR85sLl1uBr+ANDYz2hsBJQx1LjTiUKLbASV/WNiVTe+s5AzSeG4/3mq1qvdV4LvaZJoacLtrbo3iRLPUSwq3wygKMVWY73elfUpAWCCNdFmXsM/H2lL/HgN9FvwXw+WwXRudfpdz76kB1RSpXuWK6UQro+qkAiaxtnXKa/ZE7TS1D72Pm+K0lzSOuYkRUJAKzwmbeCtlVa+8ZT6CFmL/U0gsdpK7ikmto4qGMcqWDCFntwnw5tHtWTRVIAuX8L0bNMz3V62MGyz9r0PiWwvqkaCBE6dahgAPABlJoR2gzCR/bE78xx51Jf76SuNAhwJjFZmAPeWVYJT+92eoci3DBOWM/E1l7pQBbdgxgDzAwz7hddOpyyXC3N2D8m/0UvXouReBx5Mgia5pL3NA4Jw8YPTxCtGvjYh3Qw/gM75gPTYgjzXUpWGqMphr/gmUHUqnByX2Ez/wqi7st1qwLYlxZjlJqEc8PLN7NbXdJg0tJFZ+ske7zoPsb/Z1/hRqdv2dUvpX8aygcRrfKXSlI9aghsdetsd2YPB/wJtD3swS1ZrgDPoIkKcmgyKW+Ny6/U6O2NFJvHnbbWM8ICdP3+eWgua3SIn6ZxXKttYW0fNFC+FNYgQ/tQhsMV4IKkrROJB2vRcCaPRd39phdyvFWBC9sdGrLER83TTWN1sLaAJ4crkYPhmRr3UZXqr0Ooo5t8glkf6D4OBp5pY28KAO1u+iZKsa4kEV5Ry5/NyTT6ojEVQEZj2NC2Jr593R6gqAXdSCj+tZMB649fCutV8D3F2GJMxYLvmnA+2cRPsZTPJaIQdH1yWeO1cjgAw8429GT6PjEjxnOUsqQVWALUQ+wuOPZlNy6mwVyipHsmx8YURYsxbSOlDxxSoOLxenzeGF0OP1K9j1U2740ak4MOjYcM53g0thG47KyBiUPrXrrQHReG5kKY9dqdRZjGPDqJrwAbCjtmmK1RbjMOVJ8hvMY+xB+XUhE2Nv1EHJhd+KIB6BtRiONfFTj/noLCBCkBpC0fFkwgwN2liIgQEq1EFlMuZwUT74R5BiRxkE6bR5v2lQm7+MvPYBzt5UY3OR90Pv4uEEoWSFtOdghQwZm41bZtzWKkA/pNjVnOK9m6/w3BuxG9/eEXvxHZEkKuz2D+VyaasEaSG6KZw9awzCIQT4qtXe3ugHxXVlY3BnRol1mYAJ9oYkmJkfMFvVfj2CAC+27e8Ks/7fU3iwNIbpnQA7IRKjsQlIV3iTAea/IAq8SJrF/DwApaLUNSnOYAt3sCh4+OZQdQCov5RIX/Sex1Pa5F6o4f/mt+GYVNDpxk5YG7Cze4Sy9YVkHaWenQ3gMIv/y/3RN10ulLpT5gqEo9D5wj49VrveP7QQXb8ZU6IMc2lq7Lm","layer_level":1},{"id":"7bdf7164-b7bb-4e90-9d5d-2f730dff0972","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Quantum Chemistry Examples","description":"quantum-chemistry-examples","prompt":"Develop detailed content for Quantum Chemistry Examples showcasing TyxonQ's capabilities in computational chemistry. Cover UCCSD and HEA algorithms applied to molecular systems in cloud_uccsd_hea_demo.py, integration with classical chemistry methods via cloud_classical_methods_demo.py, and hydrogen chain modeling in hchainhamiltonian.py. Document various VQE implementations including noise-aware optimization (vqe_noisyopt.py), parallel execution (vqe_parallel_pmap.py), and shot noise analysis (vqe_shot_noise.py). Include benchmarking studies on real molecules (vqeh2o_benchmark.py) and transverse field Ising models (vqetfim_benchmark.py). Explain the relationship between algorithm choice, accuracy, and computational cost. Provide guidance on configuring chemistry workflows and interpreting chemical accuracy metrics.","parent_id":"be2b789c-6423-4d7d-89dc-b724ac123462","order":1,"progress_status":"completed","dependent_files":"examples/cloud_uccsd_hea_demo.py,examples/cloud_classical_methods_demo.py,examples/hchainhamiltonian.py,examples/vqe_extra.py,examples/vqe_noisyopt.py,examples/vqe_parallel_pmap.py,examples/vqe_shot_noise.py,examples/vqeh2o_benchmark.py,examples/vqetfim_benchmark.py","gmt_create":"2025-10-10T21:23:23.919625+08:00","gmt_modified":"2025-10-10T22:03:16.330933+08:00","raw_data":"WikiEncrypted:o/V1DzY9J1knzt5DomOylQlLvwhAuRVO8R4aVLgCWzUE/vkOTp20xfYbP8yqXg9vg+04yoVXUXSgt9uBidFYmvGLQjriaaI9E42wLfhGOP1D5yi5kcskfSwAqyhUMDdNkfCfiyjaAdTdi6B5+Z9urQ/Ps1S52DY9M2zu8bka7m7in8LfhcemMuavfRtNmVA/zJSNET9r6hCm6wEjkCtClmTlFgZL4BqmkI4wBQRIhvUzqhteFRjgbzQazRYyQlhxcc6e9RI0pUtM/uNNE8pWQ2sZXbgt4pTd3R4XeSuKcKZ5OTWV2kUd+q62WH4lqMEXp+m1ufxA+AfHwAV8JNkHImS2ZMlGPNi90UCyVnHwH3qUKmDGDgIV2/SXh02OsjhiOPPr/LND/OI8wRXxJwCXsPaPIQ9UFOt68TjiJ2+IW09KigMjIYB1em8OhcKgKnHtXH6svRcADQuM4jRcOsXSHmJmYf2ZEPyfizaFg2N+B0K2VBs1kzftWAhr5VM7I8qeRqG587NT5BGDpMm7jc4jPSp+tsGl00VmdlnHbmaA4WmBDhwZF1O/dLhyWZokOOH/2nugviBo/RKI9t5XI7ejJqSyxnx4XSaj6+eQo8gP12t30L+C96JoafTHktLefqXX1OoBmcGF7ku9PlXXWaLvbDplslOH7ipa07WYKDKMricEGjbMI/FZ8AeXqnyIC26Z5luwmYkHg0mvFWasCLsUp4ZGhr/GJ0LOcct/nsa+SCKMwqXRlnAUGbCAzY8HlpzRfcUmu2m9w0HwTpFJt8xChn3Ney4NN+rRR1cyTpviw7p8y1++eY5b3AFgVusI3yz7OYVFJKRsxmwDF5jQtCZCmHZ3KH3CK/yRKzswGCfeHRDgrKvOP8nzCjFDJkq8696XBcrWfOlBQHp6vkEJpWX92POkoKR0rmk5GR5cpterKvaqECsBp/dk8rxMJnflogRxP2vTRxcvLPWQK35jIiDWfH+Rkppx9dNoics+8LCCEPyvkyWgf0ryIJ0ceq8oRDcQ9sSD9dKDicuPw9ewalK6CCYt4yBCDuRJl6k79uffLvGdnMqjGQIX6LpQ2cGaRH3AqPcbM8XUIR/WjAVt/i/7jZG2xmThM1PZ5Bi1mzNm2xHTRrRrSdagdyXGtI6E1+W/LAffMdfzgxerSJkteGGzIhrFKPFv6ySMFDnpzFMKD1uY88Phy61EtVrManLT3uWUrxbKNfADRhBeedhb6eQkXZvDu9+Ont2CeNLaGVTVllUdiB52GXde34X0a3LT6Qn7oVnBW+UqffIBrJikzEwH1ft+AgAP0lwPxxdcQxYx4r6qHBIHKJJuirK9JnoZWF8P4CZZuHxZHcDGy6/K1Zz898xLoD49SjWmpmfFz2wfyIHkKNOhPoLJ3cL+Gx0X+loxnHtdRNdUrYH3qKnRLpihM+SQqD0tpUMQ933/RiuPIDR6wM+0Av0waoaAyGIaH+OrtUBjeEShDniVpt1Jzdq3xOhosuxxErq/M3xPyk04Thp1uDCgVDUAhnShkLLnpJ/4HNjcnPoNYUyPkbnD9U0fVHjiT6/SCoZh/eYD9AVOrWDtcVkLKoTyErq16NkUezSPxr6YSgZKQb8OffSjEniVzMHOnyAVvHWCDbzqoTNx43s2c7x0iIuALKqeKnQlY9LEbVQM19Ak97tbglrVUX0VnGp2+mi4pSDFRxPWgJi6umqa6GdR5dtUGfkn6B66p2eb4efQJFoWD+VeX1pMIqek27oJin7wV+RUj6rDSd2frEzFAIJtHyUf1LIVTAI66QoQAaipgIo9PWcdT3PDuIofN/AONZDklV7WrHrcrWpx7i3W537o9NOcsXKZ3iS818ecR1aS1ZDB15x2f2Uw61HPWQ==","layer_level":1},{"id":"628d6fa5-1ce4-4502-b031-90da66c16b34","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Noise Modeling and Calibration","description":"noise-modeling-calibration","prompt":"Develop detailed content for Noise Modeling and Calibration focused on simulating and mitigating quantum errors. Explain the implementation of quantum noise channels (depolarizing, amplitude damping, etc.) in channels.py and their integration into simulator backends. Document noise model configuration, calibration workflows using noise_controls_demo.py, and characterization techniques. Describe how noise-aware compilation and error mitigation (e.g., readout correction, zero-noise extrapolation) are applied in postprocessing. Include examples from noisy_qml.py demonstrating robust variational algorithms under realistic noise conditions. Address common issues such as over-approximation of noise effects, calibration drift, and computational overhead. Provide best practices for balancing simulation fidelity and performance.","parent_id":"0a04a277-3d67-4ad3-9572-9adfc478c2fd","order":1,"progress_status":"completed","dependent_files":"src/tyxonq/devices/simulators/noise/channels.py,examples-ng/noisy_qml.py,src/tyxonq/postprocessing/error_mitigation.py,examples/noise_controls_demo.py","gmt_create":"2025-10-10T21:23:27.647996+08:00","gmt_modified":"2025-10-10T22:04:33.489332+08:00","raw_data":"WikiEncrypted:oIcq6zzNaYrW5pfGoSa0fjBOV3XbnuhY/ZpfCXCJGY0bAg0XyGdOrABIyH2bfH7cOsFProK6ifvvrnrCamJrjMI0mJ/hLaAdeH3f3r0gyaq41kVQCrW3SD/xR28Nuwx/LKmF8gGUSXwSDQfZyN23qO5ZqwZRR+m6oSJn77hDlp5Pi5V/1wi9q5CcBofvQ4EtTkiMmrBl3oh7NiHLDaygM8GMCAmwjwvnNqq54l1dZzH81mSNocdPGVbvG8rey5VT3pCgNGm171044kB1AUQ8J+QPmflT5Ns7vl2ZScftTVTE+W54u67b3kdybuN3NyWoAzrvPmx2fAal2MUwskCoq1Af+Dzy8ka1Vs2tEEdfV669KymQYVXZwahZTB1h+EZ2b0DENpBDI1qczn1sAv+1nMJhAYSPntnQ4tkiiSq4y7dCaYJLnR1cSXfKe+TpBSuGQf6uX7xbj20x/m1pFGvXdPsfbWpgzxUUSvlYA+Qd5KZkycCxYwwtNZQM7Bhd+AbXZmAw2l4j2aXX+mhoxiM6yG8XWHFwir8MlwbkTkX0PqmSyLvSK4b9CBDfglEt4seXwCnGuQjLtX2U4MmyPvdzj0o9qSdRWNZ4qUy3E35VHESaeYYM/n/Xm0SC6r6dhOa4d+JVaFRjKHNqGMCqR+pUcWLLkjR2QiTNtUaZ98C1XNMCUbQzOz6HqB3GiSnYk3yuJVi7SZFFJJpLjemxykMw98PsZbFJmhw27lVbljaWWaw3gzHguOo9uryCdSV9oh6rAMgPeDxjHasZTeMQt5Sb7AxWJqs8xRFzSy/cJ+1xIr27XeK39OXEK/R3Ykv8v3c4vfRexLHTXDyyW7QZaIZiEHRfKJfH1mmvZuFyLzmrGUWQ33oq5NALeneEXfRC5oVOENHrsll1oIUi+o5s3MeXZooVwiiZcvGrJZjtve7ApKXdVhoRYF/q7jRzIQgh6n5IMSblMDLxDJl7sRiozgF7yWimiDoPGHUdiKJBnlazFT4OjJ00DbzYHxg09aG44X3DBvFDqkMhc9LuOsBKZ/nBVw8MX97Vdh6gVXyaLa3YgYee+taILprBP8uemOYNlxC256DbFuc6CFykGmTKg9ZqQJ510e770i3smU4jgwArXezpFOh1gdHC9uhioi14gWMufRIRLHmZ1orRg3UtmDrGYVmpWmAA0pw4HFWhT/DdUOS83P7QXmSPHDfkKzxK/d5hP4NkbFPAuvVyNaJPQXZWzin66+3zaH8TG2Vjhy2qPMTqmQhD9nTnigLXALMxtBi8J3AXtT7ySrLmjPYIEd+BCtgSr+BqSUd2pSpY01O4hhy1b5Uxw6ULnVUQ4JwsuZFS3JofwMwOzEHBuOxOJXko6XagFFNOsoUm9/kycARzWIGcqHHjP7RLly4lWIbnXSv6blnKS5yk+8jbwwnyovg8FcZ05wdAdFahSMCF2Ydd7x4oZYjtvIBLUmnH9sH7rkophENa8Sw/9oJyYrhJdbT8jFEVm86+Yb7z+rSC7ZKGQ5EJFQJSvqFqzP+E8lSBDb3yJTnmQUl8zs3Iqttqxh7Wqp8J0jciMlOs5w98vwthieEvqoq2aoscviSM3rrTwl94Za1yvJ6y1xtsVtz6v+cKrnoLKyCX+W559dDEtY9JsYkt510O1XA6QJB/BmM2UzYF","layer_level":1},{"id":"52a603d1-e4bb-4c84-b984-0fd087bd2217","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Plugin System and Extensibility","description":"plugin-system","prompt":"Develop detailed content for the Plugin System and Extensibility using registry.py. Explain the discover function as a placeholder for future plugin discovery mechanisms. Document get_device and get_compiler functions for dynamic loading of device drivers and compiler implementations via fully-qualified module paths. Describe the _load_by_path utility for importing objects using 'module:attribute' or 'module.attribute' syntax. Illustrate how the _CACHE dictionary enables instance reuse and efficient plugin retrieval. Provide concrete examples of registering custom device drivers or compiler backends. Address the current limitations and future roadmap for entry point integration. Include best practices for developing compatible plugins and maintaining isolation. Discuss caching behavior and its impact on state management in long-running processes.","parent_id":"d098b674-d19e-4445-8089-ef411e2aa603","order":1,"progress_status":"completed","dependent_files":"src/tyxonq/plugins/registry.py","gmt_create":"2025-10-10T21:23:48.190339+08:00","gmt_modified":"2025-10-10T22:04:14.095463+08:00","raw_data":"WikiEncrypted:ukPV2tcWPRGn89Upsee0BF5gvAGcO+62vRP9VkFca+kqLRUtLp9M6N1pm+5VjPB6OtVb1ZC1+SpmD32AqQ+DsmlyWgfSNQiZ9GIBPyfMdlydnMaixxTStrpSmzSLPuI4IfrZ2P62+oEce/Vz0pmPu9Uu7yvljA8Vg/d2ls6ZsjqYUYzR4aPXRpuqjTT2pdqkkQOhMlw3nnU4udf9RkqiAzf9sDp+XviGk1ycFLGMiEQPJXR6NgWrIF086qhMZ9kqtxYpiygrpxq6szVxfsPQiVUKMj+qMdlV92CNl2x+D0QH8gJmWwjHfu+y/PpftZgx6WmWJ+W//JNBfEdUm5YC8MfpVEhdiQuPMBgl0F6KibXys6wkxYyhTcgSp0Oy0Lvv4NkYyOA6w9JE1hx67zuEKaq2MIyhEO0vVYKpXrdr9sz1PeGEaa5wPixSAF/nG2g/jeSM7D2y9Vn+uEos93GWhACiQEkAQKAykN5BgJZTV7kR191cwdbeWWwlt6SFfUxmR6UDsrI4rHt6YSIAztapb+N7//WRK3JdOWWAXQNkFx1pA/AgrBw9JOYBpOJKSQFxDpC1MnM2GptpEqn8nGhX0530xRVr1OhVAXoF4FD9GFXxmyB/2LUkOrv/6QvUJRtB1ZKWb8K8BggUPD5iE722Azo5wsErw4sHgv5N+x4rJphwElzH+VNi5oBRzKUmPae1aH8iZ26wuOzNkZCL/w7vhCQk19WKzgU3FmUSw8/Pd0GEdPINbDyuNopdSic+QcpsRGH3qAYXAwPPY7x932zwH+aTaQRPHP/KZsDylwgkw5OZQGmlxg8mdkJXeMqTwrW0+xuMJ8x2UNEYXlIQ4/CMCwAuJuxDN52luVf+nKFY2Ne8mXhpepH7XlCIMBmrNwdRte6+Ot9KjCoV6xQ1TYAw5fFg4WSkg8LvCQLhE7H8XWCKwxe6OEHVaIwlcXObpi915jhClvJEN+BDASPGHRQMwx00xiVY/TZAjUjowTmiVcvEwB8ydYIG4JovivXvjX6uMoKCiSx9/EGmDa764whh0CVb3KBauHmg5+dumYX9RPNyLkPd3+PR0forja1wIejbaws8qtQzmVWdbfgl2O07DLn+1d2YSHrOFaK8EwV+RFH+cxKpuh4jgTSu00p+OP4TfzB5tV5LyEvQQgAeCN3Wcarte7Ic8NkKgHDRvPMKAPo4h9qtDSir+nWgHiFRR3dU2AOx25WDQFvoMA3A8sbtikYoaNicVPxmt8s5L39HQb83S95QW8n5por7gYKdFbZAWQiOGVGZpRbBPeCft4uOHqD5SoDy+NhhUxgNOwP/B2jZtmcKPjkuft5plpNsGLVTJiVTh5ltUyhW0bVsU6H5Z4NaxMUkWYB6j3Hy/kzwcluiRdHHOfhMvXnnsIstb++sG7exadKK9NAp4ndW/uU1RcLoChiXmvxim2DXUKd9MJAZwriAtSMqrcbzYZ7+RefY5AgMuDItjk+BRWjc41dKN63RIHRqCx583FBt9QaXX+uPM41pKMgP3jinnlq7k/3Uzpy34OLdHO+lL4sqv4KB3lmaO6RRO1VBXHy4SjCo11TyhnqbHi2YYo7EUyrTIizpzNVQemDO+oSNh0G4JePClg==","layer_level":1},{"id":"66b4fb87-da4d-4649-9598-2ad8db90abc1","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Example-Based Validation","description":"example-validation","prompt":"Develop detailed content for Example-Based Validation focused on end-to-end correctness of framework usage patterns. Explain how example scripts are tested to ensure they execute without errors and produce expected outputs. Document validation of quantum algorithm implementations such as VQE, QAOA, and time evolution circuits. Cover benchmarking tests that compare performance metrics like execution time and memory usage across different configurations. Include verification of gradient computation accuracy in autograd_vs_counts.py and parameter_shift.py. Use test_example_vqe_extra.py and test_example_simple_qaoa.py as concrete examples to demonstrate assertion logic and result validation. Address common issues such as broken example dependencies, outdated syntax, and numerical instability in benchmarks.","parent_id":"7972cfd4-c320-4a66-ac0f-409aa8b4cb1a","order":1,"progress_status":"completed","dependent_files":"tests_examples/test_example_circuit_chain_demo.py,tests_examples/test_example_vqe_extra.py,tests_examples/test_example_simple_qaoa.py,tests_examples/test_example_timeevolution_trotter.py,tests_examples/test_example_gradient_benchmark.py,tests_examples/test_example_sample_benchmark.py","gmt_create":"2025-10-10T21:23:52.770683+08:00","gmt_modified":"2025-10-10T22:04:39.117247+08:00","raw_data":"WikiEncrypted:VDiDZJYWRQTud/QhSweUbUakjoyWRTaMxjmXg8a4T04qX3NTqXHvXwQfjVd6ALdRwvVG5BnYJG8tSDaM1hA6Rsix50lkVR5dTt20mhzJQgf1zDLoSVzn0rft+94A5VKicPUzKPwyQCoFveM5LX8Saa4EhqQ+V546IA1uo5F87O1F2x+YXEV1w9gEmb6n7l4WEj1P+SzFvY0Q+TvQNBS8UXngKCn/1stK7ZoaKBQX1bwVwtkQEJaja0Bq3URpsBw1Qg0SmMXEtcwqae4phlGA0k8oLrF16ce6VgM+tuWGCagMAQG0H1aGT81DaShUk37BThotfVP0+BDVdQnld/CRjaMtYH468m+TOdmVaZfjvldZMjLeg+pBlngkUYrYK2Eq4sBKViRB+1gLV3DUhJ+Li1O0CoBWpEZlz4S9IYjeXb1jK2/fKAqs8cOCfzxCk6OXSnT5/oo+m67NXCilatjpxV0r4D7h6BDsZM6YPaXtgo0gACb5SXsD38rcMrdJKYhokihk6/AeRTVrcLMeZjhUUty02hvLGnVv48dguSAx3PzM2rsP/cqJMEk2lBV2FNom7dFg4WuXAdPTBKkiK+9xBRFVbYTGCAbXZWFTRkHJRJG57+u0by7LOLGErQ0xdACQcktXb31p6Hz5eBF5uwK5ysuyk3BE5+9/41tisW60VBmWWLUXaJ7HNJoyjfdQ6m+XDnRNEUeHbDvd70BKOz8+/YY6h/Fse/yaGhll1chHzj2CuHLFY1nriiGYypiZN+J5QD5dgEIxC/1Hnqzz5FEvvKFrnkqoVKm+dXP2HL65ylMaybWsC+uMTiPO+GKq3tQ33UPeu3iSC+J9LBwnsDAN9lTJpjT7FDnekWhdDI1Ovr8HpXIkNEkj1Qr4GsiZRpEaxWj69SRroi0Pnkema6Xf+EoHrywLe/gahB5jpOpCbr/gLQ/GATa7a6+GdMMIgXDAH+NRtqQ7gWbAxsztT0KNJ+rUkS6XZdTJxSjO8NTMSX9uK1Iblx2lnLf/j7nxrk+XJrekfORd5Jmz1CzlNwam2zL4vU9aZGr/u5VUYG6Cr5xewD3WJWGhdOxn9xFLRJGucwWyyCl8KHftOej7Uki5pFNJnDlpyQerMMyeqjdL+FxPvkwjc77NHUEJATvQBSGSH9eHovQaW1S6goKh92wn52kxSaCeqYM7/Ftv2sOvW80fGP8Hm/FNslUmGCW298T2Un1RVeIs+wrQp1B3pWSoZMtrTgVRPWM+iAgJi/8H/11EPEAMRuhtS+zJeqmoI3ETJRVbp/GhqApanXwXhE1ct1MWXiSGcxcSJwN5k3EEcbK5d4UEE1kLUIjgEGTH2HkF4ZyM+HgwkKvk8FZghbmpvKf4GNpzbFPpRflu5lKLVtg+rFmT87aROXR2kUOxF3KAycGnpdVuI7Mkod+ir0du1uUSx7ZxbDD28H0IVrddKaEg/fQG9Km3BsEKu/ipANGtmkDhW1nAdGQS6OyBeCBSCuQbCy5qwk+P9yXY3NeUp/fMTAVVm7jL01GauHvKGSjuMEI+hMlAtbcS4lK9t7caFqMyRd4bRpSU9uroLwDntWcyVEZz41xNN7pRg20npERhhwhjoJCTr0pLgcxb9wjOIcrIv5mTqzgvLeWGn3UqachZIT6NwTENtdrGablIPn3JOEnLECXUTjT3LygRg3seTNLVtXXgDYINWUwkrTnEty9FObhncmCHPFGxqM3wNRrW2pl1/cSceWoB90noetoB6o6wM41XRfD6alMUGTdPrUZ4CJNae6KlZ+xZjyAineEnvNIbkdjm0KMhHieNXJhKdFVCJvS8azLETkFXjWGx1X5t0D3gD5prfys0N7GWhnV2bHLZrBVpstFViQrh4kfaSnSyeaIS52CfnrmNszev2+Q=","layer_level":1},{"id":"53dddf26-4ae6-4200-b5af-45fca433de77","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Compiler API","description":"api-reference-compiler","prompt":"Create API documentation for the Compiler module of TyxonQ. Document the CompileResult and Pass classes as the core compilation artifacts. Detail the pluggable compiler architecture with native and Qiskit backend support. Explain the compilation pipeline stages including decomposition, gradient computation, layout, rewriting, scheduling, and simplification. Provide comprehensive documentation for optimization passes like parameter_shift_pass, qng, auto_measure, gates_transform, measurement, merge_prune, shot_scheduler, and lightcone. Include examples from examples/ showing compiler usage and configuration. Document the API for custom pass development and integration.","parent_id":"f53ef1ed-0ee1-49f7-a90c-99d15b936574","order":1,"progress_status":"completed","dependent_files":"src/tyxonq/compiler/__init__.py,src/tyxonq/compiler/api.py,src/tyxonq/compiler/stages/__init__.py,src/tyxonq/compiler/compile_engine/native/native_compiler.py,src/tyxonq/compiler/compile_engine/qiskit/qiskit_compiler.py","gmt_create":"2025-10-10T21:23:57.625901+08:00","gmt_modified":"2025-10-10T22:05:39.592234+08:00","raw_data":"WikiEncrypted:C34GewOyK1SlumqKiPsSgwKZF7TGWYPC6lYIOUrFEKrTf+JVQ87ZhuDUZ+rhh+5jW/DKdEVBl+cYrmsLxqAqhgJYhXCe33wOpZzrO7lLcC4ileIM6qW3y3tsbOoWue4VIpOkaVgzNl/y28o3WTr0lCdwMw4KLEc3m/qPvYPySA/1hzHluYGthtADXwfkvjRJzRwc2XdSFNbXEirKjjw/ho03aSHWgF1mA/tEqUZ1wrEAeqwMMPA/KL6bPrWpZinI41mY9jUkpLRN6Uy/pbomdysWjt1McuKlvB4e/Emcs3UPcGxl9eawzMAXKf7kgacY1Ge242qlo+oTE8+AhxJ70pDybzPkTStrbSYQEBRROmRUqCtHJ8PNveDzB6nAdctrJ8HgXWV+8dr6vRPpvS9hEHRC/Q9XszkpDzDcYn70w5VknvurJJOGSrvli5UArVg7Sah4NMUancGxWz7TNeXXJEqdxmTc1fRilcz/TgcACx+01HKSyREz5fwaDMUASUfhA7x13+8hsvQvf3HjTtfzGwOFA8zlIJSXOp8N3NpYGBN/zXGYXQgZ7gkMTT3wdBY9NIruVxz6L9sr3FwlZhqrao03JYwAEq9BogUCyq+ni9tlSJ+8HM+UyuqQbyPGK6PaY3ABP+TCjj2KSWqPPaTncsabE9e+pGOVnXqTtF6L8xTlB8QnnLTbMuapeJBeteCphB6me+v4e0ntEWmW/bRmVxDU1NF47+G8sRzOOMvIl8EcTtMCrqyuvJz2BTat1XJe2WIL5EI1/N8nZWyJ87mj441xj4X1BKXL8PT4eqZiF0wg378d+HU7L0vTa8TPEzrXsO6i66Q3Ky43ZcdgyCtyB5+Bw3h2DazrwHIkzvwq1X2PI1qSHynWOZWKzcz8K+11/FbnuKjp+rP6Prg+UFGjowo2sXyRCsAqFp34OHxII+qLNRTTyBm1tDioD58N/ZH+891MRLGuDZ7ynRzlU4rZ+u4t5+Sy5nR31ipMSbomuuRoZSxZGJXbxpUn8nhZ68kGgOKwyJe6NXyh6hACtdfICLRev9PotP31CBjVNpSn4jb1uRIEmGQRmG8oVR6Ix2tm42AKtMMTvRHCY7OMb9lHLqLJIu7PWQVAbIamxK33SO15JhWvYEDBl/1TOD5v8uD4ANlKpqFHK08PAC9Q77NlBoX/XuNdIdydmQV8KJzNt2DpVk6onS9H0HhIV1LaXUEgf5qSI46aqfOfa/MDuHg18zdJlN63nXAbweQzyRnfjkX8Hqrx09LZEmBMik4WehjdiKzEOh9zaRznP7zEOmk9cZrxo4B98qkzFRbcgIVj18Raw9yNg9qT8+fI/DPGU7bUa4RCPYIV2Blu6KrGNpN0JkcPqSXxDxQ1pZGQ4AsV6GXdrr59DB8iCvLxHCGqFVPk36r2Huf0arrpSDTvR+z6nQ324J1LxkSyq36KslRB51Bos6WC/apQFGGZ1vR0qIUvWwjM0R1Uq1BLaNaq37Ppz6kNBDg4w6klWD3fxCFn3/UQKa6b+6rWkFcpbxXkX1U3bVWWbEZ1zB5ZEoRQ+XISQ8QEWWa1JiiASCgFbttz5THlG9u+C5ecB0Lpy2gS2Un4WvCmQmKqpsUFeJhQ1HpVhQ==","layer_level":1},{"id":"cfa786ac-4a99-424f-88ff-0ba4928d55ca","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Quantum Natural Gradient (QNG)","description":"quantum-natural-gradient","prompt":"Develop detailed content for the Quantum Natural Gradient (QNG) implementation in the Compiler Pipeline. Thoroughly explain the qng_metric function and its role in computing the Fubini-Study metric (Quantum Fisher Information Matrix) using numerical Jacobians. Document the _central_diff_jacobian function that computes parameter derivatives via central differences and how it integrates with the statevector output of quantum circuits. Explain the distinction between the 'qng' and 'dynamics' kernel types and their respective use cases in variational optimization. Include practical examples from compiler.rst demonstrating QNG usage in parameter-efficient training loops. Address the backend-agnostic design that supports NumPy, PyTorch, and CuPyNumeric through _to_numpy conversion. Discuss common issues such as numerical instability with small eps values and high-dimensional state spaces, and provide mitigation strategies like adaptive step sizing and regularization. Highlight integration points with the numerics backend and optimizer modules for end-to-end QNG-based training.","parent_id":"1a03aa9d-ae93-4749-a247-5aedf18fbeaa","order":1,"progress_status":"completed","dependent_files":"src/tyxonq/compiler/stages/gradients/qng.py,docs-ng/source/next/user/compiler.rst","gmt_create":"2025-10-10T21:24:11.595957+08:00","gmt_modified":"2025-10-10T22:33:24.769632+08:00","raw_data":"WikiEncrypted:o/V1DzY9J1knzt5DomOylYwRpnawTNe9xjV4ofFxZpNVGa3Q3VYaR3/b9BpCCGRjsss2w9dbN6LJpHdnh2n3m2uoKGcUBo3lOXIoqlwNtIYdBe7ymGCReKWZms8W82I3O/sdHYwhEVtYIkEXYfYYTVI7h8ElAdn+f5eiad69/1OE+/qdwdhDleFje12+t+Moht2nvxEv0eE3OZ47pwmSw+lZ+AJEKjyZNRZfzzv54T+WEtONaQy5YChWx79P6LnWAtbOywZdlc9b/UlxphNPL1ZkL3E9mCS9JyCeZH82uYMGqC14ajLSjBirlY6rbuhHAyZknymxv1aurJMtOFDJaZvPB3GDzTM4+nNc42JatfozwHPe+98gdq81PLe4mGHarBrYAi4u7zT9ztQb9c2CdQANwjZjy4XpSoNkh5dotmaFC2lL2bP2hXlpfPlkG4+EUiElmIjmfaLKE7/ebCNK/Oh9YM9s+ydU3nYERPUFf8I4hlv8zdEN/MYngW2w7sEqAyQqftPon7eNFQOzAUJmFWInfzpABzb3jjxG4eQo96J1Qrba6qGqz2/Qa3dSG1g2yJcIc776vFHQ4ZTmKyT/8Mz4omcDC9eoitzBCdepGJTOEOJvUHHKpbGLeAdtrM8nY5QZyHzYUXf3K638voJyikNEf9wqwiiQ9phBRNOZZxYgU0DiHJGf+r1hKMwczFwHWLTTUiAYj0UnkBdLx7IcsL41MWaBga77MSOHYQMYAu+yHbNCssR30G2M3BOkCw5T7j+F880+zT+3l7BgHkPr8fWp3DbyGxjC30BP5o2D9qp/KxRosQ8IhECcBM2gdQ3kx+A32Cqtnwqtb29NuyUBXMb9COi6k7eAsigxU+OCsxS/PKkyujzSy+4n35m1jFs2+xNZWR6KuVTEutE5NA3KrBVvpGUmZTiMLu+LQ62QFwwDHgzFB5ak2Ofu09xd9tiKTgdKfuoh0XDt9+xM9HkVXC/aGxpakaasV2Oe+jeVvFHxym6Eqi0zwXTu7c8wzKVvhwItI4R2I/8OtCbRjjRf5n73mgNfv5MliXfRxL0TvpX23hd5IRt9VpHoTGAdNqC4zMpIcOWy0sEdIuy+EYDfuvmgC5smcbGZKa0+DQZG8jTRBtGRueDshkEGgAgVSrzgDgrtU/KS/wRBrvePuMYPahUftuX27BP6Cv6FDlBMR4JgUKAF23DxuT65lueumMaTZq0dnoMOLq2vGEd6HN0LYDhOPOjlIS8AmPxzjmPM0tFgcmeAojT4gyS6rLDQZH9s0QfMZH2HW5aNXv3qPNjU7cT/7BWhGVgAkFhXXDocky5K6IJSqSqyVaBTZJmgfEwvQahwE408hikR+jMq7bHgbGD9FJoIzC5ZbliEP1DR45aB4/85vsqXF6R7AzeczXvLApLfFgGN4+FOnw55Q+ZSfiA9Kb7hyJZnqXR/K1lVrgU2kVInukDJFBgU+isxGTPWclH2W9cihIYHL4HZ0VQRQxjgJxWJGHvAAanXKEMc95AkMd0gPd9vQAxrxgMHyBumZiXYXcNjKN9MBP4ImbySbcYNl6n9Uou+cZPzI2BE3FsHQLDVTQP9ucK0QecQkDUanZ6bG8lZ+egnbZ5pB8du+H4rKR54RGBVh2RmyVoPOW78GcS8E4ulADTLRpLTluRF3fceEEllt6MGI9+qpvxfhigpIzfl+3vKJRLoEIMxjeSo24K6RFLyhl5nAIoGzv7TNUQ+B4N/6wPvWwirZ54yMcIuzKGmTi344XG3+iuY5kBsTp6gSAWkCG3c2vZU90ZRI5rMWIiFpQv/WWJuTmWgmsUroPR1Wemq1XWsMs89ZSZBjoKOFOth/lCM3F8weUjXzbO9ztd7FLvHWJkiaz4z8Mp0O9g0G/M31Rq8LCdmnj/WWajl7d2wKb24MqCEh5SZ","layer_level":2},{"id":"1c0886ae-905d-4218-8110-8eb8c3ceb40b","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Qiskit Compiler","description":"qiskit-compiler","prompt":"Develop detailed content for the QiskitCompiler implementation within the Backend Compilers component. Explain how QiskitCompiler enables seamless integration with IBM Quantum hardware and Qiskit's rich transpilation framework, serving as a bridge between TyxonQ's IR and Qiskit's QuantumCircuit representation. Document the ir_to_qiskit and qiskit_to_ir conversion utilities, the normalize_transpile_options function, and the logical-to-physical qubit mapping extraction logic in qiskit_compiler.py. Detail the compile method's handling of output formats including 'qiskit', 'qasm2', and 'ir', and how it manages transpilation through Qiskit's transpile function with filtered options. Provide practical examples of using QiskitCompiler to target specific IBM devices, configure transpilation settings, and extract qubit mapping metadata. Include troubleshooting guidance for common issues such as missing Qiskit dependencies, transpilation failures, and incorrect qubit mappings.","parent_id":"0338adc6-5527-47df-989a-a79660d3a14e","order":1,"progress_status":"completed","dependent_files":"src/tyxonq/compiler/compile_engine/qiskit/qiskit_compiler.py,docs-ng/source/next/user/compiler.rst","gmt_create":"2025-10-10T21:24:17.787832+08:00","gmt_modified":"2025-10-10T22:33:28.347024+08:00","raw_data":"WikiEncrypted:13WnYZMy5ec587bZptpua7Rg1ix8IHtHzPIXP32dvMI0VHyd4rm40LY4o/iLkv4+n+vfyculgNVG9E9FIhFplw1FPN6b44xYoBZz/TX5NruCMWuWp68BGzEen++UvE5bknzIao1TM3wizFrs5uguhSAP0laAJXx1P2iTGQnlhkmQM9Si3kbTW+W54krQFudayysV9zixgRNK07PHfiofA+sFtmLNijNB/iUScneXyq4TwhhFqynFopQUQWFQKz+iQf2CVQw19kmJ37CUr8qSCY/CJMGyE3qg/KZBmiaPanZ36OVOH2VXG0msB/FIZxlKxFk1oOGgmSjV0FsdZ8IoB2l/Tpi4gWUvf5s6y/GweQwSom9CH33fQPSra0lREOlfnKcBEnd7fRZT9at/GCJIdKs8aYk3o7MsE9sadYqKQ6Wp+mk+AKTh8vT4hGDnlyHrcmMgcGdFLRMqGgNXbVV260L36/O4z1KsBMjgJT+1KcDNTr39TErhtZE4KP3C/bJBAogudIHivTQ1cadKh1SKC2NUgiDZLuW5SUULLa6nXvFc/QKuq5X8ojvCYlJKPHibrTH34WYXfpg5nzvoLNz/xPJC0Uqha6qTx8zewb+yhjVzFMUEbK/iixE3RzqeSHLbb/+I0jUNb9aQ/l9rLPr/ekWhpK26VBUmr1p1f8zJmK2e50BAzwnCOKKvTkuLTjA1tsU7XRKYP0A0u/2dmzQ4/+Ge7sXrypTzgZoFKznqacJx9Wu7HraWTwadLxAr693GlBMM2bcp7SPcHVQug9BvnP2IfcJbBKvimA4pNw1HhnaRlZP4D3cPoh7I6NReJHN1SGNQSnOwS12B+USYCvd1TtS4kxvPRRzzrSCJ58rFrnlAQjKs+BRlrCFjxqmY0sdnJQTW1pv1Ty2PNPt6z3dhJ+W79j5qycfPX53hwtEb+sfydwN9rJsQkzLxfNHan4kKFFHiOSiBEze8glhe/Al2gbrJLiDxwXk1sNTkce/XJ/uHTgVG8ANHMdMeQ09YTt4DhQhmqzAL+LzMSHeJIplgemP8SEASKop2aJxdlizZFOfBFnamlHpSF5/OZA7E4i1oq3UcpKzVOdx4UPnAou9A13S35O1epAb7jd7H3M+ebknBH4S8cWmg8NiEvJdp6FCvrIBmI3k5vfU53/BE5muY3cTzhbKitNYPh+Tdej75CaKn2IogdamC9RSgeBEeYe8t39dyFrv1sO3YhCDCmgT6tRIP/sEpoCohlPyK4TRB3bYLVWqKgF11XIyfCjrh/aXe34Mw/YrHcPsowWBgILuMIcKAMVdUQKKR3n1I6xFz9rNyq7t1c0xTeG/RZ3IhAblKpN8IKvdbzCy+d+R0DEneyVg/sK/ALNZaxZvK4llX1RTA9Wfun9JmQaYFHCQVOav9Tc07dkH6zs16y4sklTUJzj5P+yCFz5KTDv4UWe3uPmP41Y+2yslVH+ze9ppIy1QVnII8iZ80EiBYEpl3GGjs4tKUKFN7b2FCwGtU+h9M3BHJFWDPUS0NwubX68C2ak2fHYO1iz5hWcwW2iBhf/yadOreZzfMFJIVqtDP7S+jd2F6aaJMGqNB8IcvsTSajtXPDhw5tsMvl3P3Mul69dlWO0pmQGTtbwNBNc4EIX4nvsIfa/gidlyRjZWvaNAgB++bCfTpjg4vE9td0YYahhfk1+KEn7T8W/0pCA14A0q2Do0CDqEVU/7wlBF5lIqBMKRZJiUK2Jox86FGs6jmbfbb2vdBC+RVRYiAgMOQoR/iesI=","layer_level":2},{"id":"cc347ab9-fd50-4183-930e-4941dfa6a389","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Gate Transformation","description":"compiler-rewriting-gates-transform","prompt":"Develop detailed content for the Gate Transformation feature within the Rewriting stage. Explain the GatesTransformPass class and its execute_plan method, detailing how it rewrites quantum gates into a preferred basis set defined by basis_gates. Document the default basis gate set ['h','rx','rz','cx','cz'] and transformation rules for gates like X→RX(π) and Y→RY(π). Provide examples from the codebase showing how unsupported gates are preserved while standardizing the circuit representation. Describe the impact of this pass on hardware compatibility and how it interacts with DeviceRule configurations. Address common issues such as unexpected gate preservation when basis gates aren't properly specified and troubleshooting strategies for incorrect gate rewriting.","parent_id":"623db65c-51f7-4fb3-bb49-e20dddd2cba5","order":1,"progress_status":"completed","dependent_files":"src/tyxonq/compiler/stages/rewrite/gates_transform.py","gmt_create":"2025-10-10T21:24:23.778488+08:00","gmt_modified":"2025-10-10T22:33:54.597749+08:00","raw_data":"WikiEncrypted:r1dbw1ciiG74lYTjPig5U7FKepibARx6cxdiYLNf9aEE94Gnbsee2L3G3rll9wmiszL2zjURi7xqGw1DHbMeuUTvs0ftys/gbGh2q3wd9M0RNPF/GiBQsKd3WzyU1t6ppueGRKeVTOeHICk7/O/u34hSdKWOSZsDw7wKkymQGggiGCAsJ2pB8QMbxCkOxAdF9vdqcTql6I/Tit1chYB//PfwuqhetNvFWDRzxb8peY3ZHD66QvXi9kXzLhc73k+JdeWqkJDJGXn4V+ziwyyDV3GWTNRxUDDBOYDZibgWxJ6tTh8anFi0xaPq4SemnoDaQilnxDJlR+Q5atTCI9LBIbzt7IeglxLHYkH+VeRt9eO2kabxeSggXnWN2o6MsQrkChbvsC90/I0OvqrVEMvBoXrTEE4phrv68P3twkJDJa6GQ+wCObxmNnH6Yc5F4mvibEkRAbpHjiDxzl4/2Vv9PU7FQ4+9nIwowzeQEZch8XPqKFBmPOml8q+zTU+6WoCEeX/dP5VqvpiPmXjRpgbWM8dchslItgc/gkIshFtRbwUGZHe26bxHq/Yx3bpnxXYhTn8T8iF9wjdfK9zsNdqdtsVwZ6uIKGJrAqBId6ai259SoDhacuv7bTLWN7OL5NvjhXAU69uz6wbuGxDdA+lEA1ru9r8GgzONcyPS7NJHg87/iGgQrL64W9FhLOJUGeZC6YCBsLsYRgjZj2SvbLZukKUzw2AJwyFPerBnWCSXZtbuqb2GXiPo38x7RZIfxKs0ooqMkQdrydr4CC96avUWB8G2q35Bw/+wEXOiK++AaQTaKfjE5OGvXEOxgCg/XqGU8HiRcMcNuAf0FOfFe+KNMWTYLmzPJB0MJHLDRDELRfWGjV7mgdWrajgI1qjq/8qDUfNEUesi1nN/9jxZLs2UFx3VHUdwXWcA0wpO/aunEs5aU+1Y1UdnpMhoVQ3MM2PSMAd8gNpWdnOdBp+FLfnd3y3wZfXzBlQFJ2sdCM7uLLOrBeXCUsW+yWNnTUqSnGdKBpprSL3Mv/a7bFkOtUBsLPCwh3kdurtyZDfeNUdEr08uiauB95AaU6Te05PdQznUD/JWzmQTZc8cKz9eGpSGPPYVm6UUElEigDt/b89gCvxB9ee4/Xj4B1pcrlv7ysW4hZCCkKxBaHcg4XYjysv5JOswAWJbwLKiVU9Ow94Yv8nwvHq1xrck1Gs5ImoBBqFbXiZgW/Bb7nlh0t6Ci0QHlM/1VJ05u+FhTk01IIHmX54giqbkukmRmGCfZAhAcdAEoLgqwQP7Wg3iisoTUSLLrsiV9Zs9VYNAvIAbfBx5cY4kjJjX3y1D43EPHzQdYegg0WvWMnoAMCaAWc4oER2y5spJ8Yy0raP3WxmU1glCmxqhyvuUc9PFMBUJN/Bns85sOITmo9u3pLaED6Kr3gigk8UtmIXebYJxasG99G5V0iw=","layer_level":2},{"id":"88c1dd4e-4203-46d3-9671-b0d694cb10fa","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Hardware Drivers","description":"hardware-drivers","prompt":"Develop detailed content for the Hardware Drivers in TyxonQ. Document the driver implementations for TyxonQ quantum processors and IBM Quantum systems, focusing on their connection protocols, authentication mechanisms, and job submission workflows. Explain how device-specific constraints (e.g., topology, gate set, coherence times) are exposed to the framework and utilized by the compiler for optimization. Describe the session management system for handling long-running jobs, error recovery, and result polling. Illustrate the end-to-end process of compiling a circuit, submitting it to hardware, and retrieving results with proper error handling. Include configuration examples for different hardware backends and environment variables. Address common hardware-related issues such as device calibration drift, queue delays, failed jobs, and connectivity limitations, providing troubleshooting strategies and best practices for maximizing hardware utilization and result reliability.","parent_id":"0cd0b4d4-c089-40e1-9589-664bcb6ef57c","order":1,"progress_status":"completed","dependent_files":"src/tyxonq/devices/hardware/tyxonq/driver.py,src/tyxonq/devices/hardware/ibm/driver.py,src/tyxonq/devices/hardware/config.py,src/tyxonq/devices/hardware/session.py,src/tyxonq/cloud/api.py","gmt_create":"2025-10-10T21:24:34.532548+08:00","gmt_modified":"2025-10-10T22:36:29.647212+08:00","raw_data":"WikiEncrypted:mreTO9no/433iXIfBSqnewyl395g/EzVGdwPqNWwQ1d3KI977bTXZIjxIWJoe0kL4NeMYF41X+U2D9v8RQe+PHy70B0+DWBCZRNCZWMoQSZgryhbbBn0VuKPnDxpBhAy6Arfh9SN4UowFQEX5jT1WZ8FFQQW0P1i9rlHM8132CPPz4cGyuMn6dfAIc5LKUwhGPVv5dWo0AcD7kZbCmZy0Cy5gmWZE6qRHQu4Osp54Fa2Ykn7e7izcgsG7XC60YARbHkm38nN5LwZAsfML0Egm2yOfgMjkuWBcaWi4IPkhejr8FblV5K78Wa61f9f/JguBWqKmI9+zptSVogJZ3a+9CRET1ty/mdWrvIkDCpwx+UlGKFA3zUxkzI6FzT31Ali5yLyx68tgTRx3OFHF3bGAANfYLaxDfMUEUVZRfsBQX7/HoRA+5FxZIt2kPmVb7mLQz97YqrkAWV4hYNeCF7kQq8VLNHhRM+Grcpql4XxkmRmizMi/pYgWEhaI8nBlR9XHzGiMxgMbxxUkl4abhLfrJ4dL/DHsA08R6WET68xWfaYLbpVJnnCxAzk6Tp2LSglWH81V7B6OpnfsMPUi28LfzRyDbIS1VoQ8dfnKBk+w+5/ja98Tkgn8hvQH+2CUMaFwXrZxGn4uqOOVkW5f7mLRmoAQp/VhjQ25L/zPY0Ls5vbcbXCPzB2ZxXN7rPCAUsXxCzv7+9QvQVhxbmhODFF+r0fAL+cmgPNr1ECH2/q20HbKBIWwLgmA3Ez/4/g32lHDEo5kmqQdUqwr8kG/Sv2rhWh6Kw89kHNs5hkWvsLFARr+PEQAAAwMseRYbr74seDRmI0hjLws6Wl5jRujx5Zz4ik6ah2lCj2YxeAoXODaD+q1V+YjXQ0M1nPLt5Iga+e4YkiyGvVjB90bz3hUvQJqNsyCvSMIxv98Lcwc5rvigEX088e/cAMjjPR+wWsSuOyXifx/H5oVlxJHA7JKDtFrvqAGGNx3Didyg4xfXQXcP5vGXqnLzxlCceYPlR+kUeDSFrgvbJaMjtaHjx4kWftV1yv1wRnqC2SpyB5f9LtaRuKWSUA8jPfDXK9bj1Xo4DjmJNoo6/0XXLvD1Ri35GIY81ZFfFaomSmxWTEKZSat1hEeu4w4ilwakZpF93vGprvU7NZJbhTi5uPmbcTYHg7xoyXyPp60F57imxXjv3Aphravlp6fQyRxiuP9CwrhRjbJ0QRb99Tid1DGyUuF90Of/QOtkkP/piJcgj52XdK4gypJaReJMpWeouhmZBf4MlP+8/shd4MIAcpjH8z0ayX0AYqhnWKYjTp9gb0o2ygA9TNcxJs6HTM1Q/Bf8jFKaSFbYLJcIFCzmEev5N+A9sxRFpLtv7tRuofFuQexH5wGtvtCq4O/b1kf1IKlK11+e17H7pFwIKfbZzbEIDTq9V9SlKV649B5e6uwIiAso15Fv0zIMTSfrBb9DInX+qCMP0vXyurh1V1/cY24wEPcrbaoT1W+kJ+6FvrvlLrgWQx9BCVVshLk/PjjxflUGqxRJbmcFbWJhrmPLwD/yrhH/af+MJ1wC0Pel8UZnjbTF7q6sesDxGDy6p5BlwXElP65tdi2Nl7q5pddvSDxpMPQ9poxKs5bVgkfkLKb1OtKjdn7c1obFJ0j59OGjBm72Ev6yGjk0u//FN6ZG3HNMZhU99JZLOtrA/xGlTcqHV+LBE6ZfF1HTVRL7YeHNwGE/jimiRSqVP3Uj1PhqFoTSF3fjuEl2nCQKBL9czHI+8sdAo0Fxq+7FaMieYu3LMfkPEJV+uv8AAEnRVK97Y7MFXnFvsmnFuk5hLggIRHMTTMqc8hLwuxw5M3aqqcimDVh+R9FTlkMgk4Xc/aiLhzRTUnyW671OtwAgnlEetlCRz8sA0rOg0=","layer_level":2},{"id":"5f420082-8ec7-4b8a-983f-a408a905692f","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Compiler Backends","description":"compiler-backends","prompt":"Create comprehensive content for the Compiler Backends of TyxonQ. Detail the architecture of the pluggable backend system, focusing on the native compiler and Qiskit compiler implementations. Explain the native compiler's optimization capabilities, compile plan execution, and integration with device rules. Describe the Qiskit backend's dialect translation, round-trip fidelity, and QASM2 output generation. Document the API interface for selecting backends, passing options, and handling fallback mechanisms. Include practical examples demonstrating how to compile a VQE circuit using both backends and compare their outputs. Explain the trade-offs between native optimizations and Qiskit interoperability. Address common issues such as backend-specific compilation failures, dialect incompatibilities, and performance differences, providing troubleshooting strategies and configuration tips.","parent_id":"24dff1fa-63ae-478c-9b64-1abf59a976c9","order":1,"progress_status":"completed","dependent_files":"src/tyxonq/compiler/compile_engine/native/native_compiler.py,src/tyxonq/compiler/compile_engine/native/compile_plan.py,src/tyxonq/compiler/compile_engine/qiskit/qiskit_compiler.py,src/tyxonq/compiler/compile_engine/qiskit/dialect.py,src/tyxonq/compiler/api.py","gmt_create":"2025-10-10T21:24:35.554378+08:00","gmt_modified":"2025-10-10T22:34:54.803251+08:00","raw_data":"WikiEncrypted:r1dbw1ciiG74lYTjPig5U0GKxq7sq8TcPT31bCSuMisqpYaP+xbpctL/y/dtgCZwLDy61A11wHqUok9biJnXKEBbmS9B9XlLpode6Ga2cdELA0DkhmgS+xbrKJu/04HX8fJ5HVbVCpw8yvT9B9tW2xFHLjm7W967P47SQhN/Enwm6eTA91bsoFpvXweFp8caAfXai5E7Fm1yExDcvZwHdda1VIxs+Ki8tEq02AWQt8NtRRqOKJNYTHMXAHxuIOTOvfI3gJuvD8A92ZmKmTGLM7ZbzmAf6ljLbNTzRsjFJxh7tDCBJ2UiaFSDnwjo0Qo/CimyBUAXw6w6L6haU9x0gxw+/zSLsTO3IQqGPOC7KMeKqiDbC4aLzSLVg5IwDQjHqGHOIN+oj/1YmKKz62tf0fbQNz9v/n68VKcgQNabDzmNZ1mufi1nblYX3FrNsROD4D55Nf1M8ThB+0qM5TDETnL0Hl37W2Su6v4BZyUp5hj7jvOVhgqYVRQFcNEsjgE8b5XMKtdjZHcSPb8YefFnt/yxJu7Q3Ao70RMxxQZxnUsUlv7qSYuxadhQcwu1t/Ys8IKm1Z/ozKFmjCxbtfxG31/4o2qXlJK0Lr6fiRgKT9xtUVYFJMeuOogm6Nm35Ec7q1ZdKOnJTAQKBpseP0LiM8PutBOmdk+G9FfcxVf/jhtO6o2HtP7Gvlffk8z94W8XFIcqBrymuzdksUasxa4XJRKHTZ5oZ+jpK6w61vDCwbRY+WBFOK4jRbejk9T/aguclKcWNRKK9SvpEdLOYbpOv46zm7/mOQk58qJ+XpZAwThPM527pou+yb8uAzNq/EyoEvkZ1qokHaRHbyaK45nqLFTkA6OYs/Nd0kSioXuKzNi5fFcmqXWKaqKFh2ZVaaGaYWRe2h2480J0+5wnlc9vPDVMPJTGPmwKjAfVom8vyQIJ1jsrTXBbys3Dx31nUABLDGlIsfArVaOWkRCX0hNO5EZvubJRAPZ6dbgKChYnpuoa1K6wY8aHGY8oNtLIfR0SnwhdBiRX5RljGqmvKp+lyz9sSu82JoGiEjsuICT6fdXVU8D2age4nXUzA0aXe4G2V6d9qeC6ZK4MA1lltZNM+j2V3FYD97cZftYjBaUrJjj8rD+054MPVmAay91VFRenJJ4Uzxm0NZx0/8qF+FDn0Ma7egpUNPXcHuIdg6C7qsic9vbQGI47L0yblvmaCQ+es7W49U+HRuDvQo3Ab7m6Kw/d5arOKZBMO+LAgqhqRLWspogyey1GMd57DV98ZroVr+GFSXhHD9ZutFzasypQrxx3ntoFjRz3hjrLBsnSoNSQGJD2oVixVIDGuOmIBexBStdEEbAn9c9OvPQRQiK1C6bfNoojuHVbHO6jpI+M6BbM4D9QruQgr/L0GLJhfLLrz/kvXeBQLHAw62XIcPJa6dtPfHbMZLi8c+KbTWfJFkoP8YwbT90FeEksxPv+ycmoUk2gfSAq9TWKlddmi4k8sueaN8wGtlE2JbN2YsnGN2F3XWsWc2YecXBASib996lpYeJ0W7byyEOl2a5T9Dk8w+yi9b0/4/FArF84UNFEM2ZanrfpdzbP9cCjmxnJUrs8PP33tuVar0kwx60hwtiS+rWQwPeSHaf+S6wd+i4TAAq/F+jcct/K2jsWcgJJVGAn1M4yb/gQh9pcrF0+ld2uV3DL8Cs3CoGalynwD+IUFiqh1tAdeiIUYonBgDyETdMPVAXa4L8XDamvDhwqTjOQ5FYYuLrxXYYFzr6ggsKvoD6+tLu1hmbJE37vkiUCpTeHRKLFjKNJC7LC5PbUgPMW00vvsD0TimBcyKaVeATyYq5RwD4CM/jvJBILpPqHzsxOAmz1XJNbBtcepwnkZsHKIg==","layer_level":2},{"id":"9e22ca4e-a835-4f25-a17e-1639908dbac3","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Backend Implementations","description":"backend-implementations","prompt":"Develop detailed content for the Backend Implementations in TyxonQ. Explain the architecture and implementation specifics of the three supported backends: NumPy, PyTorch, and CuPyNumeric. For each backend, document initialization, GPU acceleration capabilities, memory management, and integration with automatic differentiation systems. Detail how PyTorch and CuPyNumeric enable GPU-accelerated quantum simulations and variational algorithms. Provide configuration examples for device placement (CPU vs GPU) and mixed precision training. Include performance benchmarks and optimization tips for large-scale tensor operations. Address common issues such as CUDA memory allocation failures, dtype mismatches between frameworks, and serialization challenges. Demonstrate practical use cases like VQE and QAOA with GPU acceleration.","parent_id":"8237014b-8913-4e25-86c3-7aac3af21348","order":1,"progress_status":"completed","dependent_files":"src/tyxonq/numerics/backends/numpy_backend.py,src/tyxonq/numerics/backends/pytorch_backend.py,src/tyxonq/numerics/backends/cupynumeric_backend.py","gmt_create":"2025-10-10T21:24:53.87441+08:00","gmt_modified":"2025-10-10T22:35:37.42644+08:00","raw_data":"WikiEncrypted:N3UbzwGjCC3xD6BrTM0cq+M33/2OpzGCxsBlKIoQ6TGWBVW1TVogg8wty3MnnDV0dCTeFgGgFSY4C4RNVj0eJI8Ntgvc+KIgFUL1Rc9jVYBXhZ0giGSPEX9VVWRCLCPk5+IasnZqaRiD1ZSjDbaPykxi58BfnX5Xvp8ZpynCxkvev/MgThPO0r+xaWOW3srAngEKyjI6d/EWoer0MCwuh81atb3fLN1bsykg+7rZORAQnuUm9ZAZSjWQ7TxSBTUC3bk2m76sNVjsESureWV37ylWpbXixAC+dxCDdZhXqf8JTZ2DngjTgF3/aAf862r5N2IP7WVT66oMcfH1QFY5j4fMVek6sw/Cg+jAAEWNr6iae6Ig96bg+IFI5Fv87tM+lNT7jR8jQTqPUkGVK/kAf9Ihye/sQdiZNmLX1EznbcH7QwhmL9+hAvqEYMd0VgTLtBwrdSrWgj+R4BJT+1IwnQbU3TlcmZlOZjl++T9NDyvK1+rEJt+IScorbfRQwi/1NISG7AoEH474qR+9Kgdv4OuG7DOQM8OaduZZOE09YeyQUmuL0SN0H1yAGRCcCUDpixFQiRdjemnhpZ7dSPeNY5TLRCqzeTZPg0zQQ7ClppXflCSgSfzBp8fqvYhFf+H4pJ4niPBc989++OVLq87+4/jh93l6SSoEi/SEdtU+8lACinJ4HoB0HiCPwP0rETyfh6gO7iVPPV3JLrhkyBDO1bSa/dBok8A2FXNzLrHIfdoViW5eZTHbF22uT120qMgiyCyGH/BzauZn4BtUSRndMYJ3pusTXFK5DXfq78Lv1fvqWY6+kfP2iApiOaf3AzOEPcNEcYirPaF2JQVMJFyQrmBTaZGN9sbrAYoAtUojsgJmZVUeA6JLzryXmZBzR46S++mdr1Vx39Hbt+fJMF4gv5YmvxhgWMmZx9OOu9/50j65D7evVKCJjZhHgz5wm2yMKTniAXeLPXE3sVCVGv/L0ksGpWLBKhlRCttQG0Cd1bsUQzohgELM2FOkWNvZte101VqvmyMzuXXUCOaupQgY1Lqt9hp8jS+FtWRcZU/f6ZTgkClvakjsdzLHi3T1XZxcbcTCppam/zOieKcjvOZm/PPej/Adw1/s/ujpPNxv1Z8HqLzMoyUb7GoaFPJJa8ugovBzEL/WPWDG8Mf8jeQwQE7a480QhYUly9tsV/TDWfcJYTPGhCu474y2srvxIi8nrGKEEviN5lcKOGEPmFQuXBPo/W0z7TiIZLXXn+sOw3FexLJivoXeyuX1kRBCEvSq8hUaVmCpzrQmiT+48iH5Ss0nCBXq4wslcaaSJbU/JkDAHkL6a74Jz3c1aGrW+mktk8dP1XJ1oTSaeLMQGdLdB+0ZkGsKC2+cIZu9jCiLqrIggy6NSCD4hsxQcGdhnBCsPNTIEQ6Z29fQ6bWQq2pJbFI0hOayAsbPniZLAked2+EhzP1SzsfrYnLntiWGmdqdWVvbp0O1kzJgDK8mfJCuH8UaUxjuWJ7CemI43EJ0PhRYNMMPhsTjksI8T+yTX5UqnLY7YMO8v9Ve2ijkKNo3T5WYvz30Jf/Rvd8x9zHCHkR2vHv06+4ZPfPbKzFgM94pQbcFrkzC49hl3BYseL0DJ6bO1G6PzpI1HOIYkUWVKS9MlTREmIk12PW89Cr6LtC8TbehiJ6bR2nPfxE5iT8lbPrxmx1oVS4srV1KMq/Qpu8=","layer_level":2},{"id":"f739b450-fa6a-47c2-b1ad-9cacefa5ee7c","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Noise-Adaptive Processing","description":"postprocessing-noise-adaptive-processing","prompt":"Develop detailed content for noise-adaptive processing techniques including Zero-Noise Extrapolation (ZNE), Dynamical Decoupling (DD), and Randomized Compiling (RC). Explain the apply_zne function's role in scaling noise levels and averaging results to extrapolate ideal outcomes, with integration points for future Mitiq-based enhancements. Document the apply_dd function's implementation of pulse-level error suppression through control sequence insertion, including support for custom DD rules and trial averaging. Describe the apply_rc function's approach to gate randomization for coherent error suppression and its statistical averaging over multiple circuit realizations. Include usage examples demonstrating executor chaining, noise scaling parameters, and full_output mode for diagnostic data. Address current limitations as placeholders and outline the roadmap for advanced noise-adaptive algorithms. Provide guidance on selecting appropriate methods based on hardware noise profiles and computational budget.","parent_id":"1025635e-2468-4594-8f2b-fb991b09d9fa","order":1,"progress_status":"completed","dependent_files":"src/tyxonq/postprocessing/error_mitigation.py,src/tyxonq/postprocessing/readout.py,docs-ng/source/next/user/postprocessing.rst","gmt_create":"2025-10-10T21:24:54.838014+08:00","gmt_modified":"2025-10-10T22:35:47.277248+08:00","raw_data":"WikiEncrypted:TP8KP13wWUq5FizrfXDdgpwvVQXnf4kSPOAbr/RtHEul3V0RvReYvduAMd0NQrcc8pd+bSwA5N0CCMezj/LI6MkJQfFmb8Mc/afN3GLcSMGqqj2OhNMPacRlBe2vtribZ0mtAcdPq3UYo+C3p3MDePkFg4lF0WqMh1yJCPU+kF5jhfkog3+Sv1KdNQ43SjxWareRmpNec1OnjsMIUSdxyJgehpXDlsbAmyW6S8n2tmQhXbVWHl6ypMde2gWF3jdQYacrFUiGLMTaVx0Aks0NRl/pwWjd24wUD67LQ8bERgBy6bHeh9Lsd7u1OHAz9KenFPGtEwakANue3tiANYlKmOdhQDT5xji3K2L7z7qazWyy7DE1mmDEdtz8aVe5kElyZdgniSX6vm2vXaW2YX5NRCC1JxsUHcSTZR71bOCkTZTMXEbNYJ6XudBZsf5g8urrHL4csRGdt+vZ37RQ9E+k38uaA1ivnE6a32z8qmhJ7ttsT+eRjYE4x/13OIGiZkL+6VXPkm0RTHvigKwwClD7mMcEu6tSuq5m5d9KbTuArKkuWY0wjEh4bjj3ALpdKyDNVQDJtFr7j5GMk9YotBjKWOE2LdMd+u2jRMdTeJ+H/TmRuZ74AYefnR6b2yUiEibfKrM4QVWoOHjErERGYfJnPTID+Qp47ehARRZvLvkquQR1QSKxm5oVKryTAIGZdn0G2xXnBEUN/L2haxbnlrhLqjRROxk6NblUysOY5LFOpQCjel4GDniabUzYLWprr4BoFbPZ0cBt7Oj71ZG8iHA1Rh8qhkPC73RbP9M3TXnkIUeryJx5WNf6H1A3MEqShcPCkziDOXuqrj/UMIc15jQE/LLOEv4OvbNFZzseN5N6bQhb16jKLi4KM1COfwURZu1t0ghhMyNJaB0ROcYEH5B99YUPq5LoVaemlETz/btCA7BKoFkCSCwYfjZRQbJ33LWLazjeXANY/19DK9vAaY6kLXARuKlETvmePiOsF5UbhjFTYPzbOqFs3xLWhD4wuEo4hx6Rk27WLUYUWYa93590vU5UnKT8iOlGwNNr0+qNcHf3iBwme75R6IWYMiuQoW6XMWOgcON78MCk2H465L8uIKh33eCbmwQw9zIL+gJ7tGRqff1oYO0XZW8cmGKbHQNHe3NliKvaIi4z5uRQ5+HITguamJSOqkht683vw45kSqCjQxDCSR9LVyuHZFCl2e3Ngajb346Vsw1cd5RBMgb0DBF+KzBUCN3L7lFr5NMtPs68Jbg9bPgWAnp6vBM8ZH2KkqNzDBvQo9xdUAA/cSSq1+c58ZixujrOVTHVqCAhAwtDJaM/wizTiBU3v4u3fpHB1N0HUJp5Isg7TRjGDImMqA0eElwInF1/4nL5Y08Or7yfYDLrrZk59JsUNEg/U3cdA76jQuhr51U0KgEcxfcWPcJTJcGtYuE6DHv+LIyVCg/JDa97DXKYxerpNiRKWu0ikDi3KolMZSzlvBggXa8gvUvYnBDoAG88eUKSc+lkFIsiI3v7VT14g29s9h7/pDY1Skm3whK+j122Kh+uF5k+1WCOO20TDjYh4eL+V+w0E/i1YFxBbBDv5Y7Y0vxIwiwasbTv44HXS9OVz/b9SP1Ghd8VBii3YNUre5Ix8Q1icWP8B/aBGP5HOfBnOQKAGlePIqPhDShNWYRoGKsgq6hwmqaZgxYnmEPVilWphil85zkSsudQuaA4i+qcpsvLKy3suh0IDaS5SeZR63+EBvu4IUQT1PXaxHDhEOKJjQ2u1uqqCLcppXdyPWrfqhlu8cNPoEvxVJXvP+TiUBWpNxUlkPmMmQcAOLgKodXxsFGez031afDd4srq6dwc2xUGbx5tX3uvLz2hLPE+Eeln1cP+xV6tYYhwaCruPUZoHWwnp8E=","layer_level":2},{"id":"e35538ce-de18-44de-b8ee-8da947e174e3","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"HEA Algorithm","description":"hea-algorithm","prompt":"Develop detailed content for the HEA (Hardware-Efficient Ansatz) algorithm. Explain its design philosophy of balancing expressivity and hardware feasibility through alternating layers of RY rotations and CNOT chains. Describe the circuit structure: initial RY layer followed by L layers of entangling CNOTs and parameterized RY gates, with barriers for compilation control. Document the parameterization scheme resulting in (layers + 1) * n_qubits parameters. Explain the dual execution paths: device-based evaluation using shot-based measurements and numeric simulation using statevector methods. Detail the energy evaluation process using Hamiltonian term grouping and basis transformations (X→H, Y→S†H). Cover gradient computation via parameter shift method with shift value π/2. Include usage examples from cloud_uccsd_hea_demo.py demonstrating molecule-to-HEA construction via from_molecule and from_integral methods. Explain configuration options including mapping (parity/JW/BK), runtime, classical_provider, and numeric_engine. Describe integration with PySCF for molecular integral computation and OpenFermion for fermion-to-qubit mapping. Address optimization workflows using SciPy minimizers (L-BFGS-B, COBYLA) and provide tips for avoiding gradient plateaus through non-trivial initial guesses.","parent_id":"edf523ec-869a-43b8-8588-fa64de51197e","order":1,"progress_status":"completed","dependent_files":"src/tyxonq/applications/chem/algorithms/hea.py","gmt_create":"2025-10-10T21:25:13.853413+08:00","gmt_modified":"2025-10-10T22:37:06.969233+08:00","raw_data":"WikiEncrypted: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","layer_level":2},{"id":"1252cd5e-6f56-43a6-9e3b-b68eaf3cec52","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Classical Chemistry Methods Integration","description":"classical-chemistry-integration","prompt":"Develop detailed content for cloud_classical_methods_demo.py showcasing integration between TyxonQ and classical quantum chemistry software. Document the workflow for interfacing with classical solvers (e.g., PySCF), data exchange formats, and hybrid quantum-classical computation patterns. Explain how classical reference calculations (HF, CCSD) are used to validate quantum results. Provide examples of molecular orbital preprocessing, integral transformation, and energy comparison methodologies. Include configuration for classical backend selection and error analysis between classical and quantum computed energies.","parent_id":"7bdf7164-b7bb-4e90-9d5d-2f730dff0972","order":1,"progress_status":"completed","dependent_files":"examples/cloud_classical_methods_demo.py","gmt_create":"2025-10-10T21:25:24.006862+08:00","gmt_modified":"2025-10-10T22:41:19.372165+08:00","raw_data":"WikiEncrypted:QK2FE9niK008DzzrBeNOsc5Ikl7Nfueo9TGDDmWJAP/i2N0hnCjtjW4/CLnQ0wYoPsP/qvyiO5mrZ0ONFXaLnMans2BTZGEwdjl0aT9PXJbooVxWHeayjmZBlvKhb6PobzPDN9dwsc1hH6FOifjHvVtuj7Q2xOSAlZV/7VgtTMGRZLO8z9ytMI8PpQQw2obHuHMwK2+gAFWiURHuRaOqXtTPR1YFamfBVbpqjskP1Ee3+KQY3/eEW2BPlIYtRGGg7fokyGi0souVcbSfdQZGTs6ybFWsfnCRQn5nUomWgyRZR1fdkG8f9pPN0oJ9rjKmgAOE8yhffxIuIx49xEJMcynBdM8aV2BNHS0tGP5Tb6/85UM4ieKiCPvZUs7gOoMZdO1sLZoKG1aggHRUwapOXfoJ6to7Q2tZ8w6it2lkV20TBUQ/RkNN2tpvTiss5O5tmocnhejDK2xuyefTS50sgrseYzTOw1J2kcGFeHFCp5+4Cf8pjDqa4b38tX+qr1oxWP2fNWc41Zmn8KGNNZtagTeulvpC3cSdU+zZN9nEBC3ebEn1iPWINJILujEj2PY7VNKkI4cyElReR1xoc779VBmqFY+Stcgxoyo5sMs9pIVosREKpAqT3nde428VGtEegk3IPux3W+vJT/SPUyH8T/wzO9F3YBL/BXMhVbyCbc7jQwUOBKCSCXmmBh7gCmqqq97gG34fyOmkBsv4SyKTYx865hsoIrRsTlBPFfP0yNQu05Gv10N/sR9S+bRkuzNQRhTtnHgpt66Pxh5538k7ZYyT0nVry7o3WIuPy5t7cdms3tJfsp1dhMx+ogmETav/HeOJO2iKhXf+lf6O+frtZsKBmMjGkcj17vcBuYHNTbLx9OdyGtLiIfKlHku6tY3zo1tuGEZ++ENFR+L7ha64Xfj9JfBOepXXbbjgAmxl7sIN/DsbhK5b95oZbLZcWoD0yPOfUrxZLpD+cB0wfr15aujV5KYjL66uXzjAz49LGwk8H2eOxMfmxd95flIh0UR4GUNdFQYS94j1CBEMbeby/O/us0KFz6bzrCBVtNDZ02Z/IknoQK7Z22erQBr7+fxotAD1Br/Go78phqdQY/NUylM38e1C3T3spmvKJzgr8nhc0i5uFjwAkldiOFxvZRYdqwaCX8TUXSutx7/61AWIhmV+A2Z7MdIjXxgZvO1wCdkRjKjs3DkaMfoFV1iPWWLhYV5E41Ao0xLpsAIDVFZGkA==","layer_level":2},{"id":"ad9031d4-e88d-4d8e-9a0f-19025c1f4b8c","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"HEA Numeric Runtime","description":"hea-numeric-runtime","prompt":"Develop detailed content for the HEANumericRuntime class that provides exact numerical simulation for HEA-based quantum chemistry calculations. Explain how it leverages full statevector simulation to compute exact energy and gradients without sampling noise. Document the energy() method that uses StatevectorEngine to compute expectation values via matrix multiplication with the Hamiltonian operator. Describe the energy_and_grad() method that uses JAX's value_and_grad for automatic differentiation, enabling precise gradient computation for optimization. Detail the internal QubitOperator and sparse operator caching mechanisms that accelerate repeated evaluations. Explain the numeric_engine parameter that allows selection between statevector and future MPS backends. Include examples showing integration with parameterized circuit builders and comparison with device-based results. Address memory limitations when simulating large systems and provide guidance on when to switch from numeric to device runtimes. Document the LRU caching strategy for operator conversions and its impact on performance during optimization loops.","parent_id":"21884915-2785-4d06-874b-5407f53d00b2","order":1,"progress_status":"completed","dependent_files":"src/tyxonq/applications/chem/runtimes/hea_numeric_runtime.py","gmt_create":"2025-10-10T21:25:30.566111+08:00","gmt_modified":"2025-10-10T22:40:46.94414+08:00","raw_data":"WikiEncrypted:X4tmATayBdRazx9NqGMj4RjXBsatxrlEO04ehDPrc4DOA9aSqHTRwAyVBOqXmMF756TV5uXvoreqA1YCILks+f8WwxUApyN9j79H0H3/p9Sx4356aGRQMHZkbJZ0eE2MrY9thL1CZqVqmT+sZb76H/jNUmtIqd7V0/bxGGKp18y0QdB12hMbjvV10G1GTv0ziqIY4r7xzTbUNFb6hJlhsmeV8m7y+qqO0XHEytVuEZJxGtbUr6sgxuVDJzBBvvJyXeE60CBQASQM/x9aSgX5gBT8Mk0Ru4OZG7AKuLAHNriLnzcgX4tNujgBdlD6cg98ZyWtBu3bgHXjsJ4QjwWLy4OM5HapuLF/YlUt7/gzpi6saDAvTUcaSMG/k1fENMGDrooptAAtzIhlKtnT7tudx/p0Fa8G5ecbleNDRMUo2LX5SSk0RF+QIQBWQJgipdh+Oi2pmsO82Tb0Ux2XkQT5A9M+QKIW6yvWDvO2oaH1Yw9J4c8jwbD5z3fJFJLsXsG0iEkQahNEx+xpW3K6HOzGn/omP6ZWZI49nxsV+CIVKlLfgmXzho/BnDKG6uGwuR9BZhWXd1WVkZcl3m7d9zSonnxTnBla2+dcodWnudeCIx+Ea5Pxvf/hlfo0qUxumSfxAJYe/6y+lSYPrkLHwKJWhqD/khV9AfgkWWMIBgfDxpLFM9u8mCtJxf1whq0Z3rXQLWCT8+I7YxgPwjDrkRupOOirjmLYmoG/tKUBy5dkQ0H1xQD4/Urptgn+aEiMyxPZxduzo1HP81a7K8tvGM0132jntN4Zv6zI4My91Pox8rDRE0nf7OPuKFeYdIbj9XoNaO8NkVY4xmwszuZK8VOPEgBNEXiKKwL2Er3dqcl7m5VWmwnGhJZYZ63Es9HKg00izZy9xFodZLczM2ZkUjOJqBF4EQX++GyU71pDtLTaGePNo0yzrRoy8poutIRKDSbc2xCr8BLf2ac3tGitreSjEB8yl7nHqAxxUtgRXyUEzxFfG9y89yQSd98uMH+nyQ+YwVjAlZcjfxmz3yuX8Dc/yxQGR6lSBZwVXrYBF194iCy4ga7maUrhyHRdN055YtuDI7aRl/UtHGbfv3o3nmHSToFCjqGx40O4E3bvHMe1+bShw3s7QqUm/DaWeml9mJ3mqMtPTa9KfjcC4OePoh3LOvRrS28qYaKE/l53ekB5zxrgBpMcXOrNRheFZ1LfeJ/PGdVdT1OoKEDL29x9YR+LOSEwTD9gS7DcXNI+t0ua6ZiajlJu2cMye/be8rtLngvE6kaIg1P3CzmZUeX6O2mUBK5kM7Fj+GvLISm0Vbc0xhpf3ZdXLNTSPmoUFrA13gY85uBpDiJIcvdyev4AaPPw7gCD83o9baQa7XmbY+QF92LqCcbOoVYkbVGzmUHzUTxST7xRCkO0+3UFUJmrBH+Bog9ladEf+rj93a3Olzs+zr36qKnjlW/s90sbcXZZw4xClq+LkdVBlloY/6h11l1hMmaiSPeE0oK5WQyOBJlaUGI/XWo1m+VmkvojBhKG8Ro0L4oiqXBROY9Dnx6leuZI3AjlhTeKRu/zKGuEEF2AwXs/GEuav/bumjvCNRoxwc+GDZs782CS1iL+5agt4JTHS+RzhvV0jsrdZC+fYsiV2uaCTTWzzbbW1VAD4oRqrMYqsIaxlEjmdIFpb3PRj5NX8UG71qgDQ4pNwSvVDjilkHR62JfLaWOKWX3B/bBcB8EPBrj6gyZzU1MKPW8zSAEIk+USb+8ou0cEH0L0PayRLy+mkc6poKawVLUh+AHuRlVUAa9VnE3C7QPgViU1lq1EdYZ799Kj5N6y28U17cMXegDw6lKad2h6QqRAYhhjlbst/2VShFk7B4GAWb1/aE71PUhNbBXnJKeOf0QAp160x81NjcOHSB5Hivtn/3bbzctK","layer_level":2},{"id":"805f9b38-95ce-4bf1-8305-83962821b97e","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Large-Scale Computing","description":"large-scale-computing","prompt":"Create comprehensive content for Large-Scale Computing covering memory-efficient and scalable quantum algorithms. Detail rem_super_large_scale.py for simulating large quantum systems with resource management, checkpoint_memsave.py for memory-saving checkpointing in deep circuits, and slicing_wavefunction_vqa.py for wavefunction slicing in variational quantum algorithms. Explain MERA and MPO-based simulations in mera_extra_mpo.py and accuracy comparisons in mpsvsexact.py. Address strategies for handling memory bottlenecks, trade-offs between accuracy and scalability, and best practices for simulating quantum systems beyond standard hardware limits. Include configuration settings, memory profiling techniques, and real-world use cases in quantum many-body physics.","parent_id":"24f839b8-80ff-4231-a0d2-bb943e93ce61","order":1,"progress_status":"completed","dependent_files":"examples-ng/rem_super_large_scale.py,examples-ng/checkpoint_memsave.py,examples-ng/slicing_wavefunction_vqa.py,examples-ng/mera_extra_mpo.py,examples-ng/mpsvsexact.py","gmt_create":"2025-10-10T21:25:43.524597+08:00","gmt_modified":"2025-10-10T22:41:11.359762+08:00","raw_data":"WikiEncrypted:CoXgOA/KKyt+8v7td41oDrsJoUi7fJv+nnLSTWK6Qot5sA8AnM/vmrvjEoZHj8h5dsXxXAJCD1syFuHwNQ0TPXqTyeNY/uanP8SjA8WMta8VaMrDiEmGJLWfvUs2uTv2PWs2YbzZgb27Ya81aBIAfCdAOkmTMM7cLdvIYFnIzz2MoLoT+ZCdAmb/OA+rc5v9Jwuw7pPLuVBRa+aXThv+L2jrhmHgaOZrTlMaZTMt5VQg037kajhB7ip6An0Jh7LdgCW/7W/0HsirFiyDuB/zAl2YhAdVaRaewmrz5poAa4wF89Q6RQBMxCzuQLusn+G8wR/+7XBrUaVT/Gr9NSitzkO6ygwy7Dz1HEu6VH+/Lu9i+P1kDjvbfZ4PaaNV8MJMzTBjGoC2/d5P8v4QKMvOrcc1qKi+b7BG2zDPiez9Ap4D6STtfp2xF88UYwUzLB7wOBQB/3/C1RhUEkeIEH8qYNrHILOKSh4L1R9Zdmmxo4wBHB6NdUeLR2gK+ZXAUuk6g5jgSlfyDEpGJBWkbJFMyVEXFFprCEEQQMRSV20Z2gabZiZkJJHxgEDcz7rhAcfKpeXQ0T01DGeofH4AJyX1ib8Cxf+euYa3xxV41TcsLFQHVFWL31JIMoOoDo9e14F2FeTWykwKobG2WzbIpk1uzWxVAweqOitaMKyD7zqN64tUasMJJtbLiHfxEBjijNmBtGTVnENApKCDlrTypCIX+SXtWaKDPBQtYZqzQAUfflG87ecGGbdfdGZWbEnSjfA3xAgKdcJ6WAccG/EFFOoOakPIlw7E1KqS4oK7I03W0ScREv1EIYXyPqgw2j2lprMH5Z54y+MmxGLnkzwczLz1Wumxlj4/W/ehFoc0cqvR42RFHfAPwLXp9sNA2GJNKKwwJSQdW00LNgXad461k3LWGLNfEVoAcVsyEkih5AEzZEytCM1yKtBGXhQjbVHSBcDRjZIt2rYYXPuHp2s7dzpLbVzG/oTYgn0FWrKHHVC/g1g8qVuz6mlBMDo7oi0ln249z/wYepuEx1GdfvuqSkukwyGzqIpHkJxp43JQe8ux6WFPeXNXmsTxnUv0aF594sGi+6Cw5FUrWmTGCkL3+sG3CFSk3/GibY+TbEtp2TRf3B5JuZIq2Bw+Fox/Py6tyxCH06JmL8reXLi6HhwSK/P0e1pIWw1jKQopA1WvTi/3/ky0xsjo1uVqv2YbqSZcve6hlV8MnKIGjReZeeGb8Xa6urx/ZqrOjqGZnjiefZLNhqA+T6KWgyxhqmdY3F+J9J6egl1pNmSmqGhV/Qho8ux9QS/qR0mxlTm98QbxSpEN1eHI/p5lyAhmWAIH0QO22QhdLlCj/+AOG59MGJwQM1im0553ygn9jWeFfyO4LH9fZqABQlRkvAUC9IFQOEyt6iJ9VXBd7ksBnFf21JRBCbXWC8Zwpa/YAO8o93ZfylVOxRoh262Qj2Mgy4mnTIr7DetfEYtcKBFFHzdCh37t3HtQBQPD8GYC5UmfRgoZLWMuj2c2CnslxxTuX0oR4esid2cTOb1y2YHdTY8EiNo4YCgZASvuMfVply8LcDL/+rc8o/MPES0mJdVre122bFoMdntH","layer_level":2},{"id":"902b7d04-efe8-4ed8-988d-8db59189d4f5","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Monte Carlo Noise Simulation","description":"monte-carlo-noise-simulation","prompt":"Create comprehensive content for Monte Carlo Noise Simulation, detailing the use of stochastic trajectory methods to model noisy quantum circuits. Cover the layerwise slicing optimization demonstrated in mcnoise_boost.py for reducing JIT staging time, the cross-validation between density matrix and Monte Carlo simulators in mcnoise_check.py, and the JIT-compiled batched sampling approach in noisy_sampling_jit.py. Explain the use of status flags for deterministic noise application, the vmap-based batching strategy for performance, and the fidelity comparison between exact and Monte Carlo results. Include implementation details on general Kraus channel application, trajectory averaging, and the integration with PyTorch's JIT compiler for high-performance noise simulation.","parent_id":"5b5d6df6-131f-417f-9e77-eea9ca79ac70","order":1,"progress_status":"completed","dependent_files":"examples-ng/mcnoise_boost.py,examples-ng/mcnoise_check.py,examples-ng/noisy_sampling_jit.py","gmt_create":"2025-10-10T21:26:00.192066+08:00","gmt_modified":"2025-10-10T22:42:16.184373+08:00","raw_data":"WikiEncrypted:i14w9QYhKLfKkkfn6X2Uvlu6V0pNqw1uIBo8IaRAYSntSKO0pgdjqnz03nF2qn5b1MLD97hfSD/DToui2ks8Yz+/YqlvVN8AJ1rOkboHraJeAumMWu69a/b6JLQ2byK9fl7nvYYoG0PNvgykB5TiPWsol1BzA5N5lh2SjUUdGMa9/ZYACWhuZkl80ISIDvlFoY6G7aWymIirVwuMrvUyaUp4Rf+mt44fVfCDuZ1MCFMFMfNx/A0N+v//9exoRA6wom++aP4uaju2oN66PaJDZg2uAiVT0IsAA16jizCH8QaWvtYuq/xbXIhZmbebbIpNxtIhVMWCsjsnO3VJA1JjP0grJcydxf01JFnoGtQk7UFCGq2viUo7UX2p69cHBs5L/Mn9tvE44B8iMaCyOStpkNn3Jxc3yN9Yac3a9fcFV5/6sr9RFIwOLoWqOwCjK7+rn9+ulYHileM7JdN7LYoIxb43bz/JP/wel5Hig9wvWxm8ovX+D7z+f+PVpOnK4fMLozvqzIW8U35gLCi2fk+YcggjOXbzu8njRTWEJHkOjwI3jsuq2r8i5QvXJrWKLbdWAACXJFiOOFT/pB7SEbkWHca0wBTbojAOhgNHzJ8VBdUUNK5CM4Y78g6YbenU7ual92G/vxXQWECorISuLyEffaeUdKk1THcY4ahLcxSgBzddWaWT63O+RSiw5ZxtxSh1YjjUJzFtZGDTwHAo2cbMGAHMfvLlgpxW8Br6I7sX6ePoirex1cGzi8qUMWsZuv2Qk6vMitcIDqNmu2Zl7Flu/BNxhAH8Hb0N3JStgcpMZzQj3nzvokSdGaJS8EKu1AfiiMOe1LuQ/mkNevfgw/0/sJOP3tH/lvSzIb8GSWODO2mxtXb03MPGJ8uo65hKY6/wxKgpSq0/dKnSdJ5M9LmMpC6GBKFL84PFQ/j02rAhzW0eXHQPtBWJkXwxmGqf33YPwb45JkrYFaKNH2wAsPwmmz4n6OxU+BdlNSl8W2zJHZ1RqV29od0WhMxalds36uDfDgqb8MzQgy5Qztn4C9oHrqsEqYih9zp9sn+Yb9ZEg6DKQCq8bxc5Xv+q/es8mwfAN4CgP6NwzdIoN+AJSX4bv/ZD7dChNShWiWmjYj763Q49KWQ6buOdu/FcsuX2TlUvQw1nxxQaaPLFvKzzf9Z4TQ6aRbxBa5q5JkyCdUqQ0PjEtJzGjopFl406PatuKgRTMTcmDrTFRwOWAQyuhVtd6SYRGuQtnt9uRGG+EuRMBugc1aLjkfz8Mohqm2/ppT5NvJHhJp3KewBlSkmA7lnpqm7zslAXrwokYJuGevoGpmJQhBqw0GXwKgyAjg0XxhHO4dxFNnPpziZYZW58M1BCNoQAap0p7EJ+EP+AiegCmBJrVudYaCkTs3LDs5xRDC5F8zWDJ+MVm6xtBLaOsYQz6/vgb/bZ2E1vfBRB/haipKEvNrWc75B9aoSlCUoVGYDKxP1wBEblJUty7I1jwUmCe1INF9jI4pIsHZlbvrw0lC9z7Q20wUi+JPqJnz+NGaTcqo1wVJIEgeirZOXOcLqEmA==","layer_level":2},{"id":"6c99fc99-b198-4b04-b502-755a2810c285","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Parameter Shift Rule Implementation","description":"parameter-shift-rule","prompt":"Develop detailed content for the parameter_shift.py example, which implements the analytic parameter shift rule for computing gradients of quantum circuits with RX and RZZ gates. Explain the theoretical foundation of the parameter shift rule and its application in noise-robust gradient estimation. Walk through the implementation of y_expectation using basis rotations (S† followed by H) to measure Y-observables, and the construction of layered circuits with build_layered_circuit_rx and build_layered_circuit_rzz_rx. Detail the parameter_shift_grad_f1 and parameter_shift_grad_f2 functions that compute gradients via forward and backward circuit evaluations. Compare performance and accuracy against finite-difference baselines using finite_difference_grad_f1 and finite_difference_grad_f2. Discuss the role of shot-based sampling in gradient estimation and validate results under both analytic (shots=0) and sampled (shots\u003e0) conditions. Include best practices for shift value selection and error mitigation in real-device scenarios.","parent_id":"5d091cd5-87db-40a8-b6f3-190eacdf7e76","order":1,"progress_status":"completed","dependent_files":"examples/parameter_shift.py","gmt_create":"2025-10-10T21:26:08.352192+08:00","gmt_modified":"2025-10-10T22:42:20.335037+08:00","raw_data":"WikiEncrypted:XrdctTWVeXLKnAGxKXAgOC9fSHwKV5hfHRAh6eoKtxudluFC4egrXGweFiO6M6wxxm0UJ5aO9Futz1ErmQBEE9EL85oqekANt1cSj7MZWzqRBu+QTvSwXN1nmD76zb5FStM29BuWbkWJ5/xB9R7zG9JDsx2KHYuPPnZbXvotOqDfZ9yTjaozkCy5BuPTwYCCm+Lo5fv5AitZ1oY3Xaw0QfnQp4RWtapak9T7+n0ifOyYlpl983rujASlLj/DRX5w2bbCQ90nJIijEfWtuNQ9VSCfVPVQ72NRarVy/3gpgvSoU1p0rMOc6K3mnwQxqpRPmKGCmI4z440O5P6YnzH/JhzxsQRY8k3FbLArwDGKMVcqRSIHKpFlDGUX/Rb7PgenQfZ2zjivxBo4hSQ1pe6AHZRn+sxkikmgMEPNL4Xwqim1Oxp87vX9WAhBKbjWxfUPJirgZ0I5RcApc/RhJ3zdA7MkgS6973WEAAojoFMrnv9WIUahEJL7Bk/8V329YI2A0ikuj4cXmAphiaEFj6wIQh9O3JNkU7A02Gl+xz73Sz5fLII/E5JNbM3e5DTm87gB6KflHF43I7mAiS96GOY2pkTHsYxj3Ojvs3QakjAAzMBXmHOch+RZo7bFWIga/fFFE+D24ifwyTXVrEmHwgKxlWC2H0mcaQYy1z5plD/wCfLrXMWN+rdxndpAbyCdPVQb7jt0Rq3XWjXmOf0UqQsYSJKK4Z35W0MZJSFwd29mdI/GTBugns1oj+0lZHETv8NsiG9P6oNArOHWBLc6WrD6IbUPMaIvkwgZlQFyMBWhd5RVd8Hgt0lgDcEEH05CirF0L/bYOmE4niaLYfd17FFUoNXzXNwOtREzxT102CUtvp7a6HYYkCUy1a1lT4wj+MZW+GF8UnMT5pvMJCmWBX5bRC3yD9BRMyaeVBkk1irpN7ThTVRnXlRfdfs4SiWpGfrijWNtTKhf5TL1kJNmAnMmO6daMp9SPB0Frd2CS8uUBA2VoES1K3UcHUsFV9BRncMe4HvzHBlDswH8JGjX+4vTCnR9AwfuFhYikmiHfD5OixGO9lTLK5hno8ik11M1hn3DHAIeu/MXj5/MpmvTWzLcUUMF0dCob+6P5sVO0f4S5tAThGBL1eIRq7NjjsWjs7jpA3wEBG1MLE9BFk4jULrQt2KIe3haypn3Xu7dSKvhmTEt/YtoehdAelp0yTOlZHOwYkO5MVcY8kwrD9xGOjfoy8pWp+E7wyb5tdtsvdmSCMoYOkm7ZgEQKefjI2L3gHRu0VNmXOqsCx6t6o/IslL77OuNSS+sY7VwQzYaBnnNlMhZ9MFM7SLLsL0JpITo9TnGWTpamIUNheusXeJ4EEAQCX3dPyMrksyBdTGqjABwHD7h1+T1OBKu2CmbnVxgn1VBBXTj7sVKQyIImLMXK0a6GD4Jn7JAsNDgyYulw5L7rCg0CgJb2rFowcCuqQv+1wQV5fJ1PCkhufAWzaA2ncm+wqU1JLA/qRqhaolBEiBBvg/deGsp4ukG7rP9ImaMq6PEyqibe9/Vc3tfZ+r57huPMcz5EQzByEFIsRSKG/jmXRhvjC/X9bR+V11JwW4APLXr0oigfd5OpebT3oTwNvDHox22ELgOGQLciTTgqZ05zZkiWmFpPenEKon6RtSMbGhnlo8YdorhQvnJpmmkRdTuTAw9y/KEyz74YFZ8iLG6o6wzgGGj2oPTTG7h3ojyCZcWCFUIIheNfmXjcVXd9P5gLkzkq0QSXZKoiAWLndBkyMa+lp21cTZbr4bOxUV8KgfB","layer_level":2},{"id":"2e805944-c094-4435-9cb2-e030a539a552","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Compiler Pipeline Testing","description":"compiler-testing","prompt":"Develop detailed content for Compiler Pipeline Testing focused on validating circuit transformation and optimization stages in TyxonQ. Explain test strategies for each compilation stage: decomposition, rewriting, simplification, and scheduling. Document verification of lightcone optimization, measurement grouping, and gate merging passes using test_compiler_simplify_lightcone.py and test_measurement_rewrite_grouping.py. Cover Qiskit dialect translation and round-trip fidelity testing. Include examples demonstrating assertion patterns for circuit equivalence, gate count reduction, and shot scheduler integration. Address common issues such as incorrect gate decomposition, optimization-induced circuit invalidation, and backend-specific dialect mismatches. Provide best practices for testing custom compiler passes and debugging optimization edge cases.","parent_id":"cc8cafdc-4381-436f-8dff-751098968a48","order":1,"progress_status":"completed","dependent_files":"tests_core_module/test_compiler_pipeline.py,tests_core_module/test_compiler_stages.py,tests_core_module/test_compiler_simplify_lightcone.py,tests_core_module/test_compiler_simplify_lightcone_extras.py,tests_core_module/test_measurement_rewrite_grouping.py,tests_core_module/test_qiskit_dialect.py,tests_core_module/test_qiskit_provider_qasm.py,tests_core_module/test_qiskit_provider_roundtrip.py","gmt_create":"2025-10-10T21:26:16.549258+08:00","gmt_modified":"2025-10-10T22:42:38.327964+08:00","raw_data":"WikiEncrypted:r1dbw1ciiG74lYTjPig5U2NRQH+/EjJywbRZw4mB0gL3LvxAh88i/2Vtq7/WrDISA4gyVmetlrB0C6m96zQNed7ev72w5iOEAKXfOKf35gZHvzIWN7cRx6mYO/qdtqFGVGn2NugkJRfbZhZTWzvYPHV5b3YGTW8RMF/HKdkz1w/yh8PHS+Rpw1nXHMMJwIG6gWQ1iL+txyfOEzyZ9Xf+m65IztWhSJFepuXkNDi/oszaNTd8jb1fbwjJmP56klb2jV21SUcsPn42tGE4fapC2p/OxINwv+JANpwLAaQxplreOCsCG2AQOPgTeiDUFoO3kcmFb0r9pHKBZP8K1dHws9HllDF/+kmYU2ea5vp3mGM0heFRW2hmGdrtscBvCwOdG/UvNmP2lt2f3vETCx0gvwNnKGsAR/+j6amgnXbU5J0VP09P3gArYgkPbUaR4WOYohjlXi3OT+i7LiVl0eGUxxWy+CHnkTUroILq3zgZ5t5c7rbbtNpeu2HY5PDc6yqxK5LP9zCM7JpeDz8BsMyFbhe+1jle+EOBIKkflA34N7hWyuL656uQghm/w1FKqPOVNrDUHZqvocUVPUQiJA9q+6cWNcKYZXS1JMBCQ/VlGgyna7fCyefqSTyjc4MTi/TNVmTX2TriHqr9SzNfO7HUMlPbC1WRKv6SxPGeSQLb2gzXPxY4Sb1agAY9rIAxIR3QnJMfVhLgE0/2i8ZZ+WtJIMjBHHIkM94WzW0AKlPdTzOCAt3/szP5DtaGex9qfDP4Ww0Rk7u8KDoF5NXMvR6hslbJCjzl9Otwn6KNVpmgpQvi1eaXPq9j1Ik0KoKs5rJ44r+fW31TOpiDtbarJ3a6mVTAJQu44Y/2BusGQq1g0lBuP63qd4fAJuV+guE8IrR59gVq9GJnEYzfa9XvYbxTPLnyjRMnvmHqmmLEXXnVF7t6fivZpYyag9BdZj5boCUtecgXDATv1RUh7CePGcq8WaKzWFNjBD8Rrtwe8LK/Odb07q9aWWzUSURiR7ztp5AENz2ds46AX08uEpqWL+yr4I5w1xIqZReHd770h9h7oy9v1KIAh7xsKkD/T8o22RID4AVc34gNvrBkDiPxdYI4/lcfR+Ce9frixjTZ0AUm1ysyPLh5uXS6jIIOwvsAaN5eFxfK6hM0ZOypWFWRBMxb65WT9/DdXMXeajjKPIY+EeaOU7L70volDQ+Pb3iaEyLP/k0yNOfHBEPuRN7W076Cy1+AVVPsiyufuCTPhT5pkQeYYkQdoPoFoanFxy4mhjHSPcyZ41zdY1do7Zb3cWvRcmx8lD+nW6TnPWGUue7gGjSn4lbfojDfsLnxrli92EhPAhddgNBW8uo7JnbQK0851jlydrA01T034ZUVjfIxdGelub/2flg5Qz+KaepZtRVdUC8IEN3LVYdyNUcBfbQJNRW50WQdh0wB1E9hXk+lHBZrAdcAjg1fSp0hXaAzzZMMILNsm0U+YJEF8ihiUuhNUaNbjS5Kgv9nAQeTe8fj/i65LQ35UhCOSqLNwnUxOo/ugmW7NxalSHppoFg0f4u8A9TdNtrwU+gcPixe8Rr7AKEgW5ceppbKdRNrRXtLHkp2u341MSUiYeZwpJrraSV9aRgo+mWVUKSCchI9IOsRikVMR0D2kcu4EUHT1eG5uGZuq8isxvJxwW31b9cHTTXD9ixvxkisSqqtDIBOyYmT9oRVZOB86kTFpFb5sG4mICBNQQgKq28Dryck7Z6Fn5wVwGl7e5bWSPrkxLfKoD/uhJxsCa2/F0uQ5z4HR2EUhTHmRLcap2QBmQpRcdR4Rl8JrzafDNyUIyeEt4DweaBVRzRCiLpcYS5lTI/DlCbW1tqSns8KL7RMD6sWNcDfu3w93r/L3bzqPjdT4GNFuAwdzKYJrQIVTTNAfWs8vofkyP08siSRHFx6kBftU6CEEIFP4/YVRKwCxtIHZgECF/8lBE5YSMDj2p1pPUWssc9sUKmR9CJagkq+KI230iXv5pza1w==","layer_level":2},{"id":"ec7dc711-e16a-4f2c-a389-96c080c24a50","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Variational Algorithms Validation","description":"variational-algorithms-validation","prompt":"Develop detailed content for Variational Algorithms Validation focused on end-to-end correctness of VQE and QAOA implementations. Explain how test_example_vqe_extra.py validates energy calculation, optimizer integration, and convergence behavior across different molecular configurations. Document assertion logic in test_example_simple_qaoa.py for Ising model formulation, cost Hamiltonian construction, and parameter optimization. Cover noise resilience checks in test_example_vqe_noisyopt.py and error mitigation validation in test_example_readout_mitigation.py. Use real code examples to illustrate expected output ranges, gradient behavior, and postprocessing integration. Address common issues such as non-convergent optimization, incorrect Hamiltonian grouping, and readout error correction failures.","parent_id":"66b4fb87-da4d-4649-9598-2ad8db90abc1","order":1,"progress_status":"completed","dependent_files":"tests_examples/test_example_vqe_extra.py,tests_examples/test_example_simple_qaoa.py,tests_examples/test_example_vqe_noisyopt.py,tests_examples/test_example_readout_mitigation.py","gmt_create":"2025-10-10T21:26:23.667903+08:00","gmt_modified":"2025-10-10T22:43:25.086973+08:00","raw_data":"WikiEncrypted:rkcjoNwltIUJPHmPMFT6eElXFgf9VaXa29lHUKeq9R3Rn1lAFDWv3frUfXS6xiizxGIY51UyEGNfu803IxBh8MOx/rBAMpRSYWXGe9Q9O3l8k4pj7sHeqmz+TVK7UaaeZJQCLNyNHzTcPWqxTMXDT4N7lBSQ9YFrzBKRwN2ShLOjomwMwoaFSzbfrNBAJm4lXot1j3QcYfsbDENuvkzcclZwko4D8QIYMoEeo/yk5wjER1cDAAeICDLZHXtvDFE9ZHYUi6JGxxnsEJDTKt1AXK20dRi+Z8j5Ufx2H8F2ExGv0HH3OOVwG4rRuS9k5Pd0K2W4lTsq87jALAMHPMxiXgBaTd/2mN/40HqTjvvyDDP0QvEPBTUR191reIg+8xwno7GuTNDJQvtJZW+Vjn25p6rWi/9DnNHMHaz5iyA8uzoBvMWOXAboijKIAMY3DS3npc9titTu8FucWk3rk30QihlnuRzs/eZhGy0paUm4I02ebi8at0KXK4UwEyg2yYLa1b10+PtD+XD9I0SEfwBwSKPtb3xB12RCMrid/FecgQ8QYE32+ZrBeS4hIzQfBarGS18d83+N6ccElstkIxIipHT+FwNlUG3Cgg/VeaHBx4yFmQ7onP1pNK3J+IoTfaw3XtfyxkC5sndMwJaDXqAYoo2w0RrS7Zajbu3sxVc6RePLAAp9jZ8RSPKYf7B70+TCiDk9Gbx1u7HTSgGTfErsZOcSwKDFMQURx3K1q0SVXu/ULSAIMOTZsAM5xES/tQJrnKLKk/5oaHVrQNuN0eg8rX07Boc/sLGYgFWx/2xkrMZpW0Z68HffEWmYU09LGdH97iT3Ki0QDxxs6f2WHxJhSsNO73Uj2uQZP4BsM/8XmXxlBHTrxlCcUW2qTEQeZTihMEzs+tYLg5lJrozYu6EtYerSuvo4/BP7Cenb7qqLfgbgGyeo0LLRHBYTzmbn9AD9exzXDzujN5SvrYGTBE5CRGCV0oHmX2Wm4LzfEmfVe+WZb5y7Qjfrv4ZSlHn4PmVYLZ2s7KvxlEKNaT6NYxBK2s2AFiIJnm/B/uSYjbq8JIy0rMFxdZupk3ySq0ZTWU2IEfLP8aKLv2c4afZQIr7agDJ5LDQyjj02POcJFqUlaTuMm1I0HY8iadVy1pIkQEPgu6Ta77n6IpiRs4zaf1tMsoIjL4vUlWvi0sKumduwfV+Dbg1DkrCQVC73HFKFunxIpch0zzOkKJav4f8q/h7S7Ye+YG9VQ2HUmfB8MIG9jXy143RI68gJZp+wpGyNLhPBgmNPpuBmXd1kHt9y466uYwS8HcEFfa4Kgepn5ttCt0JPzjRgbzKIVCMI3f90sFWHFZ4vY0Vwz0LhMukI209WiWrZRvs1I2Mb5catveyNE/RIUqoqOcRWcDcyC4OAtxw9SCUBCsk0pciLMJDhQ7JqJowNO5QHrNGiHyFOyfUBPQo84thvxNXWWXo7F8GS+N+heQR6fcMkAIeFv0eM8MtE1uck8OeQebS2IW+SpXl40m0tM/QiUpvjbh8ZMZ07FGyLKnooNQ3FzDleHOKwVf1t9Q54dHP77hEdFsqATqwL4oCr+IL6HEoHcqLI6csBdxZBUO3YxcjdDSkIcRsCYpWD+OZc6xMuUMT0kJ6U1viBbsIp3Ya9ydUjdcy4le2cMdGvVJ7GE2dI3F2OiIhLqYzxI3+arYUNEqLlPOINEV+PiWnxyei++IWLybhv7UDOPsnRNKvqxdipo0jzTiyk3QMxm1/sxfBgrsSYZlweQNaP1CdjzwD/+gPUh+SixOPdHo7I","layer_level":2},{"id":"0c28eda0-b650-4d75-9f60-42ecd19f6ae8","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"HEA Family Algorithm Testing","description":"hea-family-testing","prompt":"Develop detailed content for HEA Family Algorithm Testing focused on Hardware-Efficient Ansatz validation. Use test_hea_device_smoke.py to illustrate correct circuit compilation and execution on real hardware and simulators, emphasizing gate compatibility and layout optimization. Analyze test_hea_api_top_import.py to document proper module initialization and prevent circular imports in the applications.chem.algorithms.hea module. Explain how HEA circuits interface with the numerics backend for gradient evaluation and optimizer convergence. Cover common issues such as barren plateaus, parameter initialization sensitivity, and transpiler-induced circuit distortion. Provide debugging strategies for failed executions and performance benchmarks across different device backends.","parent_id":"f4e8439e-a568-49e3-82d4-e512b2d06446","order":1,"progress_status":"completed","dependent_files":"tests_applications_chem/test_hea_device_smoke.py,tests_applications_chem/test_hea_api_top_import.py","gmt_create":"2025-10-10T21:26:24.532246+08:00","gmt_modified":"2025-10-10T22:43:47.106633+08:00","raw_data":"WikiEncrypted:XPLfyneX5Yt1Suis2YhLvjfHYeaCLQRpPA7sQooYmGj95KmVU0pSu1ClV4IJZlQSbNnNjddEpuqb2F15gwbmKjrs56vw7ZhWhWGI+rGYFcwh7Hn7oz+4ChKCvbF8Hkh5c6r+Jqx3gd6c+p9kgKMdk+CUWVWfgGzpwehSL31Cz6K9GnLhJOwNLIBBx7Sl7ZjWdNxGGLIHL7qxezH+cSMnGQOY2cE6dvN4VwsOwmQ4+1rbdELpQqcl9Bb713ioX2eBG1brNkkN7HZg8+OrW3EtDI8zKMaE+9BEgF6E8rl+ZXy6J7PEInJOo775ctgEe65Ul2XMNAW2G21avFbcCfm8/GImxbWpFsAI1CE442j/UcpJHSN8rjjHYuDjgIryttsD0LdFhbgfETECjmzdfABvNEiTcApVz4U33ccskyF5lFPyxm7fC20EEZ23EIbnQel6qwPrqQQTiPruhCu6E6VlPVMgc7ijmrkxdA6bns5Pbpke0QCTFBLdI/q0FkxGeiHA49UP6uFVtFgzj/E+kyIIb9Ni4PvKWnWYR2iar7U9QcJIfqOIJeZggkePwI3UJMZqb9V1K9GifBFcYt7v9I8g8Q0tv0cHUfNC4jNUs8l2hLr3GqZ8Mnoe2mFf3NI4hzfam6CqSGiQijCxKOkIIY2xZT4cghavSJEZhMp+nmPDMctCGnjjt/GUzRNFZ/A/6VIokGeLH4pykpbxt5DqyPOP0kAN3/pDZDdzWlT7zY3ARvx1UgeRrWDi3DoxC26rQTqKK6TU1APZDxlQJ2npsKbzed4ucsJuxPmIu6oPw/akoJwAAdS0BSTDdVF5+Bl9uF/TQbsbzTEnaLg2I7eiNojweWNe9GBrjhmhOb+XKQ8QcGU1FA2rVzN5fWXRPQ0bcCFezl5nxEZ71cAF1cF+RmE6x59NBLPKcV4KlZsuOGKrY8qgyFXVmIcqSowWHeY6Y87dnownNYpJHYaW1HyVx+yT1H+lUSCtkKaF3MM56jNShxGWbru0G9ml1oUfhCG7LtMmC57GOCwt/mIWdoSrL9hYuCCPgcHtp+8Z59hDubB/BQAQvY0IAb14onTEPlhh6LPUQipV6wR8l5xeIr/xi3BZAKhLTqB5b40RykqzY9l370KpWCphwi+gSRl70TtjODz87WeV83Vp1Jb1XhNPyvy8ClJcUT0dBALHK43R1Zr0Jsp7J69i6+hbyDrLr76lVsCYI2T0aMbnP0tpqssK8Wv3xwuP5oTnMrDHQCjJv2YYe8+oGsdix6xNal3jXD3rQh/viPB5MqL5D+3i+6fWt12S5pH3rbcd5YS7MMnsDosPkJAFybQw42jDM8++v/zW3O3X95fK4nd4JvCrsIJ4tQGWFuLepG0OvDLq8cjDopO7ovpFBBPlorm3BbHVHKbPefcznuOjrfj/TMbn2OeiajfyNPeJrh2MCelOHwtDuGcMpAtoT2chBA8lxJqtYHg/ieX1u0+wO11APoDHZ1TdXl7oY3rvv0OBG7g1OU0FLc+MLUW4chkoqDigJzue/pxiV8+Xe3K9FlM71m1XXVFIyGymOg==","layer_level":2},{"id":"3e6ee33d-42f8-4437-9264-5f05b5dcb22f","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Dynamics Simulation Testing","description":"dynamics-simulation-testing","prompt":"Develop detailed content for Dynamics Simulation Testing focused on verifying the accuracy of time-evolution and state preparation workflows. Explain test methodologies for time evolution under Trotterized Hamiltonians using test_dynamics.py. Document validation of dynamic Hamiltonian updates and their integration with the compiler pipeline via test_dynamic_hamiltonian.py. Include fidelity checks between chain-based execution and exact numeric simulation in test_state_prep_chain_vs_numeric.py. Use practical examples to demonstrate expected behavior under various timesteps and noise conditions. Address common issues such as unitarity drift, Trotter error accumulation, and mismatched evolution operators. Provide guidance on interpreting convergence metrics and setting numerical tolerances.","parent_id":"240da10d-b9a5-4dc1-9e43-c75cd2e4853d","order":1,"progress_status":"completed","dependent_files":"tests_mol_valid/test_dynamics.py,tests_mol_valid/test_dynamic_hamiltonian.py,tests_mol_valid/test_state_prep_chain_vs_numeric.py","gmt_create":"2025-10-10T21:26:37.045206+08:00","gmt_modified":"2025-10-10T22:43:50.942104+08:00","raw_data":"WikiEncrypted:6ZBmIIAvpApVjZqEgvf8gzY6MCYnlfYPVse9239ExJi4E2P7R9NMN7TjA84OUVCWgcDUCmacLVcdQOZ0aq8QhhKNjOv9Ow82mEuNyVl7VNEHV364jLl29D+o7MIyerbQqa9qoKoMuemB1xJtZmKtA6J4mH5XGzhm/H3g7ZjSkP8Qe3gV26/LKbMeqU6OoVi0hl1uTWTp3Q0c7tfvLl1cmmnkpI7dqX3gEtPFe8cqp2yBK7wiCaTjs3qz/NLRdWl/hfoAqqzYB/by7M/4n1SO83AKzsDeOSaaLGFILmFG9aw16DZjRfImpCQX9x7zflQa3jfH1X68VNuhelVNc1Mf304oHQSPY03ZC2dACIlhTwd+iH94elr9aLyZNyqgo6OzSYk+SYscKRaMU6jhWhmrt6N09qgZI+FDeOdVeif7njGoSTC3pHQRg7Cm/Z5D8sGy7y8IT7rSQWcsy7gRN6gnPSoWlD5Jf+wVvmWajmSlhLKtPA1yE4WBQjfOvNUDDN94VWrNZypLGaz8sH+kI9PRB1pc3d+d3CTgIpsIxUwj0D2H7gpjlzmv3YWqWugKVbsHUTyxCs+MRv8eQtNl0Go0qF6N5IJzT/HKusOg6RqHrHw9/+mF/L1lyeErjpaZVRNKjxhEmob/ZNFwq7MWqOxB9vd8bzczi/PmrVL/n3gGbiTRjjZO9Vo7Thfs6sU3VdfExF+KQCRoc3VQ+JffDsEgDO9DOAdBSFvTip9s2h3DtpXvB7hLU4WfxChujCc6oYQKZyoRQZgWOAOAXjE8f5LqRgheMeW2Uis5R/24ZAiQjm8ITjWRrZYdeOwucwWfu65zWjn8QF46buts6x7BG+G7TBaKHdAP8TzcCGTs7+LmFYz4smUQgR8A3li/g7YKEHPkDA1cHgmd6ObSnCT+18KoTpe6cz9lt+Puujt+dZP1VWqAbgvZ2qo0pXej7P+N02iAPPZ51bKlFpLQ6fvllWRoCvrN4Fdz9fFUf3vYKhVo5GLCYhDhR5CA/le8wICNA6AU76H59kSeB/RVTPUKH89zMXsp4hNAzHqiUzO2nX7ox1xO45l2YVLkDrl0jNgvH2GFYoVatgMVlBAwX8IhV5scBi7xDXohGeN7GRCnvgyBpnU0UGFsSBxT/chqFXvh3Tr+U7iLgyhVtDJ9FJK8SjvMVUxGpgYJr8Bcg3mXKfBm2yUjkrOLD44G6W+X0RmkeyWkClN21mtLVtuFun9nc/uMvSkwFQQlvnE794EeFg8zFt2x6HkwF6O+62vOSPoowSRLpce6Aw4VKLBs64LewPijJxlWnQtz6zXf21vccAg8AdnWWN5TSOfY6ezQ83mWTIUwffqvkcsXCC4cYSUNTHoGkK1CjWzblqEVhzAubqoRK8d1GPubCKaLl5txgcrd/syEP80yNBf9/yw+UahE9CQzKZz0KFKZhc6U3LNMnEUjTcfFt6RP6Fw6h4B0p9OVgQty8pi9gFO5RLC23260D0++QIaaDW62qB1JeRSXUw+XBVmvemWyxBdVgI95K3bI0vV7Yxrv7ewGa+P1Y0Xz2cCZ/pNiL8DmGdqDvYqueSqsAtvK7K0JWk6SvbFv1lL7y/7W4mSBkJgq1V7NU70UX2W7DVjlcHP3HoGk9feNu8ono4s=","layer_level":2},{"id":"2c6b2a18-8f43-4074-b538-aac932c4ac3e","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Pulse IR","description":"api-reference-core-pulse","prompt":"Develop detailed API documentation for the Pulse IR module in TyxonQ. Explain its purpose in enabling pulse-level control of quantum hardware and its role in the intermediate representation system. Document core classes and functions for defining pulse waveforms (cosine_drag, flattop, gaussian, sine) and their parameters (duration, amplitude, sigma, beta, etc.). Describe the TQASM 0.2 syntax specification and how pulse-level circuits are represented. Cover frame management, frequency control, and calibration program construction via DefcalBuilder. Detail integration with the Circuit IR system and compilation pipeline. Explain how pulse schedules are constructed, validated, and executed on supported hardware. Provide practical examples from documentation and examples/ demonstrating pulse sequence creation and hardware calibration workflows. Address error handling, waveform constraints, and hardware-specific limitations. Include best practices for pulse design and performance considerations for pulse-level simulations.","parent_id":"6c8f6250-34f7-4454-9594-366d3852f97d","order":1,"progress_status":"completed","dependent_files":"src/tyxonq/core/ir/pulse.py,src/tyxonq/waveforms.py,docs/pulse_support_en.md","gmt_create":"2025-10-10T21:26:42.091956+08:00","gmt_modified":"2025-10-10T22:44:54.182542+08:00","raw_data":"WikiEncrypted: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","layer_level":2},{"id":"38924dc8-d09d-44e3-880b-8bc6ed8d2f3e","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Qiskit Compiler","description":"compiler-api-qiskit","prompt":"Create API documentation for the QiskitCompiler class in TyxonQ's compiler module. Detail the compile method's parameters and its transformation of TyxonQ IR circuits into Qiskit-compatible representations. Explain the dialect conversion process and handling of Qiskit-specific options. Document the output formats supported (QASM2, Qiskit QuantumCircuit) and integration points with Qiskit's ecosystem. Provide examples from examples/ demonstrating Qiskit compiler usage, circuit roundtripping, and interoperability scenarios. Include configuration options, limitations, and best practices for using the Qiskit backend.","parent_id":"53dddf26-4ae6-4200-b5af-45fca433de77","order":1,"progress_status":"completed","dependent_files":"src/tyxonq/compiler/compile_engine/qiskit/qiskit_compiler.py,src/tyxonq/compiler/compile_engine/qiskit/dialect.py,src/tyxonq/compiler/api.py","gmt_create":"2025-10-10T21:26:49.780161+08:00","gmt_modified":"2025-10-10T22:44:48.615202+08:00","raw_data":"WikiEncrypted:r1dbw1ciiG74lYTjPig5U+Oi5Sar0xuQtDOx5hGcIqKXBI4O2MqJ2dyaJNTyUDXZeZ5ohzAL9n4W83pg0CSVkiXEEcjGgKmbIFOWgc/WqS67aLE1t5F77TCRgjpfcKgp5ZIYVR994GZjI3EGpSiPEJR36TNVz2OdPHVF1ygFVh5Elt3vCKqz1h709nCME7/0uNFXcXP6PSxNBZjCldLLwVEKDrMmeKpGbxUogGMmPfmNdYWvZA4kbjxUcF5XGpEKtv+hDQ+K4EasLw2rUhytnKs6fJUujoTf1lMdhxRgGRWfEFg2xy+q+t7RQBmRwjruSHo6oraNMm5fAoLkQMGcdQb/yp86pGizWZuq7Mf+/jtCNcWR5NCYzEXHeU5RHA/siERGnTuIQ7V4JDk4TvHqj69qPfIJOyWoGyi2T6XFe+ck0BEOQyEc6jAa/37nl/CVh3Lz36BPGhksCv7iUTofnSRCdo6Qjonk9wJqyMGgQDCpxJvY0tmMu9B3OGkIB0f2ro13qbd4O9UmRL3JMjUlhRVX7Lk19SfzPCBrCqLbtkkYnLq8uBwPWajAmuMK233eH6U2wUgK5/KVASIvG0SW0Cu+ex1NnKsUV+PN9XyMUAHM1IumZtgXeuaysdQ5kPr8UK7ainxjKl2ZC9bofGA68MU6zSk/c/EDqynmd6/INJyt2imbMVbn7z813gH0DcBSk3WGGbLmstjYTValOc7D/3q1nxDRE7Qvtuwf7ovbX7A0JQhYDpgllJTtzXflD/G1ODRF6EeVfPYyOUnPL50HPcNpger4iSrkzJvmSxPHb0Mylxxmr2zR+HFMcFSl3lKskOeEeaOW5ev3raYKTc1aG+P6dJucPOVw+pPmyQX+01At8hTxDmDwP/iPuntqqxGITw4PKzFNrLYKvTiBlL19CyHwVDiIK7wugyn/0TeQJkvMgxSgGikzRm3kYBtaca4n2LS8Ar4l41eKVz45QUrVAaxyJiIjx+sZsESbzPWfvYbJcgGHIrrPwE0/E1rcAKYwAstl081LUZ9CzfsRRYA/hYC8bWMbacSl6XkmVgFsr1F+c0GAOJT5zDKezZbAiL8JvGdetTjAYPgVsFn1JIyYJi+5o41I1+a7hCom+AUO59N7jB3OVhZOuvHmO1LCF1+1iCvqhndYub6rgIGF1lIPf6KFHgcjHSIrpuDTthxHYOlltBPk47DVrlrPUCS5m/WvzsvQyHI4mqFIoYE1WH/GINUYd39es0KbqfKNifrPKEmjBdTNhru/9YaH53N/ijvx2vmW0Bmz2hXo0BA0rRK7QwTYxiljsxIu+VqIRPlxUDCUYuRn+ypkcx/kivu8bdvo","layer_level":2},{"id":"f408be04-4cd1-4017-b39e-94b815d79ece","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Hardware Drivers","description":"api-reference-devices-hardware","prompt":"Create API documentation for the hardware drivers in TyxonQ. Document the TyxonQ processor driver and IBM Quantum driver, including authentication, device selection, job submission, and result retrieval mechanisms. Explain the hardware session management and configuration system for specifying execution parameters. Detail the mapping between abstract circuit operations and native hardware gates. Include examples from examples/cloud_api_task.py and examples/cloud_api_devices.py demonstrating cloud-based hardware execution. Address integration with the compiler pipeline for hardware-aware optimization and with the cloud API module for remote job handling.","parent_id":"4ac4cc07-f04e-4128-a47f-bfdca70bf55d","order":1,"progress_status":"completed","dependent_files":"src/tyxonq/devices/hardware/tyxonq/driver.py,src/tyxonq/devices/hardware/ibm/driver.py,src/tyxonq/devices/hardware/config.py,src/tyxonq/devices/hardware/session.py","gmt_create":"2025-10-10T21:26:52.797929+08:00","gmt_modified":"2025-10-10T22:45:03.789548+08:00","raw_data":"WikiEncrypted:C34GewOyK1SlumqKiPsSg1Q7++qbaPnmH/WOa1nfihpKYzH9HKQpdPChhLA+tW1buh0H84NQvWUkxPbxmWMPVK5jwyhHRCPeu9oH5XU+lWdRyDWzm9fPYE3qn9zxz7cvBukfpHLBD9ipo3iKz+5eSVXcu+xFCJdnlEHyZqnK0cREeTKsPq+SG6OpvZRpJHST574JrXacFaat0BME1+DJfcz4Hh+iEtJCsi6ZaOVFISMRBFV9s+/luT+3d8P5k9NDNhqNNB9ifvglXAhlLrw4OVjiuXO7ZRbs3KyYs9vvRLqp+SLn1IdUige+Eb5+sevQY8acym0u2gBbx48+P1J9t+d+FTD2Oio4iNue8em5PFf925Vx5M23qLlq1+e+YUM2i6wOMOO/pKGEyyyuTqp8HAzdcfiJsNie+bC9seEmfYiNVGD1AeRVFMqd3cd0zqfmKxijWTxmP+i5v0Zj4Q/ipk2TEKkNnyJPkYSKoM7MUiu7ViXkoSKwYENEEQyZOKd3qIGZvWpBqN03tfUdqwDrKqPsgbdIE89wMy6UPEgtc8e5eCVsztPy/ZhvwFTrzDuQau08Qzzee/YKHnALEcw3ZbgnxPdgoKl+bBisfUkibPPDon9z89ImEab48Ws3syOWESiQK4L9sLZEZ7YALdxHSj2GFfVx0gBeZLkBjboMNwigjQz+/76fkzXPN02JxhxqAUoSLBwjqru9hGpBNZsD7B0fue5UWCGoHljaiZ+OUZcT09PaopQw/fLW584CgxdswwIo5BiUmNSElcgnXEUHNB3FkasiLLfh3X0ewKHcffqOgLbVloFg/r9TBFbpVLhTxnj2PstCfhRrnDd6kfzGSarzCCs1jyKVcJs9cirBHYcNoFZKPAeqQSNnmLtaS6jbTTE3hdeGW13vfWrO3XbZby2jg4e95wzQ0tmzzi3qf4GVKJun8O4r99FXFZH+VH6MsULREOnlmm1lxWJemaDnBqKp71341wEQ2v6B2nyKUPEhyul2qSqawORS1E/ICxcP0PZGOOHW4IRiTle0xJAS73CVKKCYcHit2gni1H3jNHlTOIYdCu4cggcni8F+aqlfiPc59nNTPLSjh8Qm7XJSYN7JXyouOTzpq8SBrnD+73nevl95rG226ovgJhwBt+AgbLRiI4NQcBslZRNnK40FSN56AZ/2pwU0CfSdsOJNbQ88+d6OMhEodtGfT3JaXLU3w7yighYL2a5/GugAgbCrsNMtxqcbIEt9AumTNsflqYENgBtudtYybzmRDPl4TCrCrjr4Nj2cluVStVVALxm8dOeZ1TVPKkmgPDKgLM/FoASqC4QZ2DLOOXKLNzQfxiXuQAa3aTKHDeZ53iWv/hxVzolsuGlVa0R1fao32MglJr/0M8hI4rvQsZ7U6jLcn/8m8um/EALBQQ6wpfKbrm23UMNUyQwIOU6uNKcoHCRfcThZNF+tGePuAog+KrIltriaxNun75ZrHIMYf2U2hTITu3ftFYnJ3mSZEVu8vA70qaZVoQxueFookUWjjrepEJMV8xiPC2uZM5QBtcw753hZ41rywhKWTnpeW8JRjpPtk+a7htXxXNNiMm2qzvyYbWGW","layer_level":2},{"id":"d11f4e66-3dc9-4a65-92aa-2f1182bb7755","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"NumPy Backend","description":"numerics-api-numpy-backend","prompt":"Develop detailed documentation for the NumPy backend implementation in TyxonQ. Explain how NumpyBackend fulfills the ArrayBackend protocol using standard NumPy operations. Document its role as the default fallback backend and its zero-dependency nature. Detail all implemented methods including array creation, mathematical functions, linear algebra (svd), random number generation via numpy.random.Generator, and basic autodiff support through requires_grad and detach (no-op in pure NumPy). Highlight its suitability for CPU-based simulations and prototyping. Provide examples showing backend selection via set_backend('numpy') and execution of numerical operations. Address limitations regarding GPU acceleration and automatic differentiation capabilities compared to other backends.","parent_id":"82a3713d-b244-4c4d-89c5-0844d8d02c02","order":1,"progress_status":"completed","dependent_files":"src/tyxonq/numerics/backends/numpy_backend.py","gmt_create":"2025-10-10T21:27:12.159763+08:00","gmt_modified":"2025-10-10T22:46:16.270696+08:00","raw_data":"WikiEncrypted:eXTykzkDgCICZh19Bs/J2L8bAJxpyVnTsnnnAMksyBrztDqUEZsjhmsiBxOdOgY4SD+SFjaddVbBVTHVWP5/fe4XhUP68Ti1eqGKiDbrW8sVkvph9hBcxe9618XFg5JpBTc/ufukDx73pV3SqTDGQD65ivZtnZEndiOq2y0PZ6nEew4/SXRuISNzg5kgY2xvJYor7gbLblOZpLvI6D0Sh1cFfYVuiQRFggYus0Q5/mvyV0/c8R8hfDKL3vE60FhQefbMmZrwORXmSiFw1kzAKt8R+nHAerJRjpyDq4ZG6HASETtdyv4BCH1HtMjxUpDgayoI1+eX9gvC9mAuhUSztGz3Jgnrr8otlzuqAz/M6bPKKnnh8Qa0/g2Wy7mHCUfGUeZU++HGJ5kerI7NXalXgT2DyXYYk4uz+hQlPipHLwwzvpAIPB5UUu8snf0uGojBkVIC949U4H+WjjgH1hsakGqJBZqfAC5Vcl5tzzmHv7ssmigl6kXxHySohgAeYKO9OU/iabCvTBMBZuFHVKVM2T5LNVq1f/RgC98R6tVrLu1KLeEMVNxrf5YT1QXQWDmGZNrsbukuujUw6swTdax/ADdE+Ohg1TnBtRlFYvLwmEkDZnBQ6ddoBwa76POwRs+QM3y4CALyYNqnGQNYWAi/tanJ8q/VaJtr8ArXRDMkWVKoDAA0n0QIUiwSESk3DWBm3gyz+kEmkmMA4AfQeIUie33uGQV29GZTMo4yPSDCFLR2s46efxaoH54bEUFwFkTgUcv05OE/XBZojj3bsWNCL2DT6puC3GXpnHZ6BwK0QcGlp+Ns2KlNet0peBLwlwvb/djPMwl9lhJOS5xi5hURWBYu/RcDDNhAawrXLctmGFhLpB08x3x5CA8ohHP+quSG/GHuncOFlhwEbR+oSP0rY7UhAjzBfSNyHEe+rOZVElF0dq4hfUpqJ6Dh7RR0bGvEXQUWA2LKt0pXpa6Mgts4dBAxri7of045pxAzNT303aZxty5z3XdzNNCKtX6tjTjFureHWX+fBqa4ax8TDDJFore2tWcxNCE4GapsXGch3v3gOifEm+6YyRujnUm93p8VltUfmf33fn2elFF40xDwJKZ6ltVUsQS/N99nYsfj5hS1vvjPeYCnwESeJN0xUWqjoPmbh/I6sNA0bZ1vNlemKLzTHsrinJVD5DZ7zp8lWZRgOpfEdulHDMdfOV7WNEv04Ropz8bY56SDE+oLvcs2NhPWNRn8bMez4V6FaYtZAawym+9Mdi/YfD7KR58g80o8/1nusvVsZgV6QVPXs+x9/KuBjnTuzGFs3w1WR1Ai6Qb7ImTn17TwbvtyV5LhN1olZCiHqoHvZSip01ySvIBNVzTmZfkMlj+PaBTDPJrxImTJWRuwK6tU8DWhXN2QVH/5JZ+N/rXG/Lvs2jbIWG+HCMI3QeUYxv9AZOjo5YfoX2Yj9V+Y/6Bn1XvfVrqE8UWJf2U0UVD/sdIDpUmf0Tyhkg==","layer_level":2},{"id":"2781649b-70b0-4032-b104-f4d19fd42ec3","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Expectation Value Calculation","description":"postprocessing-api-expectation-value","prompt":"Create API documentation for expectation value computation from measurement counts in TyxonQ. Detail the expval_pauli_term, expval_pauli_terms, and expval_pauli_sum functions for computing single-term, multiple-term, and aggregated Hamiltonian expectations respectively. Explain the input format for Pauli terms as sequences of (qubit, operator) tuples and optional coefficients. Document support for both shot-based estimation from counts and analytic evaluation using statevector-derived expectations when shots=0. Describe the automatic fallback to analytic paths when counts are unavailable and how readout mitigation can be integrated within the aggregation process. Include usage patterns for VQE and QAOA workflows where energy estimation is critical. Provide implementation details on sign accumulation from bitstring parities and coefficient weighting.","parent_id":"83498097-8e06-410c-bf59-2b4a228d19dc","order":1,"progress_status":"completed","dependent_files":"src/tyxonq/postprocessing/counts_expval.py,src/tyxonq/postprocessing/__init__.py","gmt_create":"2025-10-10T21:27:22.020106+08:00","gmt_modified":"2025-10-10T22:46:20.869626+08:00","raw_data":"WikiEncrypted:TP8KP13wWUq5FizrfXDdgvjv2cxiYhf2LEcMW8tzYqTCuGn2g/mePZpzqwG18r7x5nIIHj96gUw0HsyQdhiRaDMtPpJG9zNwH2fNI/E7RGAI/g/K39vXkgjZvsli7YP9YDBM5aVVEiuZ1IOJAI6WU5L0aYIcfFM3gbcgsVRqBv8hgq9XZ0XmaG9iugqjasse9vNvZewTpg49MDUPDFW22EBnat0+gWAO62Oq73+ZhmwtZYNQb11dBcqfwprC46GtZoE9ZCwsU9bBIZ46/wQzUoNN6ilcW3csoLMCgrN3QnOkEm8Xu0umlUsOjUQWhqizxybLe9IfX6aWfEf5RQXRbUWVZXHIg/S07FUis+CA6sTpz9aER0pjr6e+jCkt7Ci9YfYRvFRy2OO6FWwRZ1Xupk59BB/b9aPbXlMfgrdDZmcQvQfR5W57+7LOhivtoFl+pv5Rs0ViJBE2CmWocfdj06ZZEsOcez/DwsYpyD+1sZ6X2aNpTvNFJZzp9ZhVA/y7ft5wLG9JSJTzO5qzA6rm3CfcfGNCfNzgerCT/ukyo96Krs8pJwHliGIU+Udj4bjxLDV09yzPtIrTfjUepALXUMPvrH9W7GB3MfFx+evm21ewmQaFH77b0updR1avf6DLNhEhnfo8ROi0r/Gy7Gt+ztQIYRp8200a1oSjX5fAfkLukD82k1vC1QtHlqgJVPh8LSscl8WZq5Q71ks4f2pwAGMP4VOVMRHZWAKrQnfLfM7G7tlwFHmaSumNGMLnq9Wc4ayA+fDPmhb6tY7XoGCpZVQLn7Huu/2smqva9s9nlTI2W74RqK9AwcYVuYe7YM0d+4GWjlgGXxPU80MdfrLN1Y6woXFqd2xzD9kxKnMNobYd3k6vDv4VwN8h5fYJXHvAbc/IW/gSRAvpYMJE6FhTyw6FfZG60RT6AIikZTreY3aYkCNw87klu2ZjjpFWnyn7iDrOmCSgyxyRMevNBSYQ5JqVezHYnM+OxRwMTx36dgBdCJfYro3AxfbqsFzyumyTekhz0RssfYGOryJ41x6xDxiSqmUF6/jMLhhxtyGM8iecsDBKOJJQr/vH+N2Xkz6qTC01XZqo1aBrPl84HTto6pscImfE3q8KnMxiEWkFbbn8PJWU9HBJde1wpyaJ2hZRnOkCLMtSqYARw3ZbdOsdh/0jwKJQyv2ZFfPYAbaBCVmrI3jyqa7gsC9RrYQowzFnwkTit1EN5E22b6c15SsXXFZPqHV9arrNfsMsT19FvAK82G9gRJoEMr+u6OD2TjvNt/5E+LuUnUyHn9AT4jbxo3JJ8I7fKoB1c+C6Z8/UKwMEaqShsMnVf6nH9RmmZ4HRUv29fFFebROGrPhlgPhIKr47qNW+JT8VCAwKhiawRUjj/+QMjgCem+D1JjUf21Q+xs4qlcY4SKlBIHPAcTlEzaQ404fM1QS6sCZScymHwBObvbqW64P9Xa2ZNVOcpvc8YbHXmFKsWRmyIOZ4IepFiWARnqmdhRCfHA/kgqueYEb5Mm5B9F8xJlNTh2Bc9XGpZmmHrL3/Ahe9jw1ZA1Da2MLAglkmkFTvIpFE/0/D/d8PWD+67KQOYtnHpV1HXQzPQfh2v+h95dtueWFj1ZFlJ+bFTHkqIBvW/hwXlv/YDV9B440elErclgYDMG+fEyZwJOVyLm/UYfPq+hidpzrv2mIC5xLqYAy8xb/BltaAoCI=","layer_level":2},{"id":"f5c3c08f-a7e9-42e2-8c07-6ddb5fb47bf5","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Quantum Library API","description":"api-reference-quantum-library","prompt":"Develop detailed API documentation for the Quantum Library module of TyxonqQ. Document the numeric kernels for statevector, density matrix, matrix product state (MPS), unitary, and Pauli operator computations. Explain the dynamics module for time evolution simulations and the measurement module for observable evaluation. Provide comprehensive coverage of function signatures, tensor operations, and numerical stability considerations. Include examples from examples/timeevolution_trotter.py and examples/sample_value_gradient.py to illustrate real-world usage. Address backend compatibility across NumPy, PyTorch, and CuPyNumeric, and describe integration with the numerics subsystem and device simulators.","parent_id":"597e341d-c253-4c4c-a540-40ddd08797df","order":1,"progress_status":"completed","dependent_files":"src/tyxonq/libs/quantum_library/__init__.py,src/tyxonq/libs/quantum_library/kernels/statevector.py,src/tyxonq/libs/quantum_library/kernels/density_matrix.py,src/tyxonq/libs/quantum_library/kernels/matrix_product_state.py,src/tyxonq/libs/quantum_library/kernels/unitary.py,src/tyxonq/libs/quantum_library/kernels/pauli.py,src/tyxonq/libs/quantum_library/dynamics.py,src/tyxonq/libs/quantum_library/measurement.py","gmt_create":"2025-10-10T21:27:23.210635+08:00","gmt_modified":"2025-10-10T22:46:29.579382+08:00","raw_data":"WikiEncrypted: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","layer_level":2},{"id":"b26fd035-234a-4623-b465-c72f588078d7","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Task Management","description":"cloud-api-task-management","prompt":"Create comprehensive API documentation for the Task Management functionality in TyxonQ Cloud API. Cover the three main endpoints: task submission (/api/v1/tasks/submit_task), task details retrieval (/api/v1/tasks/detail), and task listing (/api/v1/tasks/api_key/list). For task submission, detail all parameters including device selection with optimization flags (o=1,2,3,4,7), shots configuration, circuit source in OpenQASM format, versioning, priority, and metadata. Explain the device optimization matrix and how different flag combinations affect circuit execution. Document the response format for successful submissions and error cases. For task details, describe the response structure including execution timestamps, quantum circuit metrics, and measurement results. For task listing, explain filtering capabilities by device and task type. Include examples from examples/cloud_api_task.py showing complete workflows, and reference the SDK methods like submit_task, get_task_details, and result that abstract these endpoints.","parent_id":"b08e6312-36d2-4fe0-8059-1572b13c8cf4","order":1,"progress_status":"completed","dependent_files":"src/tyxonq/cloud/api.py,src/tyxonq/devices/hardware/tyxonq/driver.py,docs/tyxonq_cloud_api.md,examples/cloud_api_task.py","gmt_create":"2025-10-10T21:27:47.481211+08:00","gmt_modified":"2025-10-10T22:47:17.980309+08:00","raw_data":"WikiEncrypted:42GucIVlAI9L6q+fifwcxV2l+d6UJjA/Bt4F4OmyISe6XSNPMFQRfCyY80s3M31bKGsQ8PXgd8LCpjLF3D87RNDknP5/smG7cuRNNEACg5FCqKNC0LMG7HXjYYSbQCd0iKfjlKY7Iq4yCyaVFDSGs8V51i2mQMnPNFc4W+T161rEKUXUqHGSTmlPJdMCipGFzYZZrv/cXLZSPF2jORYAgGtO1eYp7/0ZaOjVHMlG3/jD4OwbA89VthcMpvVTrb1eh/LK9BOcQ+B62+UOBXcPSxSzViAWBj9TvdvoxmhyC0TfUVTdaQrhTpaWMUlLrEZ0K0ldKcf+1hDbekcRo9wCX7Zy1riIeoDLwWcL2XyA6P3ShSZJB/dP8AsQdjaM+Y+10y8b8EIQhHSyLIAMeUoqVUK6wVUc1sLQrG23entbrrU+jd4BwStDL4KeqOrcDMgEauqTIQqA+UeJQOuT74V1UBddnhWYXgtYJYqtoQ8V5nNwePGb2sneiLuTHNdnCbCei5OmbxpToTEMhdCtcFRJH0mc+v0PykZQzaqkA/hlFo3Bi1K8HA3+2BQPNjJk7DbmUOyAg+SQJtfdDXq0Kp5Sj+Z4+xhLAQqj/T3Tfr1Alc0EtR+L/RRLv8CtMYCPXZtFMZR1rtImSMcr8XWihZ2166RxL9t8o8GHzq1Jbs1irDQ7y24OwrAHyKl5heSN+ISUE7Q+Z0sKCj/ONfLzPiulhA8nKVX68+4zRz0aWYM+qwb9GyaTufRB7mbZPtp32xjeNjMKibTnhxT4rF+vBMj545HjDbMuKDec9rjkuDsu9HMfZulm6H1DSu6PmKwm6IAL4YDJbNa4WNqrYNm3FOdpLG2IQaoLpmMazEYMUbq5mmeVGfst7G9ZPjguuaBw7vdGsFMWwmE13hXmgkKCnXrZsZNjdcMq6z+0bOBtvHmFTUdyis/m4hfFM7s1wgJtDC2RNkqR5tQ5HNa+oMhsevbD9p/gaDLIZ2v8/8brq6Ci01QCZafWTdluZ2DKvnuu6oP1yp61BdnIZdYv9yuJbpQiffuzoeouVlS+nFMZnOE9dy4TzSNyT6taUmuRoWF8Cc0kZgYsZdYeovctPcEA4fti4Jixq73Gh2iJHBE1ovJduQe+J5mJOclOD5Vc1PKC6fRK3AiakBn3oXBW2fTkvSIBe1/rkr76qftvmn2shaaG5e0QTlF6rc3nlbw2UhqbuOWLr9zc5lRhqkvG53FGZp5AojOU4EKlEUxAe4J6DLGW78ZRSRYcOVdceP6keG3tZMaFY0VT2eZNjhEx6jHnt+Xa9WanHy7iIked/lrPKP5ZM/jiZ6gzDQPncLCdk+4/MjLJUTi9XL3AxDlAfY/nYxkzaM6A6UklnrLBDog+0afL2m6744v/eYh/ooJ65cK92noKjgpNBL9UdmHX6Fm0sejyN2Z4Kqx28UTX09fXOiyEtqaGS2MYMYaZ64k8ETi4/AZMKbZ938enJLJzHDffvI7WXt1Xjqbx2aO1QSFf5uvUd71ra12beDVX1H6Lr31XVymLlDECIPt3cRMAbVM5QCO3zrZy3u3Aaf4TivqRW38Um+SWsIJQ1ucOVmoQ/D5gxkVzMcxThIZrliUfmSYrDgzfwoQNw7/kJ1TJgM4RmyhL5CRku/Zs9U2Hsws/eD0a2exgQd5rc/qQDpiLP8cTA2Cf9RUJStI9MAY5BPcHXbV2ELLvT6mHpAl7wnAyRjlVM/Y1XOJRm+ZyZAx9QzFHBP8EAEsn7MvoZ+vqU+O19llGPFpqaG/4rCM5xx42y7Gk6QMcWuXH5TsF+aDuBARbCwYabCVSgcX0ejjjfTnzZs+BFYXrYJSzvUkcBb6g/B81e4j+fDqSELNQtz+RjjFkr1bVCF1dqJslB98ZaElmcqOz4fe2fQUvQEjS/cfmcxfC1lDaW09QwJSlwTASTxOWDbPJSHXowU6iUhAPvfDm3iIzLIp+EulAPR0mH4NUWh987DoH","layer_level":2},{"id":"96827f47-ed1b-48ff-99c0-8787d2b556ea","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Rewriting Stage","description":"rewriting-stage","prompt":"Develop detailed content for the Rewriting stage of TyxonQ's compiler. Thoroughly explain gate rewriting, measurement optimization, and circuit pruning transformations. Document how gates_transform.py rewrites non-native gates into equivalent circuits, how measurement.py performs observable grouping and commutativity-based optimization, and how merge_prune.py eliminates redundant operations. Include code examples demonstrating measurement grouping for Hamiltonian expectation values and gate merging for adjacent rotations. Explain how rewriting integrates with device topology constraints and supports both device and numeric execution paths. Address common issues such as incorrect commutativity assumptions or overzealous pruning of parameterized gates, and provide best practices for configuring rewrite passes based on circuit type.","parent_id":"e948006c-6a9e-4afa-a0bf-dff490882d5e","order":1,"progress_status":"completed","dependent_files":"src/tyxonq/compiler/stages/rewrite/measurement.py,src/tyxonq/compiler/stages/rewrite/gates_transform.py,src/tyxonq/compiler/stages/rewrite/auto_measure.py,src/tyxonq/compiler/stages/rewrite/merge_prune.py","gmt_create":"2025-10-10T21:27:51.839297+08:00","gmt_modified":"2025-10-10T23:15:06.158282+08:00","raw_data":"WikiEncrypted:ZoRXc1fR0SARSHxoSbXhN+/FSi4L1gF5IQ5PFubZ7p41l+udU4wz9BT8FvHA1JdcuXw4nDQdnDdJg3gr8dlzm0d9mLIiCI8jvau9SweISFqkPtpfRdufCX9LnLg8Jz8pUPry7DlHYieQ66SywJepbMvgSrxxmkWAVjtsh+e5935fDm9A0YWaWAYBnaJdPBdXEZm2TTM2Kbior+hiCl28VjJcsf3E9ZmdfmsFHBqTPeTShxYOse6BiAMONdmBpsvLjFQ+wzGkGmLEP78wP59dAdy8xZlFaJznMuEUeIi4t5ch9fM/r3ZI52naeE6dnjJUCylpezPHrw+h4qPXMCIpIikp4NsI10nofQuoW9sLr0ZRS6l2GUpUNI1JZ4UROrA0JCVjtqa1FiD/z7wLp6uYmBEzUWY3NOXr/XeQI7nLbD/yB0F26DNiU4BJdlz3aaDoJg+x56I9Yd1WjsDa2zM4KeOyhMzNFI6TJ5kn8e073xpD/z9HZZG8QaNBESVlJu4FG+sCdoBDYlocaxDY9PTKwCTRgEOnL8H9vBQPmfdIWRYhGmATnkrPINdffc9fqay25Cv6OE1W4bG+0hOF6e5ROHQewA14NQXuiZNT498DKcqTq8AZzlccFNdMNvdvI9R7dI8eG92wYHgt7ZBTbWlkU57y4RV3kUSzU9q9r776d7HVnY4+jnuaElCvCrBM/u2V+SyiAhaZI4GdUd7EzE3ApAwGgGPCsyHypRW5Je77i6h+Aae62MVZSVu7wSSaRIUPvjpYREW9AOCBdTZdIYCi6khl9rA2u7G25kJtJw5jnzB18dN/wW+GXcnAxJfBSahRaKPPjwnEPJqPjqsCvbOy2kOS8QJJg+OPB6x8qvN2knJg/4dEpy8l+//YalCbfE2rYSZze9d5VaA+DCGfHRftQtGhL32NxbCJWmzYXnWN3Gbc9IM3m/4o+Hy7qAXAIvgVdel2eGw0mkH8EOdjj43mbWf18xUguFKLP5NFI777A4P7OyXCsPBcGU1oT39zITE5dsOvv3IWEx8Q/vgHwi0AFD4JTO2VozmZhjoH0MkLPOchPEzjfUuAkc19b7qF0vtO3tfRuo146Z/DuOy/Oiaa/u8Nzr7UOmT0Zmbjxgegi72N74dbVT5XB5getywqwpnXOMepNVBM9bMYWkbbABhyGOjjluSKpFTVUcaFOvMW2fcDJURE+DDJp9XphNz/1IKd5xbjuEZBBm4tZdV0FmUZQPXwFCQRZfBz9atLNANSptKaeMLkZa5ALm2/BN7jZprSIwWWcMPIN3hHeZJPslFdS6J0DHSmDcEnU4m439v6LxmYvMDnrTLB2o3fTXv/4veK3VcZ0edLHQJPDauj676uTRmeATXUoOuXVLi8uoryCmzxemhH5IfLaQkG0R5iaGyz6uH8erhqQRbguWRI7eNujWbQ3CuLSKrxHo6kLWObxt4bOVc/nQ/+kKARR+m+yy4JwGAPUkh7k6FTbttDqm67pSdsro32S0bd2HR0cYS6dBB8emsn02MhIUlRlc4Fc+Xz9lajA0d4xH1LMf18cJkSl22fDsnb1tROvUwCV0G3gddVB5prEebWUkr1WYBS/dE8AABC6OkbgiDYN5OKEEjafrU6RQkUAh6munn9d43nhLnijyzu2UKyFrGfjkbuSwYb9yl97CNnk8MOdTS33CDLrJdgX4ee2rNk8gipuHqEP2YO3vEI5/C/8LFBxALSuCXy","layer_level":3},{"id":"c48ea2c3-7167-4d11-8b27-d0b8ebc699d4","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"HEA Algorithm","description":"applications-api-hea","prompt":"Create API documentation for the HEA (Hardware-Efficient Ansatz) algorithm in TyxonQ. Document the HEA class initialization with molecular parameters, qubit count, circuit layers, and Hamiltonian specification. Explain the RY-only circuit structure with initial RY layer and alternating CNOT chains with RY rotations. Detail the energy and energy_and_grad methods for device-based energy evaluation and parameter-shift gradient computation. Describe the kernel method for running variational optimization with SciPy minimizers. Cover the from_integral and from_molecule class methods for constructing HEA instances from molecular integrals or PySCF molecules with different fermion-to-qubit mappings (parity, JW, BK). Explain the RDM (reduced density matrix) calculation methods make_rdm1 and make_rdm2 for post-processing. Provide examples from the codebase showing HEA usage with molecular inputs and optimization workflows. Address configuration options for different runtimes, gradient methods, and classical optimization parameters.","parent_id":"61df0675-6efe-434e-8be6-66c5bb88ae9c","order":1,"progress_status":"completed","dependent_files":"src/tyxonq/applications/chem/algorithms/hea.py","gmt_create":"2025-10-10T21:27:57.613266+08:00","gmt_modified":"2025-10-10T22:48:04.921489+08:00","raw_data":"WikiEncrypted:6Fw6zeKwEGma9eKCQx5Pd/CrQILmeEd7AV9cayjnpu+JZz0UK3Gm6ny3GrUZDTTv19qn7VMN18p2W/RP0OzQxxlsJF3L80XdRd+Dz3OHKR15YqXYFiHeHUG7QL+yoB3QATOlCaj3+qnUb02EUOyqlnHYq9fQ9yMSbq56k24lEa/kXhBzedHuSY1DUKDd0Fzsd60r1ewD9DCyJs4vM+ggIniEprHyzhAsBxkRPT9wI/9mtYxeVZwaput75Zs4APbjPIhwucNTIZiDbRBcHCPvDJlMscaV8SY8Ju/5wV8R6kg7YXErdre7knoJ1cJsDgjKQxYDkvbLERcR9Vv3MBxeBUXtyU0Z1bSMmS3VAU+Sda/ldlnlBKfYWrZ/oOab9ut7CIeYZD62xi8zKTPNZf0EOgACTqiX6mwF9UQLyg67aTTlp6kd+JCGGI/XZgen+GlrF4Udw1Hv2hUp0Yp9cEuTkn5AbPzyMq3wH0gg+rR2CnfGuRTqIa0lqQft3BIMa2EeI1eYXls5py3RSYYjyKVU05LecgcJbP3grCpX/Vh64AZB3JqIc5tXNCbw/jJY7N5uz2WSSRcKZ5+G+xCqhjDlkfYXpEaoUt+VnsHVVYtFX7/PNR0O9Uwm27PFo+fXxgr9AqF1Die2JgBcUj2NnL3oElJ/V6mrOz5yjBDcTmv6kxw3P5SJ9Yo9CG5wAy/RJZbew3T6fI0MoVJzMnTX5enoF1pBEpc2KlPopu0aDiiqDhdslX7c/sU9Itm3DL0C/6sgrNISru4BF1vOKjpgfu8MHOl+Ec3Dbhx75EuPK2j2pKy4zuto+Sx3gyJBvi6MUZECY94bcpVolaH2ie2cR60/PZSCRX9EPF1PK2iMP7B2ZzfQyF4ovac904+bWHl6YqHI7+ZHD3P37BdgP7cUx12+ufUxpBlZuHvRzuTiDFYwLs+znbIdpsnzmpTpELPwNXAl4nPqqn+IPa1+4K7+BcGpCBPZ4c0AnJAZvffwshBctaAu4uobilexyvwfRBMqHHxqGEFSHVvblT8PtUjEVtuIyndEZqzynFghMGc53ZZuFPEmkqrjNo/KU1BPEgPiudtv/QolxW8bdu/KZSMMjDs5ZIG8QHb1V8SPcDaSc7EaBlxhH+FThx3yd60yDXeresS8kUnOdsbD+fxEgeqiWbe6eX9IKbLO0M3hcfBwuiCWq9FTmwJWnu18GRcfJokCSxt1oImfNFyYkkK8aJa5u+nVgKeIlZ9myY0ZQ8b3/XkDAqFsrMyk6phOe0Fz1DaAHdevefQ5tSpEzF7oj3DxUAJWsnrXEvZBBJq8kk532l6WHetMTzvfPyu9/PXARU/9igVRNerkjLslNc1vGkgED81GDHPg73N5Rt1129vMIi0fcNhygy6oDqqYx0/knPFZXgKuC8NyIvQwozB33a6Oxakj0wEIC14gbWAoOMqO/ZmIkZcCUzYlXCc3l2fGOK8HdjfsNCCakXoNTCa/jgORPn5Ugulgso9Cuafuj6wLbHYu61sug9diTSX5lkXj9YyYSBMkWyVq83l8EFxtgcIKcsil6lHUxnwXN7s/g0HAtzl+kGZf+xorPLh72HSW6RGQdYBIz3afGvx0J87DAKIFwl0dfjbghnXlHPCQWIfjilsjNYWo39OXNn6EmHJNYVM4Y8rg+qo1yTwCqRWp6PxJmkGcEEDEwTawIFmjjU3ZEsamxnpM4Aowoxi0CLC8jw9cCz/RdhoTlONMbhmmpRd1tkxV1eNjTkCO2aFiFsfdhYMZQGYU1lvVQzj2V05YssNyJYIKKQywkQ/KNlKbbxCjt4xtRAX6SbxJyJC74kLY5MzCyfyI53R9ZGNrsQKJI+ASCvUhfGpq8vtTWLbG+lphgCC8X61LTy9ec0wYMFVOSnWhmG0=","layer_level":2},{"id":"69cfda98-e945-4c6d-8e56-afffce8569d3","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"PyTorch Backend","description":"pytorch-backend","prompt":"Develop detailed content for the PyTorch Backend implementation in TyxonQ. Explain its role in enabling GPU-accelerated quantum simulations and seamless integration with machine learning workflows. Document GPU tensor management, automatic differentiation through autograd, and JIT compilation via torch.compile. Detail the dual-path gradient computation in value_and_grad that prioritizes autograd but falls back to finite differences. Explain device placement strategies (CPU vs GPU) and mixed precision training support. Cover advanced features like vmap for batched operations and their application in quantum circuit parameter sweeping. Provide configuration examples for CUDA device selection and memory optimization. Include practical use cases such as variational quantum eigensolvers (VQE) and quantum neural networks with gradient-based optimization. Address common issues like CUDA memory allocation failures and tensor dtype mismatches between frameworks.","parent_id":"9e22ca4e-a835-4f25-a17e-1639908dbac3","order":1,"progress_status":"completed","dependent_files":"src/tyxonq/numerics/backends/pytorch_backend.py","gmt_create":"2025-10-10T21:28:05.621851+08:00","gmt_modified":"2025-10-10T23:16:59.646967+08:00","raw_data":"WikiEncrypted:rx/OJQY68vYlj8susheNJKA3IsXhBUhtMJLUY+YuhRDkHmpVYHYOTWVAH5j89Gy6xCVUMcL2FUQi1mLTHoHBrVspA4iI8BMXUeK82t9ebT30RQDfJ5JFgeQSRW2VG1uMOvzK6XD+N1RrLgf56zqtcewJYtOrC2X6GKK8JKsFuDJZLvlEjMPQJTDCBSU/EJFEnBC5pH4YeDLGxG/YKRBTMlL803QYlF3Acfdaz48cwwy6pSUwm+4V9Aj6Et6T04l/2vJGo/npPZ0igkstZAwmmwu6lEBYK09DdXhN7499dryF5lghMot+cz71WElYb4ke214a+fsZpvWEc4BclO2+X+SK5dhOClj5yqUEYpk0PbWkJF2SfAnrlezWhC5h4I8u19uKeiTom2Zuiyb+Qw3tjtDm/ToqsePLVpH87qG8QNWbSnELJmwdPPzV1uDqvGNuPkU8/eGcTSNmsPSd37RnYAJlkNaCPm+AcnY6cUln6OQaTMPy3Q/YZcZSEvDlEa/cQ/UEXNOwoUTHiiyt9MKnlqFkaNMuUdwc4AKEjNspcPxxxou+Xux+hlfy28Ka/Z+Gug6fGm8IksZ03AQO5UQxXbeXvEVIw5djZ3xfERReStOAOukRtcJmgZuuGhvaxmZvQn7InJpzYVZOX79zzX94ur0U77YCb3vm4gTWpTs08ypGjIqvSMj+LbfLkfqOPyU+bcHAF4OSqSGxKUQz+nDhzQPdBeyP2yZCEliz4awuERe/IGm9lfe/oK/FIvHfDYXtUrVfi9OdxLvkkilySQ0a5GHIA4LjkOPl3Umy0iOFlnwHrjNpDeoc8Bzo/guNpH3W7r/ZfA+DbT4BKIFyYRy2koSFN7qw6SOHvYwwkxzaWyJuIipXW8MKzJnaLv17a0vGTJfpWEcqMPxzKSmDDHEAwtLcD9xlbeRnQ+awRc3D0UzT8ZHQfjABqu1geXHLtEhC+iEdAWGe8fAagaAInLQ9kkmRuF25FmukgAhzNt8ugPS+T1mPAFSbXJbxQMFGbmEHAce1OczDQ/lw6kyVOM1DCzTeGkuYGHrfsmtK6oojvc4pjH1hFVab9t5VU5Ap6Y0XHU33qmT4cCP2i+ZGz88dz2ZlA5JCBgr2ZrSB6i/g7khAPo0VuUEKNWxSq/S5UOqgNcKn8WCz56g864BR2KhTT5Pssfy8GN/cV8glBBHgkataSruzFg3g8/rBqZRj3eYCRfLHQBqyvkaO6v8JKAq/Ci3xlFVKJ2NgRI4wNHwqp+umdgQva7VxeYLsgYUGPnZfCqqPxTNgUkeDscTK0C7y722fgFaLMLSi7ewhp+XEw0scqpDqTXijkXcitSAWGdzYkRT7i3HnVfiF7PLdC9jwFfoCGR/4W3mArNuoqfSiOEtxzzyQiDLIYNVeaXZ7eVpGGJ8KhYUJ9TVe4ByG2EKJYa9eThnWHlRHVoz3N+D9TX1HRaQNvXYIKgktU1WPLE7Wm8U5IOscoWmbEI79lPcYxfVrnNKY8p3czkW+PmdMorAHk2GuWBF1Z1bOpYypWtR14in3/6JYu+dI7EjKoRb3Vu/YobFyfqQGU0OUK2rGPQzMxZadmf0pTOJ6H8kIG8VfF0Iomf0SI6E8qUmbu/Waq7Med8Ldqksa/3XUV9wRY2k=","layer_level":3},{"id":"e0be298b-dc4d-42be-89cd-52fdf0095876","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Correctness Validation","description":"monte-carlo-noise-simulation-validation","prompt":"Develop detailed content for Monte Carlo noise simulation correctness validation, centered on the cross-validation methodology in mcnoise_check.py that compares Monte Carlo trajectory results against density matrix simulation ground truth. Explain the fidelity and trace distance metrics used for quantitative comparison, the trajectory averaging process for density matrix reconstruction, and the numerical stability considerations when using PyTorch for exact quantum state evolution. Include the role of large sample counts in convergence, the impact of phasedamping channels on state evolution, and validation best practices for ensuring accurate noise modeling in Monte Carlo simulations.","parent_id":"902b7d04-efe8-4ed8-988d-8db59189d4f5","order":1,"progress_status":"completed","dependent_files":"examples-ng/mcnoise_check.py,examples-ng/noisy_sampling_jit.py","gmt_create":"2025-10-10T21:28:17.505373+08:00","gmt_modified":"2025-10-10T23:16:21.156809+08:00","raw_data":"WikiEncrypted:i14w9QYhKLfKkkfn6X2Uvlu6V0pNqw1uIBo8IaRAYSkGtRqFh7a4PiBvu9zfJBFOC4ciVD+X/g+2ouKUMdNHzkwRdU21m0ci1O64XfWbt3bH1ivSlg4uFVXTKASPsQIPQWvuS0oASXO/XY8ya9qZLFTGJK0CXFVo5pbsi7bwGdS8ZJwO4mqkt9U0CQ2k1ZFrDIPy4OVQnUv9uCnwj0LnQxYJpWnyv2fX5E4nCwVIhIQieSU3kAkW0ybQ6Gy+gQTpzKYLvx4hQSt15SHqhoOM2EDjZhz0jo+MtphtKGal4qzz1X6lt2KDa8o+irC6VRQXdzDW0SIWYPrGRCmcGrQ1R1Ml7ctBhJzKgFINZEd5xV5Yil92cOO7ZZ8bikdQri442EfScGBp06fM+Gft7d75X7XmZb7XqjdInS639xst/JvhxKE89VDhq+X293/PhAlh5AbgjWEBf0hk8xsnRj49UjXo9fSWSpqL5efypJO03ZtdcFvD61C9ZRGukBdNek7/PevzgsuJQRHKU3GWTxn44Ii4d3vrPvTeHuB9ob7QAxwsHIA1TPy86V0WphJkhmMgAtUhTLiM169NwWZUHbRnUmL7TqPG7sZnGCrhd52taoU4hAbxwwnFWDpdUUqgeLoSDQVkUIBOSNt6g1Wg60UzsAB0YE4PzN5FRsAhXCdIV5qr7dsPcOKpTJL/6HVMJTFzxVe49xc+NpGZIy6ijAwBiI3pNaxiUGQLSTr2bFgC4ylDKuMeBwCgdD5cy6tR4G9ePEtjtmgkKocSjloc4cC/oxK0EiBDQnlqj7B4MQHFHCwV9pevUlekG+ImDg2yVnWgGUOnS397YuJabZe2oH0+DgHy7otiuWh0XSjftGsEaxmANufmaIELFgisl+LkuFmxu5mX9csgPTXfLBSCURS34a77uSC8Xw8YvT/AoJu+PbScv1jk6PA5cQvZAzjuiTIPsSUBc3d1lUbOAOyiP15+UJjeHvmBH/csXuibXgxSzNfhMVFMxzRHlJHVw6BEnSGJFF/A6Gfy/79T28yebTfK8UMi+Q15sO+BOEjmsg/6dMtCM5KSLUFVx5YOhqvDRvhnWmggHogyVGty9T7w30hB5jkPd3UBxfZmL6IQ8iIMJDXqg/he7c9Pmvi2eF73rW8zCtWnfoqJvmYDrClnCicjqpAws9NQc59bW3Jq4jmKzv6jt0RJsTvWVcyFI51joAHUjsc8ttAMf9JZPfe83V02Ygl7e9Yhz13j8crR7NhgplR3CCcFyYbOxBlU1peT6AtfaC/hiQQZJ0sVyy5e7UdMvbYRkOGeMqayq3TMpr6EFb6e1I4MXmwRQQoORYV4FoLQPaPRnLAUlDnxh0pu63Mn41hRlt+gFq1p2qmxropNqwdrNe4BakWJFbj0MEzjyTLL","layer_level":3},{"id":"8603157d-29a8-4b06-af69-3400b1a4c2c4","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Parallel VQE Execution","description":"parallel-vqe","prompt":"Develop detailed content for parallel VQE execution using PyTorch's vmap and grad functionality. Document the implementation of batched parameter evaluation in batch_update and its integration with torch.func primitives. Explain the design of the vqef_exact and vqef_counts functions that support batched inputs for exact and counts-based energy calculations respectively. Cover the configuration of batch sizes, parameter tensor shapes, and computational efficiency gains from vectorized execution. Include practical examples from vqe_parallel_pmap.py demonstrating the performance benefits of parallel evaluation across multiple parameter sets, and discuss the memory-computation trade-offs in batched quantum simulations.","parent_id":"2d106356-b31b-4b80-93fa-30421fbbd322","order":1,"progress_status":"completed","dependent_files":"examples/vqe_parallel_pmap.py","gmt_create":"2025-10-10T21:28:24.427289+08:00","gmt_modified":"2025-10-10T23:16:44.99112+08:00","raw_data":"WikiEncrypted:lhNRMh5kNTxTBCRgMKyOH2GS0q7PFJZVljG5alKafg7nqnaxSDHvmKOCuj0DSBbr7Fn9kK2zbB53CjSNz8ktnQUP3yz4Stj6aNCoLkQ15pty2/UK/nVc4sXR1tolO5uZYSuZB0gQZcpnW0IH1piOm+RfOSgpZ2WU9YsnhlbojWiT+Yv3x+nZibd1/fa/ab53TgD78OFYxCjIIC0JqhbkbBL1/PkzpUt+nXrVxrNWTbnBFA9Sds/mey5VmYdmEfcBKDtCVZcqGhG+cyv+WbqSXR0Q9owZHUIl14EwubHu5xUAYFldxEISXXzN8fIQEq+3Hhw1gRrsAhpOWaAe/XMN5etTz6Q2z7dK+aBv3rYOp8DzUn4ODV35AYGw4BD4mwfexxdNfe6Wp6ZN3zR9r8qI2RA9/edzms+sSg9JZjDCTVkptr0d/S4dX6yvoNOxIq6GAK2GwtMweLvyw9daWT1LJOc5wU3+Lqk7z2c9s9yFopt5QrA0Fzv96Ws4jvEDoI4fBdGBvgkL7Mztca0rXrJDOTRUDI500urzvtM6WfEuii/o7OG1VNS85rnW73qANDrDJTM81HhYfpW/s1Vb5qJsEHrdp84PwQkqJFk6j1FWDaphacJOWayQf7iU2AQnzMVK9RJawZjU3lEmKs9OFLkykFOe7F26NMqFuQ7h0VOQnKryJ3otbaYEip/V2ePZbhV6hVknaz31TREuqxfnhcA2YkbGEqXm9b9O1wkGZjdHkht6o75kpVqiYr+dnxVYVI+zj4F+1hIod92+OrArvteSGkpV8BifF2iNNI7gyOHcc2BrhaZa0kcWCDyj7Y/H01LzUjSnW3mK6SnrZU5VczTiYTC6vsRhm+nExScZ0w8ezxVRB5tBRFnD4w30Gv4jc/DRVOhJX4Kbil3ddbONeebCmMi1rSEGFxm00Z39D7vacAdh509SAn4AvqoDI0HbXGt5YZijyBv32SOHv9zRseyaQSUzPz9ZwtR1PbbGAe324n5a7LGd+AHB7t9W3IXwdep11SyA1rjPOQOAQ5px2Iz+JE/+b7xYd7OKhWjUhQtaSkdWbm5WKnMAKedfTcfu3/qEo6AYvIovPfHYroFSCcUO32a5xmnGt+m6gRR0JwsLaA/Ew7CWl0FyQOuOIvtG79vh27cJm5U51e55bHQH4YVGPnhBfUZbLKa5Vz/IcV/kjBvnX+qDJOnOqegzhtgK1sdMXqgXFoYGROf++25jbIw7XBRT1gqyFvWmuQRmGqRcAGQHoT15fYVninWtiCEDVb5/1BzUNqTXGIJbW51E/VHRAOkjbEq1G2vErO806T0Ie4CAYRZQbS0oqkGD0Ako0FNa","layer_level":3},{"id":"1e5e1639-6c63-4d5d-bc4b-c485be44ea96","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Gradient Computation Passes","description":"compiler-api-stages-gradients","prompt":"Develop detailed content for the gradient computation passes in TyxonQ's compiler: parameter shift and quantum natural gradient (QNG). Explain the implementation of parameter_shift_pass.py for analytic gradient evaluation via circuit parameter shifts, and qng.py for computing quantum Fisher information-based gradients. Document their interfaces, input/output IR structures, and integration with variational algorithms. Include code examples demonstrating gradient circuit generation and usage in optimization loops. Discuss performance considerations, numerical stability, and trade-offs between methods. Address common pitfalls like parameter shift overhead and metric tensor inversion issues.","parent_id":"8508fff5-2f92-4c35-ac55-80934ab85c63","order":1,"progress_status":"completed","dependent_files":"src/tyxonq/compiler/stages/gradients/parameter_shift_pass.py,src/tyxonq/compiler/stages/gradients/qng.py","gmt_create":"2025-10-10T21:28:31.941239+08:00","gmt_modified":"2025-10-10T23:17:41.169101+08:00","raw_data":"WikiEncrypted:r1dbw1ciiG74lYTjPig5UyYFgYjQb1hOw7H3ykIdYW9RoaXx5iYTTDFwhqCSAY3tQspqOeFyJUMFujd02onieaDVt+ZnzHhYsWE5sEkNY674MUsHnGoWB0/qhY1zu8heBRCDSWs0kWiDtYP8dhDF3ZzAb9kHPIzNuvtVpZJwaETuLYb3hM+st74Rbj+tCMtOgcXYJq8X1taSKA8N7rTV4kd4jhSd9qPHa9JzAgNqCyS4OByhFAUUDkD+uEzXOp4zjdlCQJL8SeTrwYp0ih7//wxOPpxH+//Pdv7WD8KGll7jHfLrwyAUShLaV1Lfx9Rk5W801BTVVKRQKFyAlliFlMR5KHlM3OM+kTuxwSIPdYNN+KttVPm4fr5yCxK1EtSD/yv9Y/hMkzbVgs27t36DZnkhAZk/7FZad/MHYa4Y685J+16E5RrUdhr1XYG5/O8GHYjOADs1qMnRntOV7oourC1j+pXdMD5p0OJWllZdtF3HpmrgkMHDMcKOATOHXuyBIYBUMz17qM0n4UJP0iTM9EogBzJjPnUyfJTvgiz+3gWY0YTZuOGCAnkA5vkLeVJdnEJgzpsQG9hDGCZZFNCjSGyn2zMq+vuRLk+1Yuyur2i51Ho81ch6hilaIW01/9zpzn+0GBulEXjhg+TLvSNlpCLlBmRPc3OJSXRBAngufHvEOK/yrKN2rqWsjYdT8KpbSCdPoSs9vqFPmffCTIIQ6ftM+FxldmJr9tppFLLMQO8uPXh4TLdNEa2xBq+32wD/3xsHHYcR8fXWCaUmbjguOXage3GDdEy3g9gOZOBuVdJ6kG5UAod6LMH4GwnSU+OyZId0IU1tdbpGVwFMtJlg7VbHgpAnB5hyLSTxtuihThbI30SW8yFmZws/r2XhEB9WobBxGL/mdBfBzsHCw4oS2cjRXWIdHw/gc3cmIfirsuA5Uawvh29RsPM2McrYXHz99X547J+a252/W7Yf+sW3TDD/UCVv51sye15e8nRG57HIImSIHIl6vz+7dXkMUt8N4VT87Xl2TiWTRX9EAanuBgij30W8W+dZz7bCEH/tfTosbpmtTmgcOJEjHSf75J8SUyc1zQCpmGMfANF3Cak4kYmVKZB+Q057EGOQjElDhimyEKivwLIsOINYdze6G5ZJX8aeoKzGDdQcQg6cpOW5ylARK3yhuCswebK5t2y1+Ei5k05AKaTX5w1CUL2LDslZ1+WmiCPRDNWkVAzSGfr0tps7rSB+XxV3uqMLu/xTiP3O3VloY97DoVGToNhG+dpExtqSF01VglAdcf1IkIFHDC1aOSDFFy97VKo7kcjRfbxr5VAUTfEDbNICMqtd7LOYYuzksFWQRcLcihnFvqGirzW6DYtgZDfFOVlWydwKg5FGmPwi4iypuZ2ELJ7r5YZo","layer_level":3},{"id":"ba2d6e15-7316-444c-bdcc-f23a49ee0791","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"IBM Quantum Driver","description":"api-reference-devices-hardware-ibm","prompt":"Create API documentation for the IBM Quantum hardware driver. Document the authentication process using IBM Quantum credentials, backend discovery, and device selection logic. Explain job submission, queuing behavior, and result fetching mechanisms specific to IBM's quantum infrastructure. Detail how the driver translates TyxonQ's intermediate representation into Qiskit-compatible circuits for execution, including gate decomposition rules and topology-aware routing. Describe configuration options for optimization level, dynamic circuit support, and readout error mitigation. Include usage examples from cloud_api_devices.py showing circuit execution on IBM devices. Address integration with the compiler's Qiskit backend and handling of hardware-specific constraints such as pulse-level control limitations and measurement feedback.","parent_id":"f408be04-4cd1-4017-b39e-94b815d79ece","order":1,"progress_status":"completed","dependent_files":"src/tyxonq/devices/hardware/ibm/driver.py,src/tyxonq/devices/hardware/config.py,src/tyxonq/devices/hardware/session.py,examples/cloud_api_devices.py","gmt_create":"2025-10-10T21:28:45.874923+08:00","gmt_modified":"2025-10-10T23:18:20.453504+08:00","raw_data":"WikiEncrypted:C34GewOyK1SlumqKiPsSg1Q7++qbaPnmH/WOa1nfihp3zVSsspZY3a8Jw4wxKMI8+lmWOb40vd5sDxzeWqQYZt+ETDq22NF3m3Dvxs3khpLbDh+h4E4Heh91IVt7qxLA5RwyFYJH4ghPk/8WPIO5zT+RLcEFjgEik65Dg68uscyDoamZKHwjT/IZfXuvDzK+/maT/MM19QrPfrTnOaYN+bhiBkXbN7+QS84yOc4er5GmUwFHLWhJ6+HKJXslAM4N9nuQpH76Hsj1MehD8raUrywC86/ZzHqpIw3AuHMkzh4F6g8LKahOfNvwKpaFtf0kwTcb+d9MpL9LaCMkRlLCvCDSac6mRD+9wOhbJJFekKLP92aM4ng1AfjVNm719JW6ldctFSYVy9fhcmADj+epeJ2ZgSZS1ZIj1a8J3XGrpny2g4+yvQxDnJcGJzXJPuQCkRDnhvxIjGjkzV2J87tVeSYlYusDtd/F4n1fssPT6PGnQLha6dK9d0G7dSod6wuDffw/J9qyem3gFDZbToJye8rMCDocIyrRjf9FKse29wdO52Tj3YM70kM4bAVXpe+7aB1IGIWRUILrV23/sQfWupmW3mv11cLSoWWRZC8BAcGq6IL4HjfEZdzT/Gq9F1Uig48m2VopIsBMnzpFvYHOu/o6T3A3YvcMsjHkxXxeDLq8AUz/cpOjLjqs1ab7j+Kjb43QcXuJxnq4dmlQTwYkd1B09R0P8HGUZ40GhuMMn3Q4PHN4MDXjNQaB6FmeS2suzsWJJypslZdnelqTE1wQyIoWKF+nPNbSm2sqHVlEl/h7hmfBwQjksYQfYISX1k5YuztQodTRXxbSViygN7oHHIcvrVAhxJRdxM91CysBxqVw1HorU4UYfh4R6Mk73n6QASYmiSLPD3SMxgtpjEUroWy7GPiGWXx66Xbc6WNsevw5RTawfd90ua8rUouQOMg4L5ET1IShCMrDObcYIJwNMKvLWCniadEWroaxV7OHAnssFfvDpZvFkfp8GHkkZonCPyjgLhgaGDrUsTPbeRnbgEv4Uwt2n870XSEWrMmnBry51YpdFWep5x89Gb35shnjAwdPM/hlVe+sUpAKijJe3PhnaOUOapdHPhXrKU0QQ8JNjJ/pe0wcivpDAtXKUvMt59oyKBB4Utr8ITXbpVYBgHM6/ZWPSKyqIxwNvOLjIwuMWXR+JMRs/2WNBFc51kqJZmPU4Mlu2lqcsgDDnetI8KcelAbdURT8hg2nJ/0GWE7xciSgC/07LLoBehzjbxL56CdtU/XHRuuFhFIBi+io5aVFskkByJM4a2RBHsaqU4XQychmYjz9e9tP4Iv15WMcoYthpYgAxHUejH1mRfq9gV97HNY2SXaeDd6kvA0FpY1RqcbRCvpSeZ/fFearVS0keKa6uTNX4lUUDJ/49Nl+iaUDsoQhryimlkrTREqPNQrOqe0AGvXJ2Xa77516VFYo7ZzBO9C/daG4jiTSlGeOPuPJEEVHBG/JTaAycRl1UVEbl9f6KXLfcvBaQa4PIo0GYMRskqWO4TYD76+CNKSSEiOA8PgT2wfdmH2R6gjnRTTt2Ajevm/s4K/Rq5M2frIizwc7kMUlDab0UToEaqbI2xFzguDXcqBQpRy9z9ZI4KdPMD0LEDNE5Ho5QpALo2YltBJMZHa0F8FkD/m3SXxHoQ==","layer_level":3},{"id":"8a000b97-af36-4a2c-bbcf-e8afcf3dd344","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Matrix Product State (MPS) Simulator","description":"api-reference-devices-simulators-mps","prompt":"Develop detailed content for the Matrix Product State (MPS) Simulator. Explain the engine implementation focusing on tensor network representation, bond dimension truncation, and entanglement management during circuit execution. Document configuration parameters such as max_bond_dim, compression thresholds, and noise-aware evolution. Illustrate integration with the numerics backend (particularly CuPyNumeric for large-scale simulations) and the quantum library's MPS kernels. Include practical examples from examples-ng/ demonstrating MPS usage in deep circuits and time evolution simulations. Address accuracy vs. performance trade-offs, common convergence issues, and strategies for optimizing tensor contractions using opt-einsum. Highlight use cases where MPS excels over full statevector simulation.","parent_id":"c0aaeb49-cf8e-4379-951b-94612e4ef81f","order":1,"progress_status":"completed","dependent_files":"src/tyxonq/devices/simulators/matrix_product_state/engine.py,src/tyxonq/devices/simulators/driver.py,src/tyxonq/numerics/backends/cupynumeric_backend.py,src/tyxonq/libs/quantum_library/kernels/matrix_product_state.py","gmt_create":"2025-10-10T21:28:52.771511+08:00","gmt_modified":"2025-10-10T23:18:28.627623+08:00","raw_data":"WikiEncrypted:C34GewOyK1SlumqKiPsSg1Q7++qbaPnmH/WOa1nfihrrwd6xau//6WI7STwp2GqkraEdLf7t60xmkOgUj+4fb4H88Fe1HXpeCqTPAF9krKaVG9Dl/vY9EDc+l4bSz7/g57TSL1ew0+YyNCrlBVVitjqv0QaUSnR/rPp37kywaR6rdqogxZXUDu/72/U1YT2zihNf2gZg26XuPwTGUB6by3/q5g4WjkJkfsG53edkVry2BMgj8kbH+HfsF6vubr1+zEM2QgxbN3BTwU5wGfjrRMOUoBLydqlQqlerilPO2Z+2QrXt8/Or6RCXQzPLFKOR/E784+gIXkA5wDaJLZG+dopGhGxEDZ4lhTpo1ssdAv1E/chh8gZQWglCTSncEO2Kybl0GKtqHyAh1s2mYy+ORaD3uT3YuCGD/08Cmr8JEwDZg/y3/Pw6J9wIlGE2/z5/B0F8DsshELVvq+/PypGqqGG1FUKJDBhCona/uGrn/I2jACatP5M5P2jmwVEUgBQd3cCxoD+Ed0SUpPbpYUnMfUPyHgzFNoFqzCOIHwRbyKXVy6y2kaPsjKvjoNfm1mepghZMvXMM05pl/9veN56pR2lgxE5VbLmnuSM0QjtJ0maWejah/jcsy9bKzPdSQqEaVr1FgETAl/XQHO2S/Ba8R/X8ly0VGg5OxV6XPf5x7mEgChwz1PaBpMwQCVhHCd8QVDHPtpZDc1fSrAWgGunn2CVfOHQafYy7VRD9KKGM2lfXy4zDmkHdUz+yIVukujsFQ8k8cmtO8vdORyszbOTXuwIylX40iqhwpxGOJOJ1v/qZe53+LDHiGcacaTdCKPA3fVRSof1glbV0ZQGzsqEQw174N23NVxbpuV6zttfj3Q+dJ11NHGy2fImYXMQDRttK4tu4i+gWqiqpGWyyO5K+Yfei3aLHRnx9kOmSsFhHxXt04HdUsFAT9X0/Oj5jnkaBTsXHSc7YQDW5gUf5abcbuKWFp+SGrnc/AanSQSk74Jb/gOT4nKt+YznLJckimRoNmrdo67D13VGXoJGsl3si5rk/uxDvvAWXFVc7EBmxIA1GS0Fkp3nEeBEo8DT2KGycrsSr5t0jfIf5Mgd03+VDzwGaqUJkyM1zCQGm7AA98Z6nudnqfPLxvNDA6qm4tUf3VqiXzVcnNb9BItB+p0qtQR3cn2O/5eXzIMR2qCDIGwA31yQyy4zYgv23iRE5NL15+dc9s59Rpmrnm55mwfvgbJZfJs+z+wAfPB2MrrmQJ9CfvWsJKCy8buekwgpxngdWAX3cZvaziKT/OL9JRV/sPNVaFafNUMYEFdzt9hGascJklQwNtFwHvzp1IlwJGo88AckZGctifIt7NrvyRjB6a+uFYbUf3GN6EYlndd7oOT37/6Ubs46Cplpp/gG5/cv965HPI652cZPkdQ9Rd5GPufNbW2jPWP7SN9r+2hIpMLhhjkxaIzR82PoB5Ve//Urz78HCxHCg4Wmebg/V0VWcm+aiePkPUJ9LlwX4rS3cnuXrLJ6jRJnE+8LlENU9cqOr6b9k1wzSirqurtkvA6LyG/bdoh7+mQxhg/TjuT2xvzbMs3UR/WocTcsem2kbQ2zUUxd3SPC6d/KiiNwNluOBMI3tUupRqNHyR5ebdSLDoPQPPCft766cN18SxJmxipu6/I2HJrmiKhg8zB1kMDQpeiCc9zICna6IoDL8d3wI128yBHI1kl7CgCnulH0EEUx+7vblAMPrN0UcOOwUJD8RE6QJ+6woOwo82UXlQpObYcrC2cNaMxk6e9cePJTWtX6mN94Xg0JLNTCj5HUiCKDfLeGM5JTjKLGkSCZRUKXmieige0WAVh8TGOSQIc7s7SCE","layer_level":3},{"id":"53234648-0ccb-4afc-86fe-b008790dd829","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"NumericBackend Class Proxy","description":"numerics-api-numeric-backend-proxy","prompt":"Develop detailed content for the NumericBackend class, which serves as a class-level proxy providing global access to the active numerical backend without requiring instantiation. Explain how it uses class properties and methods to delegate calls to the currently configured backend via get_backend(). Document each exposed method (e.g., matmul, einsum, svd, normal) and dtype constant (float64, complex128) and their underlying delegation mechanism. Illustrate usage patterns for tensor creation, mathematical operations, and autodiff functions. Highlight advanced features like vmap, jit, and value_and_grad wrappers that provide optional backend-specific optimizations. Provide practical examples demonstrating how users interact with this interface in simulators, postprocessing, and gradient computation workflows. Address error handling for missing optional features and performance implications of the proxy pattern.","parent_id":"e8bd0624-be4d-47ee-a6bb-9f7c7bfb08c8","order":1,"progress_status":"completed","dependent_files":"src/tyxonq/numerics/__init__.py","gmt_create":"2025-10-10T21:28:55.813497+08:00","gmt_modified":"2025-10-10T23:19:21.86516+08:00","raw_data":"WikiEncrypted:eXTykzkDgCICZh19Bs/J2ISY+ONMvNwvMf0lNiiuYkWjZE3cEVPQ6KMsnu4fKFJlhiiPwGxMzqo4XN28GCzn8R3eRevXj9BsVhCYKL9y/RAtR2ytOkXBK6neRWRih75zxwkZCExIaLTkElFWP6RrOElgTcLaj/TaZ/w3QHysSnvZYqV+rRYGkeyqKEuZTPZo7seT1OXiDneWx2e8qc4zS8+84F2f4q2brZRLYMaFb1zjCUXCQEH2fYS6urDUiOeGBh+ApcQHRLSZ/M/AiRx8n9i07z9NMUIKvIcvXnSVuOIfVcs/ZD/KnWUlEg0D54ZHpvhrFqzRkuh59dhkWVibST1B+3+tO8UtmQzk32vRFrYOVzQaPQKhKV4MbGf7lSIg1DKZiFu9755gkrp4el/zq0FSiTfu90knaWY/3wyCSVfImq+8B5SehcOYftgYXwdMNUB1c7TpRPbZoxRnIh3bXe25xfv38eoN015m5c6RR8gqurjORjcL8ffTovd9NChLQEA9NV1Rdq+hPkfRhiv0nGq6KOlTM8QqwoHdZxBn8BeLJxnoBZVGpgEr5vb4Uto4sGPg4T9cYA6YawrqFP9T12ZI7V26E9EpmVT2AwzOtpjR8NodbHQ2KSnQZp7puHSvsEubwgKAHRvomK/XNy3p/HxMoVhGi2sJu/hj6ff/ljpbDhBoglGp3bypcgpxD9CdE/dcGHT1HowONev5h45WHax19kyY6H9g7kYYym+2+uG/RB07A99co8RtlaFlSImVV2Z8FAa9ZmWybQC5M6YcW5PjEqpX5KhByDSvBYokbKO6azo+F9T6HNqrucQ1Z4F1kMENvQPwqvzHgn1AozYm3gXel1FanaAHFLwwCR73sHEMyrKymoANw4Q3lKPj1IEawPdF8PqqEkFAwZyaUymFCdBoE8+MBUXcVqxCaUauYNE28Yo5DBFEHVDsp95kwrc+RvhCic2n8u+NlX8uWVGs1tlg93G/XhlFqJRcpjskhUIglT1VxkQIZ8dcmukP5hw9hy2N7dM9uQJ2zJbkzW4FMa3ugwozQeDL31/GXG3jfH1mQm+ze68xxLpsdJjD0hPEf8qfUfWK876duAs8a8ZrrtBgNQwt2QuapRqrLjWq4WqC+hvthDs6KoMyF+9HIFVp+chG4//vGUTQ/VTaiSvfB4KCMhWXYX38T5F7DgcdO9Xk6weRF1Guj0C7PQw4Ew36fAAQtMYcyB7kjNsG1yxqIDxYqioNBr6WSqsPduVyikrkOr2R9lQ0lb/t5RwEPPDYIvc57Kjlbu9Zj+u84HHUfABu1iJuyKzKhvTCO7Jxr6MWAH9uZ5Apa42HLnzUg6F6vN1r8vSwFdSe2xbHMbM/P1HSwOJtLL62ex3NbxT9giRAa6qtpovOf4uVN+erSPpvk8YYTW24OYkjHEj15rRlxCSrwvLZUwotfOTEzrCuScZhNTk9KaeRRtVwWdxMqci0M/+e9A/gx1BdK8nyOmSBxlw/4o1ZDZgILirfbab1/+MqVBIcQYsw29sJDBKYhL5ie1/P4jtuXS1nFC8M6m7aPbpVKTF8/BLUyw4f2422Vuy3m64SLOXP9HwRqfZDBDfK","layer_level":3},{"id":"9c7b9044-0961-4a87-b8a1-b6c1279526b4","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Dynamics Module","description":"api-reference-quantum-library-dynamics","prompt":"Create comprehensive API documentation for the dynamics.py module in TyxonQ's Quantum Library. Detail the PauliSumCOO class for sparse Hamiltonian representation and its to_dense/to_coo methods. Document the evolve_state function for time evolution via ODE integration, including support for time-dependent Hamiltonians and fixed-step Euler integration. Explain the expectation function for computing ⟨ψ|H|ψ⟩ with dense operators. Cover backend compatibility and array type handling via the ArrayBackend protocol. Include usage examples from examples/timeevolution_trotter.py demonstrating Trotter-based evolution and VQE workflows. Address numerical stability, step size selection, and performance trade-offs for different system sizes.","parent_id":"f5c3c08f-a7e9-42e2-8c07-6ddb5fb47bf5","order":1,"progress_status":"completed","dependent_files":"src/tyxonq/libs/quantum_library/dynamics.py","gmt_create":"2025-10-10T21:29:24.280988+08:00","gmt_modified":"2025-10-10T23:19:29.973457+08:00","raw_data":"WikiEncrypted:C34GewOyK1SlumqKiPsSgygb6tZbr39HfU/NYGshj5WggQUZUpkNChAUMN5WPtnmDeKudikv3JKYRd/G/lxguAjVnqmaj38nkKY6b1QfkhUxr7MWGNXAOOUw2GVpsvgUov9w1M7OGwE1Z8tC8xUACyl9JKjtwA4TZ5whl3Z3H50cHkBeMvDjMN70jijkXqZTcK4YUNTSjpODdIqNWn7SNQ4j1l0upDJFkZWH7ooXy5iY7vVb5BphNOVYUflrL6b4HWFrduhiz955mKQkNGttcg1ls0Kh4FPbGOzF+KUULNBu1aG4fAZ0Vcwsq3egRTdRyT4WhPdMCb+W/aoj18Mdoa8LqGdMOG5JAGsjt8yziXWEIhBS6297G1dQUc3aYN80OoM/hN4xVn/noVt8GlNPsUl6z7r6GGfaCNxwmg82H/t+LRTsijkE6JC6a+3WKeuYu6EVE9RnCZloZnmcNtwWG0lVBuk0Gu8EwI6bJW9iPNYKuzLta6Hnq8fioxLMy72PY+lfzGXxkKNRK7/v1JXodQK7KaLkbkpNTwnlJ+7w5nVeekzPzZh4otqOA27MLi59Dq7juyyJNkIP7A15ims3eyX6i0ZGIQbjiRiSZjvTVjIfUWDXscF25tL3bZNO6OEtcrLvsiIvucH2wOn3/YpqYm/Fihq74RRKmydcCmfa0oZQ4+qWKBU/uHxVXMkoPOP/9qEU8a8xL18iJ9NKL6Vz/ni7aCev5d5/GeFAPwKKckSy6ARZtLT66WYoHtx5/Rsj0VmpBl/i1DSbXSq36t2TBBpww+ceGgGjweyZ4azMJDPA7tufaoCv1EBe90N1NzfWyM1dJkg9zZM8WvY+V0/i7A7P0fN19kTHbEPi3s+kxjgQH257++jZDzy9aELaXJqjjq6RMWGoZR2Z6YKqHKmyJgBPXBsESn8ICXi2g9pi0rhEKYBa87cIp6XuTt/O54WiXkeSdnLoV6ytoN9Xx/BKk6eGlX9vOKgKGqThw/piFdhCHUUNbyoyyhhWSGcFju+WbQEo1ZKNZ9FLsuGGjQrmjblnlEOZD05y2L8eH9/Xa3rRm3DSTavJryrNTt+GhoxXl7lNM6/EJ7kIjyQyZH4tPU4go5o/3Y2NJXWkMwNYKuZEKmpXo9suz3PCwCzIR9Penp34YA+CtSXreq0xK1Vx5p+Pci29xLanTloBV6LYqXphHL9/WjypGsbnDqDb/fNED/UIVLgo0pe6L19eufSRjbFs4bv6tUgb3rCgjIepx710/KcmjA1F1CkiKwfM8yoNT7DJ3iueIWiAqVUehZrtGQEUE6SzPkcgpXvF3DCubnCU2M6HtkEnX0wM15b/xvl9GkUqgESlYwbqpO3b2KzsT7PuZEQq9uO2/+LnORsQk1JgLElVWHEI62APMPmNoCCeZ2mpTwcB8lQnoy1kgz4g4P0nOGHn8q/gbCk4otZIL/TaKC1MjrzERn9ecE54ks+A5Ps9qTTDhmbvbSgpcoJHFFSqig8KstH1MlNaVLUB/USrhRk/rQa0Kie3hEAxV7SYMyhKM7lXQb481WzDr6H669ycohvfxSopipn9p05p+m9wl5DIzNwchmnHltI1G4xV","layer_level":3},{"id":"260885a2-4c19-4586-a52b-dcb3a902d972","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Operator and Basis Encoding","description":"hamiltonian-encoding-operator-encoding","prompt":"Develop detailed documentation for the operator and basis encoding utilities in TyxonQ. Explain the qubit_encode_op and qubit_encode_op_grouped functions for transforming fermionic/bosonic operators into qubit operators using various encoding schemes. Document the qubit_encode_basis function for basis transformation and its integration with renormalizer models. Detail the transform_op family of functions that handle direct, unary, binary, and gray encoding for bosonic operators. Include information about the DOF_SALT mechanism for degree-of-freedom naming. Provide examples of how get_init_circuit generates initialization circuits from classical states and how get_subspace_idx handles state subspace mapping. Explain the dependency on renormalizer library and error handling for unsupported basis types.","parent_id":"5cbeda6b-e47e-49ae-925c-755196501fc0","order":1,"progress_status":"completed","dependent_files":"src/tyxonq/libs/hamiltonian_encoding/operator_encoding.py","gmt_create":"2025-10-10T21:29:39.422075+08:00","gmt_modified":"2025-10-10T23:19:59.23107+08:00","raw_data":"WikiEncrypted:5f2I+3eR0GPEzObW9eh9Rov+RAvEQBHpxBXJiMJF0tcCJBu9wK944WlznPMZPa8odZOpRQTJoIhCCT/NZbXIYiqr2sTcL1YyRHNjmluB/dmPoGcSYWlQ9Ko4MzMtWsPyFUsqHal4QwuKOGWQAxWaQz7YakpmAjNAVLjI+zOgWfGCaYbvSnfwcN60UkodNHl38DPZy9t1G4JJFo1sBq3jCcvg5fNOVb9No/H6mxkS+EDnvrbSV7uYx/JzDKFaK1U9s1mFUIIuhtROsb+8pJ+sl5KQN0SEMyeDABxd0HUUHdneTQ65BzUgeis+kIgDPkfJ1EF+AYY6yTgkY2ivQujjePoE2Dm/UnKAaRXf79NJ9bBtSm88K0HBOhnf889GkyIE6XMN+syMhIB/q4QzEskLuSpTpIeUYeCmCDTz3A1iANWPX6BxnZhYFXWZSDaRQTIJLUw7MuV401q9ywsuGHjOG1Jf7tTWwTvqxOjb1UpL/EGqPzC8jE6vw7MCYI7iQhHCP5ooeo4r5cjRpEzb8jtVLTrxgjdXhwhL5ZGBZWf+n9HeqD4qAzkUEtGow4txnuT4qF7QurKUFPoBM8zph6re4H78221bdiasBzyIzYdymbqclioyNt7RHhH5xFEuN83FdjuXzhghc4AJeL2pX7DEisN7yI95kTKc2Msc7XuXNdtQs3Y+FOtfYkCz4En39KEx6MXbp4y4RSqd/IjWwDsYMoEhGrwntDGohb12kc0f0JdIGFSrkaXZ7lrScJwc4jpg5YKuBAxDfJnir4kv8ihQwSfZRflhL956jGray9rswsrNeydwGKnwTmyrH5P1xoaSe69sk2TKbXDcN7+DFo1eajd46a34wHtQMhfnPt9Ur5sjm4Sj8kqgZFZD7V0p73ydegfODH5huGbU8299J5bYgOtW7QLF3hvMX/d/1A/q1v3If3X6u43XPpGNMDXpMSv4DoAzaD1Q/20vRGHGeJXSHzXqtyCW1FEiQMHquLrpwiGoswlKS/cxOnYgrJlUwF2aCieaVkBmU+OuxH6oWouoe7wBj9IGgnPcVDyaUXJpVrfWYURPmToKv/dXX5nyiW1yNPlWrYXBQ95mdbyN+qB8W/lyMCGthBFuGCGkZbSZt+CLXDa+WFcD4Um+3CUtkID9pedo/cQQQJTO06Xm1KRhmYTc6wMnDRNf26JxwBtMaffG7vgQLh8b7eRF05fAo0H5lr9DdPFCTLliwmoiEhGejDaW7ZWRFc90lbXWOxQJG7tSc8QqmbRmRDpwg/1o+NOawrpRjgmlVTh+0TPRX1tUsIVgzwfUv4tW1Tg2Dzs7o/TXdk2vo4mKHfCNwH3doIDVp4p8KY4CA0LNabUWKmpR7D03EXUQrnuKD8CcD2SKEvntrH3A5Ynz7mMNgB0FOnnsYOw7h35gEpjfdfz6vJAV9dcCgT6yDr3P4pOCm6+DJiwUfY/AaeOUqXjwii8aT+mSX0PMXBLnnRgnIvzJEL5UkLIgjjtEMKQ8NMS/dPQdAWUfM+0v4zwhViIh7nQPmTAOLEh2Tqowy8Yi2cHyLDJPqaKydm9WTaBcIjrOcDv0ucjjYLJ+GCkCsQtHxMDN39M9VyiY8wVPKZwzexgiIGbhiy6RkuhTgxX2bPt+K170McAYwEvkJgnMss/CsTpWqzDHTbixdkCzLevg9S/CZycXdvVyXeqJuISuSPJ3oYHYBz39Zw8D/pLUUkRoAJp6wH10","layer_level":3},{"id":"1466249d-33e2-43fe-b944-1d0b3df53481","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"QAOA and Ising Circuits","description":"api-reference-circuits-library-qaoa","prompt":"Develop detailed API documentation for QAOA and Ising model circuit templates. Document the `qaoa_ising` function parameters including `num_qubits`, `nlayers`, `pauli_z_terms`, `weights`, and `params` for circuit construction. Explain the cost layer implementation using RZ and RZZ gates for single and two-qubit Z terms, and the mixer layer options (X, XY, ZZ) with corresponding RX, RXX/RYX, and RZZ gate implementations. Detail the `full_coupling` parameter for complete mixer connectivity versus linear coupling patterns. Describe the circuit compilation requirements for decomposing RZZ/RXX/RYX gates into native CX-RZ sequences. Provide usage examples from simple_qaoa.py showing MaxCut problem formulation, and address configuration options for different problem Hamiltonians. Include validation rules for Pauli term structure and parameter count requirements.","parent_id":"d5c1aef1-5986-4ca2-bba8-ba24a030df89","order":1,"progress_status":"completed","dependent_files":"src/tyxonq/libs/circuits_library/qaoa_ising.py,examples/simple_qaoa.py,examples/cloud_api_task_qaoa.py","gmt_create":"2025-10-10T21:29:43.360943+08:00","gmt_modified":"2025-10-10T23:20:30.215164+08:00","raw_data":"WikiEncrypted:C34GewOyK1SlumqKiPsSgwvphYGzcvsk3C9IAaxg2TNWUppMdyXUnIRy4MsKxSY8moah2VEN86b3mXHZCGoxdcJaGTJtvZVOl/rPdydWWlIs0Md1D/0euTQuXdg9BuzmXbnWNFVKsgMV8AOVgt3WJHC89mjQlxThMz115FJ9VgAps6ai9zIGxB7pHuCHU6NQYnCfkDcel/HAE3VP+HbkaRz7WZ2DEfIeTk6ai9KryceJum+HvwGxak5txxGGvSoxTEvnZEMzbNUdCAjb4MwSteFLVnapOGmnlA98z9Fb6LAWgeSnh6nEP/FwMiT/Aj9RH8xsIyUmArRsT2EgiktlIyJwI/gn1gICIuVMa4dh7hjN1tekZYiGrJczvaxoCbwCXEl5BkRifLGYoZHI7ftjxymvPwPT1TnRGHRJVwHmauaKhOeAJPBO4yJMpErzAbAWzYUNpa2UdH76dlAnkNyz8mkgL7uYAm9831ztYjw+Z2jMcasw3s+/Hn8cf1mSZodmoObeUwp7tXJE/mvb01YNHtIHmo9IN76scvHPFNF+8XK/hZH6Ekuot17xemd47b0E5LimaoLOhADqEpoLE+YmZux3s/N+pre9OXbWHt4LWsZ1m1CqBMqiIv51qdufutTPk/ytjUXm7yoO6gX8cqdviOM3Ipgv6kzVngDJWqIGJV4nsCyRWpZPk6skrTGfIibuzPkOostJiJGb4k1anWF77nB9na7jFe1rY5JFdU6sHPwsSUwtYRk5oNePJ+tj0xDk0TrJEivBpYjEEEpSSm8PA6zyDSaxD34GnYIYMer66EJ/mg2p2COIlUEnECN/6sdqaw1OvXG8weIE+eN+xLOl4C+QDq4KIwx8wV+N5vYK8O2qdWp8VsNX1fuWvRUIZMZRjBk/Z4Hto05IUvqhZNLASwtr2BtgQ24lOHHUbBY3o+9XHla5PK2012u7A9RzaHWfDHw/XFGHWvFL+jlfZkHaVghZIlVTf/GE7Zqrd9OzQw9dHIuy1vsx8TBbNpn53W1zMbJ3tw8hyia9tmwvsDYbqtN7q8hio/UlgyXP2PJqBk6LwCP2tkb1hMtm4JiliV6uQvI7LVSgFpe6U8zNWIjdZMx2g4Lp4ZRp7NMqmfra3Lwtigv4jMdIv/6jr34UAd46pUIpFHOW6eXTQVhcW2QUpOGjybwOhDLmzmf+6rLXtetvSyxDQ/zRDysvMuBKHpDk0qLFXbqWUK2TtUtXr7XViEm2R6HMjBg/WFyiaMsCPOoLTcyHqDYAVClxvM6WrJWFabjBygDLVAw9cohM8u5JH4SeMVW8krwoXOQ8Uu8n1+CqJ4/tQ0Cq0PqJHvgagBc/WBXOzOhlhZSTdqW+dinUXGWRas8t+RydNV1ULWekzb26/aKFz1nF6NffX3fDQC5EdPW0Z4WRzue2dzI/AgHzreyyzHr+Vm0K56f4oPmbaD807LRUqJhRDBWfqlBnxWJ0UfJhxe3cPOJEUTM67Qd93WFKXpXFQoJt5FXae8Dgc46VWXgZJyZdzaVzN0AZwnG41Vy99eQyECBMPoAsxTO7g74OTGdHoehI4kgyvgm9OC11n0z0+455zih8LAXhrpqphn8O3lmvBpEZwWYwUDcPpXt151D0K7KemgC2tu2heCkmxKz18+2g9vXy43NedWXpkUTIRYbM/kymI43myAZEleySoT0mm6KmO0jQOlLyCt23rNr2+GX1PFyXO1MZpN04","layer_level":3},{"id":"f25b89b0-98c1-4925-9a2c-1558f866e1c9","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Optimizer Interop Layer","description":"optimizer-api-interop","prompt":"Develop detailed content for the optimizer interop module that enables integration between TyxonQ and external optimization frameworks such as PyTorch and SciPy. Explain how the interop layer translates TyxonQ's gradient computation and parameter updates into formats compatible with torch.optim.Adam, scipy.optimize.minimize, and similar optimizers. Document the adapter interfaces, gradient handling mechanisms, and parameter synchronization protocols. Include concrete examples from vqe_noisyopt.py where torch.optim.Adam is used in conjunction with TyxonQ's numeric backend, showing how autograd gradients are extracted and applied. Detail configuration options for different external optimizers, error handling strategies for mismatched tensor shapes or dtypes, and performance implications of frequent optimizer state transfers. Provide best practices for hybrid quantum-classical training loops and debugging tips for integration issues.","parent_id":"14432827-d5a5-4774-b749-76056af792a2","order":1,"progress_status":"completed","dependent_files":"src/tyxonq/libs/optimizer/interop.py,src/tyxonq/libs/optimizer/__init__.py,examples/vqe_noisyopt.py,examples/vqe_shot_noise.py","gmt_create":"2025-10-10T21:29:46.524142+08:00","gmt_modified":"2025-10-10T23:21:20.113161+08:00","raw_data":"WikiEncrypted:mQTetUyqAd1osAW1jpeHl0RPJym3ntairb0JnIbV+pZrVCuuWQFL7sF0/jMNtuvGV0zHniboQI8q6oF4GiV9zHHH5zax++OETVIfhdR70ieQoFjsjpblABj3Wtcgpwa7douxZ1oQKKJ3j0NCGql5GwkcqoUzAu2II9dOa1ZqMz1d3LRhi2kHG7uyoZJfDgEdz/VtyUiETLP/Aqs0X3F7xbFesKOE890YoxWACRINoxtIp4qMh9c2YtD1XrvNrSoXwc/gkNJivjSb1UXb5Cp8r9w+SCD9kcUUoDdfHFjt4bnZk3ikPWlCiaIBs/KDnSWbLsSDfYmt+BCyXDPXR1XhmEfCXFUYB8+M0G+j6Srw+IHDixKpiMB8cqtVs+o+hyFf+DPUJMQjCCYfXf0eSZIx5OldlyMl9rbnnjGdS4ToMnSMBM1GIu7XS6BikiYuIw+esNxQvA1sCpyb14Dt8tMvEpd7wkGLKOASv0UPvtQLTPy9oHzuzldwnL1tglJqTLcuLZfK2VmqvG9N9eAsrKXpFJG+6yj5Ol06DfUoT/mXK/Q3KEG/66Z5mar9UY5JGy1T0hK7glK1vmBHSAElE9FmOVXRaUF85kFjLZrZH8x2lv+FuMJij/jdDux7aUmVc3SXHEPB3meBi+7l2ylgYhQIMb7d3njWCLvbTtF9B3yQKDU9KrPWGVZPkxIxocZtx3uQYcwrF2U8lt4L1CT4WDugfUnHV2+4GOAXduWZV8I/f1ptJUJDy3BjeVfpU6sPtqsPXubkOspzKn2LpqzK3ee3qxDljgzrEv48TdpFT//sDAXYz3BUA/ExuruyZJRZ9m++elnHecY57X8eMh+Ldr9YMN4jXnmBP0cpOPr+TeniE+Ja/39/9qp9OXOvLtQ3NnkGdVKBHQ5G+C8WGl1CUzJ5LeLxEvWDZik9qbW2UYNajcKiMxfp8OFiMccGvjg2VR+8zSjohPClMMWV8E9OlpvuJb5Ww2U86wmdLiPLiQ7U8pNo24GgSnJ3W7zJBE03ady8eFzQrjMshPe4HMbpPvl4AhjZ0aCHTeUQ2bYbcEItLy4CpOk5ces31Z7CeOrO6WAjR43qvrT+AjoxEnATT76Q4BrMxHqIA0oY9U+o6w4voCjvJxIRujT++RaizTyAUNTgvIzT10kkLrN4RQ+tSVnTmYil8rFo2Gp31IaqLabSttUjqNCwQ888/8YfXYEBfxEKPBJxvmLD1uYR6xwH7yaTrb1k7jw/p0RGNpHyB8AOHYeBeewnqnWNKo/9jzO1p36G76o9HJodknkP/8whbp86lQBRzUCSHfI8FtQl8+7M+lyBFkF9iA53DTUVrpNtoJJKu0N5A3efe7mzu/WZDirsXMisFkwJ74XS8KiD84CbgKz5MUJWtuTs5xa/ZLCYXfGsow2YAyzV0sT2HmhDdc626YuXxl07XSIE1tbNSuA27CxCMfrkWpJBqI+t7XNlTGmn0v2XQD7llGncm2uknmzSUx3rHoX8dBPlslLNLyU2NFOjwMAphkIqKZomWe1K+SX/DVL+xQ30nmspz0zTwYLNSfqC6hBIx44VHx+3V54wwvFDmHrZcpZTliPOt0S1510Kuci3cxtMiclqIF8CPs8a+X+7NMl7EkW5nwiNKTiTW089X0JgEN+OdBLrw967F9QsdzMNwtyeVLdcw/OdAlsDSVcmDiSItzP0FgHXW04aUdODh08BoZfEBBZlp6JvlHaodiIfOMW3oZXjJYPjTMLKSttHP+p6TdY667SH1sckd/+lBW7TNHmxHgGQUDuftS3Dx1LrQuVNHpL6wO2H3mmIeaNBXvnxCTAfzXxElQmzKEF9iO636hZ1bzk+xR7az0Sle8LgS1H2bxZnWKagsphcpsyyiYw/HLnBH+WB/2WptlcB09+2ve2HiLqKktqtdj20","layer_level":3},{"id":"113cdd2a-565e-4e6e-9dca-5a978489b1a7","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Numeric Runtimes","description":"numeric-runtimes","prompt":"Develop detailed content for the numeric runtime implementations in TyxonQ's quantum chemistry applications. Explain the UCCNumericRuntime and HEANumericRuntime classes that provide exact numerical evaluation of quantum chemistry problems using statevector simulations. Document the internal state preparation methods (_state, _civector) and energy calculation techniques that leverage full wavefunction access for precise results. Detail the support for different numeric engines (statevector, civector, mps, pyscf) and their respective trade-offs in memory usage and computational complexity. Describe the unified interface between different numeric engines and how they integrate with the core framework's numerics backend. Provide examples showing configuration with various initial states, excitation operators, and Hamiltonian representations. Address numerical stability considerations, performance characteristics, and scenarios where numeric runtimes are ideal for algorithm development and validation.","parent_id":"257c9ab1-368f-4c86-a241-63baba469a92","order":1,"progress_status":"completed","dependent_files":"src/tyxonq/applications/chem/runtimes/ucc_numeric_runtime.py,src/tyxonq/applications/chem/runtimes/hea_numeric_runtime.py","gmt_create":"2025-10-10T21:30:01.455988+08:00","gmt_modified":"2025-10-10T23:21:34.165476+08:00","raw_data":"WikiEncrypted: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","layer_level":3},{"id":"8b9333be-5061-408e-be44-3230857a89f4","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"VQE Physics Benchmarks: TFIM Spin System Simulation","description":"vqe-physics-benchmarks","prompt":"Develop detailed content for the VQE benchmark on the Transverse Field Ising Model (TFIM) spin system in vqetfim_benchmark.py. Document the construction of the 1D spin chain Hamiltonian with periodic boundary conditions and variable system size. Explain the RXX-RZ ansatz design, including two-qubit XX interactions and single-qubit Z rotations, and its suitability for capturing quantum phase transitions. Detail the measurement strategy for evaluating Pauli string expectations and the use of shot-based sampling with statistical error estimation. Cover the benchmarking methodology that isolates staging overhead (circuit compilation, lightcone simplification) from execution time (simulator runtime, gradient evaluation). Analyze computational complexity in terms of circuit depth scaling with system size and the impact of entanglement structure on convergence speed. Discuss memory requirements for statevector simulation and potential mitigation via MPS or stochastic methods. Provide guidance on adapting this benchmark for near-term hardware constraints and extrapolating performance to larger spin systems.","parent_id":"c615a941-7e0d-4ba3-b2a7-99078c612d02","order":1,"progress_status":"completed","dependent_files":"examples/vqetfim_benchmark.py","gmt_create":"2025-10-10T21:30:06.971358+08:00","gmt_modified":"2025-10-10T23:42:26.175106+08:00","raw_data":"WikiEncrypted:F3wJo3Gig7xDhsU25O+Z1Lkagdnd4eGsnykdN4SqRDRhR2jdIb8exsFqZLN53/fYIAkf/Z0RiZT/ESxg5n5jOA2LjHKP20HJOqtLdZT7iutF/H+rbwLlGuO/pl2/XiwqlM7ndUFPt3mfNVAdYkI5CsObCU09qYhneW4L+66EIx70Q7GX0JnMXbSatvPnb8bOrYDrHP5+Ef6yNEj7ts7CQ6qELMumfcenmM+Nfa/02g7kIJBVpHMpaJTKrqs4G/ARc8YgHMVcQvmFHyiek/ziLxMM2xtNDoIMXNtFm7n5g5J2X4XtwV+WKkytG8pZI18uQL10g6LabFfWKWtb5J2k8ewxcQYVqddqcpuet0uD02wBVUX6pQMhRiiTL+TX+h64P9j2qhMpbfARfm4Z2fnbNAvp4oBlwavZKfYD4wGLbr9Y/R6OcejAVJ0ozMq9Xyw7q79wDnBPU+3lFbMlafzvv7Q/fDaWbr2LLLHFeBi6DJucm8zE35VjK6c1l/TOuHLriq6v4oYk7Otd9EtWYzxQ83D2L/Xz2oiYeeQzmFLAyuhjmxUNTMbug8r9v2bvB9M2N02/z3LP1BsLE8V8aN5W53o+q2PnfBMRiRr3b+DxyskmU58RfSmsK541FaQTxvfZc/spzYBZdr7fgOnJXg85w6X7N/clh5VCTSnYoGzhZ6m1Xkuos0Il1CX9XgkJ0abknBA2wIC8ONXgdtIqTn2tAN/vlVFpxc8qt9UpTJcePaOjaAWckbsQGyiAQI2qtJU53wb5mhpAE75Ljw+m+ssasT8UH4jboSlwOw5m9qnmyuZcJneJwaQn7z1OGAPJj3QyFDo6InJZndiqA8ACibXjNH719fuSMOBXii6cIe72p3XiS/BO3etxQ+fbpd2mq1NJgiA+OQI7BWCj2hGaYalb2NoB6nU9Qg8msccurwWNDSkZ9+scg/b1BM6mKYucyUsZ30emutR/brJvmRniG9TLeNvo/9UBDywbmwAEmatxsMCKTqN2cLSorWtv6V27WPFlAZb9USIE84eR1QE+IaR7wPp1FQKdGFgAgXcXws2gEozzNSHaSCPB/iqTJBvS/U6QfwBELT6MCqlOwbOKP4ZayClQ6z4D5BA3dEBo1dO77aU9cc1vU1HEG+vqS4JYpFmTTy/jW4jER8YH2z0Y01Fl+iSG+4qUI9gK2YUd4hdrzEFA9XbhIUtvhr9ObFmvqIoMQxRH9vunHHLtG7fBIhNG0ct9u6jU+aeTOyVTYJmwu1JE5N46UPby/ARxEqRMeqsKSlXYzqLFwLebfN40s5Im7ogPAqtqEmviguRjMKhl4ee0b2xjvkzRYPkle00o619mBZ3Qa2ohPSDkuM6tlSeXGrPa+7GsqpLpRQgXSnhpDtQ3mNH6O7l0hZW3SWt/UD3JthX7oWXre3hq7MWSYiI6cSp+xk21ri05jdWHMflssunPCxrlPihW/B1nue1uibTTNgFcZsq77GLPkZBvTnVzNrWMie5/0kCdZk0Jwzw8ikIYxnEB4oGwA9vsNAhriRCS/WK+ALrFZ5Iofv/h7+kAcDcezsrQViuspdihCMibY4YA25DSyGB5AqZP4EDfZ+fk1lglmc6tZwiK5s2Q5ceTVOZCPgVmjjXqxaSwkGySPsrFTO7COHF6ppZTlVP705GChhkcASwhRZGsY6MIfST58BTYC3/z6oJ9DNk5ZM7wJjnQH5NA6dEbfOcddcKLYp8Pk7FOr0SzRgZmk6K8Q35UKybEfzv2aQoqylS3MhY0+fCEzhAFMPK19JOUbW39i1lTLTsegiZnx59vtDAxXdjjvfLATjDFTYxiEJ+A/RMu3ENCq0lyCIsPJjwUuBVEIzHXCTD6OeKSrRlPMJDorUA0WC3sRTxF+5EOYDTTk/SGFXE=","layer_level":4},{"id":"81e75dde-7274-43b5-ac93-1cf940239076","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Task Details Retrieval","description":"cloud-api-task-details","prompt":"Develop detailed documentation for the task details retrieval functionality (/api/v1/tasks/detail) in TyxonQ Cloud API. Cover the get_task_details function parameters including task identifier, optional token, wait flag (default False), poll_interval (default 2.0s), and timeout (default 60.0s). Explain how the function delegates to devices.base.get_task_details and supports asynchronous polling for task completion. Document the full response structure including execution timestamps, quantum circuit metrics (gate count, depth), device information, job status, and measurement results. Use examples from examples/cloud_api_task.py to demonstrate polling patterns and error handling. Address common issues such as timeout management, handling non-existent tasks, and interpreting status codes. Include performance considerations for polling frequency and guidance on using wait=True for synchronous workflows versus manual polling for batch operations.","parent_id":"b26fd035-234a-4623-b465-c72f588078d7","order":1,"progress_status":"completed","dependent_files":"src/tyxonq/cloud/api.py,examples/cloud_api_task.py,docs/tyxonq_cloud_api.md","gmt_create":"2025-10-10T21:30:07.282727+08:00","gmt_modified":"2025-10-10T23:22:09.025846+08:00","raw_data":"WikiEncrypted:42GucIVlAI9L6q+fifwcxXsU1bjMmaSJyha9E/RwPVAe5/AL4XpRtpna5X/VnaNEhj7dBROkyOTFPzvOLoiDceiJWqQZFNiJLSsPTjWf8/OW/qh7IDppowZLTZmcr47qNW5NMTQGyLN/2tPD3oktfY85H3pd13qoPyCW5EIUDp42PZP7CF8BiyySHA7Xn/Bdu1gVCa1606omNXu3V0jSpbO0124+ai18S6fqpzsbJeSEM4iH8N+70OPm1ZqiXPMVtJbhx1eqVJZyWBADnu4kd7e/d41zPzXp4c7IV6/WiO9jfxfYQMP/5PKzbaUkcTKDvyzuzKXyKv+ZDrf629jhn5pVcaaQr/hYkDzfJW1xRH90azjFGBnurQMtQ3W5MICNAF9ejBDdSzw/N7hnzhE4vwX7DL36pa+GZXYuvPoKs7BGz8lxTCs9pX8e+ZlSN5MAoJHjgqwANx2/+WDd3KQK/gbx7wQckm5nccvGtlQiC1+7q4YN33jWehNCn27CFShXG9tQ2vLC3etrpTygzAuZWMKqm1xiyDoSTg9//+xV5G+HQoUcd4f7ZaAKN3vsW+PvBV78fSV5Rpla70Nh81LMjla7vZ4rXYH11vXyxNTcEe+7fmxVlVy1veflPVTp14SQ1/AkJRKl1CHbzMh/5Rh5VFYX+zgzl+6quCnfd85eBKs0OZVd8fk5PN3NtJOUlPTc/ZtY8qG6ySDlFJhJZGDA3YELykMRZjFmiMps31uGiTrHT2i00zOqtmycPahUKgZ2I4tsFYZ+oUdsO5rjMQKW8eCANJFuWMDvWs57Egxs9t3U67RlmgHQpIoFzJltYSanwOVAqG+CinaochlH6qS2nqGPMVl67MNDXO2bZwsu1LK8tIuD1gxebDGvlj0rmJegfgWurHBazFsDFI9TyK1CF03L1R0d/ibisnTlYowXbgL/GbnOSLtMZbsfE0g4jd+ckuu96LASgntvXuWHwTq56oZ58UlhAi7jNv7CwCLBDAfavkycYJG7vqA017Y5tqUn2BUVxi2KWNZ6Q+ds9OiBpIgEcPTBXU67+sINcW5QxtP6e8mYJPzXim/fpeNxiIS/UKOALNDaMHMweKTUvdIdwpBk4GDyI46EAJnb5DHjFeNy0tzRe6Q4ZQ9DbyQbQ1VCA9Nd80xNtv4GEoDsLvqOpmjOAn2dyiuc0LPYUaNy8OxOKqN3KiIjxN/wLY7LEPjeCsYgPXgix/uVzjYPYWG8tEi9WW1Qi+yOqwEr7ITJgsWrxmmNuzsor/heGgLXvdIMqneFWfnWY4otFgTibT/lvbw7LfaeT59rntjmr7zALdB2J2GJ/o/NqLt2qvWvCPEoQz9qHLw8wCBXQ2I3/WbMZhc3wzX3KoFQtbWS/MX76OsltoKr2NHLABdQdtVpIBAQND2zcNXI2i+J1ja4RK3BS8YNN6HJu8c1je/sWpVFW88Ocz10uhQRd5Jc7os+S38mC/9ELo6wwufeshkguX8SZFNnyLamvHv4HyGQDcvx9H77hxMR6CQ9UKnHfvlBZbAu3/g2OVei+YuKDRVqWrz1xEU3EOVWC29dWqJLuY/fXL0u5ZLybknOXf1dF5kx4sufKU9NMAq0pJLUX5BT1OxLg8z3tb8LkqR/bYNp/Y9yiWWzTB81hvZc1OGEOyQHjSKJXrvnlkHqvKo6Yc+tySHP+dLhooX876EmRvBvifffHnQH6Xj4E5WmUotVD6QTqJWrxKP6kCK5GnE5YWseXLDN8iaTU/mjt5l39A7kdmvyjnr7g/qDA3OfyThgxby0EZGlXL3DLzB5ty9HPmJGGCKwwA==","layer_level":3},{"id":"c1a9ca7a-7b98-4991-a3b2-887e95a4a284","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Quantum Natural Gradient Pass","description":"compiler-api-stages-gradients-qng","prompt":"Develop detailed content for the Quantum Natural Gradient (QNG) pass in TyxonQ's compiler. Explain how it computes gradients using the quantum Fisher information matrix to provide geometry-aware optimization directions. Document the implementation of metric tensor computation via overlapping parameter-shifted circuits and its inversion for natural gradient updates. Describe integration points with variational algorithms and optimizer interfaces. Include a practical example demonstrating QNG application in a VQE workflow with convergence comparison against standard gradients. Discuss computational overhead, regularization techniques for singular matrices, and memory considerations for large parameter spaces. Address common pitfalls like inaccurate metric estimation and slow inversion for high-dimensional problems.","parent_id":"1e5e1639-6c63-4d5d-bc4b-c485be44ea96","order":1,"progress_status":"completed","dependent_files":"src/tyxonq/compiler/stages/gradients/qng.py","gmt_create":"2025-10-10T21:30:15.111237+08:00","gmt_modified":"2025-10-10T23:43:01.353256+08:00","raw_data":"WikiEncrypted:r1dbw1ciiG74lYTjPig5UyYFgYjQb1hOw7H3ykIdYW8pmGiv0XU4uuXFqt+9+QV0LuGf+jMCVqKiLPXOoCIHTtWezatIKL4JK9oVLOxoa3mrRYdMfsOdVfWWzhFVw6tDXfPdX3aObrZ54z4Fa2++ujWmZPzPu2s/pNcCenUqJotamnXpmDjyy3w6B0m4SIC2E7EQ5qmggpKAOqkuXZNkdRAhSFA1SYlltMbUO+69Hi/thVnbSpd84B+DolcdbvI5kjYTlOodvNmW/AgoTg2eTkY1bp87aGFdZINWuBy/3TW2ZgYMJYNexUZ4822sypyD+rRrs6mMzShJSsLfdCgYeDtkC+t/T8Goncgqvt0jnpcJjZJyBsxde68gFILHFRwqRD+g331Lt74DZwazeGStBNTgyVgLJCcZ3nvAIZTfxMUpJ///97n647idWzYEZlt1KTX91i8oW3O8jNVPDP01+6FGtx+pjarkq9Mj/TndxYHBB76zLRh1Sryvbr6DXQlY6L3THxLYmcdb2ZjG2P5JRRO5kUlmlONa0veAh5YLc5lH/CPkhHoqt+gNUvl97hKVLOYAAX6a56zmZy79LlvadQSXKgWksJbpfHWkJNWEEr0bsvCFfohX4e5wX1MQ2DfcTgXsUohyUKT80FLqbDg8XJ3s73MpgxBURibafWTVRdivtCTTdwp0tpXx+Rw0ZRpiXTc0ehyVIv49tSWPDGqyTmNE6mimMxpQLCZzDbiaRJo3TdPPpZkzm+h0WwIHnwKbGqR+NBcARhJPb6fgiDx3rHDHgF6ZmZcFevA2qnHsLN+vqyBOgb19Icd/oI7FvEdOLU+wrDGBGIkMY8ki1rLsRcQ3+JK3VxSlY423XIK1CiISlReyzNu+uyP5kNfUsuQpVRKdIOzykUwB25QfwMbDTY31hmgIrAPJWMcHU5fzU+55fDFM5qPNCUA+TnXUMy5+2deOZMh6A+HbouhNy1M6G1lB1H2N4VN39xkjUeOhVQsFxJ+nwlu+4gkxIXrgxigU0pi4Thpm1RIBJt96zBVobNjLxuZ9nnHs+hgwsXsHDYhmmgSK3zCF01fGMomEktn844gHc5cW2eX7y5wLux6o32WHk427BaAa/mladREmHaEdHKCB7VuoAtaavg4x2HuRqSAqOVxO4AH40r8nY61RmPDBJHclesmhA0s0g43WJsCoS2x3QGCHrSLJ4jyoCjtqYFplr7Uem2MjHTcIFYYWPz8yG6IXfhsNv7vBA/7hh+xBT+wyBBBhFRE3sTzXAqLbvI857XHqZW9oPY9M+MUmQLbUQOnd5MCF820nS6L3pRi0pXLcj1yi8k5sqJNP2UslFRfr+mOoMWzZHnZbxa2UnKhmOB1Rkte5BuxrPKZYIlchd+IpmInqdDZPeoXWdU+R2wLwktLKQcMDudWm/6rrOVOhRV8zaOL9uikPzoD/5te5QEb9W+C55JMzah+/YRATZ7by7H5QvA9NFNCIdmzz2xhIWZjLKTDbbWVSDEwm420=","layer_level":4},{"id":"6c0bd5c3-db32-46f5-8e04-da588571f28d","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Gates Transform Pass","description":"compiler-api-stages-rewrite-gatestf","prompt":"Develop detailed content for the GatesTransformPass module in TyxonQ's compiler. Explain its role in rewriting quantum gates to conform to a specified basis gate set, enhancing hardware compatibility. Document the default basis gates ['h','rx','rz','cx','cz'] and the transformation rules: X to RX(π), Y to RY(π), and transparent forwarding of allowed gates. Detail how the pass processes each operation in the circuit, applies transformation logic based on the basis_gates list, and reconstructs the circuit. Provide examples of circuit transformations before and after the pass. Discuss the significance of gate canonicalization for backend execution, configuration via the basis_gates parameter, and potential issues like unsupported gate decompositions.","parent_id":"b292168c-6a64-444c-aa77-1b87d6c36550","order":1,"progress_status":"completed","dependent_files":"src/tyxonq/compiler/stages/rewrite/gates_transform.py","gmt_create":"2025-10-10T21:30:29.15332+08:00","gmt_modified":"2025-10-10T23:43:34.630978+08:00","raw_data":"WikiEncrypted:r1dbw1ciiG74lYTjPig5U0HJ6OlSrwQwGI2vuY5+G6eWf50RfXXumgMYVy7Bd/ufugOsfhtYW1RfJplxvcHZ8vTaz9hHK9iULoBMA2alymD0/IJDh7wQ6Al3FxEq3T/f8kYr67KTo66NMOb+N6kHgn2FxjyjS1MaXv2AsC7+TqxKuYq7oXNiFsc14FBep/yq8R3Hh0PaPz3sQC8bA6dV/hdFd1sAyoolXCs9495e29UQIO24UnVExtDVfxudOt+bwwkihwHLCycCEf/oOCXVmHYB2KeiDE4mtCb6B9EPtowUPjrbK/rvxHzCzG/ztvRicOUCc1VZVd7hBdUqM72DZbhyqyWxnH0v59ymCefU7HgGYwhh0CJdQ9G5nHUSmhs7Ca7VmdWimVuLhbXylYOzrs/gn80L/foWNi56Omoo5LqQIeSMUj16hoShYpexK711tcARUIqWLP/RS12bZBXHENLD5csJQ1r3aC8jKHNFv/jPsLXxi0X+q5o3ibjGymlQLtpNUV8lIBrrjPD9bii3PdRN1n3nO/y4ExacvEw5QRBdjO/3jWUPIN3wq3Z9/1twkJm+5olZ8Eyhva9EUZ6eAMk7EFvMBZ8iPsuQpDvctcKEj7zl8qFF0rGvWnxi/tXQ/h8waMaOoEwSHgpRdZKR+VojqdnN4lsd9eocLhXVtwf8E0DU1l+cozItR2N4kWaNpIAj8cFBUHPEKMsLza2kOpyXJ78EXAFrJG3LOuW6JHNBsXlWJK7Tvue2yPtBgpHy8s4K0AqkXQ4qlA6ObjXZ0WQXUDDPAec76llY2Yo9v7EFhz6zUSD28smekO64WUVhB2/pTFS5Aa8XegPyOOfOt2tocHiGF9S6xDkjy85q26uKMxoznNE+gfUKfJw8pPrhKiSyY0zdlO76pxTE5KyvTYGTCZE/EkoHFBP0DBQFU/f9h2qqOju8cl352UnHJbnDP35+tSns0blaD5o+jU1INr+U8pIu86B56kgoHxv5f1cgECuuc1UWDIVw9axIboJX3MePpX1fpBUhrzWhS+UKwTWP0h1SYAbjaaZxp61h1H5+uaPa+jphqrgNsD2mUDgQRV2zY240DAO+PFHt4P8cy0gOIsqWcxBLudVBvZhZTIar5ewWvW9OnA/Y9k4HEh6ivRfzQFCef6KZG0WjKJkT9xUcSQdlJRXDWft+6mHNZt3aYeZaXyakb1CxwSIKAtdaY6JG3mXy7n8Tq2G7hVED7/Nq4/P+Bt93PP6xaOqIvehL7t3FlnoqKC45mdn7bfX9yEVsb/D8kHSRGjtt3NPMUkIyyWTQ+ySvH/H9T3BtpJzeryHY0JaW+wxeufmZwNNzBNiD8GyWCO8L6A0t/gzVyC1McWD/iaNkJ6idj2sbkfVrqxZpvDPqyG/ra3o8kDs74SjmL4Y5Vtg4HFVpm3UUbA==","layer_level":4},{"id":"8357ee7c-6d5a-4164-9857-2be4d15266a9","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"HEA Device Runtime","description":"hea-device-runtime","prompt":"Develop detailed content for the HEADeviceRuntime class that enables execution of Hardware-Efficient Ansatz (HEA) algorithms on quantum devices using shot-based evaluation. Explain the initialization parameters including n (qubit count), layers, hamiltonian, n_elec_s, mapping, and circuit_template that configure the ansatz depth and structure. Document the energy and energy_and_grad methods that implement parameter-shift gradient computation through batched circuit execution. Detail the Hamiltonian grouping mechanism and measurement prefix caching that optimize measurement efficiency by reusing compiled measurement bases across parameter evaluations. Describe how the runtime supports both default RY-only ansatz and custom circuit templates through build_circuit_from_template. Explain integration with the core framework's device abstraction layer via device_base.run and postprocessing pipeline through apply_postprocessing. Provide practical examples showing configuration with different providers (simulator, hardware), device types, shot settings, and noise models. Address performance trade-offs between expressibility and trainability in variational quantum algorithms, and explain use cases where HEA device runtime is preferred over numeric simulation.","parent_id":"df2a8baa-b1f6-4960-a54e-3a2001012daa","order":1,"progress_status":"completed","dependent_files":"src/tyxonq/applications/chem/runtimes/hea_device_runtime.py","gmt_create":"2025-10-10T21:30:33.199642+08:00","gmt_modified":"2025-10-10T23:44:44.471306+08:00","raw_data":"WikiEncrypted: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","layer_level":4},{"id":"b3c86b61-49fb-4e2d-a302-bf54474e9c44","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Density Matrix Kernels","description":"api-reference-quantum-library-kernels-density-matrix","prompt":"Develop detailed API documentation for the Density Matrix kernel module in TyxonQ. Document functions for density matrix representation, quantum channel application, noise evolution, and fidelity calculations. Explain integration with noise models in src/tyxonq/devices/simulators/noise/channels.py and execution within density matrix simulators. Cover function signatures, Choi matrix operations, and performance considerations for high-dimensional systems. Include examples from examples/noisy_qml.py and examples/noise_controls_demo.py to demonstrate noisy quantum circuit simulation. Address numerical stability, positivity preservation, and backend-specific optimizations across NumPy, PyTorch, and CuPyNumeric.","parent_id":"c4c05f68-9315-4d95-b71f-26fb64ba1b27","order":1,"progress_status":"completed","dependent_files":"src/tyxonq/libs/quantum_library/kernels/density_matrix.py","gmt_create":"2025-10-10T21:30:43.573843+08:00","gmt_modified":"2025-10-10T23:44:42.14258+08:00","raw_data":"WikiEncrypted:C34GewOyK1SlumqKiPsSgygb6tZbr39HfU/NYGshj5UiAYC6shHCS97r3LRvFmIqrT9qW6iaz1+fXDOrTf1xW/sLCgLjt+NYof9wwjw2ypDPMGAOLlSPtZOye7aYsyXw0GiZVtIE4IwtPhlLxDF8YHr5vWX/3QXhtCUnLRn1UWSzkbH/dRFzqhHrDOfV8C2Pp2XXPZp8mIcjgxkZfjUGS0FUoJ8L5hnuHFhdqb0udMSRSF0becEVGDK+ViG7c2OUwAwrXJj1UvvG/q+26o15ntqivUEKxLdxZ71+u/yXxi6bX1s1eAxxkBJ/5PWS35nsTamGO+kztKF9jCE6eQ6ym+HhkvDSJe3SqlZ9U408kB1xQeAqwtjUv7LKwH5ADcX4OVPk3iF0Jwh4jgUfmoPv2Of6e/VnzjM+pzuUp4MybYbv+LgpszE8UKMZcIdX5JCvceddHEomdL8BKvYyAHm5Esa1Ve4fJv6wreABl5wfzHHu4yf75iaDM6kxkgoItb+oG7lzK7lkVQocYoBrqYr4xJT9ZoaiAkrqXhhmjHYcDGUX3Vk23fyvjXQK+4ClLXFbBB6aSNvQAlHtXY05Qo5xKxLaymPADyNmUjPDJsbFY2uWfjv1VYi5Z1ev9OFpIjIfnZ97qXfzxjddgbYN4+/b5k0c6TUFPUwN4MTYwCze6MX7y8jp3uTGRqcuOdLkppmHEtDoDwAf2uR0K+afdb/QnGYsHW89B2c65pWya5jFqyHxPODtYRRcd733+Z0EdXEHAmtVXOvSRVnkZYTJSyO2pv6SJzDfFW/9kgxkyacyODi2EZNjpXaJ90GDuUVFD1rSzFoDueX/8m2mEkBC3STxHw//IWAd5blKLAeWMX+fP35yNOfn77DcX5NBINxr9DbPYVoqcqPoa/0Y5fe4ekoQ0ZAFVx5uht/8HpxQ+JWFicFc3IoOyc5F2ONMVnAaoBd0DCE4JYqMXD4QgDO9iLT3BABWoToJp0KtTwi03li04VIQYfhlE4d5ZXPNS+V7aKY6nZUKU8V+Ox76VPtn/jUVYaDQZyj46+pRSDO8j3pfoxz+XstrNScM6UaeNHYQCDxZqLlYPC/9hi9Mxbd8HWeAWOIXeXAqDbQz6wuXV7ZM9qmDYwDOd1WqZ5XfaFLQOXV3RtbPju00kSWKnixU56twB6uck4dPTzKv9ygGxXuQkKwR+hf/NZ0vtmudZf3XINV3MSLiX25EOc6OOgt+yuiP9hXHD/asShvAOqyf60B8y/7Fsda88PEGoyz25DWHlHZ9foX/uuoIGjDO9BIR+f3/LYTRdIoCsHF+vzT5xYyqIPxZfO3nPRpVYfaduusGwEF4U29LUIZyDXVGlohuPmsyMayiB45+ntOSQPsU7nZ1uGM=","layer_level":4},{"id":"e770d202-9e88-4b0f-9e34-df111b2880d7","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"HEA Numeric Runtime","description":"hea-numeric-runtime","prompt":"Develop detailed content for the HEANumericRuntime class in TyxonQ's quantum chemistry applications. Explain its purpose in enabling exact numerical evaluation of hardware-efficient ansatz (HEA) circuits through statevector simulation. Document the initialization parameters including qubit count, number of layers, Hamiltonian specification in coefficient-operator tuple format, and optional circuit templates. Detail the _build method that constructs circuits either from a provided template or via external circuit generator function. Describe the _state method that interfaces with StatevectorEngine to obtain full wavefunctions and the internal _to_qubit_operator and _sparse_from_qop_key methods that efficiently convert Hamiltonians to operator representations. Explain the energy and energy_and_grad methods that compute expectation values and gradients using autodifferentiation via Numba's value_and_grad. Cover numeric engine options (currently statevector with future MPS support) and their implications. Provide examples showing integration with variational optimization loops and comparison against device-based execution. Address performance considerations for large systems and caching strategies for Hamiltonian operators. Highlight its role in validating HEA-based VQE implementations and gradient correctness.","parent_id":"113cdd2a-565e-4e6e-9dca-5a978489b1a7","order":1,"progress_status":"completed","dependent_files":"src/tyxonq/applications/chem/runtimes/hea_numeric_runtime.py","gmt_create":"2025-10-10T21:30:51.374368+08:00","gmt_modified":"2025-10-10T23:44:26.87809+08:00","raw_data":"WikiEncrypted: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","layer_level":4},{"id":"40147ed6-4474-4e38-b488-92b8dda915e1","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Core Framework Architecture","description":"core-architecture","prompt":"Create architectural documentation for the Core Framework Architecture of TyxonQ. Describe the high-level design including Stable IR System, Pluggable Compiler Pipeline, Unified Device Abstraction, Single Numerics Backend, and Counts-First Postprocessing Layer. Explain architectural patterns: Chain API for fluent workflows, Stable IR as system-wide contract, and modular compilation stages. Document component interactions between Circuit IR → Compiler → Device → Numerics → Postprocessing. Illustrate data flows for both device-based and exact numeric execution paths. Include system context diagrams showing integration points with Qiskit, PySCF, and cloud APIs. Address cross-cutting concerns like error handling (errors.py), type system (types.py), and configuration management (config.py). Discuss technology stack decisions and their impact on performance and extensibility.","order":2,"progress_status":"completed","dependent_files":"TYXONQ_TECHNICAL_WHITEPAPER.md,src/tyxonq/core/ir/circuit.py,src/tyxonq/core/ir/pulse.py,src/tyxonq/compiler/api.py,src/tyxonq/devices/driver.py,src/tyxonq/numerics/api.py,src/tyxonq/postprocessing/io.py","gmt_create":"2025-10-10T21:21:34.899454+08:00","gmt_modified":"2025-10-10T23:49:33.635523+08:00","raw_data":"WikiEncrypted:4PoKJZEjoeT4XL3d+2H6W/6FWVAUV2gnu3I7xl7Vy/jsqqDycTAmoHTYDweUG5sO8IBp0FggXZ+VRNuM6t+Rem34SMsGsaHw7zMWfsyoOCdV/SR6brHAf+EUWSVO9blPlPAPYjYfr6LDll6sy2sYKf+CVMpx4A0t4nzk0f8eiQNXVFEP5uXAgFT0tDcBQYDgkmQXR4/hEEMvs7wBKjxFsUdBFLFWw8Qqkt5TT3FyinUJNB5Fnrq7JCiAc082KnpnF7Si3ORP5hsy35fOUVdUpdIrP1KWl18pLeeIYr1sGiUeHQHSbQ3JdamJewYyzuYYw17KYuzve+jxTGEqdAqSM7JZ7rN44Yac5vpdl79WAjlPofXD79ZV25N1dVibwmnP1KSKd8tSO4BgI1ewdS8A2CepQ+JMgvYqjcvwql3lVdEsFy0dRNEREsNiaOlqTjMoUyiZZMSo1/AHFbmppzdDEvoH6YM0/CIvuOiqmBArAI1cUs2jfX0frve4oT/4b+agM00efmJMrZbxE+UqlT0rNT3lilhAYDbyk3NRKwDZ/iFIwWvFbxsKkXobEu+qIL1kTgNuPRUGqzen8EDxiGcm33gPHsMxONqQ+Uxs/x3LACHTHNuhwZ8NQoKs08spYXscvK08q83eTsLfnPSpHG1zT6g00ZDYgpEjm61Aqt54byYaJiPNcWDZ+pt4a5pr8LLnCEe5/1UIJThLvToP3EQCXA0nPhPFsmXBsqVRCkjPNCj7s93L+GDYbRz9UjXsTEZYUICIdeH1ATlys3imPbtuCgaw/hA6D9q9N7OS+h6EIu5jc0KdGjhJv6reSPIj67qpgsnjgEeiR/S518pidnitD4JaeCiTp82XM5ZZry9JGHs6l62pVx1U25AxezNC/UfawsIvxlCptUHUOCJV5Q0f5uXV6dATB3GKxACKYqhbG/kNz2iaX5uIhej4VlHcvY2J0VfCem0QO/oKdRUhufLlPWg0fgvN+m3dTzvJi0i9x+b52SAXrwSNPOe+BSd9Kjk5jYd1lNRC7tgwtOcBIgQ4kgkq3O+ut5gUQr9FeEOtUra9dljLN+s2xmlpLg7FvNOx9UANDFxFdCGk4Gh77KzU/LlWXbyJGCH2HvN9PJ9geOYkyoWm30p9Id8wX0E1ez7JeW7gRCoa7tpl8Z4v2d1Cqcz+pM7h4q3fNK1PxGAbp2EjFcs1xNo4lPK0kVbGFgzcnfwJV5N/IyYFYx+UmiIL2EMZzRxF+6Y3Nzze+KdS5y3ei5EUs0rqWMDdJnxen4zWN7Hyd9u3dMxVuo2XIADx7PfUxDnRXzjMc9xFK3c7J25ik9N/8Fs6xqyDFOCbz+XqD0gALnW3nJu5Vs1+3BGgayVZ2GfdPf5tPGXwfTi/ewKmFTF/vCV7Q85seIyLkRNdBXFfX7nk66k/6Ud/wuUTUfKCLh0VPEQ0T97oD0bdyUH5RcgXE4J4juoL4wslS+zZTt25NHLHqfdCBjrfvYxvDJ63Rupr9YiXqV77ptF8j+uZ9vN4D0SxVcrtZJ1Zm74ybjRmJHi3fm9zyRNd4HYJVNUhge2yfSBDzwRdXA+vFTH+7X3iW/X3eSOdwfVknqkcIQ45GNLvR8pEfcOc6YyMZKtodH63eSA9ojQVRnZamG1OveJLz8y55CB98QCvM+OLgb3aJR46i51TVqb0+0GJLC1pAtIS09iODOuLj8dWoOC27LS1Xmz+9KHQ3H8wGE9q7gqKgYXycZjqagEXQspf2cg7uHJIgwijMZt+feisyv6NZrw4dB/f181XltqL7sjw+XS988l97fqjVvwQgMdqusLOPtszjVUP75vU9+ZA0wewcG/iV0Yr9rfX8OpfdTSTPt1xgb6K4hIr5stn7j5Qng=="},{"id":"34671a99-bb8c-4c04-ade7-cc2d2968111c","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Device Configuration and Session Management","description":"device-configuration-session","prompt":"Develop detailed content for device configuration and session lifecycle management. Explain the configuration system in devices/config.py that defines default execution parameters, backend selection, and resource allocation policies. Document the Session class responsible for managing execution context, device binding, and state persistence across multiple circuit runs. Describe session initialization, context propagation, and cleanup procedures including automatic resource deallocation. Include configuration options such as execution mode (synchronous/asynchronous), shot count defaults, and error mitigation settings. Provide examples from devices.rst showing session creation and parameter overrides. Address common issues like session timeouts, device busy states, and configuration conflicts. Discuss performance considerations for long-running sessions and multi-device workflows, including thread safety and concurrency patterns.","parent_id":"653a4c79-b781-44a0-919d-4ab57987530e","order":2,"progress_status":"completed","dependent_files":"src/tyxonq/devices/config.py,src/tyxonq/devices/session.py,src/tyxonq/devices/driver.py,docs-ng/source/next/user/devices.rst","gmt_create":"2025-10-10T21:21:57.318997+08:00","gmt_modified":"2025-10-10T22:05:45.96258+08:00","raw_data":"WikiEncrypted:W4RZ6LTz4rg+RteR0TdbvFWCWdtX/cv8yfb3j0cwWSCXqRzc00nQaT3nUByMZDmiUXhMg+WPenCAMGZoaU9pkKN34aLFA8F7c89PKRuCwsKBNh0HFojyzAsCMivEo/l34R5kxE6/swI+AgUNkv2LhlkNHrXlZnmP5no/ZfYBtiDeO/mgLuzPBm8LVtPFA3JA9Opv4TsdNSooluUe4jDxLH4j+cc2BheZgNmvpsgrFe0k+upFJwHo4MjgiwDayQjohLimerOt5d0dth2WWcyXoSOeoeDs2vthiq6WyG6D6/LIRcmcAz3+lCg2rWU/4eTgeqZQA1j2xMqRHEQowmQVMeIAJgoNka85VQYEt743PrF7o5fONKKSoV6mi9hnNkhulztEFc1b/eoT0kjGyuiCZFpHVo7tTmd00pSUrN4YLpYZJv56rXDBYZmECaYhZWY0joKM8sSPJIC0nRJ5k57k7ve1xLxi+U7pD3g5Lg9bPS35rxhEd/itcguvtKiKzO+VItlNfZ3WnQb+ZK3kTFKjrs2yLOt2B+cclWuksqa0kQk4FUYw8Vl+Iy0LBgGCzh7D3C/AQBJN6fD//HZp4To7fg596mRzioD8VHEJvZDBgwfeJfDfFWhDuwXdRYmryjhUVyCd7YMb3p9Zw+5+dN1oiutIOUjwrLNycdilGD9ydr9ReyY+9+s9KB1zmrkQn/Fv2sp1gLoFgsjGVaFysSimhiTmlhz6y9VLFtxGJjPVClEs8MIXlYLzcP+QU3q7ulWO8ZLQya1ei0nxWzR5lpAmRtZQuxLH/Ls9mF5F45Lq2QywG/Eekt8xjf7fal2YZselwkORUvLo5g/tUl5I9Y8HgY/59rdeX9zqxJpLaNosRT0r+47nkoK0uLqYK0Ry5atk9JiXnH2pgibpsnVDDD2L177RI6AHeVwHeMLbknmgeSXQDtGrExDI9/Iyxkb19fkJxI6EXbAS0DjmxN7jdyKh2fSelfzbjQ8nq7TRE3dAHff+jFiiONd6lkjSQMza/LYG42Yl7QlxXaXXF9VQ4P98B85s4orMCheDS0WstzLSujl69hE3AJHMnIhkNAtWpgsKAKYsvprb77+u0vQ+nrd3YqP3DRZOcRmV1rN4qo1sMXUJtOPFJDDmcEabhQPipOKokeavW1PK6Ozaxe2xn6doUq1jPX0H8nEXbVKSO7Le7iD7VvCG9WsYFLD0fy7sch7NRPtY88Jh1aG3oasXp3wROOOtnQU9leD4ehb6LY7+TK2ahOaBRkvdgzGhb+h4GlPa0G/MjCfeZTUQTehQpZQYN6j19wKkVZ5OBN2EuGwrMdmSr1uGdRC4uDc+g1gBdFFgzoDoC+ziy4UbKmO1GmM6eKQ0V37yNVOM/9rv0xSZ7JLm9mIye05ETe8UvA5iWCLTbU0OXjowcG+X9tgkwkYMZabflTJ0AVbmzFH+ksairbKIVwdC7spzmMT4zd5/W6/SAGHwEY7f64gip/7kRB8H0UzQKnqyRa5eiNV8tbM6d762uxOWyDRxECQJCzmju7fssYBFBiR7WBt3WbmV3csiqdbHMgA7ocgMtIYnv4EAdJG/AYJkNNIRvHitdBWJ2+4nlTmI84FnFzbqQJ2w46VfH0yT9SkafiaxWQy17pYywrP+/H9kyhzculL/qLnpT3lihySykrjSnrTO5rydtHjxXBR8to3BAero3PDzYSZfXHMRLsSA6GQNZXrf5Gr1nOJg2UUpHFvwNBGAYosLUOed1G2ei4UTm6ICb//tJSZGhy7BOcu7ZkQX1yplBYUPBfnHJH95Jb3ZKd1zBxIm7ODOJQ==","layer_level":1},{"id":"c7c56472-98de-4941-9b29-17c901e2c677","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Simplification","description":"compiler-simplification","prompt":"Develop detailed content for the Simplification stage of the Compiler Pipeline. Focus on the lightcone.py implementation that performs lightcone-based circuit optimization to reduce gate count and circuit depth. Explain the algorithm's approach to identifying and eliminating redundant operations within the causal cone of measurements. Provide examples from compiler.rst showing how lightcone simplification improves circuit efficiency for variational algorithms. Document the integration of this pass in the compilation pipeline and its impact on execution performance. Address configuration options that control simplification aggressiveness and troubleshooting guidance for cases where simplification may alter expected circuit behavior.","parent_id":"e3263062-6a60-4591-8e69-dfabdcc9cf5e","order":2,"progress_status":"completed","dependent_files":"src/tyxonq/compiler/stages/simplify/lightcone.py,docs-ng/source/next/user/compiler.rst","gmt_create":"2025-10-10T21:22:12.66847+08:00","gmt_modified":"2025-10-10T22:05:43.157656+08:00","raw_data":"WikiEncrypted:r1dbw1ciiG74lYTjPig5U72e/USwUHTmQzl8MorrYRbH9/XjXCxUb+5g4+oCH1UbZAsqdURhszs3qTryi+YpxTKpS/b4jIAO7Zs9HmEUeU7/9s0QcW5QC2CEagsfbk5StTRjzF+J1Cce82LNkSWdziV1f+IuiwiZ5R9h5JSMcKXAbzXQUqmoJPOTRkw3JArkDk9Ym2UlFkrHUbkSTpDxaIUSGusg0Oo6sMkPP3y12wizBH4FUL4qC5y4ZD7NrpwdjF03C8/n0i9dzTQxyEhAF9DvOzrUuAXgvmQDAslecW7zOUWPyTWcbTUeUkzi3hJbXerbQrlhct/KHC/Q9mBaWh0Zwz8V9lLlvmurt08Mun1jVjAWjtB8nscCopu0S0upcxsxWDXKdQN/HUOUcr+tgONbr7fgf/x93IlbLOm4CgZwaqqslfzCeU4ZZYGr4WDIxQSgrm6CfVu6kyvdvgVYkikzVPw9s6O4OYFWLNfvHdNmOiPGvDlvk9tEJD0TzxpbQKfjKEhwRfPbllnKG8/v/jx71YDRihIxbn+pALbDralup56l2v+iftO77ZU2om1WhyabGDpSL71BAtGr/XHNbCLNL93YrqEfVk+0RPImTFz9AsYcY/WQ1EqdqEF1LLCeZJwAqndvY2tibH1wtzPPijLlV5u29NNmgAZpkl8nHYVIINwSW2kFZvPWtMppgU0gacI4EqAzmtqfTAC4oMVsF+DEu5u15A6wFlKXLLfIUpxEI2QtZLS8UO2pnRqnsXV28gFFbE0G9p4n6IffEJxi364c/3uG99lZMk/eWgIrjdIann+sTDW2NHM3t/zl8FSAuSWhJ8CrApyDXdjiRQxDcv1U6MQAzzWR8NfBVxu2PnKh6ml3pVmU96C1c7O36h1Vm37P6xs5I5DmyeQq0edsyCuXnArmgMhnJpPmK+L+a9LWd5JCMkInTewzeLVmA97QaAYn+phD4IOZgj9G4QOH5TgvmKeoItDWQNfD7jD6zXfVezBAXnhkdVhevREFBQcCq8ZjQdjymeIYL3GaXfYNe6odX0AySE/gdzgRkpYx+8H48aeYMZpRa9Uj4v8QQxnzcjs0KvdH+uwLq1y+ac2jwcbqR6dEN7JTS+QlB1KAUBxxsivgNQEBANP6GnxyJ+CT+CtqmF2JpfID5fxAsAqo7S0ufEuIECffp2Jtt5x5EJ3rhujcmLfjkO5RjQExlhIghEdl3PphFVRo5/pxOfdej0XVTT7laclFqID0OHDiGGKsEU604hd2c/bdTTnSgzEH+vCHVfAdDUtjypi3B6G9VgtD9zeI31uwvos8XV0Y7+H1Im38PqAouFOVS0CWYEoiZEUFyh4cZgOq5ldoFp6gJybYt3pRWsokJJv6I/Ngppq6hxrt/PQU43ocnuMbHuw+scAetMuxqL7d4iqQC4q7tQ==","layer_level":1},{"id":"0cd0b4d4-c089-40e1-9589-664bcb6ef57c","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Device Abstraction Layer","description":"device-abstraction","prompt":"Create architectural documentation for the Device Abstraction Layer in TyxonQ. Describe the unified interface design that enables seamless switching between simulators and real quantum hardware. Explain the base Device and Session classes that define execution contracts. Detail simulator implementations including statevector, matrix product state (MPS), and density matrix engines, highlighting their scalability and accuracy trade-offs. Document hardware drivers for TyxonQ processors and IBM Quantum systems, including connection management and job submission workflows. Illustrate how device-specific constraints are communicated to the compiler and how execution results are normalized across backends. Provide examples of configuring and running circuits on different devices. Address common issues like device availability, calibration errors, and simulation memory limits, with guidance on selecting appropriate backends for specific problem sizes.","parent_id":"40147ed6-4474-4e38-b488-92b8dda915e1","order":2,"progress_status":"completed","dependent_files":"src/tyxonq/devices/base.py,src/tyxonq/devices/session.py,src/tyxonq/devices/simulators/driver.py,src/tyxonq/devices/simulators/statevector/engine.py,src/tyxonq/devices/simulators/matrix_product_state/engine.py,src/tyxonq/devices/simulators/density_matrix/engine.py,src/tyxonq/devices/hardware/tyxonq/driver.py,src/tyxonq/devices/hardware/ibm/driver.py","gmt_create":"2025-10-10T21:22:16.257779+08:00","gmt_modified":"2025-10-10T22:07:20.64533+08:00","raw_data":"WikiEncrypted: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","layer_level":1},{"id":"dd5fbcd8-0302-4064-94d2-0d00202b4748","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"CuPyNumeric Backend","description":"cupynumeric-backend","prompt":"Develop detailed content for the CuPyNumeric backend implementation focused on high-performance GPU computing with NumPy-compatible syntax. Explain how it implements the ArrayBackend protocol by wrapping CuPy arrays to provide seamless offloading of numerical operations to NVIDIA GPUs. Document its memory management strategies, asynchronous execution model, and support for large-scale tensor contractions via optimized kernels. Include examples of array creation, GPU-accelerated linear algebra operations, and integration with the global backend selection mechanism. Address installation prerequisites, compatibility with existing NumPy-based code, and performance advantages for memory-intensive quantum simulations. Discuss known limitations in sparse array support and debugging complexity compared to CPU backends.","parent_id":"b689c08f-8318-4f22-884a-b1ed2f087ddd","order":2,"progress_status":"completed","dependent_files":"src/tyxonq/numerics/backends/cupynumeric_backend.py","gmt_create":"2025-10-10T21:22:31.95811+08:00","gmt_modified":"2025-10-10T22:07:15.362345+08:00","raw_data":"WikiEncrypted:WIp7TLt/vbI2Aew7umCrkmjDS5g9VgtP9nC/v1T9s1RtwNkfSJoCQ0OGGRxfs8rUX88YJxvXr4Id6D+D7lo0xgpap/nu3LdgdPMSOdZdp5ZZFlKKwFpkc4rW2B8GHCrK4xitUWAmqQ7WkYPG/W6KopldVJFjid0LGsCJr8gCvP473NLJ4mDIn/zq8CXo3JmK5nA7YXFwM0MGYW+eThGKXLg2hH2lK2DQiytcb6Sc3MxwZUpYJojP4NDvOlsW3hplcPF1PevTZFDPu8jUFoVCNPPKySe5WcfTvq3v5BFLO43jYKcjWdA/0T2tFikXJ/td+0u2Oqams9oYwskGHnwEbMwJZMt9qLrJqgRTp/zAIQO55Oqpu5EZ4mhWwuX2u2uyM0C1DtmooXWcTCovjhTeSE1b4Rp8dRk2zsADCnYH9o3LI9ABG7cWbvpXXPX7nmYXOzzppHph3IEngBPdY0zthzaq4JbdmNwtj7oPSfJDnfakiAqnrf+aQWT5dXjh9hkDvmeQXgXGIhrazPNfss8DJKQe1Hg8MNB/lWwpGOcUR1uU+NeZM0aVmwQ7OZ4CZ+JvU5h9if22mps5uLtEPz4H600V/TM5xocm2txTN+nsW+gh4MlwjelTSrb5f7b1t07dwigM9RqmZbBusDXizpI7ne9NZG2qbNLSm6QqKwFLb5ITLymtOr452v5DTUY/5kHKJGSQkrsHfoQrZaO4yaRzGkaSZh08NAA/Qw1QLogGJ77LXsNgjTaOmliULE13Mq6RfrgpmuKWSp9+73/mzlze7wIVTGF3vUh73NLSlFy8hF+yuG98Me8azXqy8xaH5oMpL23jizPb7TXRJ50F7bCu/ujUlmZqEgLym5QB/YLG7EZ2ihu5y1DUe3xcvp/7ffvnXlRGvOXkWIiVwWz8dG7cdWrqnA8gZZoBbgsYOb1YIA+xmj11KzRqKS8P9vbmM90lVSutK5bdOgKI5zZjI2G+kPrLpO3VxSG8gSwIak7ngMiMkpSxr790fAOxnMiLApeR3ugWgTNLj9cfosC1hr7amCkpqzX4UIZ8M2vIHapdq54ixd2QUuh3fdxHcEREbhOaJuxjhn1HMyLOrBOD4TtW7umL0gqWlPYYJcnGF/PjV55HGFz0S0HP0FpdAGnKRp3Q6/tTs2GeksFs1KO3KUEXqT2fAQCdTq1Hcb0nTLMSymcsmPZyOuteS75WGLnIIXGLpW9Oy4TRYCf55gMkcsPBLl6IKENmw6y/BG0Il2l4Vcm7WH8dux7B3nJ7vgMa0xB3hdhYw/kN7OFS/boFRuXXx9a4R/VL8o1CbzqJASgJVwASE4qldTX0hHNxxTAcAGoV7awU5D/4HbtYSwNvGoXpnSpFu3KNrrAzXEly2wyxEWUzIv13WrmqwPoCg/jxRdB53tkvxxvMcng+qjqI2vKBwwsb6MjSphBL5jooi6yl0e/nPa/dIF6XwwdcYwRAds5ihy0GFUxcswnMN0a2zwIRTQ==","layer_level":1},{"id":"c0dc8988-73dc-4799-a01d-fd1a416e62db","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Classical Shadows","description":"postprocessing-classical-shadows","prompt":"Develop detailed content for the Classical Shadows method as implemented in the postprocessing layer. Explain the theoretical foundation of randomized measurements and efficient reconstruction of quantum state properties. Document the implementation of random Pauli measurement ensembles and median-of-means estimation for observables. Include usage examples demonstrating scalable estimation of entanglement measures, fidelity bounds, and few-body observables. Address integration with shot scheduling and statistical error bounds based on shadow size. Provide guidance on selecting appropriate shadow depths for different accuracy requirements and circuit depths. Discuss limitations in reconstructing global state properties and computational complexity trade-offs.","parent_id":"6e114fe1-b696-4897-9078-346dbc4008bb","order":2,"progress_status":"completed","dependent_files":"src/tyxonq/postprocessing/classical_shadows.py,docs-ng/source/next/user/postprocessing.rst","gmt_create":"2025-10-10T21:22:36.700158+08:00","gmt_modified":"2025-10-10T22:07:29.296471+08:00","raw_data":"WikiEncrypted:TP8KP13wWUq5FizrfXDdgslj/s9isKp7QoJGTrEXILf5Zv1OfOgCL9y/ToaWksVRX32aQPh/VMWX+plq0e8AIUYOwtEspWV3pIOZ4CQM7J8oIbAkRsKPllBCKq24uy7Nym5PiF5KWktrqKYJ5DXL8XH4LojPjeGGSdJ3pokulIjfdVI9azfrsgR39uhkIxw+x7JzkmHkYDuNUXTN8k123Q1IPISa4Q8Je6VTcx+rZ626vN1rOJ6QhAzfDh0s4wlrekMCn+qVTcHn2VgvU8VYthALE/gp+N5MObd+OhE09EAUKbfB62bZZUD3pbPsOr6wDX3EEj7K/XZivAWwQp8i/yBAwtLz3Uv5Q20/Rp2a0wIeYQbEf5uCKGteTYEo7mT4DttRg8krP9kMTlGTJ+rFzY0ZBZWYvIoKAKxio2iIxo5+20sV5VeGwTgK/MLz14lE5lUCMjsWLRWvegQ5EdWF4gB/jdqmWy7U6nkTQOGAxgcTVTMfOOGmomCtLWsepyjI4v1Dozj86Fackx/Ed7moqjOBvB7uhR/FrNIA7pMEViBWfk9EsvBeQWGNbaFB0eB2FQTtR38aC3Q37ZpHOsL848ltfmVabWIi2IwOG+AFH0Zx0+5oy91DFl1UHn3cqkbN9gtAM+jT0T3FuH+0L4BU/8DR1eP+XX8qLwIF3oGWfwKjwrNL2e0Q1oLmcUVQdewNECXSsxLc5ysjH59eFQ6w1G629RxXnPMMS0pZ0mtH5bt2vGLzRIfD6KAcC1t8Fsx1bsLrDCTuJgKC8V4hx+LxpOFzek/jzJpKmlr2o6JuO1fNcl/8maKGHYibW708TKapbdboxiz30j88vKfuwzP4Qdj59MOshwm43JR9fafiwmQ4BWVB+a5yzRXaIFLP5I8DKEfe0sTpEo3eyiq2FgSjJ61LWRpuj9SeWB8Vkn3YldwemRb8CiCXwcjympxHm+Fcc2DSQREyBTBEMLyzAPJijz9q8O5DlSVM3IqyBf3GOksmt9Gj2mjLZljeBc4e4fdhhL0CMq//FmSrcrRkRk2/tJ/bTCKaN4xAO8RdGCsIqElRibBAWWsH6x+eFvwcC9XEFUQneWCDMgYxLwTiZxS0icoCVlzy2bJwH/oi/TMDPjNWms4nEIGy/JkkARWk9VL6WsexVuHVd4ryf8IS172b5U01N6nV4P6+ptGotnSAycwhmG0ihOHZYN5tzZIECkDeJrhmK980Df4bthIoQXxVlMGuf+L+Cu1abUnXevtcR+so7X00n/mHkKoJHM2PtxAndVIsgCXRlddNul4L/Yhf/+9wbvy65AKWp6Ko86P2S/hFDjyupjIl3Pi9WiapdAI0GJjEbuC2XuCZLDxSbXWadrz8SYNe0CbgVk2uLp0YG6RIGkuA7fEA2rA8A67IzD4ucT+d+eJ6d2fR372cRMYxA/tdE4fdzybeIgpDeh1ABX+kTlpVb/1ZtYmtPhjHE2cVcr/RuSTHxv1UgIH0k9R0tg==","layer_level":1},{"id":"21884915-2785-4d06-874b-5407f53d00b2","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Execution Runtimes","description":"quantum-chemistry-runtimes","prompt":"Develop detailed content for quantum chemistry execution runtimes. Explain the dual-path architecture with device-based and numeric runtimes for both HEA and UCC-family algorithms. Document the HEADeviceRuntime and HEANumericRuntime classes for variational energy evaluation and gradient computation via parameter shift. Describe UCCDeviceRuntime and UCCNumericRuntime implementations for unitary coupled cluster methods. Cover the dynamics_numeric.py runtime for time evolution simulations. Explain how runtimes abstract away execution details while maintaining consistent interfaces. Include examples showing runtime selection via runtime='device' or runtime='numeric' parameters. Detail configuration options for backend selection, shot settings, and classical computation offloading. Address performance trade-offs between exact numeric simulation and device-based execution with sampling noise. Provide guidance on choosing appropriate runtimes for research vs. production scenarios.","parent_id":"7fc12bf5-cf13-45cf-b21e-370f5443525d","order":2,"progress_status":"completed","dependent_files":"src/tyxonq/applications/chem/runtimes/hea_device_runtime.py,src/tyxonq/applications/chem/runtimes/hea_numeric_runtime.py,src/tyxonq/applications/chem/runtimes/ucc_device_runtime.py,src/tyxonq/applications/chem/runtimes/ucc_numeric_runtime.py,src/tyxonq/applications/chem/runtimes/dynamics_numeric.py","gmt_create":"2025-10-10T21:22:57.107181+08:00","gmt_modified":"2025-10-10T22:09:42.71452+08:00","raw_data":"WikiEncrypted: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","layer_level":1},{"id":"1a21d47d-03e4-473e-887c-f53946666031","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Quantum Kernels","description":"quantum-kernels","prompt":"Develop detailed content for Quantum Kernels focused on low-level numerical operations and simulation primitives. Explain the dynamics module for time evolution using Trotter-Suzuki decompositions and exact diagonalization methods. Document the measurement module for expectation value computation, variance estimation, and shot sampling with different observables. Describe the kernel implementations for statevector propagation, Pauli measurements, and unitary synthesis used across simulators. Include usage examples showing custom dynamics simulations using dynamics.py and measurement processing pipelines. Address integration with the numerics backend for array operations and performance optimization via JIT compilation. Provide guidance on extending kernels for custom operator types and measurement strategies.","parent_id":"5f9a37c3-59ab-41c6-ac09-34c8680a8b44","order":2,"progress_status":"completed","dependent_files":"src/tyxonq/libs/quantum_library/dynamics.py,src/tyxonq/libs/quantum_library/measurement.py,src/tyxonq/libs/quantum_library/kernels/statevector.py,src/tyxonq/libs/quantum_library/kernels/pauli.py","gmt_create":"2025-10-10T21:22:57.442955+08:00","gmt_modified":"2025-10-10T22:09:02.395758+08:00","raw_data":"WikiEncrypted:o/V1DzY9J1knzt5DomOylcxk0AqNUx9MRuzUwwQcpURRJ0V3+2A5S1YoIgfsic3hscH/uxOW3oMnIV+6mvnEwkJ72GnRUD/IyEwK9LhDdLWp0z4SzugnjQxRAcAAgs1GY5E/Qi0Z16TlWkqE5Nj+yQXDAsZ9nf9WSjiiDQYp9fU1oYVLxuxoiOmxkHURKHD0w0l3k2KU0+K2LSj9R1oL9Rf/LoRiKbu3I8jxWI7AUTqG7eNeQhXvSfvAsqvRr22hjN5hsdgORadJPc4Vn7bz+rExiPZI5qgntr8DtIHeNjV1Bokwd2jYK/TXewEcYZn5RUkT8YRtpE1VPuZlKXgerCnaFwuLyblPP11xCRP/TtTCu0iYYe1qq1u91vy4XI0ctS4OUmTwV+YyBJl7lnYpqQ9tUmL6BEivqjioGZXk4vW24cGP2a6oFncl0ejfxmwdhAXa0T7CI2UA/cIpGVo/TQ6k+XG8X8x+emlLxCZHnD3A5WwIDMW7qPeciifJJtvR956S2433amYTF+p6QdsSD088g19A2toEFg76DHK2KlySrTlRgWvc07qTZ84GTBLZ9ZhmnUUJjE2oiXoHc+sEgmASUs1hd47szFT/wllMOZHfWZI3bJaaImQ2oQCS+EHmjkv8vUVrtsa0AdazxE6vyCgI/j+xLUsaNqKHW9qznaKg1VLWx9qScMWvg1PdSuMkfNbRfRJHiYhJrAdJvNG/2ngZreN+AX2yqTdHGHx/lBfSN3aUFyBCskMC6K5TSu7na1fUiBC4WFJHBdFe5kNszIbRSS8veCe1PxHtQB7oOh2Bx4mnR6gRQJ7Ij4fJquP1/bZ7KmvauNwi6sO5mmzskDQs1UGNoX00lTQtfJ0MCrATbQ4H6dvjk3WqJhIVpsw7Rfr4tpgJF1aymgq0NDFfg5IDWhdoOQLtI6wwqo4nRASlIQqV4p154v8iPb6eKcor9m9EqFXV1IYFmz6NWjUVwbzTTpqSlF9VlUkUyWRdyJdZkYgNKDH/UBrsf1yqfsHQu89Eq8ohWcDSylWPjwmBOM1F2n8JGXILgLPKar/w9orxIOQSok085VOIXxYObC+PVA5SAIVxzaGsetvs1EWiwzPk68NZyLO+Lk/3jcbuwYJ0YldPM5PcaH7mBlH48kmDdgB002VURoDwqftTkwRIbOkuLma18ul7OfM/LP0N7ibd6rLQ9JHGU4+58+Ez/I8DOD4dUt522FDowOTLVmN6fVP22eSO18fFnaewfhqhFxjlGa/IBzdYzfdBgYKD28nOJuBDzSfBr0iX/vHawatS5HYgLgw7oNGpLt1Wqx6ifrMIYv8REsb+s2r4bv4DxeRwMpuZkEph5dgWhCXgXW7cjIelAjgDOBZg7P03AYhXOt4Re3s0ac7vU0656+Hl3NgA8e7uQjWG/iYIOCD5e3sCwNzwioMBnO0PVmR0N7CSxEhVTSmG0pt51Jkvs8fp5cyhIKtHLFLqX9CPTvv7r4Qsr4Uws7iYtriLAEDu+MUtMFAdXZWHceFYlOJjIwUYNuK+3seQf3t8Y3QudpDp8zHMVSK59wvq5kTGBkukA7gaYwKE+9aCSzEe3EvukgpGJWPrmW0RPCL+RRxI5rucYhjwHGm4G0uuLXGtymyzrOGWigkxZN93imdi5hGp0d73DI9/PRQDEZVu5qlYVbxK9w3bNw==","layer_level":1},{"id":"24f839b8-80ff-4231-a0d2-bb943e93ce61","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Advanced Computing Examples","description":"advanced-computing-examples","prompt":"Create comprehensive content for Advanced Computing Examples highlighting high-performance and large-scale quantum simulations. Document JIT-accelerated HEA parameter scanning in hea_scan_jit_acc.py, hybrid GPU pipelines in hybrid_gpu_pipeline.py, and memory-efficient large-scale simulations in rem_super_large_scale.py. Include benchmarking scripts for backpropagation (bp_benchmark.py) and tensor contraction optimization (cotengra_setting_bench.py). Explain memory-saving checkpointing techniques (checkpoint_memsave.py), Clifford circuit optimization (clifford_optimization.py), and lightcone-based circuit simplification (lightcone_simplify.py). Address performance tuning, resource management, and scalability considerations for complex quantum workloads. Provide practical advice on leveraging hardware acceleration and optimizing computational efficiency.","parent_id":"be2b789c-6423-4d7d-89dc-b724ac123462","order":2,"progress_status":"completed","dependent_files":"examples-ng/hea_scan_jit_acc.py,examples-ng/hybrid_gpu_pipeline.py,examples-ng/rem_super_large_scale.py,examples-ng/bp_benchmark.py,examples-ng/cotengra_setting_bench.py,examples-ng/checkpoint_memsave.py,examples-ng/clifford_optimization.py,examples-ng/lightcone_simplify.py","gmt_create":"2025-10-10T21:23:23.921174+08:00","gmt_modified":"2025-10-10T22:08:39.860698+08:00","raw_data":"WikiEncrypted:qSUmbhu+RuqdVWUcJ+wGd1ZipfexCearp2rW9VDtbM/3PmIB4f0W/rSpriv2+bytRyIU3F/RhKriApJHaDx9/dB7RNYeJeuU9OcaYyTRA3wIaQemB/jD/bM7vEwK+Hzp+4Vd3uRexIeFyAMVCGhH76QsLhYr8z8QLlZ3doTGnqcals84m6/KnxnlX38/rGBGWG754WKphiQoVtm0x+nR+GbDJUwqLErhmoTQZfJ9Ae8hirOd1yYHh7WPNoiHzG3y64qTPEynzFdLTa99fOJW8A2GSkNGi/0VcDdbHmYnnETFxqY0evBfSQKv7/jXx5DFUwNvjeFW32hsxuaRwehrs4oMD1WGgHara7zJNwz/2NuBEbZNqnXr5VEWZZ3zsMzyZUfLk2kzjfUXrGrY0JUC3IvtbXXfmM1UThJ2b7nBy5TWqWbuUyAjDWuqG90lJqYnY8ERumw9puAeWMD+hgUFly7N51PIb74vZLqKX1x/D5+eSbW2qYGd6ya16K7N2JImJoka4yiEj81XQSiaiUYzQ161OIyvl6Vnu+w3heN1KOarN3usiF7Cxj7eWETx4B6mtBw/3+OXUuKIuGNferslCwvp6QG+q2MG2F9//eYEkckVs0tFTkWdsdRwO13rwaTKiu6jzli12v5G1v5vbtqb+qXa/rj8rcQGYo6E6zBxio8ViRvoD80arc4oFOiaqrhYZ5G7nbzy8HVpxwA2O0Li/QLqbswXqvwTRr+rRdpnXwf5FyycsENvuFJZv+xYEyV1GBufR0cT46WNc2epETVawHxB0xQZiaSzWuEp9c1V37yXae8xTAhLHswC0s3RHF0JyUEYT/qB1MNtRyV33XLZ40M+k1Ys4Fas/0tPXgOHxybmfcf9QpkyvCVYw/rK27HiSH/AK+bqQosj8rSrQrViUYE6Go548jX3VxVMLRe5wPE//KkHVpLjTGK1Fx4SYtz2hXwDOI7U8q2d9/VQSmkWspAPzv8tyU9rhhvQP8xdxHDvnkQXbWpNQu7qdTZRc9roA05Os4KroE8BkIHeopWG4reqA+EVzlC0pD07F3d/gEtZiAXQxmGJonUAUUbTBHcaauNP6+6fyDfYe9oCYKByOomrnGhOLcP6GI6tQ/2Pa9x0IyWNSEO55Vb4DAF2oCIeQUEi0f6dTLv91H2X0aXreURMfZtXG5d6b2eL303m7YOyIxQJ+e5ppGknt1TtMTNEic0v6srW9eXGq7RF80AqF0yxNNMM3Lxm+xPmqLMrov/lGhdpXLV2lZphnxvOpRDlLtCZbn6RFskY3DFfpjlYqln/T1ytKyUCsjP7kLPLA/Mc7/0fmBuVQucn9f7fNIMEGsCaK5NAFji0GIQpAnqd81NptPTOGus/6ryY+lKmK9WtkBfn1mspFzO7BkUADUax7Yp+iEtc1uf9UEiSA70bXubqHatrOzLhijcEGN/QWdrtpZ+sNNce3wQq0KWUaVPDhqzVMUstyQnZuNbSfUOSMZsJnAh17l6zV2hUB6SDsfrgddd2HFRZ9Rw3LfJnwghGhcwP7WbmJddYix20arEdqn7WOT3eeLQ5U8VXp+y4FqO3m6U3iGXyTQpQiWB9mQLS/UqC90Hc2Tcwj/pi+j4bFjfD5eSY+TXHLleoKqQV3h2zz2kskAw1LLD/rEso590/oFznyc1aKEREmUCJDiHLdjIc5On6yAocOIWMwGbJWH8UTxmJCTHhHpGKQ4S74IkDrGoJ1ZcnY9OY9/geMp1WtUrE7A0QfihlajhvSuieW+mzMC4+v8qCFe6/95fnLObeHivvuhmYZn4FwhwkH/wKhYJfpjd9ZAP6l4f08GRU96CHTctuRBbwosP9uBh59uqIDqGYanvokXmAq6QZney2+HdIgzIYAhgnBHxz21RbDzs=","layer_level":1},{"id":"4b3f6dd7-6e5a-471a-b25c-d6b5de52b601","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Hybrid Quantum-Classical Workflows","description":"hybrid-workflows","prompt":"Develop detailed content for Hybrid Quantum-Classical Workflows focused on integrating quantum computation with classical high-performance computing. Explain the architecture of GPU-accelerated pipelines using hybrid_gpu_pipeline.py as a reference, highlighting data flow between quantum simulators and PyTorch-based classical processors. Document backend interoperability between TyxonQ's numerics layer and machine learning frameworks. Describe parallel execution patterns (e.g., vqe_parallel_pmap.py), gradient computation, and memory optimization techniques. Address use cases in quantum machine learning and variational algorithms requiring large-scale classical postprocessing. Include performance considerations for data transfer overhead, device synchronization, and distributed training. Provide solutions for common bottlenecks and debugging strategies for mixed-stack execution.","parent_id":"0a04a277-3d67-4ad3-9572-9adfc478c2fd","order":2,"progress_status":"completed","dependent_files":"examples-ng/hybrid_gpu_pipeline.py,src/tyxonq/numerics/backends/pytorch_backend.py,src/tyxonq/libs/quantum_library/kernels/common.py,examples/vqe_parallel_pmap.py","gmt_create":"2025-10-10T21:23:27.649415+08:00","gmt_modified":"2025-10-10T22:11:07.456526+08:00","raw_data":"WikiEncrypted:L7OndHh2dwLmabLWQjqqMh2y7tXwuZr/S3yecu/UrEIilT+TnP0teUYEKyqQ64xtrBf5bH+ShFs5P/8DvOqyiZ7fqAYB8m4A9+KaZhH3Aux4EuyLUIWx56zqh5UUrk+krnUDkCnPY05cFm8X26e0U4vIqa9mo/TMj1XHYfoEGWCpFXMK6wX7E+PilVwFCgXnEewrHEyBDjLt5TlZCdyV6KyuVYQIMlQMC1PM3fm8UW0+1Um5mWEwZ9oqSWIdRGd5sKrTDoglpXw0DeCahCKPtGqF9WiEc2IbjriWsMTRzUrsoSJO6OSDNxwsPxRJOxbcyRdcemiUG8FAwSZfM+CPenmNByZjspPvqGhbLD8wkUfdBotf1ajQYAMODtr875MA0K/9z9iRN3UsAbw/DMXcZva+CEJcDCzMbQriRk8UcTBOxh7PupQpXkLrNnctUyN49FE3bHGv9ezXm3QyCcHHmjQxS0Vd2uhRx9cnZS7w2Do6JT4aOL05/MsVhHjGw/lXTZBLGknq7QRziaMq/xAAZQaMZfb0TZ2jUNbHqwviod1SzOENNPvipApBXj6FUxLO/YluQGVmsVW5chOVO0232IwEYAWVV4nAS7VA1MqtPkHy2Oz+MefvdYqI07vAjlA7JCEqAJlRivzuHP7EePej+ZVlm1wHfjnESOZl/HdK/N4MrOCWkxJdbCWO18rWOwPQlj8VCoLTtBkFYehbZqFaB0ruXcjkfRL+iFaYNJCXksdH4SW2LBnF0mCMFC0P2X2NWh/H8zqZF/fuHZSs6RoGAhQdRaVvvO+7G+5kdgen51wztljq0Mu1ovPYNNyJlwZ/bHdF52kzZmPtyr3dBHJiVa7xVlVKUKXI4NpcdHRcSVPpeYfgNk0OaccW8anR9ZYA9D85BLDO2sGEN93v3vH0o2DoWn/Bs5MqkQkrD+SM+6jf1D5/519vfqEaeN6ep0lmkalXIlnQAX2Ka7pr9eHx+w7Cg8dvK0yqVBux+fRMm1kpP+6Oz2O2B5cr8HQtmXkHPuYcvHavJT3xwb4BN2E1USDyWnbzQxRpFREPrL6l0MJI6qqdRXmaAmrDvb9M4sDa6+F+o7LI8FS2zj3urVYpG7uXzDDVWuCp5v41AZGLpWuCtR0m/PTFAQAS1EcdVKrDvGVQd8769LoDa9k14BvhG29dLEWqBhTsaAjZOMiesfIBYPpgsncWAEpkKAnzZTVJuCyKzAnKeL2MHdUOYc2TFteUu398jU6oAz96nWc7pRoWs6NaoD5J9tzK5cGFxMFzMtD3/qIV2T3RNzFmwgs6E1Pstk4soYoiNTlpZvYrRmHbCxrS6Ct0v1ICd/UFcTM/ASWHMxJOcmBiTPQQt7mxB9b+0s2ssn08PlmIln3KSzHeKAeaWau40CsFF++TJhXloTVAnxEJ7l7QVMBe7nelDODxGHrkADXkG+XmvxzoYwzYc0a/JRExKYJdxy+aG3N27sjKLZpRJQhJ0DdVHk+FqhRApQVJEmWeb2mQho45UVF0QqrfuhEdmfV36mDBqcwAIQZQ4Y7kPMkwY2ZD9Sx28h0aVyOFxvFrunI560LA7S+jfR+SIocPls2pp1UcHF9AlYN6sgbfEZuFiB9V8A27796jmtKJcaSYuApOUyHD8sgZ5J9mYkQg94vppzEyqLjXYjrwcXkc38FNGahhVJiMIrxpExzi4M9QKnHEZUSyC17ENQOkgHgKuSaa1+ZB57b/eHWqbMwyObrsT/01P4SLag==","layer_level":1},{"id":"1ab35330-ab1a-4a44-bf35-cc676e60e719","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Framework Customization Points","description":"customization-points","prompt":"Create comprehensive content for Framework Customization Points beyond core configuration. Detail how hamiltonian_grouping.py enables custom measurement grouping strategies in the compiler pipeline. Explain device-specific configuration options in devices/config.py for simulator parameters and hardware settings. Describe how these modules integrate with the main configuration system to allow fine-grained control over execution behavior. Provide examples of extending the framework with custom Hamiltonian grouping algorithms or device calibration profiles. Address how customization impacts performance, accuracy, and compatibility. Include guidance on testing custom components and ensuring thread safety in shared configurations. Cover advanced use cases like multi-device workflows and hybrid backend selection.","parent_id":"d098b674-d19e-4445-8089-ef411e2aa603","order":2,"progress_status":"completed","dependent_files":"src/tyxonq/compiler/utils/hamiltonian_grouping.py,src/tyxonq/devices/config.py","gmt_create":"2025-10-10T21:23:48.191543+08:00","gmt_modified":"2025-10-10T22:10:47.481091+08:00","raw_data":"WikiEncrypted:VrTOMK0P24YINQ3w81YokTfXPVg0Xf7efjPEUia+nMC+yLLgva2pSF4641Sl9s2gDarnwJqefjjJzbePcuo5te+JA8KgZ3YctW++Z4g9OPKC6D1lfer39L3lE/Dynlb+7mmpP0n2DbtUvD5WTf0AEdjfSKSzkBZV6mSgWvs1re10tF7Z2m8RAhTZt2+Elqow1D+Oxu7ZgVtBcC6TS8rWVhHIKgYQjXTDW5pt6CF2iOb0T9p6nKLQwWds8fbhw7K1fFnnK26HSWxB8OGfdhwXKi3U936MsOm09TFGa10rkHY5/GVcWdDVw38VR0Vluh7mknYkOIf2440sQvFudduVsI1/kdMPreX19+b/nHVSK8eZKMrlGbZQru+lACD4vXKTR9q/uONq/zdXxliluPvkk3qdGGaVZTQFmk4+Yi/n7m9/scMQKTmK80GxeD5PZXiwkeXcATCfCeKpxhVBif/ptI0qFTGIRZM8v344ZIG7AIflId8GY7UkSr+rUVretQzMgDv+Tz6G4fxo0AjT/8EXKszqqIsJZeWTdlRrc6eO2tRDwY4t5A8C0qLynwgmShHevKui+6gqeCA817RuvdWPSvWhtofNxhd+JjNqNjBFT4OgAUunu0dFmETIYjuHpXAoKc72WZfr7u3To6kw5zNoN8ooQCjLfhCrcKBTSOADTo3lMYvE885QcGd+iVzVguOr5P/XX/TGTHQDS8g1krK0t6yed8PV621Wh3hSTvmBbGhPcMZZymKVzDSGhQ6F44pRFM2Bsqc3rkFdiK98nCpnmbLGcLKjq4XgpID8JSFzDMD8GA9A/YQz4DU+Lk3TvRSyiUPjETkwQuoXOrO+62mG/lMtvhcz5SFit3VUhcs12zPv4e1HovIhycGM2AeM6R3Zuq7ZWZtUGYrJGZfogQeYBqyfwh/VZ6p4CqM9jr48NwcbzqaBatFFCeBrgkqTVSEvIkYGBlhTp6W/M5mpJvyClTNyPnQ5x+fKZBA5b7zAN8zRsrK+jyqyJc0FGk7KyodN4jpyP5MThcESLrdz4OlNSMQq3FJyW5QWNGjTwQ4RjKpgrgzrsZu0i40I2C3ZpezJqmnZu23U6c7ZuVNyoT/83ssYsCUbHnnhL8sqrNrEgo0+kh7yaEVgmTuV9MghGyRaf+PHVY8iD09qZhBdTRMWBEp7vUMnYu+zOk3qIwWf1HgmyFtmOHdktluPJ+6IwcxZ71MI8r4Ev3MA3z3ML9DjWCsVML9NW8JF+ruOoJtelNQZNnu2vOxXFBMcKJU/lEZx31IFkL2VBlmvNleHSQQGxKgrCgE8QIJC6MefKoFzgmYcXAV7QDYjvl0YFOdgti/sWJL1WXMkobwVBJMX9MduFyxj4ebH1AULcmum0OPFEGo/wYWNcBGjGlZ4NbIT1EnWl36d9usuvkApKVYTGbAXuLK00sLsV5Yav8xHzuJe0gNzu5pQmrZUJ6xCP823Jk2dVe0YnXdD1Brd9d54cuGLbbj1ny0RBAQZYctOpGNKvgz2eWTG/+Q5PUTVUQMPUaL6giXQiaR53AU/NcsAe0IReEGrerGgvgNMtVsA26JLUcXWVxpHh6Idcrm1IITcGBN54ydqFosclLNu3P7fd9j+XfQlrMROwirit2JsMwssNhQ=","layer_level":1},{"id":"f4e8439e-a568-49e3-82d4-e512b2d06446","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Quantum Chemistry Application Testing","description":"chemistry-application-testing","prompt":"Develop detailed content for Quantum Chemistry Application Testing focused on verifying the correctness of domain-specific algorithms. Explain smoke tests for UCCSD and HEA implementations, ensuring they integrate properly with device runtimes. Document API import validation to prevent circular dependencies and module loading failures. Cover device runtime testing for both UCC and HEA algorithms, confirming compatibility with hardware and simulator execution paths. Use test_uccsd_device_smoke.py to illustrate how quantum chemistry workflows are validated from molecule definition to energy calculation. Address common issues such as convergence failures, incorrect Hamiltonian mappings, and runtime configuration mismatches.","parent_id":"7972cfd4-c320-4a66-ac0f-409aa8b4cb1a","order":2,"progress_status":"completed","dependent_files":"tests_applications_chem/test_uccsd_device_smoke.py,tests_applications_chem/test_hea_device_smoke.py,tests_applications_chem/test_ucc_device_runtime_smoke.py,tests_applications_chem/test_hea_api_top_import.py","gmt_create":"2025-10-10T21:23:52.77117+08:00","gmt_modified":"2025-10-10T22:11:10.399785+08:00","raw_data":"WikiEncrypted:yry4RwNsRP6Goqb/xVye35hGQ0QBYsrk6VZe+1R9aVKseFkcULOs0WKwApks0Wn7kOQ9pnoqQw0Hmupug6DzNqin0nidnYEHop73sA/4+kP4MLFdzRTjQvZ06bMnaloum7tvz73ZjTxdiNYldq+ReqLA4m/aF4o69243Sb2S1x9s+bxXufu8lTEGx0NI/8yQZHCUjeduKf29WskIlijluD4kr0sSknZXrH2YYqDfJ8c0ptizx7l0EHuRyYgP3eBjL/QODsLZXgS2fnx7J/Cox95ZuA0RtgfHTsdgF3S8CvPV3vpZmMQ2zuWCfLxFgEAv4uPTzprFjVUs84ZHToRfX2+UzaUhbQzULNMgmqR9gSPjUdrS78VHX1SoaATkDYamEBnoiS3Xwjb0qMbByBUCL/nCooVimjuc7792aJXo/9p0Vx/iOpoT2+ZtHfPYuj8Ahn5LuH5qFNYaIZsmH1A2kc7XB6UxMBZ+VtyBoWrwnERbeimPK5J+FXIYuo47t7NDPYTlygU8qle3wyMSLTOPrAWEWPzZqOUK/a2RE6vQqFkVRJ2XFnV15BVgck4s3QPM15BMcTH/8rHQwfQMNJz/ZTo/UpHiUE1hoSnVY+D61GG+AtYOQnE/okEMecu8PMe3WuGALK1lggqVOTPEg+S2UqGTPIoA4JMhodfUm9VAx8FS8wUYRC0fqjQv856orWyqFlGZZ17kWfSHgwuuXq3HDJpqeZPTAs6k0HfBO+GSlb9Yn4uZ37JVx8ap6Curc2aXW+OLSDyPDInTD/lQfJJwjCX9HG8BF8huAYE6IyqHRAQgsAFtOpmvzRuMIp0gT57fVliI47JU/JEv7ja5piw2pxOl4oDVSYuV0SQg+fkaZJM1djx9v0LaEcugCMiQEbego7s5amx58R04lb1X0O9Ba0orIHdH6xWjhdh7N29bNMz5vdLRXCPmsBoA6UdegBln/WwmKzpT9Nx6rhG7LhwIVZhrX3TpH57hjOHs/k6WEwq3+CKnKKNumGrVCKa8qXWT2ja/w3fDk3IcR0d0pPTkTlAJi0zsScxwmlVptfn6/ADHs62NqttvvI/LJd3mJqaBQs4kmThsymn8aBbwfsyHTV7XyLNlKEFypw1Z3m5lsPIeq7CX9JZiM4QlNJ+1K7TvWts0CYFU9VNfqzkzg7cNBbR6UNQ9tU6Uyhk/ZZiW2nD3OSMa8JOQ47KvisAOau2FRxWwOYhu4lK8xMlO4esjsejM9HEE94q+hY23vPgX/vLWbh7/ELfL1/ht+YH/mDvE119A8VxgftLFDyTwmvrV+WODcWI+loEBSdFtN8jtk/5YGe1W/VG8cAxQL6HhQcppvSegdFu4xNDJCAlqVCKa1cX89R1aJcz9sH+1cuRVlaoS2f0lELybENE74GC+F+tMPfpXcbqF12z75IWylj8ineSu/eMjbVF3HAfEBk8Gc2CIu+xWAAcdcmokQ8Zx6CECsOJoQ9rTyJVgGQsW3VzzAg3haowJKn/XYWssruc6uOnj6HWLcIqMy5eN0qFwjB5/msPUDxwqS2ffsLYZEK8eofTfR28BBVdJQPj7y+cd00d4fJ0uNNXJy5UY3EVL1BgOZAo+mCXA0lCnBqD+l48Tt44Y0oFrdo8ENNV496igJx0Azac3EElk/iKuRRev82lV","layer_level":1},{"id":"4ac4cc07-f04e-4128-a47f-bfdca70bf55d","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Devices API","description":"api-reference-devices","prompt":"Create API documentation for the Devices module of TyxonQ. Document the Device, DeviceRule, and RunResult classes as the foundation of the unified device abstraction. Detail the simulator implementations including statevector, matrix product state, density matrix, and noise channels. Document the hardware drivers for TyxonQ processors and IBM Quantum systems. Explain the session management and execution workflow. Include configuration options for device selection, noise modeling, and execution parameters. Provide examples from examples/ demonstrating device configuration and execution. Address the integration between device layer and compiler, numerics, and postprocessing components.","parent_id":"f53ef1ed-0ee1-49f7-a90c-99d15b936574","order":2,"progress_status":"completed","dependent_files":"src/tyxonq/devices/__init__.py,src/tyxonq/devices/base.py,src/tyxonq/devices/session.py,src/tyxonq/devices/simulators/driver.py,src/tyxonq/devices/hardware/tyxonq/driver.py,src/tyxonq/devices/hardware/ibm/driver.py","gmt_create":"2025-10-10T21:23:57.626419+08:00","gmt_modified":"2025-10-10T22:13:18.247085+08:00","raw_data":"WikiEncrypted:C34GewOyK1SlumqKiPsSg6Iix7D5kSJCSfnRi5YG4l8vzOUqJDRTVhBxaB2TT7jTueLS8OfGhnZX8ibndAkxlL82M+cESxe5TRImGyigYjJ/+H5EqDIpQMSqVeqhz2VLWuFIDE3wOvsy+m8k6E9zNrqK0hp5MEcH4GJl2chRmqTD/FNjViS4EgQWmpFjebqPRUj8+VnGE5ksoLi5WrRhywC11iWkD0L12lnFTp7A44fl2PB3vIulagCuOk3gTjXow1ZqeFWeAsnVPUroOFGVy68m4fzzEg++IF6g1AGqp8BObLQK4UEgyZQ3hZSeF5KxM8vxGEBQU/eoahBCiZFxnCTYlFjOjGtxZ1TmZPleU/bJpNx2aZPvMktIIQbp2KB2MFSnLFf1IUqnkXaN5FiQ9RyM0A5n4Yi36w2Ct8TyyRUZbqvRKM8xvauwIUomoVkL0iGFuOTQlHHqFbrwZn9WruCBMTQWewP15brLarsuYuFv+WkmJtEhsDe+bV+A3/84Pd/i51FfFFV+V/FUpuUG7DOfR4HRquQzwLMrxCwG5+Az1jr8xTvDQ/e0/J+URwgeIXRyomcayOYxWaJXePfSa06dHclwhsL3J81Zt4Tk2ybJ1eynRoTTmCE2m1UCSRPHnAexEVjfMfZaPtAz9wXPyB3RkGKEXh7t7LRdi+7+U8fO2jR0w5J/X3SYyemqkmTwPL2O7Yl+EW4Smrw9UUTE9zDPPw4vHjO8+hIAjzmCUBT6YxGoTpNXgIO47ryP/7UaSiDIEtTrx+b4ILr20uWX17pJB60PYgcavQZbBAz55tsDHY4bBIYff8pLeP9+UI+y7Kw3xokpxll6P2lT8w+Rme1flbI9YYPxelARLr5tht4dw8LpLQXaYwl1qs1dAhg3S0ACxJ3UDknT5hvtqynzAmMKrm2qdyhqS7OWkjFMHSoEEeWa6a11DO0stbTEjlcAQB552X0mTGQsBmUcKQhUck1NWlAA8Rzw2Iipp30UVJI//hU989OGdmgNLNpphe1z73LZrvVUkQ71m6IfWROazPW5Pryg+OLhZnqtj96y9snhR2XggyVlZXELotn+cgGVAVUSX6g2huY4z5t9QR67Vrp11Zjpjx7ouW/qE5OUPIO2Kts+jHgSdtv1h0qifqXe+4lrfvrDWQy/rMiNkd3u03pljQwgIuckyiLN5UG7JJ33ZChQQSGEMHgHqgulcV+L6SamD1/8ApdsikgGGlCR+yZSVNRWR7trNr1mEz4290ssQGd+mPHrgaMgfe+3jd0Lo5cSFmnXCE+mdDarkGoZnVt2eAhG23kgGN8NQOyPxIq5AcfPDfLAHGEZrNOq9Y90Yla2EzaVYxCOCKyAhJdbKa+Zv/fO3+RmjkMTbXMTZnQ/3tk0FKcTWli1L24v6PeuQXKUTDsfB+Pb7OOXpDuGUu5GpgRBuJeCpI7E+mnTeKfukArjdmrhuPpX0iouGX99sdc2aJzabi5ysvokPBTt8Ih6Lcuo9FJHtdcA27MLQ+bSeGgSpiD5FJTY7DgNnN6gOg4DtSiNDOYzNHK1/02jQMlaMOAE54GMluOFff/AkomHJcHBQErwtbgeA3Dbf8jU","layer_level":1},{"id":"f73f3d8b-079a-40c6-a29d-c2ec75b8fe48","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Auto-Measurement Insertion","description":"compiler-rewriting-auto-measure","prompt":"Develop detailed content for the Auto-Measurement Insertion feature within the Rewriting stage. Explain the AutoMeasurePass class and its execute_plan method, focusing on its behavior of automatically inserting Z-measurements on all qubits when no explicit measurements are present. Document the warning mechanism that informs users of auto-insertion and the conditions under which the pass becomes a no-op. Provide examples from the codebase showing how this feature prevents silent failures in circuits lacking measurement instructions. Describe the interaction between circuit.num_qubits and measurement insertion, and address common issues such as unintended measurement addition in variational circuits and troubleshooting strategies for debugging measurement-related execution problems.","parent_id":"623db65c-51f7-4fb3-bb49-e20dddd2cba5","order":2,"progress_status":"completed","dependent_files":"src/tyxonq/compiler/stages/rewrite/auto_measure.py","gmt_create":"2025-10-10T21:24:23.779246+08:00","gmt_modified":"2025-10-10T22:47:24.237986+08:00","raw_data":"WikiEncrypted:r1dbw1ciiG74lYTjPig5U2JF7+pViEyIayBXrQKsU6Xryv/00QiYlqZxiy2YRAikfhCKwzyun5Ri9XnUan/VMu0i/X2h6r1GHfQFJ3rqMqcgBZR1nXQIAyU4jxBIUNQSImece0Iwvm+GnEjpySC8RwFLcadRZ6YO30334seT5/6eqogVsyb490lDAy/nJ6b3u59u1ERWOk+FsW3HHEyagHWL8rzKCz372rGyZMZ2zXPECOu+FSMVVh4ByT8Rdf/9B6fCAbFV1z83l11MUJF0UZT2+xVoGJlaYWEi7QQYBgGx926lhnbT+2W1LugcM2AUtLVF/YdqJVf+kdoL53HkVfPTvCbTy5SfUZ1xKpEV4IKbqWblr5zyM+FbPXvLh6IVVV2znTirluqFXTY+DyqXaPG1M192fNPrjLYu8Oma1deO8CPZzWZJkFiARAttjIVCFX/4nMdCwIqtEDMmkrs/PAahK9B9tiLXij6Pa2YWn4Cl43Mm7NBt+vcyLV0t/phJ+XQ3Y/KMP/hTnAbOeLJC4hDttlRQefrddJ/X6B+PMWt/V32yo95ZbizIgER4FT2QucXBSxKuOQluqkl/mxpgq/Y5n9VX81QqTp2c2QEejARjQO6Pq/drUeX9max4pXhOKT7rWGL+a68uchqO/dKWkD3jp+jYpvc/TPCjee51ZwGCZdMSWqhU+E8wDuyoF1tgCNsawR94NLMza0zRS4muXXc0CxTWsS0OBSsclevxISey6Vw7XH65le3jHCP6W7BfljuYWLweR+BwRdEbVJdjfUhaNCBPjktlKQdmrYmXphuaB84M/3owG2PfdlsemPqlnmPUEg0jejKozK+CbHHNmlk850aKUSZJo3IVLYpe1VVvmZj7oVoIoG5OlZubHe3k+z5CypHcV0npi69bJ1Pcl1/7zr/c/NQlrVtR/ODJVuAJJTPf4fzpvJO2TVT73Jn7+l1hdopdxFC73d7HIJ/Qa8h+kVAgNDQfrb9UPRFaIEcqgDLK5xN/L7Wv5zhINZRKpJJ2ajSoHI0TB4eXpOSdfTQqSn4GfGo1MSsrM4K2UVSQX86SEEzCz6iBhmJdvUy1YLFBvQvHEtNSZ7KqC3IaoZGFhNlKVoHSBnsNlEFAfVD6Ax4qBirjEH93Ti0R/IZEWQJnVi43BobiqdUp0YZYM2XwBaS4Ut5S3rzfaVCyR/SyBJSJBnC8NH5ULj24eTWv37bKG0+XFdDLN3x9mVycSrDVXm9bfE2C0mRtwr/mjYocqgQeRgXs1Pjdu7O8y3DdzS7eppx3j+yui99nHSyLEJSb/IYwEDzs5FsYl1w19h1nIrMggTRmGooXy9grTaUxFOYCnWT4z9FW8f3ZenViziJV8kWhs6d96AIVlwdSsD9nqH1KmA8Q33REx0tjHiHLP+B0PaSUl2vVWsyop/ZB7K+yUpOg2gW9rr++e6Tmx7n+Pg2DfZ9FU4q2PC2NGpRe","layer_level":2},{"id":"fc93400c-d676-491e-8495-6e418de8845d","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Context Management System","description":"context-management","prompt":"Develop detailed content for the Context Management System in TyxonQ's numerics backend. Explain the global backend selection mechanism using set_backend and get_backend functions. Describe how the system supports both named backend selection (e.g., 'pytorch') and direct instance pinning for advanced use cases. Document the lazy resolution strategy that defers backend initialization until first use. Provide examples of context management in multi-threaded environments and Jupyter notebooks. Explain integration with configuration files and environment variables for persistent settings. Address common issues such as backend conflicts in distributed computing environments, thread safety concerns, and debugging backend selection problems. Include best practices for managing backend context in library development versus application code.","parent_id":"8237014b-8913-4e25-86c3-7aac3af21348","order":2,"progress_status":"completed","dependent_files":"src/tyxonq/numerics/context.py,src/tyxonq/numerics/api.py","gmt_create":"2025-10-10T21:24:53.875056+08:00","gmt_modified":"2025-10-10T22:48:29.329423+08:00","raw_data":"WikiEncrypted:qiOE1k1TA+YNTXi1/8EeGvokCyLpa9H3YB7ZISkA8Ziyp5v01SG1dZ7jq30+PBOgNPqVpSLg/fcYRRmn7KbzeRwYceDyhubpur4gX4/I7QPTlEllb24571qUNlqwMgiM8HkPxBM/K728D1pYMWoFj6aza+scmKnp6WYGo5D8p8s736r+7IWhg2oPHQzkpWM3tKpOzTc5B0i77vWizImWhuv7duNkOr0W9RZz24Xi1DRtJk7+pXIdlKDCd/qPPD5gdYw7RA0H0jmMcuzRIzFQYizLm41Zn2gs0iWDcu1Ch1ExtHW9VCN9GPNxWrh8XyQGTjJoqiyHq4NG9buPlu9KVBm/Lyhd3hw4S9pQqwd997e7TO0No8QIRc+H5sxiosQ2cjZbYPSt3Rs/YlVwXlzossP1ugl3uczW8CW7oOmO6hdXyWr1kkqRpKwQkVROXROlQ2x/ChwFBFEslCzMdbugAY79JxyxiPku9mesF3i19n3FmAiFyQznFAqU28JoxXPMXEZbnl7ECm167wMiy0Y/8e89fUbGuMpwYrNYYGEBPMVWMJfHqji3W0Hs6vuWecrpP72jmkImubUMIED2nEwVQl6HczxmKRqhy5graTRAOhnV45r1sxkZlze5Gc0jEwZOUcGtya16KNuXRxWUYwsI+ZaI62ZmJayjkn/XsyVa7GsuBtYxzrEViWgkEzB3BGpJ50ZEIMFsy0GK4bszRfGuASZP389aGZsVa18EeFBTWYVjypARMbkIxsxPqF3vlJNh6jkjSOgrMFYKicv9NZISyJGvvEcggiqNMUZxtk8Z+K1KBsS/OFSPFcb8SXPc7rlWgc+3g452kqQCkhWoBYp5UtzQfbtlI1ZYgfApd/cvtEPW4M3W71teW8WtN+xMdz3yUtON6EXYQIki1QdQqMztbJN/lCO9/sKX40NxNUrV9kH38PP/9EFNbkSueh1SNEyZ48JvxaSpqcy9CRq1SpUwdaMc3x6BHikYnaTDWVavpIM/bQerPJ7M7xj5rTUZkSCxNqe5ni7uVtOEv5eOQlH/3J+incr9toCOjgCJ4mFYlgNJc2k+nbJFUienTqEjh7zzUM5WmuT+fc3f41TH4ry32WBKcC/qRVICHMln+H3hPpC5PLz8SrVGsCEuBikn+huWzM9K8iyk0rOZiUUolVymt4tmqb4sxf9XZcZDJkf+ixzUpS4Jwoxe+JUZOZxQsTvQgKtJoD68JA0MI0icdrZyw+UC5v/mHPtk8spEF2e/A4ZPW6G/F1Wuo5FyKVbaVpowCnZ9HfaQoP13y9T9J8InU5y+6Li7S+hqitcee1Y0FVDqymRqzpsXXtdH8uEEdNGcvXLaC0mnGqUenLhuI8ymdoaVLFKPf4/8WXfrpM5R1NJavMCuXkT8ublF8DqBx0Y/DdLa7FFzjtHRUsjPEsN6YwCaekBs2ZV5N8cDZEQ/JoK9BJhWa5jvRw8ZcqzX8FqNDGwvm+TtjlyEd2qWzXGlhpVIhzrEHNC0Jfdt3fxIiXs4i0oHnB8VeEMsZp5SNA2p","layer_level":2},{"id":"231def21-08a6-4a24-9919-2687a70ea79a","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"k-UpCCGSD Algorithm","description":"k-upccgsd-algorithm","prompt":"Develop detailed content for the k-UpCCGSD (k-Unitary Pair Coupled Cluster Generalized Singly and Doubly excited) algorithm. Explain its theoretical basis in capturing electron correlation through generalized excitation operators that go beyond traditional UCCSD by including non-iterative higher-order effects. Describe how k-UpCCGSD uses a truncated cluster operator with specific excitation classes to balance accuracy and circuit depth. Document the implementation details including initialization from molecular data, handling of spin-adapted operators, and efficient parameterization of the ansatz. Explain the role of the 'k' parameter in controlling the level of excitation inclusion and its impact on computational cost. Include practical examples showing instantiation from molecular inputs and energy evaluation workflows. Detail configuration options such as active space specification, orbital optimization, and runtime selection. Explain how k-UpCCGSD compares to UCCSD and PUCCD in terms of accuracy, circuit complexity, and noise resilience. Provide guidance on selecting appropriate k values for different molecular systems and basis sets.","parent_id":"edf523ec-869a-43b8-8588-fa64de51197e","order":2,"progress_status":"completed","dependent_files":"src/tyxonq/applications/chem/algorithms/kupccgsd.py","gmt_create":"2025-10-10T21:25:13.853965+08:00","gmt_modified":"2025-10-10T22:48:42.720368+08:00","raw_data":"WikiEncrypted:sQlMXfIuKP5WaVesOOHF+T1rX3mozqX7q4oqUA3jCBOlYs+FcBVMqitmkeHxsgrLBh86dhOrNm6iSkXzjGt7XuLUYuySDUFBNKVPhXnGfEhOmweDrbwXXOc0TAL/7KwGMvog8PHqVIYjpLds6rXCSV93QyVgT1QOiXPebds+6IrNYoG+rR3C5OjjwsIwEILHtBZgg493vgXx0p4N3JzOoEaGLUjB/goc4WY0IcQaenjPd9IPVPsjBBozySu2HTrJbFd/LX6Qi7lT6rYpONEBh79XRao9nfWw+/Skk4GS3WLPMnMcUrCmaVHKI+CDk9oj/1sw8F0vVpCE83s+7jt1LhJUVfFyHFOhjP9jIkLw43Er5JjrrqmluELFPLacsqjJoOziJszbReakF5jhHlZsA+2j1ttBK12MyC3TiOVu0gwQfQkdMRyEJd8feZw+GJaVqhSEbDMZQP68IqJZ3voBfAOumNVM/oK18Dyr0NWUkTUym4XdalVyfufuU/Pnvw59AZfHsQLLuRe1cuitkHwXhcMQvXJPKohCgSU0eWdzn0WNSpCjDsgPWnDaBukb4Q86COfSMKbDVK6OYgoBsGVaPqOSfj19m9+YQuW9HdhSAsO1DcW+xVEqA+3aYS0KAFwMWQOEgkDbDy2quguKJoKl6ySjFq3kRcAaNhLEyJvZjVdARJbyJUaouiT47ehSI3J3uF5nRQeyNW1U+Zi/xU4TY+awoj4eJuOuX13Cef0mstW53tclI+7b0EwTcDErlvhyT5S4o1XlSGNth5ZICbBrmnEeRlYtCk3HyeYA5XBT5EjBzAsYzWnjLLCaiw0/dUw7EbjJeBd+qEMJuGCSF31Yn8cDPtQuGaQBJYKWYjJ3qiK9ic/3AbYSXas08CzJke9BgKcn7zr8yx0yIrm6FPEZNjUcOXBcBqRgPM5zWU1s4xg9NKQeeboSqmLPXAYqyb/FWWLjHeEtpPQEYJ88iqFlEiV8g2kilOGBEl5wiYDPDB9FWTw8/ks1wjRHZw1vRLS9abwhamAL77bdsBdm/Dt1RmuPPr3KJrLaE1YY7F0UEAEVSe7DvjMtANttt+P9nOZXI95onj1xQqLMMN34bZ9Y5UPE8ZWYh0atkOoxopZv7IiNW3SLyo0U+UB5KyLsBZx2xWXbBdLx5FYofEvqNPmYL/5D8y4mAgfWzIcjKNxem+STUO1AT1jbaXHVu21cSV25rf43DWOFYouED50xr2eMoZT59gxdAPCoy3cWydA1xEk1hHSYtKe7RQC+qz55dYKqns0KejOjwGMqOq3f7eXnajrjU0QTqSOnwDPS2TQcb9NPlsQfTBIFiWsFhQXwhj1eFK3/zg3eGiw1ii1VS3re3ar2S77+1sjYoHluKxAphCdnil47Adlum2k/n1g5I6alasBkQy4An/HVLiGb76NDBNXeit9MT0nL4jovicbtQDmT7GPwqquNI/eYhoMT2wp89rhpuANKpkDI2SZN6miR5PMBbFH1RPvQyj4VNULhQTjRBSXEXyGLBIU2Woecf714+bAEr2DhqjXrWf8JZ0aYBdG4oeMgu9MVPLru3bQxO7QJLs3T98m8qoARAuyh/QF6UB0SbMxboEV3WAhoT9kXhV48dieNbUH5sUaVR22V+C4HT12Vqxa2+yKylGT42FYJjR8ATlHShbKzsxnQHUM03sPjGEt67aL8yqdvL/LeqLhOgZY4boGJa1lozquXUyRAayf61sVHRyg+Bi67nzeRvFA6lLYkuOC/YabPFfL1O8MrmmtvbazXXbRWcd0VdH2cI+S5UCKHqfyrmS2ZUqLFr8KGb5R7rEAcCjyKzvuNJ+QjWQmSpREu3Y1H5KvwikSOY2SmNrDZY4dBb6joZ1hOVcxHQNQOaz86ow1dZiPmkjICyJtq8/4WUSHxsoAMhdj9kCkpCZ4Xf4oFMgA/5uzKww==","layer_level":2},{"id":"e15fd39b-82ec-4947-92cb-431eed9f9d31","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Hydrogen Chain Hamiltonian Modeling","description":"hydrogen-chain-modeling","prompt":"Develop detailed content for hchainhamiltonian.py demonstrating construction and analysis of hydrogen chain systems. Explain the physical significance of 1D hydrogen lattices in quantum chemistry benchmarking. Document the Hamiltonian building process, including geometry specification, basis set selection, and fermion-to-qubit mapping (e.g., Jordan-Wigner). Cover parameterization of interatomic distances, spin symmetry handling, and ground state energy calculation via exact diagonalization or VQE. Include visualization of potential energy surfaces and metal-insulator transition analysis.","parent_id":"7bdf7164-b7bb-4e90-9d5d-2f730dff0972","order":2,"progress_status":"completed","dependent_files":"examples/hchainhamiltonian.py","gmt_create":"2025-10-10T21:25:24.007838+08:00","gmt_modified":"2025-10-10T22:49:19.476421+08:00","raw_data":"WikiEncrypted:7wcAcvuk1o802/13GFQHSqhQUH5EskUYQm3IJT2vtC+Ep5kScYe/pZrox5Mdn27godw8JD7PzX+Ij1yBnI2FU+JlCTApZyjBYHBKW3+E0KTqbAjXTMucmNIQC2abjQL40NxdJdQleDzIvLuafq6FHQ5cEK+yLplrQhSnwqJTpTQlHoNSb44r2jcWasIyK6dZFiEhCeXs6Igibba/KjnSeubjMxC+mV6A40/H8XH99gB18ccZBFg3dS3h45hys3VcPmD6IfIF3igACvHxuVjVwUnrhYW2iG+maUmJglqTXvOvA9h3kUg0LGk7AHCGfqVbjUU4JLT/dJcrWbeidmOALwAMWee2jdNGi/SvehJMcObxKkyaEvzkJugaYky1ynwQE5lYmYiTc8aHS7uZPExHRdnFB0y/ziNwMXwWwWNSyx+SowwQZDOaDT1c1kDvSHgIQixyZOp+GvDIycS4JD6Gv2JMYQLu5z1XY8sZG9Iu6JhLwjSW94kGU02CFqyI9Kzk8b/Jw0oIpcp1sSZInwuZE9Cr+3v8fN/R2uIU8dkTGAQbYNjxuI2/c7Vuc3BvHhz8H1ywmzWciZ8RtizrFDqQ/M3MG6UdnU2IYDZlKpomMJo8ipZuJ5+Dq0TXwqP3b03UYz5uVBSA92rHWQC6QgtPLLn6TjEYTStz8Nxh6k4JwDvu5fQBPvtBY+a498fzafZiHV8WgL+XWW97ugBYJivu+2GuyQCLtsvF0FfAUAMJoB3PEHyly4cbZ+FFstI3x34FuJibLjLUY0inX3vdQmHaEbwoMzWWSyKlbOTtqi7UKgl6hWbV8Q/XPJcUA6DBktdL+oFXy5FpDPF5g5oG1O3junNnPqz+QGu2dT2ClvbPzaVNDwbuzJiVtqyRmgXkrmegZqcwFLORUZovPE66cp8isug/xepNBg+m1kkDwi7PncQmksiMarmddOU7iNzixSU3EfKxYPWb3SyyBiuuFDW+DeByb6bCw6hWvAbxoOfLJgqjaX4qh5qqhZsYELzaHdFgqgmUJLi5st3FxI2PTD7MCMQiw1M6trdrajKUnPvv+g557v3h+0LhkgwNTB6OmdWalI9bsc6U/wvQAQdRHmPq30qmGAuSyRtPAJolw4Lr+AbtMapObWvg1iJj90US3VnV6J8D3Goi5TDXUdHAxu54vQ==","layer_level":2},{"id":"53897d59-8e72-419a-aa8c-e8057365beb7","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"UCC Device Runtime","description":"ucc-device-runtime","prompt":"Develop detailed content for the UCCDeviceRuntime class that enables unitary coupled cluster (UCC) methods on quantum devices. Explain how it constructs UCC ansatz circuits from excitation operators and parameters, starting from Hartree-Fock initial states. Document the energy() method that computes molecular energy via grouped measurements on quantum hardware or simulators, using bit-reversed measurement prefixes for OpenFermion compatibility. Describe the energy_and_grad() method that implements both finite-difference (π/2 shift) and small-step numerical gradients, with batching of all shifted circuits for efficient execution. Detail the support for Trotterized evolution and multi-control gate decomposition. Include examples showing initialization with PySCF-derived Hamiltonians and excitation operators. Explain configuration options for excitation types, parameter indexing, and noise mitigation. Address the measurement overhead from Hamiltonian term grouping and provide strategies for reducing circuit submissions. Discuss the trade-offs between accuracy and circuit depth in practical quantum chemistry applications.","parent_id":"21884915-2785-4d06-874b-5407f53d00b2","order":2,"progress_status":"completed","dependent_files":"src/tyxonq/applications/chem/runtimes/ucc_device_runtime.py","gmt_create":"2025-10-10T21:25:30.566633+08:00","gmt_modified":"2025-10-10T22:49:44.590861+08:00","raw_data":"WikiEncrypted:BQH/b67c9S1z4REKC7h3Oox0mJ0Ta7A4dlg1SJ4lt1Uk4MrdbLFQujJbzswnnO/73sp/luzuR3I+zhLCoeYc2YNgsBjenWrjRpP6Wi3hPHCUt61cN9DHq0TmPvkmRCmXCwX0dU3zWlE4ZmfXzwObz/ms2/0XveQBoeI1y9c4N9lblIYXhxHImaPBUICKxG44zBI6OMDVvi8HrD8WdVSILa/UZ15h5PkqEcIf7LRAofBgZRWFewvVxNnZAvsJ3+TxVgaldSl4INy6mnzHuTaEX4ByrP7sdv/Dpp69wf+g0kO9XBs+N6QLCC8G/bNKMaczQQmZTQfJK4Sl5D1JbLIGF0LPSSDnztAWnbbBPibON2me3b4qd6E2pjEe2zJlu3NRZddizHWgM7D7TVdOKXRFoxSJ7RXMkaHRxjbBTyAO6ciDcHDQ9dA9j+y9NbZzW8C4G7Uivr2Lh/dm9+OZUbFid7GrJMMNyUiKZsL2j26vOOpj0ghx2qRxMHxwCxJ6W9DDunT/8y34PbWttGTmd2gm31ADBQ0pFYJhIa/2Kp4yTWJOQ3BS84EW9omDL0bmjHgQqHxJOIDBm8O5pSXK0p2ZoEZwO7J85RQ2x7YCTB31pn+geMPYp9kbjpac2ONU3FltnP7VmYvd5aN8Kuh4DPSkDh0+sUql5HBx0tO8RBvJ1DJl/jA+bSMsUsKnw9OKQVhAy1jtPnLmj8ITFC9jqxCwqQO0nbY9sXrZDddQfcwcDIy5gFByXoQTGkUmmRZCdvnVXoDGcL0mHOLGDhPK+bWneyUNc7Gk8imArmR3cbikM+8aq+/QNyKkfSJrYPFX5njPjM8KkH7XEb4V+Ckglygc/UTZDOLV139Ud3CAAcvVJ1QibvC0/N9GtDQphkazdSyx+Fkbvn02i138XFgpTovSuaedpA8PY49YjvXaAqFztPiUvN/7vj/Iqy08YzFIXflVCC/fH6tb10wpe4cOVxlPXnX3XUINbMyuY9BluIStDbhw4ZUTHKS29x0ZskA3RzQPS+xVn8eRcLQrRCJ0xIudyM1SRudsfb8IdLrx9je4LqIdnvGh2AVGSE3Ae4oNp+N/+sY4YFF0kciQlO7SK/Bk1ArghNdZ3iAP4hCToyDFBqporrPtUoNnOUyn9OzMJVWN8dv9y4ul2shuGDxqfAne4+q5e1tx6/awtZzUdCV0BzmSuzNY65ooB24apECl1EK1Ph8TL9bnLjVpQbD7u/KQj1rTf+sgGRvh0wV9bNrQma1l25hqO29veZWve/jFgnlB3fgRSTQ92oUJumdZJDlMnaUpPd9P185QMhe2Q8D0VG0UwYkMQ3c6My9ZWPKHbo5WXdbYdRyjkkXyQzMeUulRn6jHVH+1Y0uQlV2GT6B3VBAwrIGIoB+vYEDX3BQ/FWyfFkqFIWIiAQxjXsdvYIKzFfaN4By4lKebeGmYDFOgUU97B5lUAzVd+Rr+OOolgk2zJN42dxa5hWY1di6ESZrB/2+YbnAwoKR79tbl7bHG8lcPfdbaq/QehPf7m9L6rmvIxl9I8GMN4ov96FfhKc7ytuXCpUtyrIH7T5cjuTimHAW6/IF0og1qb6Gnc2J+Kx7dlXoLRxBLm/7XJIJBBfEdXIDII/KA5VZkRnhkDa2GcWXPhXPIq6nOKSgOsz9X9k+zCY7mNFhk5NbXt0VrCmvoZhke/GwWhWfju5ogIC7IPMbMT5xRq26yrBnnRd07jWpH7qupJtiCLOVX97bU483jYeaQo2nrCGhzZ3AGQAs0LsJXNX4oXagTKq3l0EyfHE1o7YUbi0gCLWIIEiP8awzTIGL4Pa/kVcqqoVLFsnm72CuL6fdzisXwjgpTKbmhhu7uGsb6/g2KM6JyHP+1Aoy/AqfSw993qgrJOpDaeF6ibLKLeMiyLB7MA3lbYgNKABDo","layer_level":2},{"id":"d5d0d023-2230-4c15-ad5c-88e517fce926","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Optimization and Benchmarking","description":"optimization-and-benchmarking","prompt":"Develop detailed content for Optimization and Benchmarking, focusing on performance evaluation and algorithmic efficiency. Document bp_benchmark.py and bp_validation.py for backpropagation performance analysis, cotengra_setting_bench.py for tensor contraction optimization using Opt-einsum, and optperformance_comparison.py for optimizer benchmarking. Include universal_lr.py for learning rate adaptation in quantum-classical training loops. Explain benchmarking methodologies, metrics for computational efficiency, and tools for profiling quantum workflows. Provide guidance on selecting optimal contraction paths, tuning hyperparameters, and validating gradient computations. Include visualization strategies for performance data and recommendations for reproducible benchmarking.","parent_id":"24f839b8-80ff-4231-a0d2-bb943e93ce61","order":2,"progress_status":"completed","dependent_files":"examples-ng/bp_benchmark.py,examples-ng/bp_validation.py,examples-ng/cotengra_setting_bench.py,examples-ng/optperformance_comparison.py,examples-ng/universal_lr.py","gmt_create":"2025-10-10T21:25:43.525434+08:00","gmt_modified":"2025-10-10T22:49:51.394065+08:00","raw_data":"WikiEncrypted:mQTetUyqAd1osAW1jpeHl24gYpSvEf4oCk+lMrtAeytmDXzGuHj1RQFSedRDqRPTAh9h07qF6lyp5JulTv16gSTM0/hdF02Z8VRhR0C/6EhJlT61o1lEVZOnbSUWhl2AF3JtUGxCHq7H3a4u1OuGB7yCTzhwHEaashvfZdDAQotV0g56J6HlwZOgsWsJ39g0vq8GU4+SiDlMSH/tbjrjJdRYpdOYpcSZk8SsccjzXuqfAJSmpLZ922F27ZCJL4ieYGHwlGsfEahvBFK1nv3tRcJsoGky72YACXp2frrrDsLDPhOqo60sHGx/ClT/MZLqtqpAc30kmSkW/cjf+M9RrZbT+JxAxDu9R9br5HiNIjHSYbQFXORe0GKZs7pgz5U6PTqMDC8JUVI0t1FAsw3woTg1QHz7RMThDIjmHVgeUavT0mgpGyD6eFNCjmBhyASmnBy4FBEnNxmi+2ON5l/D9OI0O/8OL0Q2AERpaEqwGRkiccDfn2ua9sscx15yvCzEw+6EvhUEoqEl3j9/fB2sar8fRxB7CnYG5ZXFbySsnySmjaAOziKW4iU+gLaEaCChkoY2mh9hGbvDAKZZcG3oVbJBTqK5H/YRBpo6Ko08gfXYOJEnSiUJPZG7Kl/ZcrUC+6TVmg1GAM+MDVSetU8hj4F0b4e1inJuKWAOszIB1W6QfaDvfrkNCHhJfG30RSuKiekOw8JnLwQPdnjshTMUaCVFn5NtYvhQJQlkGbzWp+bpzABNYnb1iD6d+x8V0AksD4H6LbsyLT7tRD0IjWOk1Q183P97cfvj+azbjsdhs2+atpx6Z5094k6RlNFvG+OWwR7mqXBwvcve9AQ7U+wcKnFFtN2wvuDGCikQJPQWUWx+LbiEyTTQMd/X2KHuFd1EN56z53AT7A59nU6xGSltFyw9YcxDJ1nMl0t4vL8xzmurdUEQcDLnXXkACCUvJ0ZNZbYBLGRA0DzwCKJnRWcwFuRGvh2KngvW7m3NciTapr7zOXAxj8Xin16kPYmFR1PvN5Yf2CDbHIsmr0YMaS2tbhTNb8SLV7HaULbxZ6u6U7kwNTaLfafU1kFp2oXibim7R9bZ6flYjxeAQjAfUxwL75pQWfWBEWoAhrR6YWSaf5dqvQrYJnNysYRsJZbFpSImjVnYYAx8RrAKtGTRyuphahpfZ3sut2j6LZ6nzb1LsVHMG0ppzCOX5dZBAl1zKG6An/QTbPp31pMfKZs5XyKhOUAEFdB30152/FSlDWMx0ub+5pOZsSPuxRQow6eUencvUnDLhwyz7jM105XoKtcmoJz4+97IwLzYtJPUprE1Zgd8pPdnlIUfjBWI5TxVEOrcld1j2/TuQ3FZ4gifokuY2YRTOUNog+9/bhkzISQ7lGAdE77ChJao3bRDTW5AqU2JMSVqiNv1dEkC97kC1xEynleNwx31nxOz7yWrS8sJPeZX4Wn+Ig1y8yuATHrBQvLiSqLU+yhODWevfgdWTFqcV7qcdV4E3cvn+qZg6IFXnCD+Jmtb7UYO3t+ydElILY/qFzuq7m8jmbirMZSTKMQBwlkgwgMdtPaTvFfh49j2tp63DwEZZ/2UkZjysI7nSQHJxtzTHI/mM5IfGQgB1zgiTQ==","layer_level":2},{"id":"4daf5f10-d943-46fd-932d-93db8a97718d","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Noise Calibration Procedures","description":"noise-calibration-procedures","prompt":"Develop detailed content for Noise Calibration Procedures, focusing on the experimental characterization of quantum device noise parameters. Explain the methodology for calibrating readout error matrices using preparation and measurement circuits, and the fitting of T1 and T2 relaxation times via exponential decay curve fitting. Document the use of DMCircuit for simulating thermal relaxation dynamics, the construction of calibration circuits for different qubit states, and the use of scipy.optimize.curve_fit for parameter estimation. Provide practical examples from noise_calibration.py showing the comparison between real and calibrated T1/T2 values, and discuss best practices for integrating calibrated noise models into circuit simulations.","parent_id":"5b5d6df6-131f-417f-9e77-eea9ca79ac70","order":2,"progress_status":"completed","dependent_files":"examples-ng/noise_calibration.py","gmt_create":"2025-10-10T21:26:00.193068+08:00","gmt_modified":"2025-10-10T22:50:18.944346+08:00","raw_data":"WikiEncrypted:oIcq6zzNaYrW5pfGoSa0fg3HI/QgOOYsnl2PBvVOyWsdHUfSv8HgZerakRxViaQDuL/9qKWgW7LU8vP+4lRrJya1EXVI+kHhgbc6xEvoJ9IHgbWvkE69Le81Uv9veOr4ATg5jne6EPD3vIyPM/c0Phn0/dIFSfLLcw45oiwvREeQM4TaRNX3NqP6z6NUcAfu05nqXEKlP+k4tCJfWExWLdPKzGtinTPXW5ZV5tpY0iOMOTIf0hmpwdR09dxeAosgqmeHq/BWoGA11rAgpRELrscQ2xc8BOLOVjIQObQAclmIq4YLh+EubWJdmmQmXjn5DsulOhHyc7Lg2h6vlCedXygRj3T6oIEkJSY46mZ4+EysFnrtrkgkK2Mhs0xXRpRLXHlkrDf9GWl30XqBzgQ8SDRisSsuUiaqfTeicYLW3FXe0EqTuLkeeBbcdjfffgYbSAEpXfvlgSr7qLDZGRRwIsLn7JtfM4tHAcYoG5BPaKhOelpvgpyydwzwCSSVzEZJ1+KQAlvw/m/KFPFUeZDpiYb8L1VZ5GD2jt43WcdNTk+myS5KKbi87Y+uCErVVtnj7PNutqJ44Xd6JKLd1nrkzckPTDquat7Drsw5cez2OYA6TzV567PMlQqI/Vj/6139w00GViJQym1atCfTJ2BvYMd4CdFy2i9yZg5fSSjzU2X4PVsTUj9x1xpCqXV/NIBMMfBOeMM+GXML7dYVGwqEygeN09JUOlJ1XFtbiMv/9luIN/ePRIbHa3xRWfD9T8g+f4NEXlQFvYL3dOBJjGsYDws/EqzT6OR2O8CxN8cdfSlkUZSVUHbmLyAB1cBYx4gMPgjvg6iS0gPwEIMi65CnSAhDeBd45ycL+99uQmskUcaqDg+pmRpG0OccSGz8CqFddsUWskPd9OYqCfI4iKDG/AHjceR0LvSXW8RHqGqqWsPRXLh86/HBAzB9vuXANmyoWMPD6d32w1gAQDK4M9X+dCAUCAHZhHmKNLoOOsfyPA9Br3/XERgfOkq7+13KwIa5vT8R+C2OWtPpLirBPOcHOIOdT6UEaTRNFiVbzZIMSw9TWNSB9wRHUDJesIKvOD5LMrMNjrmyWtSJyq5lmsbrB9MlcKWB77WnPRXuFeiiXvD1T/AsK+F95wcdNENmC1ToULnfZHfe5W7JA9GzCRlCClstLYlnJJWckTzbCrwAr9SC0zIPFxqlYquX14HdCU2N3p9nBz6vyeQnJ38UdLB/TDz1EZhQxyUEtCodtVZMR4jhLMLrwKRzErD+589FQMKAHC9Dl6yV+zdNB1+qzxnbfdtPb1YgJrKhgaZyTP/JHlaksUu8KlhaskzqLHmySKH0lH8yH7/vhFN7b62tx+om2RwBv1nwhJKq+DQyZhp04ys=","layer_level":2},{"id":"7db12be9-df54-4cd6-8727-83901bdf2368","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Jacobian Calculation and Numerical Differentiation","description":"jacobian-computation","prompt":"Develop detailed content for the jacobian_cal.py example, which demonstrates numerical Jacobian computation for quantum circuit outputs with respect to input parameters. Explain the _numerical_jacobian function that uses finite differences to estimate derivatives of the statevector output from forward_statevector. Detail how the example_block from circuits_library is used to construct a parameterized circuit and how the StatevectorEngine computes the full quantum state. Discuss the implications of using NumPy for numerical differentiation while leveraging TyxonQ's numeric backend for circuit execution. Analyze the precision differences between float32 and float64 inputs as shown in the get_jac function. Address use cases such as sensitivity analysis, circuit calibration, and hybrid quantum-classical optimization where Jacobian information is critical. Provide guidance on step size selection (eps) and error sources in numerical differentiation.","parent_id":"5d091cd5-87db-40a8-b6f3-190eacdf7e76","order":2,"progress_status":"completed","dependent_files":"examples/jacobian_cal.py","gmt_create":"2025-10-10T21:26:08.35274+08:00","gmt_modified":"2025-10-10T22:51:33.426044+08:00","raw_data":"WikiEncrypted:7fuE17Jb3cnQ6SUlOcHaVcUeOGYC/pHmCB1H/t2EeNZS2E8HUsYEBybbL5WhAVtxvh20wCqJYtsKxbDv5ZjgHABGR4X+2NJaF+hNRrup+eGo/uyY/4qdaqmmMK1GpN5vbkVhZMGeYFkuqSO5sZLoMYFDK3Rd+Lny3VWaUFEH0yExmdqts8K0UfMmDeC8aw95vNWqbSJJfWXuECuVUw+9ti+EMXvtwwfKs9CMiNgUrrdmGnzA3vse108ACXGlcFVkEMGD9P4pBfeyS5o9nEuqML1HHkBid9pVv1+V1IC6CFwD+viNf7+mq25j+HWLP5jPj4WZK5xOTU8IDRAlqHIBFv9SV0s8XyqbSCx00ecZOnP+Qo/Y2mPI1w0l8VMhs+f5bAHeBGcR3VJPbJmJ2ISLxuPgfYyS/QgoLAFVsTak3T4Tn0/qClKFMjyVRxBpmh4Jm6Na5VgcCoCkq4J52PNMPwKEsCB2Yi8LAvEM/jMnuhl8JQ6dJN8T+ZzO7gLqw9BnHMmpp+bMMXYxkHLZ4a/N8h8wgdh70KWQ94u4Fu/LnxMM47iuP6iHmdH84RD4H3JSNarzSbJw1QnlFriT4pPrhE6Qf2o5iNS4sbSnFiXud3crxSwrYk2GeJY6Bd00Mqin2HStGg5W6c3Sge2LVUGg5+t6fak8AVbtjCzs/ce2JxeafTKs76meeggaEET+LiZfwI/xUC4n17Ft5K5cs3iMS+Be3ehwQvDNk0mmGG/wCfBe3pFN420HOb9GtXErNoyNiTPIaNpU12h3G12OXiFA8bNjkmZ6K6dVHgthbgs1VBaKz4vIfVAyObic5rjLmy2BWrPU0DXGDKyhyLSD5pClT6Z6tAb353K3VKTp9VeREDRnA8GQRdvrAlRfCkkAH0jBG/w3xgc/Xfg6hoacVR/Xh0+EBrfhtQtaMfIqzgiW9g+4H4kOFqk2BjXbmjDcA2NvuUMMCxdoNrqVAohyfLqKB8lvY+BVY2toSv0CCtu3uCnsyK/gn1dgLqtK5fgdzB4AaRT7H4u4j30up+nvCuWR8xprc8Rfj94vxYF0fnPrBCvRIAB1hkx1eTFmwnFSKUUph8F0sDb4WCi+u3QrM9wnd4qysD6jurqyRhhryOezjCD82RtMCVykfHOmnn0uhfoIgoQv97kPqWbhStFvhPJHglEP5lihgVc7Kk1JLp6zQdi8TkffWOyLr1gvJUn7gYF+KsB+Q6VjjZp4qWJYEeiBIieB2DoWWwN+XVPOJs5iChZdsOBDYis5suUPTNnLiEQPpVdoAkcGg0dzNandF8EwtbSQbnVGGIAGV7IpQ0HchXygm1u9YTX4gMwSMCPEd4aU2Wt+TzjSDPAXEM4ixMxe+MnmBgYXnWOa5EHE3ctQDpKgn+NN0cohrE05iHDYyyxWazezLxFv0hD1NV5xBCFLpnaXUk1Tg5VTGCz6UTA6ggPlr6I5qyFjgcPMv2724le/s3HASX3/Bq5quUeNlHP7z5YnCyaT0Bw3wMHViJyt5maJM+nfTjZwHkGYdAUnPi5HZtc+2JMVuDuXn8GrxuOO/vGa4vr4+zqvux4OnUfgcFGqhtGJAuNKj4DSYJRuXUL2d41IDJ9OF/rX0CL9bMKKGHOpCMFtrwTDZ0fNJ5Kevj9wLYmb4ac5eYcHeOzwRNlN","layer_level":2},{"id":"0dd6e84b-e9d3-4bff-a365-307b0ebe7170","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Devices and Simulators Testing","description":"devices-testing","prompt":"Develop detailed content for Devices and Simulators Testing focused on validating TyxonQ's unified device abstraction layer and simulator backends. Explain test methodologies for statevector, matrix product state (MPS), and density matrix simulators, including end-to-end execution fidelity and gate application accuracy. Document verification of noise channel integration and session management across device types. Cover compressed MPS and noise model testing using test_devices_simulators_noise_channels.py and test_matrix_protuct_state_e2e.py. Include examples from test_statevector_simulator_e2e.py to illustrate quantum state fidelity assertions and error budget analysis. Address common issues such as simulator state leakage, incorrect noise application, and session lifecycle bugs. Provide guidelines for testing custom hardware drivers and hybrid simulator configurations.","parent_id":"cc8cafdc-4381-436f-8dff-751098968a48","order":2,"progress_status":"completed","dependent_files":"tests_core_module/test_devices_simulators_gates.py,tests_core_module/test_devices_simulators_gates_extra.py,tests_core_module/test_devices_simulators_noise_channels.py,tests_core_module/test_devices_session.py,tests_core_module/test_density_matrix_e2e.py,tests_core_module/test_matrix_protuct_state_e2e.py,tests_core_module/test_statevector_simulator_e2e.py,tests_core_module/test_simulators_skeletons.py,tests_core_module/test_noise_integration.py","gmt_create":"2025-10-10T21:26:16.549809+08:00","gmt_modified":"2025-10-10T22:51:10.200667+08:00","raw_data":"WikiEncrypted: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","layer_level":2},{"id":"5393e6a1-518c-46a7-a731-8fcab0625fb1","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Time Evolution Validation","description":"time-evolution-validation","prompt":"Develop detailed content for Time Evolution Validation focused on verifying quantum dynamics simulations using Trotterization and Hamiltonian construction. Explain how test_example_timeevolution_trotter.py validates time-step accuracy, unitary evolution fidelity, and statevector propagation. Document test_example_hchainhamiltonian.py's role in validating molecular Hamiltonian construction for hydrogen chains and energy spectrum reproduction. Cover assertion strategies for Hamiltonian matrix properties in test_example_hamiltonian_building.py, including hermiticity, sparsity, and eigenvalue correctness. Use concrete examples to demonstrate expected time evolution trajectories and energy conservation. Address common issues such as Trotter error accumulation, incorrect Hamiltonian coefficients, and basis transformation errors.","parent_id":"66b4fb87-da4d-4649-9598-2ad8db90abc1","order":2,"progress_status":"completed","dependent_files":"tests_examples/test_example_timeevolution_trotter.py,tests_examples/test_example_hchainhamiltonian.py,tests_examples/test_example_hamiltonian_building.py","gmt_create":"2025-10-10T21:26:23.668813+08:00","gmt_modified":"2025-10-10T22:51:54.311953+08:00","raw_data":"WikiEncrypted:EaFtzMCVjDCBLZ3ki5w03SJdwFDfb4zHyJsKUUZj7Gh9Rc5MtbH30+mZo4QgRmcKeYsw4sgKldIiVGwp1h8rTQmp6PLHznLk9Yo8snrd/nXBtRBim1vDPtrsFiRpL00uYwPrfyKsmsIp9bYd+/gY8DjbdiryOyC0H54QE8527ij2aHOOCHRvvgGZNKscgTXnkGfD8m2JawXD9bbRDmF7YxL5bz+3xI9zh8E7HulihmaDVzMYZCFLlOgRClwyE9mqCWIDuCsoEhMLRuT4cJdz3Nd5tWZNuTgAlwKCh5fJmIJ5qVaMRQ/MOrMKr48rSyyP7G1Vh8sN7ycV4iP/4DxzeefPZCgibZukbWKT/ALRi/XrG4HgMRiDfAM2/lQyFw/btE4n3otAPVwjjZO3WU+P/+xViYVHXRvq4hi42BOmQL0zBroSt3CWv/zYfCONFD17dRrSnx4AsRlABXXLmeFXLucLzJ3EGS9Fds22RSAryT3DHsBNqyjO8sPdO7rK3SVwW+ZSyZ6SkCoymUxCsBXlKeaCTz9UUqJxnS7odFLaXZ2/7DOMuyFBVqK+ojyjy7ZpxvvNdYBDfP2Xki4mjRzJf+2G8DTdd+l9TbNwCucLbm8oA0fXHCJuk7tEsC3bX5XSnfCoa2i0gemizq3iNgR7XL74WZpriGGD4efWTeZEJoLIiZUWtITdB6UVVM8bq3bqrTVfXvIuousrkl1u/0ie565UChlLLyzEQEgQQxzbdYsffRP7Qw+CBmr5MJcPruqXDfG8GBbj65BIvxszZdM9yf/8geM/D8Cn/qwU/ElAGk6A3txJyg5vrNSP3Cm3NB/IwMnm+VNa8Ag8nTXCIUnb6lmEOE3mD7qKGrwqY1MaMLDrD4cLFF4M1TSGwDKMY0DnpbiQbKqhRKQqWw4roNMzKTpOgazF7Vu+f1MdvB5RGckHsBJMPp5CRLvoISjK3MyDt8zE+7EhwrKDPSg19LMpAtKswSj39rNjpb2M/jTXaUgcq66KcVa3ocvjxebyTOjFlOd4XySlmy+44bwmdkT/3fHLDNlyHMLA1AuI5sSVcam2eNYzzlpnIdTVF0n5YQ0H3WCGY0m500bykNoIFNbT++mHBkHCw6mPZriu2lZg8LUwj3y+c7OijUoDqfpICNibvAUrYzciXbHQM2PfpFxQaJa4K1G+ZAU++Ous5jRuXrjj+X02FwmXVf9MmSSVlKuk4FSWNIYEgFhhBH3r7GfDKbCI85nhtgmk28DC9tmwUqMlTA2yKQXVODQqCyX5PpiUR3TNhjpZvP7RCM1xJGzYWHimDa1Pw9vRXKNubNYS53dlxlMUPnL0v1Ex26W76IXuAzd1iXZ9V7lmdVW56mWB6sx1dd94wCbc3QNaiXwUAjQOtT8F+mMs8MD7ibBKCA4ltsVuPkt/ylROKyyTXqIQrTus6ZGbEXNrxj9yM9KNsRZYEI4Cg1YfCgv0qs20K7MFY4XRzrrte7Bi6OpzVQ0Bq1RW5WVN8oae4Am65nQ63zw9+8B6O4b5HIPgvwRpZVN652/d/ryOfMxpxf05m/A6PSN/qdm65QU3g53OE8lOrAhW9wtkcejWcbhG2hLQz0XOfe6dcy5U0nMlq+exr+gz3CuTeooUtCIcNTO4JkFbdTGYQ3XgR2kOV3T+rH+rIk8R","layer_level":2},{"id":"a2b4e615-0949-42b1-979b-ccfa4bb2bd22","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Optimizer Integration Testing","description":"optimizer-integration-testing","prompt":"Develop detailed content for Optimizer Integration Testing focused on validating the interaction between quantum chemistry algorithms and classical optimization routines. Explain test cases in test_optimizer.py that verify gradient flow, parameter updates, and convergence criteria within VQE and UCC workflows. Document end-to-end testing of UCC/UCCSD and HEA algorithms in test_ucc_uccsd_runtime.py and test_hea.py, including energy minimization trajectories and optimizer stability. Highlight integration points with the numerics backend and gradient computation via parameter shift. Address common issues such as vanishing gradients, optimizer divergence, and mismatched parameter shapes. Provide examples of configuring optimizers for shot-noise resilience and hybrid training loops.","parent_id":"240da10d-b9a5-4dc1-9e43-c75cd2e4853d","order":2,"progress_status":"completed","dependent_files":"tests_mol_valid/test_optimizer.py,tests_mol_valid/test_ucc_uccsd_runtime.py,tests_mol_valid/test_hea.py,tests_mol_valid/test_puccd.py","gmt_create":"2025-10-10T21:26:37.045965+08:00","gmt_modified":"2025-10-10T22:52:37.80263+08:00","raw_data":"WikiEncrypted:mQTetUyqAd1osAW1jpeHl4F966r385Jdo2piW0HulnHwvoEZXKNlw8Y96xRUC1XJDvXSLajT0fzs42zVjPNAQGo14tI86IHf8ToPH99al9/Pq+eIlWmLC94PI36RoyRp4S7pKTyz+zN6xhgd1qWkpoGB4hHxUIwff6lqzLC7UlnWjXh+oqXzMiFHQHpC867AbplTMI/FQ+XsN+zO3TG0mjNz475iyzbOLgT8wQjLj/IxPJg4V6IOXTqHFTeCU5TeZMxsTMPZBFGH0BBbzcK+4Vh28cZZbJm2/dX7yHm/CeJJ8/jibKDRjTV4Gh3e/K4YQJOkjBgWZOYKU6zWNtokdQ2+7fcpJU+HnW2wSrnKpBv2gnuOuO0d8vHizj6nDTAU4TTvCOLTzwh9lyE2jckVdQaIFgdCxfKRK5wP9aZDjiQOXwNiuZL4dR3eKl1x225+IWRI/3Jt0wc83afNILAP7Lcf29F+42w/+LBot3KVwEZhPVHJZwTkfioEmApDOjfu4GSGwsoOujTH/XtdnSmJ0G+PJV5HxxBADlipJ3vCHygZv9gZrcevMaOcrrLF1RG9s9BKSwLUxFjRWInJ/F/xUH/ADPVCyle9BqARIAFd1XHESX5K/7bp+0Thm9Y8DnLt2NO5u1Chn7zQT8prs/OiCNL4osQZavQpeyH2RkQzSMbneBGPV9/hIpr7fTcZMBMxsEcCAtpKRUYLpDKMf5nq+8JGLCaszeZ9ulpPMC4VH/1WbBl1hslUNBVzk0a8wbJviqlNAferCtMNJbWnDiV3y66P760NTJCTS8cL3WooGT5+7khhrtCXasXYMYpccnVjqo4B44NiCIze11M//uv1lGhLx97/xkqivQt3oyLM+5Q+ktGDjC1/Tjsbs8YmnrXDUH52jzFxk7BIzQCTOeJAHuEYAVdQNPncXC+emf+te6dQFbZKkUBVUeGNol5+VZQngLUFmkr9d7lkkEsbBYXA/jxDH3sEnctilqw8Hqe+HpLJRC/zXCvF9fdjEtpLEIqkIEZqK35I9nASHxRYotV6+mskfe79ePbWQjOJKMaYHcuidkRwgNzY4p4x7Fd4Zl1AX4CPEe7DW5zClEEu2UHCXGLp3wlitKwTx++3mQLFr4XuPXpItIi25QlmJQcjKyVvzegumbKqBjVZ/QzqzLGe2AzbbsStlYE0ExByl71QsfkongKAkvQMhLNOtZacS0g7BC8nzT0Wvn7DALLsIHVuuMcuI+ax+2ZAv89by7KdsGyJ2YwtXza1l3RMmXlWK+QVftjbatHFPi2ZgJqn3BLQVRtz66VcreGui91vlNIPKzspbDjqYKC/+OyKqnViz+HMKNvWoORugbiknmMN77RxC8Bdtea4d4eEjPR5wQvUD/w6yvlOeJwdn0CwpiOKXgXn0UAV5oWo+91CtU0Pho1gLsIDehpiFL68SC7ppvNFrwjqHAFNEiUSiXpZzq47IYVYtvwa2DeofgORBNRH7eyc2C92haZLtz4UI7ti47jxyEFJMLLwNeKvWXJZo3Hi4htdaMuZGHXh+RLA1wR4Y5GMu3h1pan30xMYjWZOQgI3mW8gNRaHYJ4N7d1ats6FXRENLyHAInz5b8i4S/X7ra5zgYsxax4klkwKNad4PAshaU/iHHj4OEGV9T5VVbB8M8sae7+KoOULzzgLwjrt8I+bz0yPEfZD+nmEa+s3OCx+b38=","layer_level":2},{"id":"8508fff5-2f92-4c35-ac55-80934ab85c63","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Compilation Stages","description":"compiler-api-stages","prompt":"Develop detailed content for the compilation stages in TyxonQ's compiler pipeline. Thoroughly explain each stage's implementation details and usage patterns: decompose (rotations), gradients (parameter_shift_pass, qng), rewrite (auto_measure, gates_transform, measurement, merge_prune), scheduling (shot_scheduler), and simplify (lightcone). Document the interfaces, domain models, and invocation relationships of each pass. Include concrete examples from the codebase showing how these stages transform circuits. Explain configuration options, parameters, and return values for each pass. Address common issues and solutions when using these optimization stages in practice.","parent_id":"53dddf26-4ae6-4200-b5af-45fca433de77","order":2,"progress_status":"completed","dependent_files":"src/tyxonq/compiler/stages/decompose/rotations.py,src/tyxonq/compiler/stages/gradients/parameter_shift_pass.py,src/tyxonq/compiler/stages/gradients/qng.py,src/tyxonq/compiler/stages/rewrite/auto_measure.py,src/tyxonq/compiler/stages/rewrite/gates_transform.py,src/tyxonq/compiler/stages/rewrite/measurement.py,src/tyxonq/compiler/stages/rewrite/merge_prune.py,src/tyxonq/compiler/stages/scheduling/shot_scheduler.py,src/tyxonq/compiler/stages/simplify/lightcone.py","gmt_create":"2025-10-10T21:26:49.781225+08:00","gmt_modified":"2025-10-10T22:53:21.26192+08:00","raw_data":"WikiEncrypted:r1dbw1ciiG74lYTjPig5U3X9P9yfjRfOyGUXqw3qkX4KMQuw9EvblzdtkGaTV4Jx4WzMxNeTK1PhFSvwMmFRav0UKoltS/NIgciTFtqW/yHWT5xTCMZv4m5MAFFk+V3VHOHlvuB4TJ9Bwgwsfe5zIJCzyPszc73Z3NyZ+kcKtWRUuJ8mxfk9YYayDqjfWYbQ47ZYYzOi0FfSTt3KR2uysU3YW+TfzfVT69zQdc2wLccFp7HjIsnK35oXgBnyth/kW6R9Wkxh8Vr3f8ItBoC76nqsWJ22r7SpGPUIUSmRCPHbTTJnLEpQtGDr5YZYDYH1hOqrPLS9NoNCFNVw/fTliqjLAUWeQ9DR/KRhhLdDetVvRINoTlSyytKG5/WdU0HooZW0IVlBZQq/jE8+1YNTAP9XX18MxnPX6gaILVtGIrj3dBk/Ti3FXT+Jm2g2BJAVmUYEK+TeNRBcSi6F/wA2pUcUlvch1e0LpYA1fk6L0BcvWxTgce+L0CBwqaO7gTQ52SZUUzKsjePLGDx3/0BnGIYg/8BcVZIH/s60i6+1re7GZq1OoAVXvpIU1jFLUIWvK+vp3pE5QQr7v44+ZzIcwxAs73UrBeIYyDS49TUv9YlOHPJYWmNg/aXIv7JuVBVnBVbxhl/heQhd5ToK2aA+LerUX91ZLXONvwzy6hUR0BOM1WzI3BiY8DFpV+WfpF6Blko9MCggF1Y9UMsewqi6nqSw+woLiMnU0O4vcSfa9sipeVsnTGHfE54CQuhXdygG1G6bzFAH5zvo8jMpF6l+oHMLCYReyMcWu3Fib3Yx2HIQewFNOVdD2ymzj2tdLiW4ah2spOkFlhTVuoi+GUsWGlO2HQcx0pgYNGE1nKxsmRFWb6iBM3MTl6fXYpj1Bta9mJXB1sxEb6eIZX/yQOjX5D++MFarVASK97MgSYtT5trbPWAhYGXWNp1IPMVQaZOBDroA1Yt3CO+2AtJ+t+1rC5dvJO+ThVyS8CV3b0+VJZppH2xSb7J+uxH8cSxdS1IoCJ29k3HpbsUSMqqj/zX8f4a4lbn272SP2Z7Drie/VqXV0FcCxllE9T3PeCAmvbAugSmipBjHhS+XjVEQczZ2QAMGVdniZo4OssQdSWF7qeSbiv8SoOMcAuwLsTFkHxw9XAMQtrCTM/saE8bJWD6olDpMPZqAzgW5gaJNUuw3Jbv02LH8wLSlo8jNWCh7LMbrl3xf1MJ0f6sWCiSaC6d3jlFZ/0F7HXwzOBuzrmTpmP7FrbU0kX2O0wV1pTZsZCRPOTQak1hEbgDXbyiJeWORQJTH0jXxrrfV7xUNjS9m/2KnLYcinyiqGHh0KdCLSE6pFaTka80ehB8e7gp1HK5o/sev2c03fNUdy/aAPUI/YLSjfT7Y+bkVUilAEzDtqcoJPoWtp5tpz+Cp2GepE1rhe/RHmHH5pAdNZNLKbd7V6yHjIkVw8ao2Js9uhk40DKVILVIgNVFSGqcWRVHMlsxvM3Jr2J9i4EGeWKM/LQq4duI1xDdl184p5Z1RJx7qG0XsK7lYHgokRbIi+As/ejcGeO/LOJalj0JTXcr5ctBEuxxz5I7td0BRhqp1ZtRhgE03Esi1CpEcuCo3CDochW/Wf4S9V0imnj7kR7NNVxm727WZ1+aWNwAqPvfBbXzOZy1vj3gIpSnUUZof0lMM5TJI+i+PttC0f6AZ1lx19qcti2b3RYs11s6Z5WG4ci9WGBX09fQl4yfdTBOnrr4wn+PFQj5s8VNWVfNi1hoH7oZsTmbpdYPqHjCxrpmE++Tuq9Hq3zPO691pIEYE63FpI7Hjfk3tktVRtkkN3dP+pw4Fc3UcQLJLv0QtCSIBT9H91ISPFeTPmKgsJ5LcTHlqnLmlThIwJXEa5yHDrAyavnnOHjA=","layer_level":2},{"id":"c05d71bf-d4ef-47fd-8d31-be6a5c9590d3","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"PyTorch Backend","description":"numerics-api-pytorch-backend","prompt":"Create comprehensive documentation for the PyTorch backend in TyxonQ. Explain how PyTorchBackend implements the ArrayBackend protocol using PyTorch tensors and operations. Detail its support for GPU acceleration, automatic differentiation through PyTorch's autograd system, and JIT compilation via torch.jit. Document the value_and_grad function integration for gradient-based optimization in variational algorithms. Explain the conditional import mechanism and availability checking. Provide examples demonstrating GPU tensor operations, gradient computation, and backend switching. Address setup requirements (torch installation) and use cases in quantum machine learning and differentiable quantum circuits where gradient flow is essential.","parent_id":"82a3713d-b244-4c4d-89c5-0844d8d02c02","order":2,"progress_status":"completed","dependent_files":"src/tyxonq/numerics/backends/pytorch_backend.py","gmt_create":"2025-10-10T21:27:12.160534+08:00","gmt_modified":"2025-10-10T22:53:12.497276+08:00","raw_data":"WikiEncrypted:eXTykzkDgCICZh19Bs/J2K67FsEBkyVITJlV+8xFsOQx5EJudjAGJH3tMQoEuJl8baJmS8GQMLhNGQaOf3CbR5ZSIIfF17Ha501mUoAu6pP/F4IqGo6bYXsz4Yu6zZT3BErSowbJGkrfEQP8fmw7As3X3tNz2uQ1CoqOFtF8YgXIOYiG7+oYH4rlrK3S81FoWXp0fb3EM0HJi8hv7v2IxGPgSV/N9LO26xEA0GIKCc1g7EOne1ChfA347GzKBAIDUAGgD0U+panDhEahgE9U6ojR3T+sMV+nzrK1llUhEgc/4sRlMUl/f0tBUsq+1xJJ0rWNCO1GK8Ioh4o3Bz5/8Pj+1gPldNvT2bo04hQDx6HCTbD1d0gEoWF0xVDxKupvp5CGgVvkcWIkvTIt7C/MF2YPd7/1iPa6uZcaXGKTwD0Ia8dGqDFmUU3xp8eqLdcusAsr0wAHn7sWVHFfTn1+8VyMCmr6TTRYMGz3vJLLbIYEi1opkraJgdlFvTe83I9mlOTDooGQMy1yVfunyFsIG0OfZRIwe3lprx2/5tjhffjcd1ePSFFjmmikRLgEO2aaGaO/XwalZCOwbQwC/XvTyPJabLcOPBHDVuL1ur1miWZZJa9dxoTOouDs4hP3TO3F2yjBfQucM9GnKqX5ksgsFRbcyq2WbsBiVdGxA964TUxwQaTzYYsWFm5TfOlWveAk6vtom+Y+jTKkzw186j3Vr1gpoYurl4HsiYaPIuPp6S1MY4/1+6YgkSlSiG0LnEw7OSyBW9WqVhXwW4mRSW+XN2rAy3ixSVFxOfk5EiShPgx01pih9ggYD6P1TKFCehfunpxDpihM7jET4TTPiV4gydXMoC6rx0UA/NNBIFvRD62QBx3fYdshCmyRKdQdSPNqXL4Q6l63oNSgWimSRGBz75t3Uhie0dhnfjgu82QyrlAo//BhEEzrKDkeh95niBL8z954xekcnASZ6AJ2EB7SHlUrduOxp+wBH0zYrkrpfWpj3IfdUWCdEZHfWP09nQgiQgHgKWET5I0kZubRu0uTxSBKXlSW6FMVLHf+Eq0Tu7qjF4IOhb/R8jwfiiMHLRAQHtj+ii9nFP6NXg7ZwL3kierPzPDILaQD9T9umI58CzIRo1Kja00hWhEMOuFFdJ5QR9SRm10+QJk17m7pBsIr0bWnCXMSVVFJu+VenrbEx0WKl4bnhk78+2zUZ9G5QsQ/XrnQ6zZsQy1OZ1w0bc/EyLXKUMug/jyQFQy7JsdBgNtVQmkfwaVKrUSOcNAYMe/duRg6PIwl5Ee9Wm2py9oe/Koh3a/CGmzQVj7R76WuIG5fGrxAy0HsvM/s4L5Bonwi861MvmFnXwXuCL4MgTBg6lCnWskHDqzV8HmnlFw/WS/31qfZjrGEJWduHbSC7es31566Z123ym7tnGYvLZclv0FSJllVPJ+0erlT/pmb0U0=","layer_level":2},{"id":"3b394efc-dad0-47b6-968b-2f6362485751","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Classical Shadows","description":"postprocessing-api-classical-shadows","prompt":"Create API documentation for the classical_shadows module in TyxonQ's postprocessing layer. Document the random_pauli_basis and random_pauli_bases functions for generating randomized measurement bases across qubits and shots. Explain the estimate_z_from_counts utility for computing single-qubit Z expectations from bitstring data. Detail the core estimate_expectation_pauli_product function for reconstructing Pauli observables using classical shadow formalism, including parameters for bases, outcomes, and target operators. Describe the bitstrings_to_bits utility for converting string representations to numerical arrays. Provide context on how classical shadows enable efficient estimation of many observables with minimal measurements. Include usage examples demonstrating shadow-based estimation workflows and integration with variational algorithms requiring multiple observable evaluations.","parent_id":"83498097-8e06-410c-bf59-2b4a228d19dc","order":2,"progress_status":"completed","dependent_files":"src/tyxonq/postprocessing/classical_shadows.py,src/tyxonq/postprocessing/__init__.py","gmt_create":"2025-10-10T21:27:22.02067+08:00","gmt_modified":"2025-10-10T22:53:54.885444+08:00","raw_data":"WikiEncrypted:TP8KP13wWUq5FizrfXDdgkFt1WGzGsBKKMlugvsreQaQc4O9scNYEst49z3rlYB3kAFVBxReVhVn2PT4jiE2wvSNlQFe1yQ4qtvfbCriUjhWhxllx+3hKHVUu/O30ho8/ijmB7uTuI1jam619+j0j1YQqea8BKFaRKf86Q5pzspgtdlrO76LciISXs4qWstHhiVUhLis/9mUU0+8CvJBE2yUTuPP/0LauRM2myQjN2Rd1yMgXQ18V81AW9uLa1jrBp0cTHGd2NLKMu5uODcq7EsihlgI4ByzoL3AJdQiUIljDY7vKigFNGNzjYbGAQtk+IruTJdgTvL15cCaj7u9YqqW5sFQYPevKgdPoh37MMud1Le9lbpP/S3bkglteujYh6NygVRu7S7oDRGhg9wp+1ElNBRq57qboCXmYZtmqpa+JTD3Nfjjw6yuFmj3t6CKisfAH/d0wdVqO9RuXWo8CSNrVJQdtQQB3Tf0l4JSX3jc4nz6Prmcrkp9AJgejwGvcyKiA+SNq32YLONHPEklT0+KaLHAihLaShL948ZwXwcRDTTFAOuexGPI5nmknOvL72ixkHR06jJII5bRpKIYUIpaznbQ0D+VH7y+FYyhDNbqnS3VUOZNFIcoEnbxy4LIgz4uGESb60TJ9uZkeDr4tjVYQO+5AFW8LkAozxvvg3nPYz4FREhOdhFu5qaF7vUIKTVzQN0JhVlzPx37KpvIvNYNxr9WjY2wnxPVto4hwErDx9Pzhq5+rfuHr4gDuqENtQXvoBWf8KoDiXtcYUO09mDBLUw60HMfldx3yzhc0/raitGS8q6KXREZlaqJ1Rvrkf+pSRSr8i2X/wzEiEZ9buWJFkaB9C6TEMH7L2N2wkZFnhTBFAOFw2OxJNuaaz+FAytfnGNs5LrEqLhG0QIcRDNwSgoZ5Nl6U+vNvCdWT4eg3vhztHJclcfodVUrj0kp5COXHjUP+l09Tg4a9wIoAavCnp03sJHzl5+qhD5wKU6lBiD9IOuZxnYcm5jbOyEGqBETGyjNVSHF8PNZVUHfDcZMysIDjr6/oQCZnydSL7zWFNMw773BLwDIem2jZab4c4+CAOlOoizUEl5UZkZTcEwfQYf/j98angeNyUVF2QzrHHaheZwLU5zdna5wf1sTnYSJPQNx0oTZxvc+wyIHjdcJDR2MYBVxOlGmmHshqWwKpCdu0vhRd4qWckO4Tet/5TlZ16LEAbg9xJqhXqRR+59jWGbhmEaKoHGaI0tFydbgzC9bLN/LYL/3n/4Tr3yWfOJhPqJ+RyigEi6C9v6S2D02z0NGoxKBYGZZhOPVmBIQjtS+AlqN6DxaQt38i08YXfj1RXWKlIBzA4TqGkXsF6DEBT5LmLocho1DPy3RNWu9k2t/rc/OY0HNqbz2upUh77galbGiLwgIa6HDEITS5/7M3vgnyN/2SAoBZyVjwzP5vdYBMUGhepSxeU4SukYAlrxJjF05dsbJQIR5CwceCHPlQq+TdjtwK4I4JgdSaPfdnwBSjlgnWCU8jvVaz3z5+W4Jxu8wFotG7FQf6srqE6Sihg5YIyO8ymyTlwbnchp0N91leel/X6B5wm8eiq/LgS0DfdVvJA0dH0nfrOstiKEQ2zGW9PyO/hkuza89FhbrYZhkq3EY7AEqNK4pviluMOw2tHl17FVrLqPHG5egpgMyMhCI890YgB+cCqHvDahMcecGY8KLgMzXLVJEa77OWmgShQDXATxDbGlJmTb5Ow==","layer_level":2},{"id":"5cbeda6b-e47e-49ae-925c-755196501fc0","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Hamiltonian Encoding API","description":"api-reference-hamiltonian-encoding","prompt":"Create API documentation for the Hamiltonian Encoding module of TyxonQ. Detail the fermion-to-qubit mapping strategies (Jordan-Wigner, Bravyi-Kitaev, etc.), Pauli operator I/O with OpenFermion compatibility, and Hamiltonian grouping for measurement optimization. Document the operator encoding utilities and Gray binary encoding for efficient qubit mappings. Provide interface specifications, transformation workflows, and error handling mechanisms. Use examples from examples/hamiltonian_building.py and examples/hchainhamiltonian.py to demonstrate practical implementations. Explain integration with quantum chemistry applications and the compiler's measurement optimization passes.","parent_id":"597e341d-c253-4c4c-a540-40ddd08797df","order":2,"progress_status":"completed","dependent_files":"src/tyxonq/libs/hamiltonian_encoding/__init__.py,src/tyxonq/libs/hamiltonian_encoding/fermion_to_qubit.py,src/tyxonq/libs/hamiltonian_encoding/operator_encoding.py,src/tyxonq/libs/hamiltonian_encoding/pauli_io.py,src/tyxonq/libs/hamiltonian_encoding/hamiltonian_grouping.py,src/tyxonq/libs/hamiltonian_encoding/gray_binary_encoding.py","gmt_create":"2025-10-10T21:27:23.211209+08:00","gmt_modified":"2025-10-10T22:54:50.546866+08:00","raw_data":"WikiEncrypted:C34GewOyK1SlumqKiPsSg3+8H8t232fUydWwwExr8AfHu2p1Q/ogHxflTZYH0JFB/2JBULTw167/6WE+hvglS3ONcNzLCEJXuh16uHS1n+Uw4Fpz7buKShVxP/YfISe9DXHLtS+2DDavYKBK7ds7Q4jSWvXoTUt8VGMlViGkvxRBh2Mj7vIKVEUWgcbhPoEzwbckjHO4Y6+tYEmU8f0x+JNonBCHMWIYmlds2q4K4+ot7jnL+szxsmTJBSprKvn7YUdWUIJwqCFBrCXKu2NLDzixh5DgDt1dmxx67NamluMhj2qd7GpXmHvPMdU5a4poDHMiYoZx6xfVKifaktic2qVIRgxcpoQkBAu5WhjZtzJwdScEc7igBI7kBpXqf2g9UWWb9j9gfBlZ60LvDoDQETK8lol0Fnf1i2uYBGHvX0jXm9T5PdbQ2PH8WAmSMcpnhgEl1oPtKl1332g47a4EmQYDHzhKhbTjoJVCsCEW70G9UQoypQl7WJwMXXe78Sf/PrECI/5vW28HpzODW2gn9Cng9KzJUiSSvbh02ZtLrQ8XL71BbL2sFya5nkfFQhznXDQvmkg46opVjRBIayMEfgv6i8ep7qKispuaai1+gc0As9kGENe3zs5JI4RKWQ5hkYUts/MBEdpHIF2CklAhiLxo+buiRzTeQk61bgY1Agy1+L7vt3TcTjx8oLuGGPBXnS1aCYiHG6dLUMwZThiJ9VbuP1JYDHIsFatxZChSjKMlAUQwE2SlomAnzsb0PJ9n/ANr75jBe698Gn0DWi8q35Zrs1SffHOOmZRv/eLy+B6Z6F1JUdnHJpZYIn/8L4xBLysMtSfGuQZyLg+CIDFFGmNVPV06At4JSSlUX3V8dF+oU4yTA/bDHeiSckv4C5MVztg/xYcZOc+a7wlqMgKO3HsC39ODSf/w84VhKvLp1S3REUtfoHKzyVTIN5Pc+r0RdInh6hty0HKudKM4qF4bUKvvCOjxJlO4HZWBJf08zu3BI3Tijj2I6kI1kBWQhMVVAU9J/Bgkoa1d6Fr/oQuRpLPWD+wx9G4XzaVgtLI6zhE0AW9/eLjIBl5HxC2paEh2WTYbLbNz0PcofMnflxq5pAGa4ua+6TuKKDL9DQMTQ8YoDAcuj30FHbs9wa753e0kUdxWMF0KE8ohrv56uEAJjeA5K+EOsMFo1coxxXAKKWSE7RiwA0+5l90shZI0RtOk8jXqytzv1DbMFah+ao9p0GbLclxzSxsm0hZnOnWIJpNT9Nx4A0PUXmPbi0uQTrVob1KFJdgbX4qho4rbqjaaM+ECLb81BTPgxaYmCLcRRSR28c8mBMeRgqmTVPw7HszbjPfNNI2XCglpcVgJppcevlx/9NGIif2V3dLLz0POcRgQ12oAWSnm4H2E61B03ZjggT8vs59UHlOQ4OTLNlS8O4QZVmGPOFJV0LS9k8b0FsHIwR3PQ1/grHuR8YDMmAPxDsNm/1zhWmhRTGRQCAChgHhDW7FgPMUCejZDK5PDNMK7ZH6+GOKE74MaH5GORnZ287nfYT8SPOSnYs8GRwQ0FMC9wl9MCynNOtOGYCwiv8529tj3wDfP4A3E6scXL8g+gfNPZIFwSIWT7+f310R1lw+OQ9Ot25820umRHg2B3OLfCidfjPe6drqdM963S9XXv/17YAcVdWxzK4QSG2yrZUCZLHvSLzSqtM00cg7k2EQc6Mhi+GdORfgkkTn0euu2wfD2oClOpV0QGTt3og4hVYtdN+p4ZHbQaqjML7V9bKrqZKz/RjAaQBM5jobTbq5WCt7fOTMc+nN88fxwjJue/x3vaAxj8r0c+aZ1FjRddXISVHOo16d4M6N253Uh8oOJ9KgeSWs0uTTgQNJdR0MVRfIQrAbdtcM/2BZx7PI9YFg=","layer_level":2},{"id":"bfdc4f62-9c38-48fb-bad5-a36663f2f535","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Simplification Stage","description":"simplification-stage","prompt":"Develop detailed content for the Simplification stage in TyxonQ's compiler, focusing on lightcone-based circuit optimization. Explain how lightcone.py identifies and removes operations that do not affect final measurement outcomes, significantly reducing circuit depth and gate count. Document the algorithm's traversal of the IR dependency graph to determine causal influence zones. Include examples showing simplification of large variational circuits and time-evolution circuits with Trotter steps. Explain integration with postprocessing requirements and how simplification preserves gradient semantics for parameter-shift rules. Address common issues such as incomplete simplification due to dynamic control flow or incorrect lightcone boundaries, and provide best practices for combining simplification with other optimization passes.","parent_id":"e948006c-6a9e-4afa-a0bf-dff490882d5e","order":2,"progress_status":"completed","dependent_files":"src/tyxonq/compiler/stages/simplify/lightcone.py","gmt_create":"2025-10-10T21:27:51.840011+08:00","gmt_modified":"2025-10-10T23:23:02.71853+08:00","raw_data":"WikiEncrypted:OlBsY6Uqm5rS58yzTWvcSUAnfkHGfincaOJQUIzTGeFb86WA7MNvuDGnEO+XFW6gQddhRgz1yzqHnzPMCZcfV7LXAlKBdR8aBi8oUHYICssVULm3ivPLLTSClbu/dFHtpPdmPUV4Ocy0o4maENrsoaEoWJP3/Kmtz0/YZM4MsImuC8K4YbqDLUBJhrUxIlEsgT+oCLXJiNtu/WW9bfHWFfME5fNolWnYVKCcybdZN5WWRhDv/atSOP2dZv0TmgTLltjzDClC40DENUmUzGE/Iy9KE57Gd2m5RzzdUhsWFkQKFSE6BfiuWa4bQzwkejFi7hGYZau6piA8Z1ON2XJkE9aXrkpA3qcLn4r/Q4ZFVga7NeFn/aPAaZmG8b6SpRjMmJ8A9TZpIQFf2Kiv1qNm2I/mT2HlivYjxx/llOF8S+mNL+7SHHXS8JcvnMWRPZEyp4LbJytLJQ0q9h2reA8caVZCG1NYQ9dkQ5euxVCquT5qgha40Pi7VeFV4j4DZvzDEpKhmk+SpgswiWpDahWfwS6IMkaorMsOsyTpmdumWgfISTqHc+ksNb/a7Q9xX+kSvN5q6uzRy0GDP2t/tJOlaLtPpeKDkkreJ32Y4hEBhTz2+0NhwSjLM491f0K1wHsB72HZ4eylJDi9J5csQg2dAVs3KLTRQ3MeGisQMmytrXYKusHpjXe706J3F2tVjnri0bstUJeU8wtQ/c/bzsEkRHiGxpPmXXnr/X9LsST+QrSH4KcPm9PM0ju/5BgmBwPjGKb2ksHOrPpWn6ZJpyTbzeH/QOsxe2WCbljelZr0aUC2h+k6jyy+XhFYsF9af5ZtJhBXDTMeREK52/eH7KMI49O85cC+SAiZj04RdEfx7p+yPwsZx7s6SmJscaX5Xgx//6tPbhASiKw/fzPp4o6aO3jQBHjo19wcIBZgyigCt4NnUpaxID7M47KISwMa8zOrZQd/wCnWrUb5NIZ5X/ur0ucJMuJitzimkXCnzIq2eZyc5iR70BxYzkOrqD+EYvP4O2DxBNMHdSoEAq3oGklWSV4vW4bWJNdKr+SrN+YzsFYZaw4y5x2NPNI9vr9plbrLSNUIunhscop26nBXWD/TQb2Rn8b/B1EUiAktJbtWRqiMlv3Sy4j2Xq1heLTxf1rPVT4a6kEkHHlCV1wCEDMv7+2wGlqMYAmUQeUFRmI0dbkEjC0JcncaSVheSJassTuJKhfzgMnAP+vjAH8YbWO+GrwAhrnnJKwwO32H9hcP7v2DxEgFq4Z0nPQy01V1RrPMOJxDyDd1Z8eeQFFUm2gcV2u31SSfingbuc8jOb/HNxEjHT4YXA2gz0Ki1eVXtOn9RCWccWlE5n1rQ20Bk9jBCaLz4XgPwwPBM+KPgw2Z2x26PHVm3n+Lt+yftjv+e9kUuOQL1o4Dn1W2BbORq9kstgGQ0T7bSME+Wi6Mlh6I+kaGTD+BPYBn3alj/O+9X6ylew/IugNXCA2W/C2/uCG5sKxGnpBey7txXlTWQABOMZ8=","layer_level":3},{"id":"8bfbae32-96b1-4209-9258-09baba3453aa","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"k-UpCCGSD Algorithm","description":"applications-api-kupccgsd","prompt":"Create API documentation for the k-UpCCGSD (k-Unitary Pair Coupled Cluster Generalized Singles and Doubles) algorithm in TyxonQ. Document the k-UpCCGSD class initialization parameters including molecular input, k parameter controlling excitation level, active space configuration, and initial guess methods. Explain the generalized singles and doubles excitation operators specific to the k-UpCCGSD approach. Detail the circuit construction process and parameterization scheme. Describe the energy calculation and optimization workflow integration. Provide examples from the codebase showing k-UpCCGSD usage in quantum chemistry calculations. Explain the relationship between k parameter and computational complexity. Address configuration options for different runtime environments and numerical backends. Highlight use cases where k-UpCCGSD provides advantages over standard UCCSD methods.","parent_id":"61df0675-6efe-434e-8be6-66c5bb88ae9c","order":2,"progress_status":"completed","dependent_files":"src/tyxonq/applications/chem/algorithms/kupccgsd.py","gmt_create":"2025-10-10T21:27:57.613773+08:00","gmt_modified":"2025-10-10T22:54:39.3524+08:00","raw_data":"WikiEncrypted:6Fw6zeKwEGma9eKCQx5Pd/zmbBFIQ3391pZy+GgXWmRRb0gQhgJsdx6IhO6VWo6tP7aUu1QjiK5v/Cy1ibvwK4lpvWUbXd6qr9C3b355rnJs2FUKhIa1qxEDzq9XwKquBRg8CUt1z5DaQan1ZeUbAM8U5g3n1XMTgPuE5ObtYK5pRyhm63M3bmCuv2WEF9RDuNDMFIhfIXRF8Z4u5nTsagEyGfb9g9lIlgLtjrCVZh96fI8VGbu4lnEI7Tu5jKsvtaD8rDb1sC2hAGTVecp7WuOryaBmpBJAjohpHT6B8+6r81Se2nzGqrsQRQqD26AlZI8mTOPpVJRcF8XrpC5xcmSK0dCHbzoBXDEzXdEQISjBzl5HeGlTijCi+ettC/PHPCo4fb4GvbHj88CizX+WwPQauC1hKa/krpeqrjB3AY2gGGvsQbt48us1bT2DBuuO3wJzVuUsf7dKz6HJIi8FaNWNFFJExz567L+5OeRTFZp8qMotSdF0S4gZImQjabo7e6DcSgzmbc1tIK9a9blD+octtNblpUD0P+v09YRQtXVoNGzwNhAUGk2r6tASeEBXLRv8rNRebz/jXzmcsf7XVgJyMhNLEBCi/ixKjiDqjCrBhWQB/tsmriOuO2h8BIQ5GNunOCTlbx1CG1/jFTuDfov+TXqWuQ+wnbarChWcQj8KsSQ1DoPmuBFnQb48O/yuhA/9MX58I1OqCz4t1uBUscrzRQtGVjiVPHCjLS/NZT4Zuc/tZfVUIrH8F7CBfHa5WG3ansG5+3gg53WGdDpKQMhdaRLtnVDXXV9F5BDdA/BqI7jypyaP/OLNSwUqaCFu5JRLd/PG2AL88MYwK2r+Hh49dHMgC1XmJe0e/DbjRNUYGiBWIGF3Su6rZ0sj26Achx7Ha1US9Auo1kF19PWXCANCVe1fDRw2RzlYjT3Knlq9hnJLFH9OGJaGDUSapL4iOPGzrUHJio8dptQV3jVMQloLdrHw/9bLX8Z9Vpu+c/mqufD4Qllr4P6hRiT6nBmhaUbUozd99oD9lOHYc7qZan/dv/qoW0NO0NUTnK6evofXZFrcQlmWBWMyI0/mO0mtlHL0nMpsiuMA1IONb9EUotbE7Vg+LVSF4onxW5gAobG/FfwqQ6D+2LFjKijKR9k+I/4rQw/SAoa9ATREsgjMqYp7nzjQCNE6rjLBXGrzARvWHfUS9ANcxloWN61Lekhe5CSHnatOFYKl5ZTIfErEHsYkfPsVzUMj+iKOkcFt0rmHGa8gIBSmZ3PzKYgBvqBNa7dGr1Wz8lePOlXii0GRWRjkZ9KuQS23gJUCB4Ut2J5FJLTxq2hW/mtKjqro/UnH4QjRGnTEV5ubyy0dAm+2GU/FqsuQX/LAbQDkHm0dQL19gs/oGO1PW41SX8s/V4c4I3gqJUhXVvgBgvfBtfvNYxmXc63zPuiGl7YYPVYx2dMTtPQWcMvPEm2dtw0AEtlQYu2jLSumATjkZGczBkIBoj5IK62g17QRx7Q6bhzUbwIwH9h+TPNYtXCwU/T8b988vFYoF0wVmCAUnhiQqzdAcc0lL1EoIlAMi76V0q8yYovWeKGAvOa3AXMLYDEIdTLoierAjbaYTTkAP45aVYr8jgNJpGt8Fv1q5kmoMg+DU/13SWHDWoxcicQzhl5zcJxlUp9vXI+4UclMGxwvKgki8g==","layer_level":2},{"id":"2bd3eac0-fdcd-4212-81bf-09d694071443","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"CuPyNumeric Backend","description":"cupynumeric-backend","prompt":"Develop detailed content for the CuPyNumeric Backend implementation in TyxonQ. Explain its role in providing GPU-accelerated numerical computations through the cupynumeric library. Document GPU array operations, memory management, and performance characteristics for large-scale quantum simulations. Detail the implementation of core operations like matmul, einsum, and FFTs on GPU devices. Explain the hybrid computation model where SVD operations are offloaded to CPU via NumPy conversion. Cover the finite-difference gradient implementation in value_and_grad and its performance implications. Provide configuration examples for GPU device selection, memory allocation, and kernel fusion. Include use cases for high-performance quantum circuit simulation and time evolution calculations. Address common issues such as GPU memory exhaustion, kernel launch failures, and data transfer bottlenecks between host and device memory. Compare performance characteristics with NumPy and PyTorch backends for different quantum computing workloads.","parent_id":"9e22ca4e-a835-4f25-a17e-1639908dbac3","order":2,"progress_status":"completed","dependent_files":"src/tyxonq/numerics/backends/cupynumeric_backend.py","gmt_create":"2025-10-10T21:28:05.622359+08:00","gmt_modified":"2025-10-10T23:23:12.367911+08:00","raw_data":"WikiEncrypted:WIp7TLt/vbI2Aew7umCrkmjDS5g9VgtP9nC/v1T9s1RtwNkfSJoCQ0OGGRxfs8rUX88YJxvXr4Id6D+D7lo0xgpap/nu3LdgdPMSOdZdp5ZZFlKKwFpkc4rW2B8GHCrK4xitUWAmqQ7WkYPG/W6KopldVJFjid0LGsCJr8gCvP473NLJ4mDIn/zq8CXo3JmK5nA7YXFwM0MGYW+eThGKXLg2hH2lK2DQiytcb6Sc3MzJVZhXQzhs3suJb98YdUAAXDKerCq/OZsc3CEUyrDseKEDnFSJZ0c0mHW/zIfGPOWwVFhmKPcRp/qAd14PBKqB83DX/Y93SMd6bNRKZH9AfJvjd2NmkVglmtU9V+bnPQCAAd0lTvZ50WjOhsJCumycN5Hc0r9Duq9gCZdToTdiq/Kz5jcdgiu48y1OcHtu1nZ3/SEVNzDMsx8gFvGbALkWCECUXtjxrfTeynDtvGqssbWFKLpHWZ81EsUAzi60H9Db2E1KL3cK0XIW/dicidZkZpg60kI45ugnpOGlnvxvR3aR4wh97YKhyIB87t0qoBYz1aLkBlfrQRc4IUYKcdLfn0Ads3Oz/X7LfJq8Pq/VsT/NbP+9HXUjelLbeji5bT3NLydqlmKZl9OY7JOHinfFgcOPSqul7y8SdUD7gex3/N7DnFLffCoCD5Juf3IB4W7UXeW4GR1nXjs9b0G+6qyLGv9Lvnsy6X71mIvg8QLFeyNGLTmVqkE+RMH/dWtlf2AjzVBDAkV3e0BTA51nCxBF8iL5/I6gGmuATzuhKCSoQwsO1EV+wDVG/8YM0pfzmXbQX9cLR8bvQYnGWtuGlghHnLtk2xzwzBpLqYUWgU9Tz/h3bVpDrPnejYsSZF2RTfMredeSpNsxrIScg/zAUUWznS74fsG4N+8f9rJJb+OTYQIKNSNNIVnF7BapdhTU1rb8eIzwLjt2+koBNRB+nkUUFY+rpN/vc1agy+SwHWEJ0osEk3CmNGPCbpuWzmla3qMzQ0jy1n5x7BCf+ozF/6vifRw+nRXQvcjhu6Op1XQXQXLtdVh/Kc9P6vcltSNvgicHKBy24UGWm5tBenWgggsoU7NjdjzUNEuoDgyraIL6MIX2TJPlFZ3Lf433BSdxoqxOrDaGh/RXVyBRwMx5wpS9QslMGmTTQSCPZkKzbbWN2L7phVOSjInE4vIJZAZ70uRzAkjx5yKdntJ9ZDYjDshpgaOX7Ep9H9S3D8TsjMvh1VpPIGbanrZchbvKeUQPa7gHC7MPiBF//j3p+aZwBVf+VN7T+U/v7ybo5GKXE8AnUl/IXgx/uK+/q1+pql41Z1/8HrBC5rEVDlyh4tIGzAIIRxT2ESYw6X9Um+pJq7/UdFOCyGK6hsy29eP5mVW4kcLfo39Z+j1UcxR+Zn+oGvUoKXZSEoyhTBSCSXMZuRmrOg7aBb7AJJcVoSM+IlrRsxVxbPcsIcounQF7TNcvVzOkcbXS7h6VEZBWu3TQoaLxHxJzm05LUC+Q2WkQYFf7VXoRTupBQA+xT7Vs1N7CueFqrtVsugDo2rP7xTU5czjhpVy7pqwBaX4uATveJESlt/pd++19yr3zrWnoRLIQeKtkU2idd5M8JYVJK1Isd4qCVUThhERR2j7Hh/F7GGlawHgWl8apb2LQ1L9NReRokcYkXb519oOCc3U3WV4+N5kFtPSc1YpFq0PxXVKSxPKhGBGmcgorlr1uNcEh4uoL6Pj94TDonwnF6PVo7SNUypp1hA==","layer_level":3},{"id":"c615a941-7e0d-4ba3-b2a7-99078c612d02","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"VQE Benchmarking Case Studies","description":"vqe-benchmarks","prompt":"Develop detailed content for VQE benchmarking case studies on quantum chemistry and spin systems. Document the H2O molecular simulation in vqeh2o_benchmark.py including OpenFermion integration, qubit Hamiltonian construction, and Pauli term grouping for efficient expectation evaluation. Explain the TFIM spin model simulation in vqetfim_benchmark.py with its RXX-RZ ansatz and measurement strategies. Cover the benchmarking methodology using the timing framework that separates staging and runtime performance. Include analysis of computational complexity, memory requirements, and scaling behavior for both chemistry and physics models. Discuss the implications of these benchmarks for real-world VQE applications and hardware constraints.","parent_id":"2d106356-b31b-4b80-93fa-30421fbbd322","order":2,"progress_status":"completed","dependent_files":"examples/vqeh2o_benchmark.py,examples/vqetfim_benchmark.py","gmt_create":"2025-10-10T21:28:24.42815+08:00","gmt_modified":"2025-10-10T23:23:47.798324+08:00","raw_data":"WikiEncrypted:+ETh6AekWBEFg41IAgMYFWPpD7estiUnAVd9PFGP/zDp8A5wkEHRkR9umDgUe39FqmYubkutov9VQsW1TRGfNoH454n5nd+WHkf4IbqhZnIsbzMtSCxlWOePfQwxage+C5GACC13rXAfDAHSVbbgE6bVFrzstJ+7qr2ILxx7CPQbICZI+OpOpoWyatKfVqLqBlHmXk84nM8OMZLCVUqyPI7A9bk1sCNPiVwCh4gnl3N5NV3dHOoWfnIdqFzoe/BTAu5yz4DxdajzTG/4iP7wjtaP94EQixhEImInA2MfltJg2HHWAxI949sUh36eKo95upEpGjQThYbJkh6vCsp9XoY4iqTmOVoLlDatpl21t0NB7F/nQsver0ZLWTVQAcpihJXN2pM+1z5ImMXKI8DrpCiVO+yr6+capdcpzqVQ9/IFq9HcI4G/qBMasg0NR1D/QVdPldY4ouBz+4m+EwEMRkZZTjYszql+7i+lStivUZQ0qJ8J45a4XHwWDewoMRfMKd1A0BamvUkEKZp9lpqFeERFVp5DFZG83AaSoQnIRmQ6lT0OyubVyQIyavz9CJMSwH3Mm29iPM6T+K2Vm5UgeCyEibz6r0705SvXn1rmkQmAgHN52DV8rgTUe/vgZyQ1tfRCdyp0dN8xu2Um0EqCl509mE0mRSsJd7rn82dHA9kTr5LhIym/15219IQNtTudwzqmRtn3ywj9l2qbf0RNRMIqGzyVJ24pMi+Zs7Snj1edNbsWD9St2w8DLx+/y077AiUAznBZHg/XhBfXFrXAChOQZiI8O93r749+S6d3HGOs6B8/R0OMKUXxSXCC7rKhckjf+NqoERzUSE9GGbMqNdfC7u0JiuxrBpKhHHfUrzAsfcUaT5UmdhIYWQjdPIMLOjUudSn+IW64ok5j3qhDbv/kL3ggmEg9ti7Ibf0fEnhb+miE31O1eNKbSpCFs/xMw6LXq070rZtJMX8FQQGq5R2QmS/c3lFkXbU/4L3ef+UEzijRVcnbVNtHT/g+1dAl1pauAHUoEpSgUXy7Fxfk3dVC1m1Pwd46XzDYl+llcqWg/+4FaiG5jY8g7e4+hjE3+cRF1Dfw3vVqtK3/FuzwW1lAtENbE57hfGq78wnO3/e1XYznmZ2GiMQKXINErrIi6p7d0VeMJMlGwanm+LZpEK60v8hPV6oISUL8lxxMN7IAfb6pUWy9FUfWW+JJnJ7G5Kl1P5zSkV/EI3EHoUy/FiyOSuPjWDh52Q1SMgXdrfA1aBCQx97wf6TmT5tR/2zH+l7x5yIBMFzoZgS3rfIEOixHsgKsPhyirjdLU7GaUHlhsMj5eGXXZttENB6MD72/aVY0zyMCnS5hk4iGF6oS1MsR221zOM//cn8bxjHT5TmQk7az+pBynqtgLyPYP9zJ","layer_level":3},{"id":"b292168c-6a64-444c-aa77-1b87d6c36550","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Circuit Rewrite Passes","description":"compiler-api-stages-rewrite","prompt":"Develop detailed content for the circuit rewrite stage in TyxonQ's compiler, covering auto_measure, gates_transform, measurement, and merge_prune modules. Explain how these passes optimize circuit structure by inserting measurements, transforming gate representations, and simplifying redundant operations. Document each module's role: auto_measure for implicit measurement insertion, gates_transform for gate canonicalization, measurement for observable handling, and merge_prune for gate cancellation. Provide examples of circuit transformations and discuss their impact on execution efficiency and result accuracy. Address configuration options and common issues like incorrect gate merging.","parent_id":"8508fff5-2f92-4c35-ac55-80934ab85c63","order":2,"progress_status":"completed","dependent_files":"src/tyxonq/compiler/stages/rewrite/auto_measure.py,src/tyxonq/compiler/stages/rewrite/gates_transform.py,src/tyxonq/compiler/stages/rewrite/measurement.py,src/tyxonq/compiler/stages/rewrite/merge_prune.py","gmt_create":"2025-10-10T21:28:31.941854+08:00","gmt_modified":"2025-10-10T23:24:16.545934+08:00","raw_data":"WikiEncrypted:r1dbw1ciiG74lYTjPig5U0HJ6OlSrwQwGI2vuY5+G6f3NXRXJmyttl/SuP4EMU/R0qdgrCm/KD57Fe8yg2tGNbGnTrBA+ArOzohR9vw1lKnwlGpT9CyYstmY1qmJBk1huAOCZi55AZM7mS84ksrJJJnTurtRQxRza67N90ujkbLjyi2AaRy1XZajGe6OAkwlbNKiydbjGXTCFRPq3wMYHuyNEAaODeq9LGLbLTE9hxynrfhJocggfrPw1BzDOPdsjXkZtf8PpxMltr9D65s68gDoKSM3KlqPqqLqTpWhxR6iGOhpP1YZp7JrhtDmY31yHHu2GuJzXEy4ueEbVJHULhJhV4WlIU5EckH4HcDeE18wqra4WBDquuenPasBqCzy82jjJk7Mf9t0OChDABACiVKD22pSOihA6TvpJOqLzKeKi2gcU9HgT1M1mnEbCR4dMLUDm0GKnbBZkxhf5FYuaJXODPQWOHZStoYWo4Lf7+NeLI+NFdefoNp2735xf62s2fed0AiqGLYOFwo7oNtevfEVhrmUZy5SWxv5VRG2BnbB5XXq8SsIeTHjeDw/oZURSujdAM1cCpgvOJAtwLElQg545BQMbGB+MSq9CTGEXnWVw06YZqW5KboYbeA/Wgx0/nVR0QNcIoQAg+hEG3t6SoXQxF1Ks1Zdb+il1q4Ajuqaw/EZgTHjx0in5lGjyKNZWTUkzW0WV9OkqHoSdgC/n4PUms3GLIGqHtvhZ/EdMGW+PA1Rr4itFu82hzVlzC1wJwiFh/W2HNR8dC5M870BU4P8ZR9Us0rgW3drg6xHYp0TFAZepnu6pCc/x9UlGxbVEbywTp5f/lbFBPvDt57nS0MvnWSQmDqYzlvjtnjlJAKmfG6LGmpb9x6h4thVq7jIudk9Hjv7wTjX4yyGPh5h4j2KpWsu2WT1K6XEmNR0uPjIcB+szlpLgdoz4QT0qCQVlCpwflfLNplZwdxLoLWvD52v3IHQPU8GAGiflmRZA+D2QKea6VFV44QvHCEvQmxHpPAg0By05B8fiV25J19hBnLEsrdjkxHSo2tZQutgy4A9KGD60nY09892eeqWHbO0wVQLVt4b2HqN0Zbp9ecnzgIeSk/p35TfTvOeJSe8IXvwiK0FsiCCFqBDoEJ+T1ApZ2h81ivwlSThW6WMTbtnYZ2GL1MaSKOVK0QkUbAUVHJmqLQnhBXlRuXwger6FKHxXf1HgBIrSghEQIxMt1NCgG6hMm0x+9XzxLGwEiBtKbIP+dvCSPhyWBsGEz6cqfuwkSzJDIdhfUukJ3/Fx168kLReYGSAQh1a69T1SRa0LaBTLFCsvh+gWTZR6ozgvBN3nopGOV9PMjGjaKZLgxjp6hOUB1ZNecLuhDUHbDMSVurxmRKzXS+pZVZihSktxPozkAWaETE0gUU0EfYwabUo/0jzCQZ6oBqqiywxv/wAUmDDhixNsKwx0Swfi5KImaIlUuqP7UWGO79rgLKEyj84fESBXZXCuimzFHYs32XCJLM=","layer_level":3},{"id":"8378892b-ad09-4086-b159-8c17decebc71","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Density Matrix Simulator","description":"api-reference-devices-simulators-density-matrix","prompt":"Create API documentation for the Density Matrix Simulator. Detail the engine implementation for mixed-state quantum simulation, including density matrix initialization, Kraus operator application, and noise channel integration. Explain how noise models from channels.py are applied during simulation and how the numerics backend handles complex matrix operations. Document configuration options for noise strength, decoherence rates, and purification methods. Provide examples from examples/noise_controls_demo.py and examples/vqe_noisyopt.py demonstrating noisy variational workflows. Address performance implications of simulating N-qubit systems with 4^N scaling, memory optimization techniques, and use cases in quantum error correction and open quantum systems.","parent_id":"c0aaeb49-cf8e-4379-951b-94612e4ef81f","order":2,"progress_status":"completed","dependent_files":"src/tyxonq/devices/simulators/density_matrix/engine.py,src/tyxonq/devices/simulators/driver.py,src/tyxonq/devices/simulators/noise/channels.py,src/tyxonq/numerics/api.py","gmt_create":"2025-10-10T21:28:52.772814+08:00","gmt_modified":"2025-10-10T23:24:21.177953+08:00","raw_data":"WikiEncrypted:C34GewOyK1SlumqKiPsSg1Q7++qbaPnmH/WOa1nfihrft9sC1ISVOrp268b0wn3bea7nwqhQrqaO3xYdA+kfUPPgrtzPsLk+vwkAE33NIwelBKDqhqp9M9/4zR4y5/a3wMZc7L4wi2MMfoS/mksgJjCJ9w6pcYmVL280JiTKimrvumNBuv2x3zoP4Sk5k2jY+agKuBNLs1dzFwBf6eMX/kWp1pu694IqBK9/El8LAVKd6OR4Nn7IoEcDJOdxUqe7XqZsG2xL1rZlcUffdFCK70wT3/bO3knw6BJTbWChQ9ZWH+6PyopAwCiObuohcqeWXlKKW2+O+CNtzhE2T+CndaZ6e91agZ9hcpDBuN2yLiFX1WC1GvefTAZg++VVT89r5+3xXmx9r5t5RhT0SRnmXx0H6DSJ3+J7rVWhSFD65dq1zD5XlwbCjx4b9ufpfD73IfGItiuBUnIr79yghjwIckwfgkVFRVEbcKWalyEUzmm7IuA9PhOuE2rOffE7RGM9E/iE+qGPNCmKlNS/i9tpUjDFrQxO1UFCi5ReXW5MO9Oqcvzu1djuGoI96w6bd3pnP2s4eG3NSPuMy0+0QpMoHDxGyZYbAMVLLjilzZnGvhn+Iu8ibAo8/ITkpmth1lpj4cjqD8vi8xFuy3J+vaByfEj4zWv1atCNMOSNCf4KWB5AAolS2ZiQFzKy84/+l7UYV+LsZTOwYTpDeZxodeWEB6+znnKO4O+4PEz/Y+uZcSDSLX2MJ+kC3x9zuvg7+BdWbCdScGRLXlK1WwgucmSehmo+T3pRP0EyhhnRLirWCXKYMwvCCLC1aUysgFdWdlCbXrIwZltCjFuOobNuOPZ/kGo8mRXpWwAbfOyuC4Y6s3X+RGFY9hU7p95rK9bY+lfsyNZUA3W85LKDNNMJzpiUUlRDArGWDPPTdBLM/+7wBGTQHURKlbQz4Uj9xDG9CJJ9SNwOZiP9I9ol8od8nsWzeQnQHQJKQsJsE3n3mlkIByS7nAOMEBd5CIhpjAnKIlUwaBz1/BY/Av/EsUNHbN9KQ0DVve4NIQ+M0J8N80wIlQd5lNO8Q92f9Xs1Br9QwKP1b/QmD0knwe4+wmxq7T5qGxm00Io5pesj8fWlOZMbMX2xBxEkcOSK2E0w3Spw7Fa+Cy/nZ4mGEDntS10LW2Q9MQoJ33W4tQWa00fYZDRFRkXQJ8daPLdDrQ45GugRl+rgoUYayriI0WiUZLFtZ7R+yE3gKRWVEFkAbqrPfnuk1HPjLuupeOfGnQEC6660ixv3X0HezEbf3vcMUZz6/yi8arXlaXMeOjzgRWsJCAbirToD516umZttD/kt1o+Zbcf+Re+hJrRjtOpC+08rQiBLmZsVXEsuriBqrNmCOJ98suHJF5cy1VgeB/I5e231iGrx+oMJJ/tgRJnXMpdbxpULs76fC9sXNSHLMDWsp7G6apz0s3lqcQQopVRmJLmGb7I1NAaNGWg72T5xbBFatSafSnbT6XqXQ2tirI2IBv1eGKT1TLmFUjVvqOvt86C3//dav4cF2KxQv1hFtl8q66YR5zhwMlOHseqKm5n9WmzNl2+bc0UiELv1XHMRoAs5YT8AZmoEA/vwRH+0dBgtZQG/Quv2nV0Dblor8Sole++q7KpIog7rglA3c5htX/Vy8LqupdUYA+pzH+FQNEOPvK6BL2w4sm2MHCbkA/diEKF8TKyb6mYho6tv/6SYDPTPm8Fj/NaERf5K0HL4OVs85INjigBS7a/FLdGp0AreFTvp/MNidnBr1QTVJSlnWONcuvpV","layer_level":3},{"id":"40c947aa-1765-41bc-84cb-42faf8289fd1","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Backend Management and Configuration","description":"numerics-api-backend-management","prompt":"Develop detailed content for the backend management system in TyxonQ's numerics layer, covering the get_backend factory function, global configuration state, and context manager utilities. Explain how get_backend resolves backend instances by name ('numpy', 'pytorch', 'cupynumeric') with proper error handling for missing dependencies. Document the VectorizationPolicy enum ('auto', 'force', 'off') and its interaction with the vectorize_or_fallback utility. Describe the global state management via _CURRENT_BACKEND_INSTANCE and _CURRENT_BACKEND_NAME, and how set_backend and use_backend enable dynamic backend switching. Provide examples of configuring backends globally and within contexts. Explain the lazy resolution mechanism and its impact on modularity and testing. Address common configuration pitfalls, dependency requirements, and best practices for backend selection in different execution environments.","parent_id":"e8bd0624-be4d-47ee-a6bb-9f7c7bfb08c8","order":2,"progress_status":"completed","dependent_files":"src/tyxonq/numerics/api.py,src/tyxonq/numerics/context.py","gmt_create":"2025-10-10T21:28:55.814021+08:00","gmt_modified":"2025-10-10T23:25:40.243773+08:00","raw_data":"WikiEncrypted:eXTykzkDgCICZh19Bs/J2NKtB/cryS6G08t0m3ZWM0z0KlI5qXhEfN3G2AoTSzXS6l+75VnbsRLwt+vZcNwlRhzvAC8HGLjTbw/6NWOpGALBgaCQaCUZ/E1ZDxYHy3X58/Et2OughJc7z4sfI5Yc/EbCDnH3IfPtNc0rl7uNVuI4Vs6KO2cWy+iE4ScSydkCqEXLp0EPFHVxsh38Xb+vx0+hawyX7OiS57rB4eiO6Zes7T81Y8FR0LnokxFShmMbgWxDeJ1K/yz7Jzn2QdoPe+hF/tv7bu5qXSFupOlOsXX7INVTcS41benKNReoNiXXyirdWdbAYZkkf/9WFRlrT3oTkG5k7im/odiu8IkVp761KhBVAlApSyBdve/SDzxO0z8pWJSuG+LkcFOfeXpMT0S5rUkeP1uKUAJBqwxp4gNkrhnSW/PEKOFTpiiFmj06sOZYEqdNAS3fNHPgwQeiX7n1WgcM3ty5hm4mv965yFWy6zdAGmWABkEGCbt7QDvdiSunoQEGA7pBmRttjbCWdSjAr5B/KXvPzBcqXWxyM256gneCXvceHmlCVIqjK4BSW1Cx3YgxAluU4po6x2wfOCp/gLtPioQPj2OChZqDE/bvEuh/lUghR9aO40ruKReA4pdIZ+IB9wGemkQkDhGpUjO8uOU7iRsP6rjSi0gfYUU8jbCbhjNd7RVvLBJSRvR7GGQqZH9iBCOXQlY3h2pZRkTDmyZuZPpwEDVv4pQtKJFPnTb6iVxk8adTrhkJHAYA3u3wTlMrlYNP1WbqOvj7AzwNsb4T6vhE+HPvm1V7ufzejNmNdwAWUUdmBmwp65HDvxgdcyS2FVwSJtZXUjIoyRSWCGYFgUJ1ZqRbLQW16BOxDx6tPRPp3RWtTAvMwWtaI3vuMICKKXIUytVVoLKpD+LxEt2ZOWZmavRjhnsG7aRYojgjcNitiS07ntH52sbLie47OhGNvdSurJ7bqp6clyQnx4efvEQvHVDQ8BcsO9eh5454CcayPHArvIjPKvx80azSCcGdY10/+nbsQHajXMqpIh9vDyOTSUc6joSDVsIUy3gd4SK02lPmdqdXqfQOwhl0QoTvjBUYmIhbvfcV5NZv/Ffg/Ree6AoSsSinr6phVy+V5qA68FLwjc+F+NLxmpdm+AZTeRmoksE6A5wNPTswHvVF1JI3fCFkzSbAorVL1SxqHBCBnagTx5BrgufCD/BYJUZ+DKg8PpXfvcaC1pWhzmiwZa27LoUkQQQcL+4IIyZ/cUPjBxe1uFQQPKiSP0NJ+ljPyr9MU5pigSYZbcrYiEeABAwfrmj/qTvJtBnvyCYHUgT3eINm9i3CoIW9Wg1Lpit90KsxrCfPAM+7jrF5ywdD75Zaq5btHyy3Zn09IPW7aX+0bQVoylQ7IF1HyXBwzQT2qWDeLAUoY/dQX4A4Zy/fexHXtCdCajybNBjEefXPbXFCqt3VBqDqdjLdrMXXYSSrYHmMN+byNPeOTmBZ997yG2diZAFuQ7GqsOSpWLX/OUPfo2itXt0ICb1KbK6dTFB/3NB6oduR5hW+QMPML9ElSbvj6fwlrUvsDx0d2UWqeNUeY9yCqMfpH07e/GC8ATBY2Uuzqlxs7zJZPYXBmSWvpA/oVAaOLVo8C7Fe5w4yhiT7KhcnJ9PHvhTbTFcyzG1hFU3XP/6zexhGFE3HPLlFzYQ+2kXZj6WqZNtl5mEsRru+ZRrVfEx8nU2hUOvzZgqcGEz2hBFGhyXyPi49ajdCSrNJWin0epS3EDPfVFHzoRS6sIoqJKdNo4bDi1VUHK9KrwE8rE4llxUaGw==","layer_level":3},{"id":"47bf76c7-b9e9-492e-b03f-b433b0b24c73","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Measurement Module","description":"api-reference-quantum-library-measurement","prompt":"Document the measurement.py module in TyxonQ's Quantum Library, focusing on its deprecated status and migration path. Explain that term_expectation_from_counts has been moved to tyxonq.postprocessing.counts_expval, and grouping functions (group_qubit_operator, group_hamiltonian_terms) are superseded by compiler.rewrite.measurement.MeasurementRewritePass. Clarify that this module is retained for backward compatibility only and should not be used in new code. Provide clear guidance on transitioning to the current compiler-driven measurement grouping system with metadata propagation and shot scheduling integration. Reference examples/simple_qaoa.py and examples/vqe_extra.py for modern usage patterns.","parent_id":"f5c3c08f-a7e9-42e2-8c07-6ddb5fb47bf5","order":2,"progress_status":"completed","dependent_files":"src/tyxonq/libs/quantum_library/measurement.py","gmt_create":"2025-10-10T21:29:24.281953+08:00","gmt_modified":"2025-10-10T23:25:31.867245+08:00","raw_data":"WikiEncrypted:C34GewOyK1SlumqKiPsSgygb6tZbr39HfU/NYGshj5X7qJ/4cxKAzlTGl7yzQB6j6QxD3zCN9evkj4BW+fDfLJbMSfyNOZxgSl3gtMvX4L/qeOxWq+jDaJFi4MTgCzrMDoRleOuOizWdftmgh0ZzDr0tIbeaTXc8TnZ7M8R4FPh5IJPorFXYogmxwKSr0yRHX/GYHGY2GqnaDqPVhzbYMz7fs+0ETENB+JrrOjm2iN3bQq9JpefscIp2h7SXAn3wQ69lliVeTloOdgUaeLqkQL6lxzhjWYIAvQvXMf8didMzQG2ncjDX3U7ftN4uLOfZQp/QmN+aDjw9wXBHin9QvGxthFSydSAZcPc3BUkWZVshTzP7XNnmyP/bc6NuCxH7CuB6PyOUXBjNCK+CM5F2U2x5XVfbUSTOiXdHcS8/AGikyRUgrOmiQdwnlcnGjUC5jGGumVakJ6JX6mV7xOigs0ZePFlqOadYJjuTPBjnITZoQ7C8oekEaqFM40gzV/KMAUz8l24rcJoPL6R6oyap5mdjTOPkvP6i1By1lRgRZ5thy20U5E9lUZz3VQin16hOrHJKI8/fuxWH+DYZ0O/tUlpSeZLDJFuHcL1K3cP+5WNZnTVaGWeMJmKcFTU+LEQISdsiUBpU8Clvy19g0f7wwRh/TgLxYA7/pH1SyBii3MZ828Gd8wxTO4eO5w8fGTl2OEe4f/cef7k7m8oea99bg5yXJpyaWjVzjAqdTd4l83HydTmORipwVneqa7mi9m9CnCSJ6Zykc093D9chsSHz7zE+KytHsKk/Pf6pJVJlEmLZQFCXrhbdUVK9XRtAp6yNqrvyz0PY/2zS7avRXZ4+QcrkPEbNVCG6sQFcW27T0VeNb8UmBP8SC54CKbIXHvSdg7t/qMlBGewT/SuvrlpGglE98lwktCmDWM23qGLaCRxJfHxpW9izX6vB364vu5e7v5HdFiAUVgVs5EUG1xOTktJl29umytL0iNruhesG531Y0iw2DPM4O+aVeHvnwGxR8HzcRlpLUvhuB5jXXPdNcK449OBL5wRG9CmxQoKsvhHybII0NLS+lgGpAgM1BK1DArS1vIuRA+9YcpzryldAecYbrTfJ+IgSJNOwWH+l2PYJrkws1MsYhZJuC1Y82954xLLxpmNXv16ZznKLZqwMWjEKZpRqe8Ep5BDMMfT/xZ0vqTgnWCrEPE0XNbK7rJChBIcYMmQrrRmNhp6F72JOCKhkMSxeXLa6KIJ64fcLP/yhrwbjFfz6j1jNyWo3BYIazbjlyXpmlg3YzfLf6ioURqfqbi6lQ6xi9N2PerjCkqDT6BIVFLkZ0tDEMoMa8cU7PS0yUKgWC/VYZKHgfiQHQ2F802mOHhx8An5J8N+penuPWjI+okgSvEurEh3D5FzGPCq9pXkixZnzWo9pumlOsg==","layer_level":3},{"id":"328442c0-3bbf-4dc7-82a6-829d7289a7a5","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Pauli Operator I/O","description":"hamiltonian-encoding-pauli-io","prompt":"Create comprehensive API documentation for Pauli operator input/output operations in TyxonQ. Detail the qop_to_qiskit function for converting OpenFermion QubitOperators to Qiskit's SparsePauliOp format. Document the fop_to_coo and hcb_to_coo functions for converting fermionic and qubit operators to COO sparse matrix format with optional real-part extraction. Explain the reverse_qop_idx and reverse_fop_idx utilities for handling index ordering between big-endian and little-endian conventions. Include the csc_to_coo conversion with backend-aware sparse matrix construction. Cover the ex_op_to_fop and format_ex_op utilities for excitation operator handling. Document the chemistry helper functions rdm_mo2ao, canonical_mo_coeff, and get_n_qubits. Address the FERMION_PHASE_MASK_CACHE optimization for fermionic phase calculations.","parent_id":"5cbeda6b-e47e-49ae-925c-755196501fc0","order":2,"progress_status":"completed","dependent_files":"src/tyxonq/libs/hamiltonian_encoding/pauli_io.py","gmt_create":"2025-10-10T21:29:39.422548+08:00","gmt_modified":"2025-10-10T23:25:44.43919+08:00","raw_data":"WikiEncrypted:5f2I+3eR0GPEzObW9eh9RnPAlMbK8+EGVdLqY3ljao5kB+4h4kFS7147gezCsCMQb0vef8pncriyDHfsjdrHTnqgry9rUtDvLEd6bGaEHYJcMXstZ1xK7/7Y72ETVXnu89rxbVIRqrEcqzEifeBaQb3aU6mhg1JK916B+ag/4g/sNg4i7vytpeYsNteZGhxn/uWqEChurLYGoR9O5jY7ymKjTR6UWiIciessFsEk9mxDotBGuH8fP173OhfcVAXrUO9lNm5AiUEFgpxRRTWCgow9rAN+YtigtxXTKV5AFBXsxofZrqrUTfi0pferkd6/pDyNyebyTJgCrHQBWoDRVSN8T+lFa+sQRvPoDqjp815G0hm5QttHl1LieZI+GHEptxkwC5Joe+X6AqV3S9OOl7k3AUq/8rxv6Rq44ILJ6G/nBUiqwjBXZrewiur1AOBd06099nV9LewM9/i6b1qqAujRbCEXGv4R677lOMubUoGeG3M0kAyb2agalXRMaLrEslFvyF2OgcgFffi3HNknMCWVvTKTeRGoAc6AkPT+aLtJc0HKHcgjxu0zrdtmenj2oi39AMQ+CiJ0nYWu9SqC/FV1B4Nwzi7n/urfUJ+8lEOmAR+7G9Kvw+YyPszA4TEveppnh3L1ZEKXNyKyP7x5Gu06tVHrpA+/uKJgZdKUY9E8Ijs6biZRoIJ7YxusWBnwtNRJHGGh/b2Ac4GxxPq8zjsTAJa5cUglp/G3QYJ72eJ5GDBnwemWunVTqYX42kRGFwzev4Lb6qA6Dpfr+t2w46Yut0rxo1Nm7VPL/0slsxX7i4T2TudPuymo84s0v1RtyVdWpbtDnIz8MisiXQaxHXpHRT295BZjwRevjUuo0Ps9XtavvjMu11SMu0AkTz9TT8PG3SpRYDSzl2BlJ03LlLTw3l0YzPJCuTr5qwUuMMnTkQ+Et1ce60AFMeHEL/yH1QCU4VIYm8h4ZwLy9IuGUUyrT6jc5iUe4XNLjUVfBKGRp8apy4ZZAfxcmiQO/khwczPNHzqoji5nGEcioVVJkOVlCppmEQZIje5AdhqJIxMWZ3n//UUe68O7L+ndCeWn6eCXOgH5jwN7oxXmtkKTaCW+HjJiPcaMQQusKTYg+YQfKY3JVIq8m595mFxr4nan0QJtb+mKByAmgfH2YDfJ/XHAlDYhDWdM8FDi7bl1rxeumI2J4zLpsDeBrUgE5PgI7ilDiAZ6ke88drsFLv+4cQ3gdAUQ1dN4cWpG2lNsjxsM/kOh2gjqnzVLevKAAwg74yWwVtnysdky2Q5fJHg/X7fstwKWyD8u8I696DZ3k1rwTvXyABynHwi5OvlqHJvZviKqIuIEYbXp41NN2Qo+EqEpgYj26lCTSaB5Scs6jTNFU6PqogKcqCOEnutZBCoVlJbYJjuNii2xXLqUM9tiKd28BFzoWO8KjqhtDA/Cf0yfe9VPq7PSl0FPMxLwdpYeyN5kUf9h7jnIbpz2IOW6vCPCXMwpLnDuo7xqZO2U8u+MAgw0uvrpWh5ywV9yY099BCUJ7QfbHt1kvVU+aBo0gUlWZRYAJwPQc/zvHgdgaG/h8tRdsfl/77gn3Ao5GF1GrvkVNBZQRLUQK/pEGgrd2wvsDQd+h6539DNS+Jf5UAE/GAmbBARrOghXqGJYV//T5XAvi+uTodHfR62hoeNEeQ==","layer_level":3},{"id":"364a2802-e32a-4e84-bf95-9e2e1af8c398","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Trotter-Suzuki Circuits","description":"api-reference-circuits-library-trotter","prompt":"Develop detailed API documentation for Trotter-Suzuki decomposition circuits. Document the `build_trotter_circuit` function with parameters `pauli_terms` (encoded as integer sequences for I,X,Y,Z), `weights`, `time`, `steps`, and `num_qubits`. Explain the first-order Trotter implementation that applies each Pauli term evolution sequentially per time step. Detail the `_apply_single_term` helper for native gate decomposition of single-qubit Z/X and two-qubit ZZ terms using RZ, H-RZ-H, and CX-RZ-CX patterns. Cover the automatic Z-basis measurement insertion at circuit termination. Address the current limitations including lack of Y-term support and higher-order Trotter formulas. Provide usage examples from timeevolution_trotter.py showing quantum dynamics simulation, and discuss accuracy considerations related to Trotter step count and Hamiltonian locality. Include error handling for unsupported Pauli patterns and input validation.","parent_id":"d5c1aef1-5986-4ca2-bba8-ba24a030df89","order":2,"progress_status":"completed","dependent_files":"src/tyxonq/libs/circuits_library/trotter_circuit.py,examples/timeevolution_trotter.py,examples/hchainhamiltonian.py","gmt_create":"2025-10-10T21:29:43.361571+08:00","gmt_modified":"2025-10-10T23:26:33.889621+08:00","raw_data":"WikiEncrypted:C34GewOyK1SlumqKiPsSgwvphYGzcvsk3C9IAaxg2TPM4qITz+fBjrspGzCm57GSPqGw5ukamSg6Ml1TtRiuv2u6pZec+0DZrDxdFmklcEtusREhj3/xDEmAIJh53qYmY4EhyGP6qqdelEijWjCHW8xi/IjIpTG1D9QQdSBRSmUliiiIOh2KTnmdTmpSDrtTEtl4wopwf1AqN+DPmpYOp681bNmNPASz8wOeS+4OCWAj0nU0uZ7QywaU59stkE3WRW1QkpG50ko81wckjCjPksOK2fxEKJqR2wXcowIMCrXVtPCEz/uD4i7e6SCx4KqTCCTCaO3JwCQhDCQydibUKzXdS2jI1QEI67lu+ateCUnS+Yr8zNGNLyHnbadnwnNNFd81wC0l3XGTORhE0cg+tUnXXY0WGIQixpS+BEKLNcVwVeYwt1VsdXN3FDXZCoH111txAUrE4jcX/AgvgrKYHTd+5AE3V53qb3f/dDRLmoEFnhkdhn9gg4qRUu/u5pX8X218Rv6AOjAxl0dO1TEh0oMcavDisN9WQ/qtNa9msRLTQDQGwdA3nQLEgEZz6O2ON3ceM8bRYnaSmNYQJaTvr5aWvlp0+R3w4NoGo/C13SPUTZ1hEzl31Bsj48P2o/gg6GMqeWWPHxE7GUy1SshBol5abrni1d561xpCk2cXlAgQyhjeomHxvPfjt+dEv/Bc2c1RyXXYuaZ40H79s2mDyVTpSrT0RcvlmzmjLC5skJpjf/PezHdVCWWZCc1XVKWZurNKUS8DJmsaoWztqildk2pjdRALZHjp5ldc7JWMOtbuysc/WI5I7BX8oDZ5x/+8tVyzt865u5w4I5Pf09Ql3/ttMUmf6y+bUCQA3Y4+C3lROOGzHwQdoSJJ2xFnl74sv+nTW7XBT/fl8rDvgTQ1tLpwg32AiG3AN/bj4BGH0NgPFn/WZve5BUub/a11VfJWW4nMb8g0lEB37taGVQc6dPHt9k/ybwmtQOmtqVaDQ2+SpSmdMyMdyv+pjhRl6j1AlThnB0Jai1ZrKEJqXkaFDThWjr+lu8dhp64P5/IVsdzBJmZ8Ub4pjbR/IB5P6tS5Dotgrmy4yB1nm1lrnSvDbRoQAfR+UTfI9E62fh1ArSFH+lvtmseojtHmGhCiEh4W+MKeTB6sNcGTZo4ZNG6tK41lXQwOt4u0Jb0BcxEcCHZQT9OLfWFvHl8vQoJwrwH0IdwiGOUvA1ZXZfgz/fypkXSb5568zcfNTB1zJRZmJrmVDt+PYkJWPC3EBF8HWGPa5TRPPSGZtOthbG2RVmaFIyk1ZTneMvVByRWnf0eyZxu7sQTT0RlpLJLaVbSvj/LP4Qxqd/wTAzo/9rSrpjLqt8+7890HCWdFEX4lX8PieFFa4AGXp/hzhoWHOHiID9UgYs4ANdmFwCGho7JWyDRmG/uXWWLhqs81uWTj4a4A4eO17OaFvULB3C0sk2hI8ma3YzWY/2tGUzD4Zeo0+iqsXPXvJBk8XWVIWatRMYL6Coop+Gxn16FZbQdWPsPHSQ0/WVTrHsMcTr05ePWHN/+t/+PpZ9bWXnP0An4Qu0Ywe9iSBfW6DuXyekzjgskjxGuyj7ILqyqTIuKQ4Deu59oTMRwZzRd8UTdJuKvFQUgseUsFQIBlcAK+sz3iI0wZk1SSVYBJvL1G+rCsl1lzWRrlMi+/Vrk4G3PSLjQs8KtVPCARtCT9dN4rO87fB4/JK+Ru2GTgRwiFm1aNiIPbCxBR8yBwI5+9cCx2Pe3sU3sa954Xe63H9QUO+g0VzqLRBLWZcEfXjqwJZzGjIWpR9+mvssx0lRDetJOdXsnJWnhXuEZnqrCnYLGKwtm0KtVNgLX7","layer_level":3},{"id":"29f22e66-fde3-4a50-807c-991a927c2342","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Task Listing","description":"cloud-api-task-listing","prompt":"Create API documentation for the task listing functionality (/api/v1/tasks/api_key/list) in TyxonQ Cloud API. Although the list_tasks function is not explicitly shown in the source, document the expected behavior based on standard API patterns and the existing list_devices function. Describe how users can retrieve their submitted tasks filtered by provider, device, or time ranges using the list_devices pattern as reference. Explain authentication requirements via API key and potential response formats including task metadata, submission time, status, and device information. Reference the set_token and list_devices functions as authentication and discovery counterparts. Provide hypothetical usage examples consistent with the SDK's design patterns and suggest error conditions such as permission denied or invalid API keys. Note the absence of an explicit list_tasks function in current implementation while documenting expected enterprise functionality.","parent_id":"b26fd035-234a-4623-b465-c72f588078d7","order":2,"progress_status":"completed","dependent_files":"src/tyxonq/cloud/api.py,docs/tyxonq_cloud_api.md","gmt_create":"2025-10-10T21:30:07.283471+08:00","gmt_modified":"2025-10-10T23:27:04.789759+08:00","raw_data":"WikiEncrypted:42GucIVlAI9L6q+fifwcxUn0MHxMYDpwkZSC5TPnx4hUHO7mGn7i45XQV67QXiGs00hiXcP3t+bZJA6UpnHfXZC3MqMMH2WlPFy/eYG9rgm+LjDxX+zviSwfcHkzYfPIaJUX9nLd3XfjRAQKs1YqQxN+VdiJvl5BKE+YOSX8fB39X9O3vPXuwLQRoTyK/NH0BQHiWvP0K7Z05M4aNmiZZLb4x32kkV3o0nCOkSQF7EBdeNp6vqkU6Nl0H0sxuVoVz9HUFQeUgdJZYagtjOxGYTU8HIW2tuqLgiOlerGZrsCT1FslUVlCOC+YTn57ipYwK/HWyLM1Poq0oiszy+iEHY2pMo0t7JbwgC9cgDfbxQKnevNX3Evg/fTZmQ1r8j2aGRPt9TDGU3WzYlO7Q2P9VR4Vj8ypGp6A9NBv0y/AT2huAk8lrnKBE92+C8DxlyCkzcb5sVJv2ZwPzRW9mfqygZ+FKnIER4RsDuU/MKPmPq2RZoP9WxSVUw5clcBA9xxCm0y7wo0uv2ZZvTLzelNBvS/go7QSxB09zl3/jGK26e+RU+tLpWXe6CfUNXY7capiWozKPr00/RyH7lIm0eFu1kMUdbfq69j7sEaD8KCBiFWt+S4YynblmCFKKwrFkBRnJsh86vU4tOik0MVFPxKfswP1+c93TjbCH3ldSCQya36DWjiVhLZHs5bG98mGwFVE87CJiMdQLJce9j3H7FBXTs0UDoXEwqQdTDuqv857LCAiJrKSUqArF/m7TVvk9n8efSa0knZRf1twpY6r1MUISeDgN47plstr97xe4beac1BwyJfaAPksgd8Kp5s9kb645q6WhFEBHlral1t0AwxO7ZYPcdYZgSra+fpZJT3hvq8U8bzUBshtaIr8WiY4AFn6Y6VcxOU8fmKmke7goQhvbYgjpjlnUzAxDKGGA6Ys9nq8vtM4HXGt5Fy8qYVyf6QaXJzD9QQypFkZM8Ks+EtDb5R2EYd51C3+T58sxGi8w196L0wIHCKSatm2YgtZwnxnSSQoqxWimt0lN5INdz1R6KV1SCe+L0ovz1gxGO8sm/RF8DbJIntuRlAwxTKIfUfcxMDYcMRTuy6CgvQnYcftqz0v/Am+f1iGD6JfUOqL+oSGPivW+KY6Yg2aScWSmoLcEag9kqhc4VrgAl7czCZthnR5E26eEANhFreOqehLQBeSgAbD+OvVtxTnrVnotKvCctzaSdQt5vdcj8qJSdmvqqwV6tRRJrkAxPtXkniANMpDHkvF2rYmKH1szVwRN0YA2JSNPw+G4MHTMdnTIUw9uB0vGmQP+V5x9Nx7vpC5p036FSjkuF/z13cbZeDYXh1IEAhTUVWEC8O/kZpj7mOzJHj0kNUdRDQ705gMyVLLIrRHVkxn/XVG3r7db24U19w6+yRrlm6iWC41nQdB6Cr/7vS7vkHAN8rclpdiFdhi+5IG595FQU2JuGdFHjWsmyWD7xE/uNvc/TatUB/ZMO92SI/HAkzvEQTYRbPY/cGNqHGD1IGYt39XeklsduZjFrqCZx0lChlwjNmsZSIGxiSN2dUAsmJ0CEB3WGa462W/64pYjKZopicTARP4RWsW6d/+CypYkHs7oSV9Gr49BLUVpTAFNl5mAfoOxQ8iHmbsLO+oggu7rXF3A+ITZLKWAlJ9bWK+KpSZ+ES5GYcTqt2ZGaOtbJY6AwKRxw/nPf9vygNtAOYx25oXYx07Pv24OJTgPF4b3G+meiC+0f/xANfDcff7TXzh7T6GipoqfCTsUqnPeI10Q/8Mu07LWN9DvYO71aVa/wUgw/Q3Ugq0u1D+cJ/thgdT9xdTh8vhmWfZSTs=","layer_level":3},{"id":"cd97c797-6503-4a96-a4c3-41ee1441e2d8","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Measurement Rewrite Pass","description":"compiler-api-stages-rewrite-measurement","prompt":"Develop detailed content for the MeasurementRewritePass module in TyxonQ's compiler. Explain its function in optimizing observable measurement by grouping compatible Pauli terms to minimize circuit configurations. Document the integration with hamiltonian_grouping utilities to analyze Hamiltonian terms and generate measurement groups. Describe the metadata injection process: attaching 'measurement_groups' containing basis_map, wires, and estimated_shots_per_group, along with the identity_const for energy calculation. Illustrate the greedy grouping algorithm that checks for measurement basis consistency across shared qubits. Provide a step-by-step example of how a Hamiltonian with multiple Pauli terms is partitioned into efficient measurement sets. Discuss its critical role in variational algorithms like VQE, configuration through hamiltonian_terms input, and performance benefits via reduced shot scheduling overhead.","parent_id":"b292168c-6a64-444c-aa77-1b87d6c36550","order":2,"progress_status":"completed","dependent_files":"src/tyxonq/compiler/stages/rewrite/measurement.py,src/tyxonq/compiler/utils/hamiltonian_grouping.py","gmt_create":"2025-10-10T21:30:29.154266+08:00","gmt_modified":"2025-10-10T23:45:36.880408+08:00","raw_data":"WikiEncrypted:r1dbw1ciiG74lYTjPig5U0HJ6OlSrwQwGI2vuY5+G6fbmI5pjcamHAa+GpvvuqUlGptR5Ke8E1CCRtv24rSAhpD5nqB5ZynRry3jpqOxthbYWcg6vNgxGmvXa80jipx6d8XPV9Q2ulPOTxvaqwy/BmiANKFooTJo6O+1N9twEpo+OWiM5HJNc6NjhzgDSpPWllvzjgwCSXZntO84ESEPNLhwUTPh2VRAe+/ihULZ2NfJ9wMh9vIFS8D+KXLJMNlSHqkZcqqQyE76ybhg7S+tWUwu6e7MoGIpsTS7dAkpHyvdfP7ZKRX2FCHyc07oI78TGr+8kmuXFswzG8JOW2KN+Laz+W5IZGkWZE9On/3b20qG+tJRRY+6t7rlKTbudUXr2wLd5uzOXpINcJ+z+v2b9TymUKDawkUwx6zdy189EjevSIcgAusqU0KoDdFRFFcx3gQgU0dDgGnDsiFneEkaKUVxerxfE3lQjfE6spqqLKCU3De2gs8M4XztszLvak/HOlpOQA6hCQZfEQ7YW4PAW3sF8OKOWtARXfmjjJLXIf43FVx7y7IvomuLw1qgm2eNpz+TVxWB1h7zY3xDU7o1XogJRSLVOo4lpSPiCxx/rojrCqKLUXOW0wrimbLc5pOLxFHUgu/7VO5sU7SPAAHqQOJt2LMqFeVXC97YVA/vGdxyIL+09lr5GKUod9aLblAa6BoSl1p/W4SXwR4JXKuAxrL3J5+Treq+sLmuqKz4vVlliv5orIwp3ju7NAqjfSo39qwhcmZadMY2fD/pJKhU6RBt9Qf4e3nLSIINjtUSbN5QW0iYI5GfNCfP6bIlI3uaqKrK3YlDZCbp08e69XcxkiVkjptdsagRq5OmBzFeMQ0uVkTwxF76PhK4VUEhNt4hUMqieOjFUQIM4Mxh+fEqRRscojreqB5P9byEMPjwzgEeaWaJLpcdCqx5vZfFMHGD9j5Txg0kgNiXmsrxvdVglr2iChGmdNdlUgiNglyheCio+BpWA8kA0421fHVwKE9V4k5N1LI1zKKeFFtH7uzs4w2/GdYp8edn915H4tCy4dWJBXA+qaevvDAVVhX0Af+fKqOgxj24+GbRtfJW24TQMnEctkXaTlISQtSbDVsRE55L9tKs8YIYlw6l826GjeM0M+NWaOoETKc+iYdn+nqqCF7+exgEciNyVkS8egA/7Hq0owArMMJopV/nDJ4YiVN5rQUlo5sZXZl6zNtvnXKsJ4hk/vj4DcEAXfrPJfO4xD8hIi4w0by64gfFUaNfn9Zh0xZ1nQ3yGCxDa+aDReuZjPcu5OIqP4iyLQU86Kw/NS+fa4QqL0ziJxZ9fE6+pQ9ucC8Icie7TKapjLTW47ZQ9KyCvzX4t8pHiK6Jv7JJqRfaeFygcDl7zCXC/GIhrf9x2joevjG+APPzRzTCcOXD24AGEamr/AwRERLw8stru4pEAfSZwz1DgJ8QOIEOWkjMYGNjl3yXYdnhKYIqw1PhfbXhfEuqh/6i+Gdyuxa51W4r+5bhLamWoX4R5MiGCBN2KRCLrvq1cJlQ6/3ZyyZDl1TKa+ZePP93NztKkFUriAh7BZPAK415yeg/wGYEl07oB9rrtaVJDm7hiXj6AuQqMXBc7jRtmcGYMJlpxKWZlKs4BwUlddIRTuxAHKGmFqJul+tulB+CG5N/1HVPK8CrapcLcxkkK4MBiOUSLGazi/dPmbG0HywLFnPnC6QPmyC/","layer_level":4},{"id":"57e25a54-955d-4e3f-a86c-9bec659c2312","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Matrix Product State Kernels","description":"api-reference-quantum-library-kernels-mps","prompt":"Develop detailed API documentation for the Matrix Product State (MPS) kernel module in TyxonQ. Document tensor network operations including MPS initialization, gate application via SVD truncation, canonical form management, and expectation value computation. Explain integration with the numerics backend and usage in MPS simulators for simulating large-scale quantum systems. Include function signatures, bond dimension management, and error control during compression. Provide examples from examples/mpsvsexact.py and examples/lightcone_simplify.py to illustrate efficient simulation of 1D quantum systems. Address performance trade-offs between accuracy and computational cost, and backend-specific tensor contraction optimizations.","parent_id":"c4c05f68-9315-4d95-b71f-26fb64ba1b27","order":2,"progress_status":"completed","dependent_files":"src/tyxonq/libs/quantum_library/kernels/matrix_product_state.py","gmt_create":"2025-10-10T21:30:43.574373+08:00","gmt_modified":"2025-10-10T23:46:19.017289+08:00","raw_data":"WikiEncrypted:C34GewOyK1SlumqKiPsSgygb6tZbr39HfU/NYGshj5UiAYC6shHCS97r3LRvFmIq0bm2CCCmFWwmivd31BMEQa852J/VcptK/hl4ixenkCzhiWWT0OP5YOHgh7k5/NrWGZMdA41dF0Q0Lc7W+ocgmfHKFFomrZxK2llQ8DMUf9udfN7vZTtw5LwmfK1HLCH3IgxTZ1KHD88FeXAGMy3X717ByC+8lgt1nq9VFogWEk/UbrsiX1XxvBJ3pNxfXAlQ45pXstYJPAmyExlL3VMLYmwMoUqjA3tGgAgy6+Rt6hbknXb2x6AowgcVFD/fe7DBBRoujkkSEP0lTDtK19Lz+2+ZnOgi1HqqKXDuXNvTFMCvzXlKbeKHXBgFnHraaqQ2DShPCN5moTSI7uvZTSL0iblQNRtF/EYCR+rsayXYebFUM6iFLr59LaI1+Lql5FuBi35mRsH+ZOMRxmH62/hibo6/ZxZrdiKpqG+ZCky3fmhFrc87JLozlHJ00o5Cdv6YShM9HpFBMdQsn409NoE4yKmgELgAO5IPSstJiiVE50rPseMEYpK1bARKU6KbFRyoeyIs/oGI81NPF/kpyXcu+ntiwFjg9x+7asHunmEOyvmJh4F+GTNrALXN8GgIGgExzRYNpNzTAZMDQn1hpPOsPFsb8d97acytiZRhk/hZjr+p0FvSbNjiwzkFYIkT/mBd1byaKZrrBtZZHI2vrqb4MM5BOJoplcGPWySHMNMnHgF/RYneT5ABBOoGcWKNKUi1PoCVyUmHZayCy31rbvsOKoNpizrx38fYYm+YosA5PWBT8DkKkzhcNA7GGPexKvZUErV5rxfrrEnMXRwKdCIq32jJmda80vk4S0H7dd6WraU/pxzPhODjhVUkFAjmq3AKNLPJENy6eeWsGa97uSFslWapxDzgbl20nyqJa+GKFDCRK10ntpHpM4u4ftaazKEOmkoXeL68olQXaGZ7aUHos8AOshJ4GOGa9qYaHfH08vXOcASVLUbuqVOQ5w+hCuyREua6tJ9gOvbXFh6TScdypOStRtfKSGNXa3F22hzy44/Z9KLPqY5EbI1hJz8bW3F+HT28xaAdGHZJg9bGG2cfacIA9ipB7nIEspVtMD9nmjHyi2g5b+zI/QXbGOJj8YjtkCQRoX+Y98NHTXF5RCCaVZCFPsf0sPV7u1LzA7XT6jPLfh2BPszuWUcplIcGMXNOZEfdsIY3EAnsCHuisilI0hmNelHm7jAxaPtcpM+gs8CWSvJ4xv6cmn3uhTcjpop9+nR2I4XPFv0V3E3bKo7lKb+cR/l9/P48sfuwsN27SfpDv9WXi4yBnWFMFJ5Kczyr5PqgkBUaO4/8Yd5B0C6JaFOO3poA6J9jAJvy35EDy/cR8a9NfTyUrAgPTs/I1IMXoD65fmQdk5icaLTKjsWw8g==","layer_level":4},{"id":"2749ee23-e21c-4769-aa0b-45a79cedb18f","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Intermediate Representation (IR)","description":"intermediate-representation","prompt":"Develop detailed content for the Intermediate Representation (IR) system focused on Circuit and Pulse data structures. Explain the design of the Circuit class as a dataclass-based IR with operations list, qubit count, and metadata. Document instruction types (gates, measurements, pulses) and their representation in the IR. Describe the role of IR in enabling compiler optimizations and device portability. Include examples from core_ir.rst showing circuit construction and manipulation. Detail the Pulse IR for low-level control and its relationship to circuit-level operations. Explain how IR maintains stability across compilation stages and serves as the system-wide contract. Address common issues like IR validation and error handling through errors.py.","order":3,"progress_status":"completed","dependent_files":"docs-ng/source/next/user/core_ir.rst,src/tyxonq/core/ir/circuit.py,src/tyxonq/core/ir/pulse.py,src/tyxonq/core/operations/__init__.py,src/tyxonq/core/measurements/__init__.py","gmt_create":"2025-10-10T21:21:34.900489+08:00","gmt_modified":"2025-10-10T23:50:33.665162+08:00","raw_data":"WikiEncrypted:GAYP+Q96byUZT4Py247W7Csxoyf7l1uH/SZ2ie8YahDjrN2raWInEQ6fFY+WER6mdA692efWyOcMWo2Bf4mqYtqT8mo58OGbpS9wngpH6njeiNWQtdiZxUVcKL43BlnPxJMbVLrr3+gT6aHLadZcgU0h4F8gWL0WJkMYgELG5nq0cGkIiEWnPms7IF+g8uQ4MfpPd6LcTRLeSy6u7DREcVpkmPV++aljpZdet91W+EUxiho/E5eJBfh4qQz77LM9f61lkP8nsPREyZjoaAzOKy0AZ+0rDFimyHwSIV1NXUghhfM6bb+bXfALp35mwFkcjQF+tDgELEXKFhOicRK8w6OWyBuhY+VX+OW54O96/QyE7CdZSs9mbezbQEw++MGl/iywlCv4i2h0of5O0RL87qt0obWrzcesHgOTzn2WiIRZoDUnapq3l58T55yqLifdUsn0jvhNms43gyPBVeyJi/mFku55NWY1GIxs109dr7fCieS36g0NlxFDRECQsgJ33Opy8gK+VW1LRYyraghV+avJUAZhNPUCNTCvV0Il2sb0dH0wth5UKiDUGRWtoWfwNJDV7/3iCWDMEjpyqnkQRsb34ahSV4t6aOaKFpseYUMOiAKTpvFW8JI6MvG4tAp2Gp4MPrOyija9/giIE3TrRsHZxjfIJstXsTi/2YURxugYlUw6EA6f7iXSyDxuMmtJjS5o0qsQ3r6nMbGkOfYCSF/PoVv4Xyshk/qEEKCytqkxbkGgjRHLJe0+JOnaWM9KHJMcnDKsITPerCj38qSJ7m3fKZ56LgxcJUANe5SjSfywsHiciARm18a3Bbh800O6HvHuusJ0hsjt8l9ajFuZ6bijrzOnQqjUEeLcWNoVwKYxlkfJ2ZPyQz5ybGhV31BFpZAFdiZYZbDs2trfV26b8dkNC0uVQIZ0aRQPcMJY36BbCBllCSs3v1GVyZtVYmIargicRXB1mFKcwEEWscCK5th/6SwBQCUsTue1NlTu1SUoMcx6JfwMp2pqXXacCr2Oo0gERYlKcx3cNIFpMTJWBFZWHbjLDNTkX0LfZdbPkFQpWf6+N+Ixt0ju6MNkwsYXMk2PRg9OzV3Lt4rKA6Rrk/ZJc7uJLE1jTlM/kIh/DSBcA/tHNdu9fBamm059rVrKiGU/iGqu+OdFRYaRFB5BBVa6KZArXMKUXMw0t6zff9Dmz/3NZxMm6I3NjU5JgBcbxkDkL25rx2iuzdZSeY9zUstekshdy+l/MLmtWwVCSDxfTX6H+JvUqejibROUQUNHL/UbWKuZeXcu9LX7q4AftJ4BvrOrYpLRr667uULVMeL1HZi329ocZoIPLPAtl4BM4kPppNWaCjwOf6Rob+NBPCMN50IExOeWMCxErn4loJ27UbkDkDBt6bMJxFq0SUcLprek771PoSISQwR6mMAyQnEW1eIHj71EZwtPSUTezaNLijYcc25a48ZVw2x5CuuzYfz38eQPfOA00BKMH2su8f6THO/Aa3/Jmh4fnqN1y8yuKVdk3NA78dxjfE/Z+gXpPJLSfFovgAcB0gABNAj/HbSlpkXbkMjZkifxsAP1++EKddp8dRj/x6xM0TEWDu0fSm9OaeMe95uCla5XBVtowA=="},{"id":"623db65c-51f7-4fb3-bb49-e20dddd2cba5","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Rewriting","description":"compiler-rewriting","prompt":"Develop detailed content for the Rewriting stage of the Compiler Pipeline. Explain the suite of transformation passes including measurement optimization, gate rewriting, auto-measurement insertion, and gate merging/pruning. Document how measurement.py handles measurement grouping and optimization for Hamiltonian expectation value calculations. Describe gates_transform.py's role in standardizing gate representations and merge_prune.py's function in eliminating redundant operations. Provide examples of how these passes improve circuit efficiency and measurement accuracy. Address the order of operations in the rewriting phase and troubleshooting common issues such as incorrect measurement placement or over-zealous gate pruning.","parent_id":"e3263062-6a60-4591-8e69-dfabdcc9cf5e","order":3,"progress_status":"completed","dependent_files":"src/tyxonq/compiler/stages/rewrite/measurement.py,src/tyxonq/compiler/stages/rewrite/gates_transform.py,src/tyxonq/compiler/stages/rewrite/auto_measure.py,src/tyxonq/compiler/stages/rewrite/merge_prune.py","gmt_create":"2025-10-10T21:22:12.669408+08:00","gmt_modified":"2025-10-10T22:12:17.343338+08:00","raw_data":"WikiEncrypted:r1dbw1ciiG74lYTjPig5U6LTsPGPLY7hmT4CSmgyGNvJqZYuH9q54M91QRn0DFSTyu9A18+DKqdebUDUfi4H6nWrau6z6T9sq9JVm4oWYSnqTVv96upPiW4/9/sJYA8UYJnxQMduo7jQXeplLxWpSEbkUK8Eiy5G7TliOzlR2Nip0VlVSXouRWi7Rruxqogsg8PMMX3Db30NRVE+dWpj8ZRqT2Pda++/CUn+2MnXAup23Qu8EGbWWVEaDhXrwd98rPY4hEhdUFlIoXZoafM5BWKY/TDXOEErni79t3KmfWmuxgsB94pMm+h86Ayau1TR7m5L95tLZv4/r/7ZgcxQvXIPuBCqbKwJ8OX2D6RjanvvZWc3c4i1RCxX+3ZzL2wFKH0iuE4mIphOyCFfQUZLCZLKSMjswIkahIjbN7ICe3pGAyaDlXlLGSbvohs9IbwU4vg1UWMLhszAE+3ydDfZb37wLZcQiyKL9/+73kow9A536TNQ1eog5GSX+CG24wWlVeGlDX5xLzq1jSuSBxZHm6KOLdcnjdghOXUWqMxb/kNp8zzow6sbgfwFYqceGmswlk+hWqYu1uB8APxXedMDIeDzHSU8vCNB0ThXqF5RJ+IvqiRamjQ1n9xBatkX8HeyuBqLZBo9NwdALgznSP3LosJbzTl6HYS5RN+f1EYKlzt/un59y6srHNiCEG8VON/xz/Ed5DRbFXkZflkU2CUGnurJxpRnfriDyPtKyQ0a/JJVKvqyKKplzGERpehAcHet8etkeszecETbdoNnPG3thW/l9hLOjYD3SZFWQl3YZ/K0Bxpe6iJcahzbc2Wivj/eaYv8YoYJlHD3P38E+WRBfOfbi+I5AI2PqQl/TUREUVy1mqHcwfQcwbkVi8j7GepvlknfUPeJpj4lrQzsBBGFO1slpeA+LEDdRPtuVHpsFS2//digCtJgTm9f3RE47PDvf+LAK+WvAjSST/325nS2Um5T269zlJCoVcKOyD8/KIYEkgWzMl1SJw49FeEV0GRrsQ5uVYKaEBKXFZAk9pzvIlql7u2MoiW9ZKB39Mx15VlWG+o+WCptT6zcU8vQCf8cBoAtN878ruqmTq39pwUIPz5ZOS3ObC8oBe5dc+SQ7OW2NnNvAbkH/OzlRHNQTHznLzUg2h9ehxNELufEREjs+bSNPvWNm5RJ9XFoaa96qYOFPPd/+762VgFnUw++D9S1Jd0J+UNopa4dYskzBSC6lw3L3/64lOznb+htKTicYB0LBSJ9jnlnTfIEEvjxXGcqpoI+ZSOtd3Pbjv1zVji0Zp0pC7pMmRCaRXM5yaHbk/YYKLhffsu5S+Gn2E3anNZ3ubIkGty1JV5tSJPL+8GcYiF3hd5v5VQ5ZDQ3RWdtX2H5pqUJCskbQbdB1DeoEoiZ3jsByAZyFV/Qzzrilx0H6+/cn2iLjvK+J0/WavMcNSadmV9JNYbZ6lkEToyClEC6oh1u29z4B6Y1e/LF0kI/nyY9Bq6QJQivg8q8LGEP+NA5ThZe4GOls4U3aZYBcuBZWxVRwMjNslUkFYRUOpBO28zwHXcK09XRUAuOzXbzEI8YRb6pfl2DHWF7k24L/uLl91i9P2DH0kDfQXaQcvw/Oc3SYq39lNkcfrv8hoK6h5fjAUsDvEsGyGEefSu2hH1O","layer_level":1},{"id":"8237014b-8913-4e25-86c3-7aac3af21348","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Numerics Backend System","description":"numerics-backend","prompt":"Develop detailed content for the Numerics Backend System in TyxonQ. Explain the ArrayBackend protocol that provides a single interface across NumPy, PyTorch, and CuPyNumeric, enabling backend-agnostic quantum simulations. Describe the context management system for global backend selection and configuration. Detail the implementation of each backend adapter, including GPU acceleration support via PyTorch and CuPyNumeric. Document vectorization checks that ensure compatibility across mathematical operations. Provide examples showing how to switch between backends and leverage GPU acceleration for variational algorithms. Explain integration with gradient computation systems and automatic differentiation frameworks. Address common issues such as memory allocation failures on GPU, dtype mismatches, and performance bottlenecks, with optimization strategies for large-scale tensor operations.","parent_id":"40147ed6-4474-4e38-b488-92b8dda915e1","order":3,"progress_status":"completed","dependent_files":"src/tyxonq/numerics/api.py,src/tyxonq/numerics/backends/numpy_backend.py,src/tyxonq/numerics/backends/pytorch_backend.py,src/tyxonq/numerics/backends/cupynumeric_backend.py,src/tyxonq/numerics/context.py,src/tyxonq/numerics/vectorization_checks.py","gmt_create":"2025-10-10T21:22:16.258488+08:00","gmt_modified":"2025-10-10T22:13:04.477027+08:00","raw_data":"WikiEncrypted:eXTykzkDgCICZh19Bs/J2DOV/i3F1OwmEM9Nb61+haa5/P9M+R+SDzjprDyce7qqG5GaHGB8MminVevvxLdHm0lVXtr8uB9ohE970mP1ipQj58A92s4amFmbzF9ygcOWphcKnUvxfn84L/AKgSbUDZL0LpiiAD0DoacCO37kdme/CfErusc+uvIm7UIJ3QrnaGANUDKoOr0MsoUCF8kAjlwg45eGigXdUEUadti7HOldcKJSCcRKFoddgSPVBUQIyzFgSdQLtJBSu97NuMQc7fwrVHPjKN554K51anSkvmAyxj9ICsBb/dWJvZeDcHSixkkDBkiqcBscRhB/4dobQ9v1DsuIGDykRQt2C0XYZWj4KMIszG63SzPNOGIUn0x3Gymiwhr7ZFYeo2EVmlywwhHC53gaCUEAuq/MY8VjoSArdeG4o4XhNKn2n13Tshc6GVqk4FVMkemPlI0EGJWymZDQF2E4P5bso86S2WpaERH/qPGazczMSgB0v+zMRYJ1MGTUrEmnzYyW0xCK0Otm/CuMgCvpTj1aQYHn/E6/PpK1stxto2vFIrSPNTYJOrsfo/DQJE0F9k/TiuAsNo+JlRAigJYSu1cJqtp6oUErSGY1Mm2llrDQ3KVFdr2ha/NkTVtWWLkP88xWQxnvGYa7HT1AwCBMQ8WJwffpUNqYXyf5mh/lBYYPKCfqrJHwj7PlAxzx+liGPf2wL4iAZv3RTlyEIQ2rPpFItPd+GzKcVypO9BJdoF+ooph5imtY7E7T22hzlCRM6pTj7DDE9PqBrcy7+GlagSiGHiEMbS67i6eps1/MhTndp0y5Rpwp61ZmOsYKFzRVzYI4LKYZK0F1i7UkdYoTD3QDOu+MnJsEWXpl6VjBEY/m85iglmWU8XYyIseufBMByiYFG0pM5PTKOGNiTQAfDEY50kmlmRLq+nB5tn675Djie/jDCa4lh5cPaQC744SCTyv33WPgyVMpJubxNtM/bzsamqLNih5SsHOEUnlCgeTpuQd7uD3jgGqJiNJyaExrH58YRD+2oIVFs7Xj5GigH+qJNNxaPw1cIezqPzfZqt7PcnNszKcdwHkXijQ3lx8PJQ4jwrkxrLmvVZbMgpNnzn1Cbu9T/P97h33an+Wnw7c685t9D1atXL5nHc8+ySkPcH3x9pmZh03vZ7NH+YNzz7BS9v1/jfAcmHIPvzAdtB3TQ/moDimSnR/OU2YkCiI9NtQW7WKB9XHeiAzQ5S6vjM8KOYQIHNHUFhY8dEWi0WNXZn0J0TqZiq1BPYejrbIIV5ucX5bMgGQ/Cq0o/yxoPfL95q6ehKQFeLt8q9lV2sQyu/jxu9hw2uF9Bg7gAmeQKRbZTm53uqWQbfzzR/7XI4oRphARvKwBblp5pGDbXoRI9Ht7y+WLoTH9wUsrdvBcgMSY6nhbD9+SvJXsEkni3gQZZfGQkpJtdZ4GDWkPZI/sC/04Hbl1gqZ3OdU4tPXXCesXbCZzbYuo6fkRv2Mlb4Z2LCqK512tKY9d+3lOsIDoMU5rUamElr2DSCYVvlkwVS6Qqwnu5xvIEeOspmFftD9eHv9Ycjqgesswkpup7ftyBH4yR1P7hXV/Wsi3s15ZycXdfJqkAbUPly+Eyao3UxxlpMmGsm67N2cEFMdNCLbtMxCygiGwE2aewVFFq6reDwWQ91gAv2g+UhDq8Gog/zLobM2uFhzXvEBm01Wgp0B5Ko6k0TuHM2zh3ynR0W8wXzCFmtqxEB58Y5ZjOSCBc/15DImiwBvTtS6Wuoi3LSVn2Ho0i/1XuEkDHTkoEPXlPPkOzL9Jsv1LlCpzdjo/qmcZ3NciRWlw7x+gvOPKi3MHRjafKV2ZTDABkra/5ZdHGceum2sPJr+ZV7Qua0nxFcCH0v6APZRHyt0RMV6wlylEFn+hntX4RLTY","layer_level":1},{"id":"b74a4569-b634-4110-9aa7-45a2370c037c","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Backend Context Management","description":"backend-context-management","prompt":"Develop detailed content for the backend context management system that enables global and scoped backend configuration. Explain the purpose of the _CURRENT_BACKEND_INSTANCE and _CURRENT_BACKEND_NAME global variables in managing the active numerical backend. Document the set_backend() function for configuring the default backend either by name or direct instance, and the get_configured_backend_instance() and get_configured_backend_name() accessor functions. Provide comprehensive examples of using the use_backend() context manager to temporarily switch between NumPy, PyTorch, and CuPyNumeric backends within specific code blocks. Illustrate practical use cases such as testing algorithm correctness across backends, benchmarking performance differences, and integrating with external libraries requiring specific tensor types. Address thread-safety considerations and best practices for avoiding configuration conflicts in complex applications.","parent_id":"b689c08f-8318-4f22-884a-b1ed2f087ddd","order":3,"progress_status":"completed","dependent_files":"src/tyxonq/numerics/context.py","gmt_create":"2025-10-10T21:22:31.959004+08:00","gmt_modified":"2025-10-10T22:13:23.512941+08:00","raw_data":"WikiEncrypted:N3UbzwGjCC3xD6BrTM0cqwAV27VofLMJIIl4D4UO/T5R9vlR8r9Wk/OR6oT7jFYBlgFPSHur5MxD2lqs6ARmtwyrM+03L/w84cOg+wtE2fxw2sYmIiqye/vBzjUjDsyF8+nXAD51T+VDH6wZMi3pky4CCUN+1lsfmsW35JBRXQ6LO33n8RlEFqQGGPv15zAYf9z50ZdnqjU8p6V0TP8SPK0m2p8klMFQ/an2CNREvaZtzo7R82Ewc2Wrg2Z83ulBz8vvcg/kk+xha+4pF97sXSE+1aVup9rIe8Trq2UmbJUdDe/2jr2nv+SBb/52bOTUo+20krupITlhnGYf1v4cUPECEYysMvRZr70/cPvSVmQZu48KhdGJMWw/D04w4pL5opTnApP2c3n7lBnWNVhLjb+W5cYG3C5OTHNfhhLl0l+skV3ipZymlZNlEbuMta7vgBrALOaCg+/yfZtphEDfgXtSZAlk4ZhWUQHamF+6fdmRgF6GOgJYZYC79zyrOgIVRD9YVJY6azy3bdtJsb5cWTz+P7i0FBho/Vog/MpLIV74BwKkCb9NzuHJbw4XuCjJgAG0cTjc471OZSeowv6IZrgDcSVPUG89p8TS7hX7+htn4UYghfm77HUzVhsNrSeEaI57p4m65A2/6BswYO8mjXF6EaUDJ5Omwv6LqZCU/dX0VL6jkKOo3Lx0u6xXTlBFR4WD9dKjhBzl6tikUbWbPY8DVItyTfO8GhWMbAMglKKKu7dPEJqNxvW+JjAO87i7kOX0AiVWOC42rHl3n4bEMl1uXW55HUbKtWBVucIqW/ICaeFefbZGZAdtAgqSw7K7fEX3nH0KwCqqXt7/TEsxzoi577YcLNFcxEiiB3lugiM8+Jj/BJ1IgjXsdK2U+De9OfcxiC2xQvjy9AYCMI7m6pUUpsbf7RP/YCEKnHVuz4Zs4Wa1JYEPeQmuOgCbZkUU0ITRqNk+EkTALBXleIgloPw3bD3xEQgJEyWD6I1U+miAAEBamdyNejueA0VsaE0XJI6Y2Mgma7IiPk3l7d5huousjUZNiz/+PahveDQ0j5+BRUVDagiyDO2LohtNo6//2ULS7eqiSolNO5TZe6HiZejrR7U3/eR2wrCpQmdMF/Zu1l84yW546q6VEtkPV8fnyoEtplhkdFu6Un+YAFORw7HgNLbR0Q980UmCE6pdR34+9qmLL7MKBOfwiZC6oSbHjWV3AdfXA6VnY1KYNVmfnj6sIVfyv84v9k8zFvdjIE3Cy55uYBggY6X9c6dABj/Q0UNJzwzfeuMi+FIRrY90mhP33MC1HvEfPF2nPaIHx1em0buLGQdMbWxT8cZDk8K9mUCbNBCO9dAghN9sUIsb6FeNEW2y47y0X8v/hLrg0Ps0zdD3shz3ljR5LaSYRO09dDLZ4MOlZ2PWk4V5R9/efpbzxEL1t6eNgEYaJNOnKoqvzB7GE+cbADmxr3F1skiPCmWv5pzZFA+Ajnzig/P38ynGUjVU21xdI084eP8PjWdE9REC4sTnfcgk8cmWuUzu5KDg8CTnDYzSwdbTvcxbE6t45LP5RmVibCxMfxgw+pP/Sza9y8PHXqlvAI0ciEIZ5w6g2UEqYO6UYx3G7bl3jN11QyvplzUmmQNseVOVCpFxOIf2v52eYUHUOQsKN7bZ","layer_level":1},{"id":"cd0d1ca4-143a-46d3-868b-0e2a408584d8","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Metrics and Analysis","description":"postprocessing-metrics","prompt":"Develop detailed content for postprocessing metrics used in evaluating quantum algorithm performance. Document the implementation of convergence tracking, energy variance calculations, and gradient norm monitoring for variational algorithms. Explain noise sensitivity metrics and fidelity estimators derived from measurement data. Include examples from metrics.py showing real-time monitoring of VQE optimization trajectories and noise-induced error quantification. Address integration with classical optimizers and early stopping criteria based on metric thresholds. Provide guidance on interpreting metric trends under different noise models and hardware constraints.","parent_id":"6e114fe1-b696-4897-9078-346dbc4008bb","order":3,"progress_status":"completed","dependent_files":"src/tyxonq/postprocessing/metrics.py,src/tyxonq/postprocessing/noise_analysis.py,docs-ng/source/next/user/postprocessing.rst","gmt_create":"2025-10-10T21:22:36.701289+08:00","gmt_modified":"2025-10-10T22:14:11.530974+08:00","raw_data":"WikiEncrypted:TP8KP13wWUq5FizrfXDdgj3q/6hc/OUwbPsnDo/mJJTmamCIWi8G9mD+usfCa2Rvr8CxC/g3pUBVIUQsUtTqvreQkyT2+LqlhfRxoiUGEGq8nfKb3jkE1qRS5VRQrZyKwabkLK8FX4aUQLCzBptJb/fbsNLSa9J3KbMnaSAjmAy4aCJzHg1vdRDQqjZ43BgWMLTIxYbVlzT11oWZsWHvB9eUhorXVissaG2YvFBxpzLjW3jzmqw8rkMLHMWEbzE4Q/4R9kkuMLB3fr3zUZfW68N8p5koJieHtiGTAQgF+M3128hmokvwDsBr+BJNjBZeY8e58SGeyRTfuFEHfB+WlgZJsxzc5GLBC3toA5B3UWIlM4klVwSX/JiXYemC00cCnI8ymEM8f2KOWH3hlbaxnHMmqf+nxUpwCPpbAMDGpHStMlqq060qYtiQxzhykGOOrWZAU7qxpAg8CUUk1EkTqfqkHueptKeWEyrZ4MpXiIbdcD8UG6r0NjBmkAzMJ9SOe+yLA3WlwgHTMNWNU3a77P9fcsr7Avaik1vkBEdH0m1GrghvE0SDSoSXm1tfEO/VXfM6orip6lr0kJ+ux40O3bDa8gT+uNiJXR7o5mhbHGZvjDDGMMbz+fuBUYsX6pV4goj7X8GbobiKYHERLVeHl+u1vg/ztPFd18hi2GsbdDShQsYVaVFzu37xA4wDPsNl39+Q/GHwtuHJ3S0+bU4QtniIx6/wNT+dVzSnIL/E08V9HTh/4LGARcz06cDpIY9lnwqupGpcOyspR3/LuxmiGx9xRy/sU0GqmpOLjw+HChjx2gXUIzznitr+abOcGKVO5pXuu6KUJ9ANhyvTMrhUu9l4yJPXNkonUsVHVQfMaafG5eCrP6fDEl0BMDMDtK3v29qGYrJuyjjUZ9YxeEm81oyb2P8nywLupSVwAoZS5Go3t3eZvPHOeg1eh+7+vdQeCJ0ZUXwAeqHnFlvHXWHbFpQNnVXvFA0rFNKQ3Zd/dPuPLCgM3bEUJm8qhzGcKZ15wJSya9W/CLkdbbqCd/saJT7DtXkMiG6WH+HzX6BP/dk97iiy1KPFC0QpVYR0vnQrCrxPWF0d7UUym5Ftdr83p5zzK69Vxr28qLuSPqHIxN4OI1K+zekCRr1iLS7X82dnR8HfP4D4/d0kC3HIpv7nMaXuZ3n6GgrqlMLNJUsHDXf3r4MESiI2eV/NJput5XeAcen1vWBOkE2SFtXQzTyR4gc+M8iBRN3scQX1fnvXXvsDlg1+Ok2Pm603c8lZfBa8baoZzsNg1UGy7tomPRIjc0TA/P2kPoLmHzvaxM9KJVwhyM9Z+m0j2ki5LgBgK6S96BTLijmiTXqTzkQtllqaiwGZW9v+FFKVLfICeyOBE2pziDBZuNwDUsrAVnCwowOU","layer_level":1},{"id":"80f2b5ca-5184-4918-ab68-ad1c7984e0be","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Classical Chemistry Integration","description":"classical-chemistry-integration","prompt":"Create comprehensive content for classical chemistry integration in TyxonQ. Explain the cloud-based classical computation architecture using FastAPI server (app.py) for remote PySCF calculations. Document classical_methods.py implementations for Hartree-Fock, MP2, CCSD, and FCI reference calculations. Describe client-server communication patterns through clients.py with RESTful API interactions. Cover configuration management in config.py for provider selection (local vs. tyxonq cloud). Include examples from cloud_uccsd_hea_demo.py showing classical_provider='tyxonq' usage. Explain the hybrid workflow where quantum algorithms consume classically computed integrals and initial guesses. Address security considerations, error handling, and fallback mechanisms for cloud service unavailability. Provide setup instructions for deploying the classical chemistry server and integrating with external quantum computation backends.","parent_id":"7fc12bf5-cf13-45cf-b21e-370f5443525d","order":3,"progress_status":"completed","dependent_files":"src/tyxonq/applications/chem/classical_chem_cloud/server/app.py,src/tyxonq/applications/chem/classical_chem_cloud/classical_methods.py,src/tyxonq/applications/chem/classical_chem_cloud/clients.py,src/tyxonq/applications/chem/classical_chem_cloud/config.py","gmt_create":"2025-10-10T21:22:57.10813+08:00","gmt_modified":"2025-10-10T22:15:05.795819+08:00","raw_data":"WikiEncrypted:QK2FE9niK008DzzrBeNOsc5Ikl7Nfueo9TGDDmWJAP/i2N0hnCjtjW4/CLnQ0wYoPsP/qvyiO5mrZ0ONFXaLnIdwlmZpk9looj3paqa92R0unPR0t4WtvDcboodbA055iZfE6WwxRzbn6JMQm6BhdDVIPtSZ05J8kcR3EjwA0M4TZ76HZrl3Pnsff0a4/wRHb0cJ6nINnY3OnGOW98JQBwUho7tKLjwTXu7zMPteF0M44njMOytizxIIc/UYw7AyfpU3X8WNNsQ4f0giE97GIojoIQTdewxzBIq1SU5mZ7IE/Iv4e2UIpSipFQ6JAetPyh3SF7ZU4oY2NeF+N9zHRGlW30+RQy/CJuACCs/3QNWQeyAa3CMJ4VaA12IEnW7FcgVAlt9LLyIhIMExkxAvXigW2eT/xuWIn9MWBhiljyvha+I8q71Lmi+zVh9glcc9dlCxGtS7ay1PR4/XIiARrzznDArZ2qaM+uMxMFzYskRS7j0W5jca1K3des5dEoT72BWoP80yKRxY+GfoEUUpLvp5jFx85qXgrYMSLvDdCOSV/+uyUGcu1Hs3t3WHL4Y6Y2VT6SUOOgrgzqfyJc0Q1s/TtZsn+8O0/mhRABv9sfqqeOzMTqYeSRN5zTLSK6Wb7qdb7KQPgz2pAnXF3UW2F8ncmZO651Yar7Rs2v56LAJDsEknFVVUozfu474UFGAq9nb/EtA2im9uN+ogYCMcnmjhtwaGWOe/HkmlTVO0uRiW/jjc/rOFHdS16VfbRW4NRcnPHXZrj9Q6tXnuhVmmawIF8A5Z3enSkE86kPv6xzRHxPPDkEyw5BBi6uk3Hxyn6dxCKLzTJoVkRtoSzkKs+XvMRoN1H3pBMLN6aCMVh7BEAe8c+t6Zg4tg7gpI2AIrHgQnMvMlUtSWMqAJl5HpuvvwmZM561qrKaDd+7pgEzwOox7q6bhUxcQcFA1P0+NQ2/h/KMfMc7DabgJzUbFHOFQI0GjoOVY3Rx8/AI8Bl6TYFbir84mxZeOB5Ragkgagj0Gr5wmqL4Y2XexXC0P/O1Ctdv9A8/IS9U/txpy5WEyXeaD8uazrHoeJcB4K1GyCzQ98TSSXOHM+Er7dSrkGCC4NCUzuByml5YrhK5fOPYSyghUdKDeqAbdMD7Y6viPww4p3UXLjw0xkrx80NUe2hD/pB+tzJlWIxm4W7orF8523W8fGYwQtK6GcbS0dnDX6mNRQSvoYMWlhXlci05K9nGwH96EPGfFhcicGcG+hgX7NccM/57S/hPNqiF8PyxgZgMfXF0I2RSnSaSMys6ivaFRXqftRdZc6U28qKv5RQ6AJrvP6b/0rPJW3OIEd1T7be334VhzotRsY2IByTe++mLrrWG6dy++0SvJ4guFqYAl9idWQqgSW5DE/FAqsGaF6CwML5869ZU4ITDxqnjZ8LDfjrZ4/tdfNTW0/yU7RzsHMlQXVQvElNT2QN/aG/Qa7/CiG/SqsZXanT5TK5GAqS8nVkHXCGwBFLEJ1l5WY3MN8GELxK4O/DEXtBBbIOi538Hzv/ImobT97VMs1HimjmuoSz4//bYBTvJcAlMKPf80HZrx49of34GkN/OJWodz7LtKvVwKtDcCwkyctjG+HQ304hSmENjX9ExOk2ZxXYzrNva0Rmx+8AW50JBLPCv/mmaXZziAdIfZnQ0eVaGmjlzBzk3RlnWqs7n+YQUWt8aIOuXG3r57Sa1RS+tFsnS31i2DH9MaM2ygnyHOoSRO2qavP/5Qg3QaR2sDgiExetU912XbNwxM2Xum3J8payhVGgi5ZIvqb0VPNTiyUP+MZ9x37YHGTMJfThsWQomXrI7RY63kjfReR+yQqH+67X4Aj/CobKWVyf0ANMX2cNWewzrdFKgOWcrwVnf9wRisINiEXD4rCgnybit2l2W4AhNi9PCM33JxANoW6JYT3EgFZfcQ7/fbAafDF5OFMeMDigsM=","layer_level":1},{"id":"8b67590c-e2da-40c7-afe6-f200c43b8182","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Cloud Integration Examples","description":"cloud-integration-examples","prompt":"Develop detailed content for Cloud Integration Examples demonstrating TyxonQ's interaction with remote quantum hardware and cloud services. Explain device access patterns in cloud_api_devices.py, task submission workflows in cloud_api_task.py, and QAOA execution on cloud platforms in cloud_api_task_qaoa.py. Document authentication mechanisms, job queuing, result retrieval, and error handling in distributed environments. Provide configuration guidelines for cloud providers and best practices for managing remote quantum computations. Include troubleshooting tips for network-related issues and latency optimization strategies. Illustrate how cloud integration fits within the broader execution workflow from local development to production deployment.","parent_id":"be2b789c-6423-4d7d-89dc-b724ac123462","order":3,"progress_status":"completed","dependent_files":"examples/cloud_api_devices.py,examples/cloud_api_task.py,examples/cloud_api_task_qaoa.py","gmt_create":"2025-10-10T21:23:23.922266+08:00","gmt_modified":"2025-10-10T22:14:57.151212+08:00","raw_data":"WikiEncrypted:42GucIVlAI9L6q+fifwcxfNShQRpKKND1P/E2kYnBhb+8+pM73dUCepcx01yikNJIUDFLZ7Qyu/Hq/tvQFHg7l6zuJFDabuMteOJIcg4x86kFBrLu/W3bNTLiin4jkWzEtlo/8IJqh2/8RLWHgDx2VHpSv6wnS+Qz3kdW47M7XO8FLLYjiqL25f9ZX5NYtHRZxQP4DFTEJhNNSB/zMuNI391h6qlsTTUhp9qFy9YIirpFwl2/K6VlbEUxtlIVRjKphOvbazb+XDp4CA9JEEOjRrcbD9mQ0lvY4xxTWiVSU7hoLfPhq6JDnqwG+T3sGtHOqsqUE6lMrLcAe+yE4yzrRfXJp334KYpNTIlUFGb6tFud5p7Elby9/uAiJgyuAnvCJhpdW5EXXfw+S5PhjOI6GUWD+f4ab+MTqujNvOpVx6o37S63jNUKk26+f0zRsnD9z4uXX62DRkKAY8TVM2OZX3UwA47HqSXUlUOLtuS8yRkHqjqCFEvQNCqcgrQVZfZetpZU7ssVAZJcpLKbnRGNHgo2BuzP0ZWS/fnBCGHKlm+LZhguz3ughu9TgiJKM/tU7ywMGVC6FrU7Fwha4FUkIeovCZUe7zcDU2qSrXXVbH9PL4WIUE56lvTEtyLiSgappyE6ETCoKQYrvc4r3O05L++cq/7JzX1iDLenaghq3TdzLmg5tSTNzyuxNqjSd1u6BGLM/M1MWj7KoCQEwhNdgCmXGYKc/ZJtMKIOSrvs229ZbIyUk2ukKiowWVABfdn9zujKkldrL571ZChSb/ueHXaA9xBw9J7gG7D3qpOQb7R61Wi2GfajN5bEObV2e+ocmUT4Yr8G19JWSUbQHDdxIfYmhfoF+789xRi7e9a3Pz4ohmdx9/FDalbjeGVtG9+rlG8NTvwq6O46bXRR88cMi6npj+MQVk1e+6ZhWC1fftXikaygo/lLahFKEsat/zLQYo2EpiuqbbYkX9Mgs2OyCWvxqDCdpVjqPSRJDFGkyLCBqeZF4Tu8aZP4PeS5TGHls+CxW9hSKIpsIatDZhwAbeEHShZkIKwu+Fl7rjAoyGHlHRKXOwFEzfRtZ8jnR1/UAWuVidsBn5JyQeDsnbE3bbXuQnahkokKAQbMwtk9ZKQ94/yyUq+usGciIw2RLkYXgJV9QVc+y5A80wus6KaePF/CIGqBH6Og0pavxLJGwkKJmehexQUenwwwGa/BzgMMhMtAMuW1TQMdNMi+lP/driJ71QqD6XytPC6IO6RtdhLbdz2zuNKhxXlnR/AJEtulTdfH8os0D1Ors6glb7JlkoBKl6jpTwPd/nbUgmPcq0lkb114bVyciCrzmNWPA1DhyxfN2DAmsaVHtFmB9zHTGmL/dDMj08mcHABAu5dviUgDTUfRWZMv9rc0FofIjDAJiE8zKfwTcqJQ4xUkVbpLjtEFkQoS5lct+/pWo6h04kSkhE0n0deBLSOS+jhwJoil6DGsQCLgHRaZAZSAC4bkA==","layer_level":1},{"id":"0cf47eb4-51ab-4cb4-b357-0d61e8aae060","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Cloud Integration","description":"cloud-integration","prompt":"Develop detailed content for Cloud Integration focused on distributed quantum computing via RESTful APIs. Document the cloud API client interface in api.py, including task submission, device discovery, and result retrieval patterns. Explain authentication mechanisms, rate limiting, and connection resilience strategies. Use cloud_api_task.py and cloud_api_devices.py to illustrate real-world integration scenarios with remote quantum processors. Describe the data serialization format, error handling, and asynchronous job monitoring. Address security considerations, latency optimization, and fault tolerance in cloud-based workflows. Provide troubleshooting guidance for network timeouts, quota limits, and service unavailability, along with best practices for efficient resource utilization.","parent_id":"0a04a277-3d67-4ad3-9572-9adfc478c2fd","order":3,"progress_status":"completed","dependent_files":"src/tyxonq/cloud/api.py,src/tyxonq/cloud/__init__.py,examples/cloud_api_task.py,examples/cloud_api_devices.py","gmt_create":"2025-10-10T21:23:27.65043+08:00","gmt_modified":"2025-10-10T22:16:19.416208+08:00","raw_data":"WikiEncrypted:42GucIVlAI9L6q+fifwcxRpf0xlpHMpdvdMxx5WEUiDT8KDEOA3PeA5asEKUUYgzQf80+GyKs0gfysB+XkVQxawqTtyck83ibkSS7VaXHEAtLTGxsFcBXCsCZJhCKJfB8OnATt9m8W3LrSzvagT1Lauw5s1NdlexTqF2ws1gZdjidNtxQabESFvWLwLG1GYs5i0EPgt7KKJbsia8oVKPeaBh3hK72WSl5MP9OaqLoz8+4dR9IloP3vFQdnJvrBmmCyGD7vJqZ6qIr/+lMvOFUOwn6R9HA36dD0UvWT4wuoBH3s9WvDRGpoQz+ateXz3XXRKRE7xOWYs613S8r4f6B8TZrxReTRVkOCq/Q+HTQUnM7KhlhzZtSKyxWNXgWb4HGHN1sPYG1qy62th1JWECsnF4UTUwOHzMU1STn3HDKp49ktOfuFcJfNI0gFmWLY75ODI4orBJxurDTp165p/yK1FmJEa7UHNfF9oHcaEVD/pen6fL9GmKTycsucsj7DyQHukAVUf5IiejTeto8Y003CNEV08UosFCJewZS0DmaSjpyeuQusEf/Z9jvXNXF8vvQKv/vmXdjyB24URjiGjYUOgkuSWZSpm+NXwdI8iliYMI+1UcbuoqrkXi0ZFd9ocWLg/AFnQt5B3X3PgctdkdH8ZC0qowlsFAkztcpDoi3qfNbHhoseSMMxfp3Gx+Qscux45PJCIxNBcF7AZsZ8cFuMmQ3owtjkYCk0Q1UhUi5nA4g6Z+2qKuE6b1fDI0j567XkSuhKcowhKe73149znhDklZ6Tf4posJMIVFFS7QJFv+ZlPLHh3HkhuPRtXfJDqJ3U/C4abh1RpzzMtjifepeea1p0dfFQJQGVVAJAw0tkIsFYxeG9+m+7LDeAtSnaIb39M/Qkt7uhDqCZAsR11MXASTUKU5AiQ4Aw4JqEWLS/ggzLouZT/ACxP6wg/McKptdj6h7V2IKZqbyS5L7gCyAYgKGPndb3M9bTJOvIYkWq8VV4jp5JyCO9fEsop8szjtxgYJRX+g/BClXmj5Qoq2PhnL+ZYQTKjFqkHnlgiG9O3o+EdDYW3qLqPupYEWtRDL/kx+dfQ1dtWQWl8iC5bDy4KMLFAoNcJQ4EGYylvubaxr05HKanoZr0GTJG3mu0NK25HQi7jg6yGLw+fVuKvQxVY/i9xJnn0fYsTNmsnD2ku56c7HzWWKwqJnLxz1tbFWnOaks8bmyXbJ3u8SwrjrTA70E2XTnZeIJHRqxfbG8i2xo0YZhVwebc8j5WGOW6p0/3pZMZOgB8rc+nDZdGK8t2vNgFwUa3uNPf9JajYwnPljOUA1QzYR0VL2qCHORW0dg/JAEZuk9j4Aw0ZGtgPV1Z5o1m8IxAiKx/8k6Owmv60Oybsm8U/m6gdTrIQ6/dR57kfqzNqOYLKi7b21+aT9gBDcEafij2aDC3q5nnZXhYeBFo/SolvOSM9IdrNB6aWfnagU6HdaIgL+mWMNietGfcUDtRhwqZ4zV61lF+ZZBX1kQgLLX8pZd34e4zYTYHBK","layer_level":1},{"id":"240da10d-b9a5-4dc1-9e43-c75cd2e4853d","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Molecular Validity and Dynamics Testing","description":"molecular-validity-testing","prompt":"Develop detailed content for Molecular Validity and Dynamics Testing focused on ensuring accurate quantum chemistry model construction and simulation. Explain validation of molecule object creation, including atomic coordinates, basis sets, and charge/spin specifications. Document testing of Hamiltonian generation from molecular inputs, covering both sparse and MPO representations. Cover dynamics simulation correctness, including time evolution accuracy and state preparation fidelity. Include verification of optimizer integration within chemistry workflows. Use test_molecule.py and test_hamiltonian.py to demonstrate input validation and error handling. Address common issues such as invalid molecular geometries, failed SCF convergence, and incorrect fermion-to-qubit mappings.","parent_id":"7972cfd4-c320-4a66-ac0f-409aa8b4cb1a","order":3,"progress_status":"completed","dependent_files":"tests_mol_valid/test_molecule.py,tests_mol_valid/test_hamiltonian.py,tests_mol_valid/test_ucc_uccsd_runtime.py,tests_mol_valid/test_dynamics.py,tests_mol_valid/test_optimizer.py,tests_mol_valid/test_server_chem_compute.py","gmt_create":"2025-10-10T21:23:52.771614+08:00","gmt_modified":"2025-10-10T22:16:09.185588+08:00","raw_data":"WikiEncrypted:56newAY65O/xr6fhbsvIXxkcrZUOOt48Sa0oqJazuBTeoPHHI3c9HLzraqMTBH9gujsHd5suoSRM2hq8VYtvWuOuKVIWzsX6dEvIeEPAVCTCXuxsUYKwK53a24HgKpgW+UYhCpXB8eI4wmCUr3ruRR5kze2HXYvT62SxeCZ7UABju7mf/suLBpOno8TV81gmsAyA4mHtYIMYYkkTdsUFcj8WU+UZJQEwPejA0HVt1U1XXY4qN7OMQjk69ndZgsodTzv6KsO6ogcResim54Cbs7dAw/hU557f0yS4kUodcs+f7b3vVQlk4Hgoea9prgAoA1VBYQK1m9oDWroxjuIBJ7B47vz44N4Kl/EWyjfBkQL0oVrPsCikJtbesFWwCMblC4Qrq0ijgROkQvVg0BaQcqfbcIiYDmbwu0xUVFAiq5uvHfACTAosLs99BrN33G+jMfEurkwXDpePGyRf9iG5NptbStIYw8stvJqP/OXUY88eXx9dYRFJC090ZLJllzeT37LIT7Txh+crj+k/7mGFZ0vJQjTVoaBqkCQGVf1LHYyLAOP8bCxKIXpAJYQo5AsQHM7FCcY3RZhwG3irxabFaxa4piPXV/5d0AiJQUGxRozRp2xvI+L63JtcfF0fso6vX0etvsoy/MloalCvxJkcdalxmXbAGrK9CHNL/mpGeUoPY8RNj/058KBGRD8YnSg4IdIs8Z+LMQXCIL6kPiSxHYKAwKoQDUt66At9hE2uPNK8o7kDJjlWu5PqPqxs8fE/RXddeqVR875pYUwrnotvtOiFMWUMo7Nc6HUDVRPWjcsbZoa71vrTj0p3Mav2o1Vhh/SjJeLKMzdO/qZ6YZx8S1Sh26t/mzEXoAMdEirxAHDjEPFjD0P36X/wZ1sfWRQq9RvQH5BDCOsK9erS80pvSRjvixoc+Rs39k8PbuUN+x7zn8prPdJo4liAOpCEYRRZ6ikGwMyZxPiTSIsuF9l7sdru/4+RhymOW0RnWWOKvvivnzRp+T1oB4y3QOQelMvFdhYsDsdKdTo3PLmG3ND7AaShZVEjQ9oO0na9dj6VlVRHNC+SPAPVBF8jaoPSOUZy/ZtDSjKkjsjH22g1IP5ZIREMraU6oUHTxeO3bLJOVoa48x0oFRzh0caLybO8MdbBZhrLzSv2BaaxY2cZBTKzW2JLRfkz8+Y7inzlf35xWn5uIsXsP74jBi3j81U3oOLfT6bYszfRmIQnimZ5oxiZxoAhXDjOBxFw9oK6DCcNxBdNU8D6HCXr1MPPBcUvbNJStFrg+XaQ7GLClpNhPh52PFrdVGIHTW9tzc3kYBEOsK0/UcKxdDxmFhRAB1jIOsJl+UaW1a0OCxtYK20NJayQAI9wC3RGsdLX+w81ijHxHI0Ssh5MECStZOl4iQJczR73RfOgjWr6FCYCgA8ucgqi59dg8ph6rAC1L5AAtqUwwRmnHjASlZWJaZOzUtOuCysgd6KnboBp7iUUtZD8sHr3ljziu451BYtN9ZA8m1gtni1XOAv2GaYQP9wmUcFXC4Y+tWdK9JQYl6RyK5UbrPPGHRNUoMiNNJFnR65E0SfIT9wHeDNAHEAu8XyL0QtXL0qMIQ31XV1xfuSyBsiu+trOAmD+VuoIcdb4Jd2URYA0fc7iVEfCcF/zeEng0/LmwVDcX7hl5RkS1g3uYkUFoLOaW4ZR9jrrDKInHEFVT++Xs1g77wKmjYIY+rPp132NTkHSmnoXSS2JmZXEPXcYC86qoaDqsrPtAEBRMyxwNk77nKBmrsxsimuHrQuk+0fU+NFKMboS6/91f0InVlLl8Ol7pg==","layer_level":1},{"id":"82a3713d-b244-4c4d-89c5-0844d8d02c02","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Numerics API","description":"api-reference-numerics","prompt":"Create API documentation for the Numerics module of TyxonQ. Document the ArrayBackend protocol and VectorizationPolicy as the foundation of the single numerics backend interface. Detail the NumericBackend class and its class-level methods for array operations, linear algebra, random number generation, and automatic differentiation. Explain the backend selection mechanism through set_backend and get_backend functions. Document the three supported backends: NumPy, PyTorch, and CuPyNumeric, including their specific capabilities and configuration. Provide examples showing backend switching and numerical operations. Address the integration of numerics with simulators, postprocessing, and gradient computation.","parent_id":"f53ef1ed-0ee1-49f7-a90c-99d15b936574","order":3,"progress_status":"completed","dependent_files":"src/tyxonq/numerics/__init__.py,src/tyxonq/numerics/api.py,src/tyxonq/numerics/context.py,src/tyxonq/numerics/backends/numpy_backend.py,src/tyxonq/numerics/backends/pytorch_backend.py,src/tyxonq/numerics/backends/cupynumeric_backend.py","gmt_create":"2025-10-10T21:23:57.62686+08:00","gmt_modified":"2025-10-10T22:16:37.373069+08:00","raw_data":"WikiEncrypted:C34GewOyK1SlumqKiPsSg0iOpT+vLLmG/dd9pa1PWA9IDbqQkgypN5+oqT3c7Y0ZzKFoDyiLY8Z4ecGE2WQPAtd7V+YzqHMeCa0QX4pn/Z7BM3H/Y7lNnOX7/hRwEockikwqrRH6MSitvvm/m/7RphmXm8Fj0AutCesi/sY4mYsSBI87rj6WuPrzJugH+0qqgkBSa23utIInvR7u2shxnFEw9RxJ7LYvdL4eJj/WECAsIKIoZT7NgSJty0sQww0lACrhVnKrrtnza1SAhoXb4JmudOWqi7zoK9hOaSpV3Xn4LAawB9ofJJBzeMf9CazVcTbLsDtqWw+ZBB29/F2dO4aIYpMZ61cYmTWDoRBau97bOEjxiy0TylGXpqcxgEXXi6vb+HIx9pnYyLT8iRA4MpJAj8N13H0YTJDcX8AMrBvUZPtVFtC3Q7s48wFZXgnX0XABL+Vf56wL7Pxn4Ao1KRgSlU6fukbwlmaeKkVUAJ8NrjGHLSquLE5p5WTdC8oY384VN024Ruj2mYqmac/56EroQGO9nCoq9kKZDlYHUi9bNbDB/8A+yG4Tx7O/q2sdOUaktHKZzgKMqffoQx5Q0s0O8ivE8eViezqQRflevIVJPH9aJgY8ZZ4xn1hlnoZv4UAIZqepXZpnW79VHK3G8Cn+X1pKfdyCiWMvBxH+PnjWcItBTHHqKh15esi6ytDWSnroieDD4GtC2HRTJ91VlRpHiGU0XoSj30a5M2XAanCwjeFpZRA9Xq/XKsEtWei+C8mO3SfF/ZaNMntBrj6mU3x0WYVvv/DddqfTyRYG2FPKf7qoITtTBWxRSpH2dU6cmnXSq1TcEwz+7QKaJ5KJvUoktWU+dmO405aPfC/AsnEirb1Tyf74Ry5rQjgdBQVFTDKV43F6/32PcjChG+3aBjdAAFRVsva9UgT2WJF66wBiTrw9X1LBIGZjZM+GziGEDz0UeSRTTv/xrgKOPZj9/zgzlHHoLPmlb3gtYgdXb2fLI2eBienpGoXkC/RjEZcTRTy514MMHCtoLJrVufhVNllh2e2X/tlULxg7JDMjlU3PBB64AyHuREe2V6UCElHwXFwhm7PJHkZA/PS0NfmDzBt4iQY5TyAVIWswa72r6F7NisSXctR4VfaB96BdiQMN2RgyPygoY0CCYwyHEPvR7sEGRjs9wfsqpX8UCddKetObuj46SBJYnEy8iaAn5WlVCr5QVwPoAF4PZwgYFSVYkKKKS25AlXIfEGnaC4ymRLb+H+ysaXfljowYko3w3flVnsH9CfRa8hiatCqsCeebOapkmC4tFHBDXykAD4jXZknD/pIY8l5L2nF2INsnurPYufDiq4CZ2tUuFShB8oAU3rTBztX+dn+BtRbzHVzYPArAcbteKkPeG7U2k07+zd2IbQRX3BNsY1ealQqeis+dc2ljwxG1HMjXvynH20t39z/gk7b+UCWLPAE+50xWPwMjxTKf4XwjUmJSwvZRnrgzkumwm9BiHuHTNH0im9YDx2st4nVepVBypoK/EhJ9ETLr9SXh8/2JWVLE4GEb7VFPqJCa5s0ViEwCyYaXW3I6x/CcsD8QkorHD6gecYeii2fNqnsDF8NrageH/P0VI2HhG8MJXLTA5DV3YEtEzXU61v7O96xyVdvtkbbehKR2G+xf","layer_level":1},{"id":"5fbdb810-337f-43b1-a965-505342443fb5","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Gate Merging and Pruning","description":"compiler-rewriting-merge-prune","prompt":"Develop detailed content for the Gate Merging and Pruning feature within the Rewriting stage. Explain the MergePrunePass class and its execute_plan method, detailing how it applies algebraic identities to merge adjacent gates and eliminate identity operations. Document the DEFAULT_MERGE_RULES dictionary and its transformation rules (e.g., X+X→I, RZ+RZ→RZ). Provide examples from the codebase showing how the _merge_once and _prune_identities methods work together to simplify circuits. Describe the iterative optimization process and how it handles parameterized gates like RX and RZ. Address common issues such as incomplete merging due to wire mismatch and troubleshooting strategies for unexpected gate elimination, including how to customize merge rules through the rules parameter.","parent_id":"623db65c-51f7-4fb3-bb49-e20dddd2cba5","order":3,"progress_status":"completed","dependent_files":"src/tyxonq/compiler/stages/rewrite/merge_prune.py","gmt_create":"2025-10-10T21:24:23.779712+08:00","gmt_modified":"2025-10-10T22:55:27.319551+08:00","raw_data":"WikiEncrypted:r1dbw1ciiG74lYTjPig5U2Y8Bbn/phXCxxYDBCb5pYJHpuKWIuqJB9HzpoJ1IQMk0uQU434lrym5ub3d9tXy69NVFUPViG/8Fnu7q8uXPTVga9sZzADTjoT4+FFR+xx+2xhcj7FaJLE14SJ+C6NeLmZWjFDYLF3xN1AXGoW/2y/9eBMINaAxmo6xOAqNMXf/wR/SFGrH4Bx7G/R2/eXhM2dzTF9pGL1suX/x88MHPiJTc1L+/ZUHgUmCo1J4whxUPa9GZS77tibUpaDDtR1Rpzqcw8lDel8pTheJpujyevQr+2eoWleYk7W2gPcJ02h2+IxIgY1dhhdi2TZJhywjTrhmvGtqQJ/0h+fxWj8XCJCRKDj7dBUwhF0B+wIYDy9mL3QqjMXv83Uu5FaQxyMoU3O4FYDtu1xaK9XnZSdPtFr4OZgQOmx+3AAddzYCXNahqGCacYh5gkYX8hMLT2ATFiCA8RZii6KmFVEDfg9YcB3swdFLNODkpJH8IJQXveSAIs+JMdKvcmByJwlY6zc443aFrFXfwqljo8X+itQAKSkqU8rDHqGH1zrp23tFJ5BQSilcpiXw66Ux1obK6sgYnuUAEYBuE/YMO8H6MW4kpHUO7O019snlW2vjiW9YtP4VJiQTW5a1mnar6EVg9XQskk4/BoPW7qC/9y1rXjw1/bqyjv6DarfPHWFGI/Tnq/ZAZPCMTQDel/L0lfVo1IpppfYQ/4m7olgpiJgH8uobe8op1z+6cqORsWtL32SUS6YoFa4DXn8uYt2S1YYYMtIsEIf/V7O03aZk3DAndzMp9dIRRSerMHLC91nvd+Bln5W470XPKAJrrx1LDKY2ksxtAjr0dWSfpVm2+4gPS6pfCOMk4KAyFF5o7bLw1aACV48Ct2yZScDxAcRhJN4fDRCe5HcnQBZahqBiolSnRRyw/XaNMrhXztalcEDbeDg/XT/yodMUE+iJMwxKKmTWLbE68PmKnNqxlI7wNiADB+KEDwl2dU4jI0QEBpmfqt/88wNzjENEHmw5qIoe1/syXg84a+WXObvFwopjh2boxBNivPf5X6IWm9i8Y3RLK8hDgsbk045xMKkC+q9T8SuLOcVdhtwuV79ebR1YXQr6bVhO45WI2SUfmPCEIxeLZsGom0FVCC30dL9NSN5Tq7uM7smzmYWihii72g+BAkSwVPhwU7Ns/twNOz+2whOiBr4Ulg+6Ic+rl5/IblOgUBMnqoEL+MBq5VwLqg1B2w30signGI2Xn/XS0ntjWU2WjT+AhBXciXSCrSjNNc6+Ddl0LTuACK1oCJDIGneTQbEta+A1cAeFZ4+Zh1zFvT7unZd/Z9xvu/+aZnUqRxPTyq/QiUaUSw09c9I8/MHjB009e1InxvzVOPrlfp5Tt3wXmKDvIhh6/5avi1GtzG5Ulkfnflv1cXRMZop048YXpbbHPfUe0LXGWc9Cs89nHr84Nxr9/390","layer_level":2},{"id":"e8bc80fa-e865-4eb7-a0ec-a35723e274ca","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Vectorization Compatibility System","description":"vectorization-checks","prompt":"Develop detailed content for the Vectorization Compatibility System in TyxonQ. Explain the design and implementation of vectorization checks that ensure mathematical operation consistency across different backends. Document how the system validates einsum, matmul, and other tensor operations for correct broadcasting and dimension handling. Describe the testing framework for vectorization correctness and performance. Provide examples of common vectorization errors in quantum circuit simulations and how the checks prevent them. Address limitations of vmap support across backends and fallback strategies. Include guidance on writing vectorization-safe quantum algorithms and debugging shape mismatch errors in parameterized circuits.","parent_id":"8237014b-8913-4e25-86c3-7aac3af21348","order":3,"progress_status":"completed","dependent_files":"src/tyxonq/numerics/vectorization_checks.py","gmt_create":"2025-10-10T21:24:53.875487+08:00","gmt_modified":"2025-10-10T22:55:41.4337+08:00","raw_data":"WikiEncrypted:D9AwxzXN4lDQjY1HwEIjyA2NqPWD/4sWJCEdLHyU+DDKSvHdvZTOWQtUDuxacD0CE8lyrnd2V6ChgvFqHbL3miE5Az+8ySH4VQd3ANrjhfVg/USL5sOirlY/1FqC3h6mQvtPjVHBnU4T/LWJfNqchQeTPlHm7ZgUHqnVYH3w2cXS76QZFfZul5HNGUQQ/fZaP94rY4NaTFWYRJNectcTrjgbBsgqUxPHEDTL/pF806HVVky2oVKg8NjYBuK2rAJmXlEEdjD/z/z8p5RKJzryRxVoW/PXKfpOUIJERAXhbxguWpZoU5jJaxGsB+RabQ1idXQWf4C2v3eZZiOXeczBV5a2qp+YmiAEj/TV1jiHVrIp9XjLlB8x9WDgX417GAASZwXJk4/DSPmoNyXGwgKsSJi7RhE/ZQ4ax7zfqbyBKNtUlWKAszAwpffnqUqF5GsV1GfDrPtFQjw5K5kFGtQ8Werr+TUFBhg6mHBdkUZBv8he02hLaIceRpMLcBOlAP4qZCjsOrKXTwbuFdEKf22yqJm44p5f7fUEMe9LCVJbZFC7xn0gs/mnon3s4+/FE9ssDplQwbQVTj02e2fk4Fxw5Cg1Xj2Wo594rtf9z49nSXpm/OJtSDCUwX1vdTPbJq75c+/u2O5qiG8QOHCYCbjv0hlqjg+annFuCE/lB33V2tf+drIVn6t/cfIL8lsNsLnQPnplQd3mddO/AfBlx+aE29uOO//pgx4O8/CqcnpQyLtL4E3xxIJGNdkCLhiHwQKgmDn7JAkp2c56lzJU8TWu4YwxHtQ9qNy54S3Kmjvrg7nfPV4KmL7QaJWmGA9s2TT303QF39VWWXbQl6Okw+FIex1u5iMrUcsGQg8csTjC1Ye/PnocHBwE/5KJ/gnOxXkTMq/FftWlceWiwy4FvSOWvLfxoJEVKDJyl3emhxdpLTpa562nujLxNK6tuveb5nJxa3pOCw+JD6D49GAZrdPcV44v+/n8fOR/w4Wtn8FoubVenpNlchXnZAF3kbDS4EgY8ZCtCyfGX+gS+EmxLTupnekfHHbyqcQFqmB7Sql3SXt4D1Cx7GTofgZTbBI0nRefKZncp6U6vYxibygaM5nMQsuIGUVB3EEE9mwWQdnZxUSPx74IpgPsoqQvxOxrg9MyHK07wFWAZcoeH1dvDF5GntNvXvs34Zje3p7OqHciDDgRwMjttkRdpg2pRUpEPJpozRj73Gi1t1h1Dij2EWfRz30y/lCZxbhnDrnqxWXPzkZGdNOUGrCKmuFn0rAWnLAsxuOV3M9zMnTcshkfDUzTjjslH0/L2ApYPD3m+2CgzAIh4iXC6ZTSRynWXwtyDBhMQJ1fJs2dQBHC70ErXETfrRc9MEh8nTvo6h+v2Bivejs=","layer_level":2},{"id":"2dd2da2b-c18f-4fba-8dcc-816c8058cfc6","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"PUCCD Algorithm","description":"puccd-algorithm","prompt":"Develop detailed content for the PUCCD (Pair Unitary Coupled Cluster Doubles) algorithm. Explain its theoretical foundation in modeling electron correlation through pair-coupled cluster approaches that focus on double excitations while preserving spin symmetry. Describe how PUCCD restricts the excitation space to paired electron transitions, reducing circuit depth compared to full UCCSD while maintaining chemical accuracy for many systems. Document the implementation details including initialization from Hartree-Fock references, construction of pair-doubling operators, and parameter optimization strategies. Explain the relationship between PUCCD and the base UCC class, highlighting the specialized excitation operator selection. Include usage examples demonstrating molecule construction and energy evaluation workflows. Detail configuration parameters such as active_space, init_method, and runtime options. Compare PUCCD's performance and accuracy against UCCSD and k-UpCCGSD for various molecular systems. Provide guidance on when to use PUCCD over other UCC variants, particularly for systems with strong pairing correlations or limited qubit coherence.","parent_id":"edf523ec-869a-43b8-8588-fa64de51197e","order":3,"progress_status":"completed","dependent_files":"src/tyxonq/applications/chem/algorithms/puccd.py","gmt_create":"2025-10-10T21:25:13.854442+08:00","gmt_modified":"2025-10-10T22:57:30.623545+08:00","raw_data":"WikiEncrypted:sn4weuuV1yXYnbExjfSlR1hchLpRPqONrlXADYBOjaJF7XSNQ5qoDlYc+HkQnDps6Bnnj8sjI6r/VuWNujVO3f7O7FDCKDGXE5aN4Y67cpdSHxSfJCP7YfFqrOk/gh4KefXKa5k/InffOkRQZSwskA6HNDRy/b230f+Vvk8rmVWsciXtw0cUDkJa2HqF6li1PoD0xrnHQMBNQONKwq5lTeur4lC55KTv8b0BsVK3YnoH4//6m1iykTI36mIUbRMXX82GVJk88YIGvIjZlwtX23F/0YHMeH5dixmXj9rgBV4BC3YWCeQ1lpm0fKjz4E5hQRIzaN/G1+mp2lbYh/V4AGx9tlpiK58DM1piwUO76F3H5s4HjhtQiBQPpS5lKLlwTLz25ESVxvb0M8iJPWU/MkjROZZnDJBzFUw399Kt4FoQnB1PIfSZ/0rmw4oveBuIbK9iHgYS9NpM/g9BmYwHuoO08MbKfrWIPKLz5iN6Uffcnd4tyAztJexDXZv/2u8X3CtdxskH8kRnBANCcoYq61dPkwSn+zZ5waSEF93coWV1Dy1moonLrjJsH/patC/FkTW3mfK+Dco++vW4S5s7JJ6fJ6mCBsOgFJfNZU3yCtRodXWAYw4rUtG5aIRTPx0N5iHbv5v1GbC5WVDVNtMA6PIi5+OcVQz6yRvCmMAORy/WvieVSs4f7a2lQvP7TMp4HAIQflg4tReoZ9+ih/hGYwhLXqNUUdJMLbmghQMRk3xiICKZGs2szS2b3588zzm2NJjAOUL2iHdUAkRMCQyiRFjg35k4ode8rWzmNr3JiN/PMOBLbxTG3VZoKMmS8slcq/OsNgtKWObsvkVTE4l6yuzJjV6/jV1ZBkh4Jkp9tqt97KWd/NKxw0EWGitHreO/YhhCcR4Jqh0Qdr6pNEaNtRDl7fYfol25bOdoOWitOVx4B+Y+ZaH5ou7jZ95rRqd6wf50P86GKzfy2h86tRG2yYpV0XAZAl7/+aq0MqP4h1lNoOw6ONVgAbDgEPGvULn3NpXde4kPjWscezqIG32W1ZBtHzwvzrzTO/uCOD6XjiMeS6UrmRf8dM5/0ACUXe2wKikv1HFWm18p4149zu6Y6bYbYME3p44uEkzJdZLSQCMUKTuicP2DMrFaUjRpYBwZ+G1QJ3Lguwf1a1oJPvMV+nTaKt4ECISrdYOBmn37mEvCHO9u4UkQgJAyozLRTK/dqYcYBbGXIFCquoDotljsiap1cPaIfPdfe1hr/cgTVKd0mrtNKUTCQqEuyHBiWrJIO+4n56/GGDsAaV15ZWrv2XkGjjYp/I90v3UihF8GvYwHEhdXyczIsk3IQ4WvyQF97N4j+YZeT1hozV6NhrGYo56goNMRliNKPp14HK5NMpBK4Rh4AaPIPZnnD6N85RAQijYgVR5OncQQieou0ulfWvPAAsWOLcGrc1Lmf0BsBKsArU9gibIwFUAk5UG9E6MZ2kvM1awpn1fD8dXewEK9VuQBVyTgsBPX8FHpPjlxz2pO4urrjjSMX9AAGMO5w4lnQU6ZYM7yQsXZlPZjpKujFyhtw4FwFUloazKfCBCEICP+xWN/BA1Uej0CQOLfibwdaHxYfuTV894F/es04y7lhuMylYtlDHu/g5hznFJl4WMJForaZhIh2LelRLUaQzlcne1+/wPK3jT+fzS6C5Wo6aw2dfbyiLPMNAhXPl+3gcpqr1m925bTXZV8Ydr9nTW4PfYsU2ecggE0V+GtMQXv2WbkHPtOhVm+t1WNewY6YtR0hQ9W+lmX4bVhigpXqzJXbu6MngxZXC5i25jGqtlNrbtzpichkTrJlhHoxO2XTajx4dgVE2P+lpmm4DrBTedrIKeGNueQ/n8ZjCRYlZwDCKD609KtHZxodrUiuvMn60CQQCwLdlr0oMb/HktO8KZiRmNV5FkMLEwjbMC/Gqt5HA==","layer_level":2},{"id":"2d106356-b31b-4b80-93fa-30421fbbd322","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"VQE Implementation Variants","description":"vqe-implementations","prompt":"Develop detailed content covering multiple VQE implementation variants across several example scripts. Document advanced VQE configurations in vqe_extra.py, noise-aware optimization strategies in vqe_noisyopt.py, parallel execution using pmap in vqe_parallel_pmap.py, and shot noise characterization in vqe_shot_noise.py. Include benchmarking case studies on water molecule (vqeh2o_benchmark.py) and transverse field Ising model (vqetfim_benchmark.py). Explain the impact of noise models, optimizer selection, and measurement strategies on convergence. Provide comparative analysis of resource requirements and accuracy trade-offs across different VQE configurations.","parent_id":"7bdf7164-b7bb-4e90-9d5d-2f730dff0972","order":3,"progress_status":"completed","dependent_files":"examples/vqe_extra.py,examples/vqe_noisyopt.py,examples/vqe_parallel_pmap.py,examples/vqe_shot_noise.py,examples/vqeh2o_benchmark.py,examples/vqetfim_benchmark.py","gmt_create":"2025-10-10T21:25:24.008427+08:00","gmt_modified":"2025-10-10T22:56:52.217347+08:00","raw_data":"WikiEncrypted:qtnawOZwQ7JChc9U4bSHUSv54QqBNZq/h6AazxqenZbNnmd3CjARt329CqmqdcBjpSKZ+fjq6tZ/gMA00ey3inqibEOsw1XRqis2xyLOjmXTkD1QoWWrDq1V88h9YGQwXpV1bc6OMV6G9+qI2+kLJJjxR3233uo5U6JDPCZuUSpg0rSGZSlsJsPXE5f5iQK3Hc21NQaDAMwoc0TXuWJk96CXLZ7M3eAvmRbSZtPmylYSKiJXZlgc6b97fWDOa9nmQxgI8nTc2wvtEGgY28xASCGdafg0xmse8u7xrKZREJY58q8Kt3XKc4Aa4Hu2UFhGTm2qdnrNHVBc1zE50SgXivqUWIpzgCk28fjg92dqhKbQ1uUXYtah7i/AlR7vmpIrcJk1PlCNp/8Ip1hmK17QzrB/A5Xk7LgzLJxsuSEi6sw/KeE3CneGYomapxPPyFpGBFQJM6NNAiAndJPLwOWD/PkQfADXygHVVhJKSl3SmEZ+QDcvEO/H6bUTxP1IIeYspiWu7upJCTpytL9XAz3Y2VpZq3YirjB0w0m1os0n1/UWcMp2LHkCXW8HICw7a5e31tl5FgIHtHiALeC472NbaE1vTDdOWjQ/ksNUkQESVBdflM/J/tZ1O6BkKZSl4+dVDxS8juuTrEW5MqVfp7wlm1ScSxGDkkHf6iibyfb7emgm83mIWwklnZtXLPg8rTa69m3XEx0gfIFL+MVjtgMxD9soOpa/faecMOuB1aVlgrwekZkim3endT3CSlS6A714AjrWRccOUVzoUIUWB/ZU4jsJycZPQnYPt3u+FGbZmS5GQesJPty44GCBCxKc+WQJynLigTTJuv3vHFvXufmpbXGvkUxBkx+HDrhJRWokkMmfEz3t4KcNJh9ky8w7lD+a5JRxGKNlcZmk98Um2FPHnzbfJrzzSjcvD9cHpdF290mPacUgbZXA9GX06BiSJg/Ecr7TLm4GtREiJuJ0gBnBIQ+q15JOS/YoTUTW1Nz/wnmnmcjtaUgm7cvUHeyANqfGOFiSfgkSX+ShND5TmbhYtBvbCDWupYE/VECrshMPxOkVIE2FFGqTN5Wm56NWZ3FkIslnAFmpAAujTVs4zyv8IUNgB6XJDzgY2/yMBH+rAPkooVqAHnI2pPITiH7o66x9IS2LlLAdC7Qdi7sGbUfmpz2/AuB9CWsOjaE1JJDSbc/JcEwHjUT1vbB8yI/arviivllUT1AMPdcIZi/AqOq5GEnngi44xSWnVEXasmCEO9XS6Cf7gpMfrAfIn43JxRl4aWHXXiWJbjSQFLNGlL3WNjj01UmezBUjDJz03YLWg9yyk9ij5GrAeaPvuu0MCCXg9AM1QX/aHGf99Fafsd2EEODwQuNaIQpmRSK3u7aV/wdia5xduP/mEcswGZ1XzYa7LG8zdHgfU78MTgPInm9T7ibCfHjQ0zJCFS+OPj/fI5ZnImvBFOJOJzXUhDdPKmLQe3jRVWj83JBO0vuhhG5iDhvidtIL/emlzp88G2rQnZw=","layer_level":2},{"id":"5a992cb6-1c56-448c-b189-8ccba9239d24","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"UCC Numeric Runtime","description":"ucc-numeric-runtime","prompt":"Develop detailed content for the UCCNumericRuntime class that provides exact numerical simulation for unitary coupled cluster methods. Explain how it supports multiple numeric engines including full statevector, CI vector, and PySCF-integrated computation for high-precision quantum chemistry. Document the _civector() method that builds configuration interaction vectors in the active space, enabling efficient simulation when full statevector is infeasible. Describe the energy() method that computes exact energy using embedded CI vectors or full statevector evolution. Detail the support for different excitation modes (fermion, qubit, hcb) and initialization strategies. Include examples showing performance comparison between civector, statevector, and pyscf engines. Explain the internal caching of CI strings and statevector ordering alignment for OpenFermion compatibility. Address memory and computational complexity considerations for large active spaces. Provide guidance on selecting appropriate numeric engines based on system size and required precision, and discuss integration with classical quantum chemistry workflows.","parent_id":"21884915-2785-4d06-874b-5407f53d00b2","order":3,"progress_status":"completed","dependent_files":"src/tyxonq/applications/chem/runtimes/ucc_numeric_runtime.py","gmt_create":"2025-10-10T21:25:30.567083+08:00","gmt_modified":"2025-10-10T22:59:05.24114+08:00","raw_data":"WikiEncrypted:tpjSpSFCESfx0syPYygCqmJhGzNY0STvGmLhsHvaBMR+NfLnf5CuZ/HHnM75zioyrSTkPtz6tctPZopsyQVRXpDEAw8MrISbIMLBPqpMZjwKr+43Hq13M5zUEYF2zAFccUAny5EukXX2B8zrZIZgkB+1KexTp4x/6HR7w1S9xxUnuiX/cEif4Z4oVzculJZROamO5ckS61gJO5r31NKSNEZIRSRM3ndbLzP5Ji3kzOvTHOVhM9SfSW4oGDBncPf+HRWRaOewri7waBnbwnperhoHJExAvIsDYP8/wWODLhtBQNJq16nRDU9xzw+DAFraFLmAQ+tkCBmx96O69C+vBSNbaYAdF+aYQlMZl69wgFrY0GtKHmRlIDnwYH7LlfGSVQ09H+FcB6eQXz86Yscuehfgify7cug1xj6rsKkKi0XFzQBvg/8JS+j8OIduT4Qek3p09+NiBzYXmRBt6GeAYFdSRErsB2ONbCnJRNniuFbt4wc+hXlWXPxpeMzxWyOpUYOuk/2hoUbrtEo0rNFPz3rLxkLvEyAIUbfMNjcwbDVKPGt4Q66U1ylAvBruo31cXs+sm+thiBqoynXDN1yL06sj7Z76sm/8CSWPZ3dpJiFg+uQ/z4XJO+THP5NIyZqZpBApByrTXyElouu1EwVss6AWFfny13jMs2tub+o2UMmsibCjKQaHUMXVi3ULqr9f7bKvbs0lo33ptHAfKm/qPD+6rmYZZlmoXboI+buTJAOokaSLL6POcZJum1OGiZDBjz4nROgnTjfS5RX3W5WBp1j2i0ZmOseoaFEVQgX8p5rS8cqq/e4EwTw+CunnUVWkK40b9WsI8a8dSMWeyAFDCNEQ9YFNS3HLznJJaLDMfi16rkcSOXzB5nl4fZGlL8s+GMTSPPbo/xLlhXfEKZQd3JEkWsz7D4iUZJmuQbQ82CkDTyqevGgYSnTTS8PzKgiYIizhzZxB8WFHXNpDWGOI2q2ysk+hk8A/9nvFtUHJdtHhI+HECOtOIppwNX8b9UDJZSxMt4sLMFZeJ1wbl3bWMiNnJMBbWfLlp24X/fPPx7bgFbMFpq6L5O00dgoJbxNBaCgt+/kfZXtF8P6sC6beUbPZzY6XOZeIE+628IMJLrZmvwKFZx7vH47qgk2NSKAwMo3Mr/Yyia50glB2Kj4pcYZ3CjM+QdIWvvfirC7pbgb4mGxNbzcu0Q/2E2XKlsuF6dFQNzffe5dHjpx8f1WC4j4fz7q/A0MNxnaAnDiSM7weN814z9J0XNbP1281/uXI2iV6EWxWl0OzanEvU/GRvcfsarA2bHqziqI80cL+hgj7eX6ATkqK72E8ktY71dld6ddGQSNuVhQi/bW2B00k005aEkKufTXQ5h4lpIYHu8yOqE4SSQXylbgW8oeDoYJcPtjcobnWWslQACYkTjT+U3Zy5XLMIJQduUwks/nNFmW8ah1MMm+hK5UI1pc0SVk2w/ngVDuI75KVnJKyzykRX+XMiCUcjBAsp7XlvfQHkEm1802PrJJuzSqlwCHPsOWqSzeg8MYf+fbQWZFU9SPDIfbxd3uPEAFF6fyXlDGUMzcXj9ssBQVBuZFeERQydPEnXEAqxsqOYEpokkU8sZkm+q5cXvZR0pMKJVbgQ5vHbZRIu5+AD8vblwziFeUOkLLGhSjl7XcX1ieorMSA0kI7IUF7k3Ed4PGvCh8axcT4NNIijELurjDqVk/gB9O3/fkSfr6N28RwLMvwN13MRHfmf8GDoePhu03Q9GEGwNpKVESU7tmBywSFC+GGFcNC+I5T+CrER/PMEm3PlJ3MPoROEZtIFOrrweKJv5i6aBI5+dFQ7Cj7JvZjayKKsoupycFBleTry+8yuwMl39+At+O/EpoNeAJ8WA1VS/LMUr1Gk+fiH/1rw9A6XMkCL0pqvrnZ","layer_level":2},{"id":"42ecc0c7-f226-4f35-bfca-b93b3f194eac","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Circuit Optimization Techniques","description":"circuit-optimization-techniques","prompt":"Create comprehensive content for Circuit Optimization Techniques, covering algorithmic and structural circuit improvements. Explain clifford_optimization.py for optimizing Clifford circuits using stabilizer formalism and stabilizer_simulation.py for efficient simulation of stabilizer states. Detail lightcone_simplify.py for lightcone-based circuit simplification to reduce gate counts and improve execution efficiency. Include chaotic_behavior.py to illustrate sensitivity in deep circuits and its implications for optimization stability. Address practical applications in circuit compression, noise resilience, and simulation speedup. Provide implementation examples, complexity analysis, and integration with the compiler pipeline for automated optimization.","parent_id":"24f839b8-80ff-4231-a0d2-bb943e93ce61","order":3,"progress_status":"completed","dependent_files":"examples-ng/clifford_optimization.py,examples-ng/lightcone_simplify.py,examples-ng/stabilizer_simulation.py,examples-ng/chaotic_behavior.py","gmt_create":"2025-10-10T21:25:43.525849+08:00","gmt_modified":"2025-10-10T22:58:18.785571+08:00","raw_data":"WikiEncrypted:zSvuKm3NbN5brOrmzD7b4+yXn3+islgWsp8BiQuyCclc2LgsbEdwU2Y0/JOo/KnZ1ikXjBLwVs6gxhpF2Ayc7Brdkbna2KjEpsPojBIf+n9KTkqHgMghWUHJ3X4eDRpnJGs2i6z7pFh40Pn+GQ0eALPM/NgWcnUxU82VfCTAHHUjGPLkHP3BRqOtvxNxGTvhpT5MnJx69+gyZ98LaH7vMG1yDhGrVYlzeVUpAbLobhqSMrZ2y4m8SBt7mfB0U2mRE2KEN6G3Mu86YItB7/Ogh9Fz8nLjaqjcNPvryTWFbicqEjXLFGUxMT+Co6AVS9DI5ixPrqs2UfMgipAuZLKQY3D8uH6YXdq8E9LurTdpds1zwt4IY7EKCdn3IXpjalFMr9F+N7ygX5FAIoCdsdm9N5yZj21fWR/ArgE+3aEybswoWUKlf2XPuq2T98m0R40GRlCPvwHuKXvVblkIB6UmkExN78xkx3jNR31wThwSusKfx6aGlzmEUs1qZF6DC6UYxymNvaEJwq3LiYn1DFoFYaUQzSS9zgtsmXgXJ+7lmqpv7QGS+aNeAn9cw5i+jxB5bKjZLxiJ+dthxEq++9uFPGmdkKEGjpFPPzMwftfYKLO5miqjZNedyfg+0AftUufI+VoCYKu4TVR6EvzRP3XLsYPDcMjOqBjp2yJVTY0bUZSD4Am2zkpPstmeu9MtEjd+0GqV9h1A/DjDjSp2VpWGQIkQjzyQoa2GEw1C2TcdlFFD6hxrUYwtbGR8IAndN1sH81X0qR5gI9PntTzlWDtEffe1EZKov+qBGSjhPK6eRUwpIdvuzVgcRJj2HqFrQL+ql+nMbSa111JgQqyCzkEvO+bmuJ2ZiS0ckaOwZ3o5KODbjRQOzNopoZWQIYdx9gnBzLrAiuq8KzyVMFH8W4xUimA0+EfXU/myiFfk48Knluhwyiwdo8h/1tR4JrpubZsdOV8UWeTDQiVACVQnadVpxXI6kB341PXRD68TSMFIl7IPyXAyERqlcM41dMcfnZQ4HnuK2u+hniaWBdIkomUr1Gp+THoXdedjpMCm8kxEfh68XDxnkCMaGtRZmSHh8lHHNBLQoCQADJsWy0a6UxgK8Gl+9vyj3+yvl8n1bFhtOlIx6G8Ustqu72wVRPEV4X5zMIWwWWSlfzmAOdzfw2r0kdvDZy8XrXwsrOBXCkyslc0C5V2CByjCIDbOSqmbboSdVufyfrKbR2C9KzlmoX0SygoKguttMbVLdnkfySbzXMBJAtthbek5XXlXKi/n/AjCluAcUaLrhdOyELaDbmIciI/E1KmnEEqXOGfCle8dXPd2wuMIUBgf/LCOrMtRJR2SSeEx8YRPuT1vn0OewftJJThyI9PXmjsQCtODmqoNmMBpEwvg4fy0CDmdgtpeB2JlNLzDXx9Cpq0RfvkhO/CssKh3HdzxZV0YvDTsCdciudY9TC5HjCp3xG4+14eX5XdQGmed6Hl279qFC34azmJ2AKBgorhieSA1k3b/REGI3AiJ0FTqNpl/t7EB+MYysZGdzN0Bcq/WELNqJCjY3CpaTA==","layer_level":2},{"id":"b292d9a5-f34c-4e82-83e9-9c0d538faaaf","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Noisy Quantum Machine Learning","description":"noisy-quantum-machine-learning","prompt":"Create comprehensive content for Noisy Quantum Machine Learning, demonstrating the training of variational quantum circuits under depolarizing noise. Cover the integration of Monte Carlo noise simulation within the QML training loop, the use of vmapped noise trajectories for gradient computation, and the end-to-end training workflow with PyTorch optimization. Explain the circuit ansatz design, parameterized noise injection via status flags, and the sigmoid-based classification loss function. Include implementation details on dataset preprocessing (MNIST), batched training with custom Dataset, and the use of vvag for vectorized value and gradient computation. Provide performance insights and convergence behavior under varying noise levels.","parent_id":"5b5d6df6-131f-417f-9e77-eea9ca79ac70","order":3,"progress_status":"completed","dependent_files":"examples-ng/noisy_qml.py","gmt_create":"2025-10-10T21:26:00.193659+08:00","gmt_modified":"2025-10-10T22:58:46.701698+08:00","raw_data":"WikiEncrypted:tryh8+bKmr0jXcpS0HeFh7AsHX75v/OLMMR/F/9auE/F78rzH5ndO+bWflXC4vaPOZ27fnD5x+yJcKIn7502XpEay7XtpBXdZZmLXMmVtSdNy8l7e7Xcv+xkQniEqU2dVEsgPvfBguACSXeQ0Ysb2csqssRCdKBAuaS7lMnFdVcw8mZ8mNAuIoZifmRKgqPcSWDHqOc6s1dOV1nzCyFeoX8EyinFnCS7vwR7UV01w3UUZkeTF0jeMUm1gGBib3Mln+nRfazXeQ3TJ5WZcl/STmcIGX/ffPEFttkrhrOfRjzhwdYXeWkUKekq/cCys3exFEa9lBoCsqdlq0ljL1ojAK/MLt6a++E/9NTWyrtIYNmZduSmo0G5RjJA7f35tY62tX484Lv+uDsJX3z937XtP0pP1LCzesCkeegbj+ZbIIT6a+FMwrIUsLWgQgGKkDTZZYcQ/uXHJvTq3/Hc5G6beEwqT7W+WRsFQ72RcMkp/ZzEGn9WEm7T1+JO+0OlwmtgUB7aFo6xRY9Z3PJ80xedRqLapfhL/4gnXCBBWWqFn5ZoOyc1K6ndbZ6Zg0RgzPjLFIkBSZJ0AlmFyfN6psUH8MJvcqFY82+utNSm+TeE43s3VoQ4nPCxEl1e56DYu5dYTcMiZHvLnfYerO7wYqz99ZkD/q94bEhg+qpwBuGaaNifr4CEIkEo4O0oFo9RrWoiKn7sZifsJWQ8v7StXUbieXpuNM0N6WOGd76sF20IRh7ADUHxbszU6tmCYmKOM3w6QleY1zQaL6W4ItFBuUD2JWMvZPTlEtKJTMAO9dtrndpwEw9vchMN7RR9y6R/GnglFnzaEJbtdWSsBMJOkJEAewMUGtJLL0yo2Ni56j6/aRkJe3dxnDtAAMHeZL20m4WITJ6CaBnqxdki2GYnP45m6E6Oja7b4cPAZhW9DKgLwl9dCIu+2tnE6Zv2dgSmdSVbYiJ1uviZ2z/bQFCCK0L3x0BmlMsjHQ9qRfMKSPna5LzQBDF4PGPy2MaSwkLTZq2VTKikssjeKP7r2VJ7C9+OF6wuI0++i9y5awIsozUZ9rtG+zICj9PhAom2avdPU8y+ztqXhpODJ9FgYX1DjGgttv4R3WOL7QIXsXcfes2VeliX1Lyw4VBwXROMbhIN4wkIkZm0y5Ukv8zp8RJC/2kp0La026O+z5h6g5Ns4Y1WKw1O+ie5FTf1j36xKX+Nqo2i0PAvXEabX16oETLy8wbWE1L9dmbEjiOVydYN6zhd26G1jjX6Isjp2VfPkastfS3RXTI6aaZvi3qHnT77J7WJep/iYNBsDG2vElQOHp+B8+sNvdq1Eu2CuqHccOMBLzcLpe074KKFCJxYwRRjIHPILg==","layer_level":2},{"id":"aa2b8d02-368b-4335-b57a-2f213ef1b147","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Sample-Based Expectation and Gradient Estimation","description":"sample-based-gradient","prompt":"Develop detailed content for the sample_value_gradient.py example, which computes expectation values and gradients for Pauli-sum observables using sample-based measurements. Explain the construction of a layered variational circuit with RZZ and RX gates via generate_circuit, and the decomposition of a Hamiltonian into Pauli terms (ps) with coefficients (w). Detail the pauli_term_expectation function that applies basis rotations (H for X, S†H for Y) before Z-measurements and uses counts_expectation for diagonal operator evaluation. Implement the parameter_shift_gradient function to compute analytic gradients using the shift rule under finite shots, and compare against finite_difference_gradient for validation. Discuss statistical errors due to shot noise, convergence behavior, and strategies for variance reduction. Include performance benchmarks between parameter shift and finite difference methods, and practical considerations for deploying gradient estimation on real quantum hardware.","parent_id":"5d091cd5-87db-40a8-b6f3-190eacdf7e76","order":3,"progress_status":"completed","dependent_files":"examples/sample_value_gradient.py","gmt_create":"2025-10-10T21:26:08.353224+08:00","gmt_modified":"2025-10-10T22:59:58.87538+08:00","raw_data":"WikiEncrypted:EKg3sGMXlH4plA1amfCAiMgzxJgQKXKGQQ5WiXvXTX0kCi+skK9H168qyolENq2Dj4gdy6i2GJA6QLGTFz/mhUN2s3cifKIFdSl0TLpSofIWgFDi8tY1/byAzRYrBNGpRjFF22hETPKn1kqmBag3aREft2/SiqsA6xcvQcZAicfyKshZPiokDSKPYePRD2o1UJDOQxHPqvQRAIdDOiwscKvxZxdokrO9/XCvTaOD4yhLR/Usqn5Qd6+XNOm7u/LAAWmd1ojqowwdYTUt3+2ZVxqipNyAAKR5GoPg8+1+k+H8SDB/khHIVnTahYnhpiW+pcgWUOSN3dnNsnRAPOO2V9j6B7tKKE5uI5VPBKpA8p+NSdl9yczzWhd0T9zsfsXwEoM3KPPdWCfdAv0Bl/QeprkVNoSwQ2a6yp6fLkrTHUXJOdpiwk+EY64QGEpxdCsZBlKJ+ZGvE39HWmZVSfSf104izVGNYM9QUxistcTQ9KahjKeSRmHgvxC9sxUZowbea1s5cMLnr0VaBOFIlNWNbOa7VBVsaSVyN/ujNXgDYuy1UaL3eDJ3lM5a2xqjYfGXall0tPKNMd/xTV4WtWQpJVpyqKbHi1c7MOpztCw+AkkpQSEIJK5L9xKNcpCFo+qlCvvTl3qk8WqrTD/M4vWjFH6f5JTgwyrwoIdEqVi2vA9zpKDR81Wquz6sQL9s5jUPM9TU2Jk32m5AERGvou+kMm1vdgaYBxezwlTBR5aHvWTBXaLROfhPCLrQ/+Tq6EMHmqTDcGoc0wThiFtkHpC2npX7xJxOzHVYdAp06WfeKuSuzMN1RqETY/wgIAxITH9nPdT0qWhHgi0PoERPp4e2LJc84bvWz1jA/8twoy3XYdLDq84KgZjbz7uiibL2Tnyop66P9ubxH9d86ms4Pjl6JSw4hHwEGMAxyXBzjKWZBZ08cKJ3nfpN0PWfNH6N9g5mlxkbX7h855TIuNmWRMiqGDIyyCaBCwn4vtlnOY7lzdiLq4wMBou5AWz93ua3Q6od2VMVtn0bV/X2RBr1L1LtepjrAbqfJCTn0jxJj+oCfwVQ7JWUjv2tdjHHlQC+l/Cqs/9Uwaf4AC4wvchrxqBqun6KkDLT3DWvQLhYE+oFaMXDNK3U4gcSVig2B97N6a90jOeHVlw2TAnwB9XMmL9APN2ECyEFSxQezX+aE6LsNUxbfgoicbRGElBLFeT/FrOjiKv4ZRBza1KmCzIpSZ2MDoWDfYMPjLgnLi+y3o5OZjjj9YaaXiHNQ8bHgh1Evsiux7h1hocd9DUbBWsU5rFaZm1Qk2gUsyPskM4aqXzsy883iVRIeo/E4AmyRY04W4H45NV7ZGrlHYc+mB2JXxRy2AvPb1yStE1K4s3xPTsvs/Cy+U9K8a/K5Ad7/ROYqTMV5aYtD5EdwGr2AzWLg3R/NSNzqIkGaGJMLizNlDV/cqH04K4wLyr3BlbLP79b3DaRGlqp31Xnds8Dq3eiT3FneaUP1sOHDW5DAlj7tkED/C8jWHiI93Ko3UiyIn/j1iyBUTD63cxNhYmdDjl3a72p93a7cbd90Z5Ky0Fj8VHSXEyzNh9LrPIr8xd57V9R9jlr/vtU62aMLsndjXPTKYalsd6SeTEOA5kQEwGo3y+gXP6muGDUWZWCeNSjOCZI4bt0YvZYW1TvrmMW67aeBKKL7j5UeDRAoIwhQ2X/B1nYN5Ef1gDAxOER4b69FWGF00P0XuRKR9PljdzYKX7MBfEx+A==","layer_level":2},{"id":"6f5c8303-e24c-4391-b15e-d12db7f941b2","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Numerics Backend Testing","description":"numerics-testing","prompt":"Develop detailed content for Numerics Backend Testing focused on validating TyxonQ's unified array computation interface across NumPy, PyTorch, and CuPyNumeric backends. Explain test strategies for ArrayBackend protocol compliance, including tensor operations, gradient propagation, and memory layout consistency. Document verification of global backend switching and vectorization checks using test_numerics_checks.py and test_numerics_global_backend.py. Cover numeric kernel testing for quantum operations in different backends. Include examples from test_numerics_api.py to illustrate cross-backend equivalence testing and precision tolerance handling. Address common issues such as gradient tracking failures, backend-specific numerical instability, and memory footprint bloat. Provide best practices for testing custom numeric extensions and debugging backend interoperability problems.","parent_id":"cc8cafdc-4381-436f-8dff-751098968a48","order":3,"progress_status":"completed","dependent_files":"tests_core_module/test_numerics_api.py,tests_core_module/test_numerics_backends.py,tests_core_module/test_numerics_checks.py,tests_core_module/test_numerics_global_backend.py,tests_core_module/test_libs_kernels_numeric.py","gmt_create":"2025-10-10T21:26:16.550268+08:00","gmt_modified":"2025-10-10T22:59:58.967273+08:00","raw_data":"WikiEncrypted:eXTykzkDgCICZh19Bs/J2IfsFr16kGmR3wmA2IcMGfMZJi/iava8gU5cEkswUoTV5F5NeW+AF4KmJPPevGSCgsIfHOokgoTrLy+/w5hJwi2pzLIJ3mOyOT2hSJKdEz9luu+pk7FIZoCjlbBGwhjGh+AKDd8BDw1M9FqoUw3FVpAGJ2wR9eCzB+kc0/POu4dO55ulZLyGOhvUnnvKWHbBHj0ul+3MsAjLqJJnPePirPzGE0x/+plr5j+HIHDPvdk/Nrqv/tovdFazu4Fyoiu9pRuzfYPBkWcfrvZ5GLbdWKhGcGWgwabnrqAd1trR92YxP+GhcrqCXNZVagHWUvOoyJhM9zgADXrHwu/V86WTcXW45cpW3uKWEsYuqF5rvZNNBpbIzghD0HtL37kJJ5jm/Jp9wvCiynv+UvPRsgLSDTJAVwQuAme16SifmBvbAATfukq/WguRqSViZkv0s6Y0pTjpW8iS0hrK7YsUzGKxOev8HJOGh5WmueTswDSLvAN6Eb1XfKWs63ddUqoQBgvvGd8XUrmu37tKgAcEPYE1CkpoXl9vpaKGFvGlhKrRluELVcT/AnyM3aKNX9EZZ7O4cvuSRXclMtI/UO4gEkRYs66/vcRjtY74LrvRhqk50EfcuoXl3kDxMeAAc9o45HkUIkvoHjubCkRbb2I0nZHBe57BEu68JIMq1Jd7e1RiJBaiPic56nSAR0ciJfMbOAQnEb8q77CGFZrIQN57aq1aSeXH0OPOY+U7zop1bDimgPsUxNeq4fKgFG4XkIy8xCT0D54fp2FZca8QhsnbHRzZvHqcahfss7kvRjOrwxTwidM8BoDhukXHA1Qmj2JXylDDJI4JErxMxelSm/3aiFkUVh4dhOZ7YeX95Js9hGughCHvKSYe5VIQzufux/sfDicMHttrt7i9hMSJkGDbkes8ZY7lVYr9Z5aegV683U27922RstSKhf+HIJXfXu94Cf4c1SSvojC6QGZqMJPQCjhZjdLPB2674vJ9FCd+gfJhLCqMKR6Mghb0tcPU66vvA1WKAe8Cx3x03XVB5s/T81HbqIFRS6ytYwmNM9JR/vDCmIls+FQfSy8c0Gxl5oyNz2/YuTZK7fbU0SAjAkKzLznXai5UqiiRYQNd3HFpB7SpqZApg+Sn7ACBznFP/MuAutklMQVoMfp6IEY1ykJWQCADGyRUCCTL4OeD/qIhU0ROte09O6d0YCERRjOjeXw/asKWMGsrJvQOcvhxjKr6CEQQYfDn3qB0IbgM0ehEpvPPWumi/tvgPIja93lUc3MID+QHmHzRA9ICR7v207Anok6hYusXPwhddQBEe7pQB58532/pCnA7I21TlznPbU8X8Ol06KMvhmbT/i90l2I+0av60KGQytpjsrDg24sdrSdQTK34cC/ugwWoanMD0RhJqRukuwDbpw5SLl8OF1A0KSU29inBBUe0C8ak1e5HlWe8Exuhx8Y2LBYDsU+fdNUhBbIVJivOKrDHLEM3PAp+B9jsbMpatK1q4gKC/ZG7xuqBPclJymE12EcK+VWPtnEeEVe/k+7vfeJ7Od7HXoPoXkj7DsOmWu+HHrtU/Z5vId6s1gyIN+LEymrUIB4VTVsSxq0U/CR0GPA+mXTQEHWtg+UsNZUcTEjkPv1cmnb09NmW4z3XceacagmhzFqUyXLKyHcIYF3gKgkcik+Gqt12niE4DGuNNdVZivF9r+rAfpigvfBsXzW9cOzkzrDMep0uFFFEoZVSqv8/IWk6bPKiXlU40ZpIYq/jEO412jnP3nW1Cv+fiZ5/ReTcc5NK5Q1VQfNCjg==","layer_level":2},{"id":"811b5b9b-0c75-401d-9021-1344dcf4c79e","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Benchmarking Validation","description":"benchmarking-validation","prompt":"Develop detailed content for Benchmarking Validation focused on performance and numerical accuracy verification across different execution modes. Explain how test_example_gradient_benchmark.py validates parameter shift vs autograd gradient computation accuracy and performance characteristics. Document test_example_sample_benchmark.py's role in measuring execution time, memory usage, and sampling efficiency across backend configurations. Cover numerical consistency checks in test_example_autograd_vs_counts.py for gradient results between analytic and sample-based methods. Use real benchmark data to illustrate performance trade-offs, convergence behavior, and statistical error bounds. Address common issues such as benchmark instability, backend-specific performance regressions, and numerical precision mismatches.","parent_id":"66b4fb87-da4d-4649-9598-2ad8db90abc1","order":3,"progress_status":"completed","dependent_files":"tests_examples/test_example_gradient_benchmark.py,tests_examples/test_example_sample_benchmark.py,tests_examples/test_example_autograd_vs_counts.py,tests_examples/test_example_sample_value_gradient.py","gmt_create":"2025-10-10T21:26:23.669579+08:00","gmt_modified":"2025-10-10T23:00:15.031871+08:00","raw_data":"WikiEncrypted:85KkSGz/gXGPrX/T7W7VfyoxZtHd8mZHIclP88Ck8WEBI7H6xJxXQsk0SPxrZEOBVsDCpCy1hmC0HlGf1H4hDhpe8vklurQyC0al3PPcbaJtcmHJuEYEXkTHaf6cIuh3l6/dRUQBpyJmIw7JNML3niV8tqOqovPedoTle0/we0ZexnfDpHfnM6Hv2XbVgy4O6rtF9dLxnAvfBtTGFX/TKG+jRg8pwWffQZBAMbmTFDxjohD/e+MxAXTqZGDzZ2z3hrsQmCFlC5TrcoXuRZJ3pwOn8593T9UHR3AsR7MaXFfjIadCd5VpPYtc+G3cB0+wwlB1LStjkB2AxBJxspsbZDBx4nBnVgcwee8KYPOBA7HZKs7NYbxlL6JAR/M84QXEtXYcgrrb+hpdWogI2o7X2rVbaaBzzfh3YU9b41Ts4VJ03bU7o8llIiE0pe0ZgY8fpG1t8cFuiQpDwZPf7xZzX5UWQ4W1Lft44swh378GsTX2U6fXy1yBey8i5okxexYIvfR8jFmzdXVbIowQkQ6RkP/2EkqvqrpTbnHzhxMi0sOJLFCf0ytUHgzVsMt3F4lwda3vdsFGFDMABKsAxDKbWp37/NtxTAteXDlljRzboNgQiwpVxU8Qn2dFvzDzvzxhS3V+d7qbigQ5QTbBbqD4L+E6fJeoZbUPbsvvPf7qwCXheKQrYbKjkCXylJb2uCW5YcNsfAulMzEswpUkVB5dVJxFvJMZWgu0swPEk1sM90nkl7nCkOwPaWGfewty6CkownHcos/2Ss+09E8LRJ7H1rqmdWRk0bjVHrdVpAXijAl7osudG3CRZmV1wC2PoGgmen2SzWoejl/Rf1yc3FjhM1H06CIbw45poOYScUgfgx4vppD73W1PjdUqWsM9GB6fo3N8YijLwkvuPPI5E1DhNc4FE7SsTqFGdYtX0DWrzIJu/mZkNSe+IqRtEgN+kQ+xp/7oy5GBHQlvwEFtEs94tOgI0ftZtoAIykZ5oH7GQp9aM78K/iorP5almYQD4T3/GBGaUtcMIW0wr7rXhcxJTp77aRAWAZRphOXnJzi2ZhVif7G6Mb2SqSTJEf66lNUMzXYSg3Wv8k/il9TWi5FO1/DW1sZ76PH8bqWTFeEfX9ocoQysN9VfZg8iGz/UDWwHSMyh1aiR0/k85a8BkCKtfHKcOvy4SRlXXxks//UwBAASNmw9FoKeR191rL0xTxLkqpYzskcz5RpwuD9bitNkgKAvg+9qllD2FJZeWamjMQG6U1cSC6nnylzRLam0hH5cWe5uKjCCJQv04zZ9LiLVBuFU2lIc5+U9pvNP3puan2kBMZ2gW2oDLHFBYRqG+GBXIFcRb6S3//3mBwhEvdPw5Vppr2/KB48Nao+yf1ZEf80Z7GlPP2QHSjTm3HA2ZC5VfDWqCVCg6jnaGrmiYGNOLFgiy8O07FTUaKVKReTAk15N7ZLBCnH1zJli6hd3ENC6f6owMuyPGQBCzvVGHS6MfUgDPEtdy6u/+BCNVlJkozjvfTZJy7W07+UIKHnz3afu0yJ8atsuq3jhuJqwnTaIn3NDn40rX/0UNdIbMJGHDJR48eSml86o0d01jmXFzk+umRtTKC+1hXLy0B2j1SF9carf1dLR/sXaUd1+0SW7inBs0H4H4BeBoBZQqNWGnAoSz08IKjgAH8fZbAJpVCYcufgAjSnexvBX26zg0ZHaKSk=","layer_level":2},{"id":"41367953-7eee-431b-a5bc-9d35515f11f1","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"CuPyNumeric Backend","description":"numerics-api-cupynumeric-backend","prompt":"Develop detailed documentation for the CuPyNumeric backend implementation in TyxonQ. Explain how CuPyNumericBackend provides NumPy-compatible GPU acceleration through the CuPy library. Detail its implementation of the ArrayBackend protocol with GPU-optimized operations for large-scale quantum simulations. Document its support for distributed computing and high-performance linear algebra operations. Explain the conditional import mechanism and availability checking. Provide examples showing performance benefits for tensor contractions (einsum), matrix multiplication (matmul), and SVD decomposition on GPU devices. Address installation requirements (cupynumeric) and ideal use cases in large quantum system simulations requiring significant computational resources.","parent_id":"82a3713d-b244-4c4d-89c5-0844d8d02c02","order":3,"progress_status":"completed","dependent_files":"src/tyxonq/numerics/backends/cupynumeric_backend.py","gmt_create":"2025-10-10T21:27:12.160956+08:00","gmt_modified":"2025-10-10T23:01:45.188813+08:00","raw_data":"WikiEncrypted:eXTykzkDgCICZh19Bs/J2IObJ2bvQAmShXj1i7e3XiNjuk/+K7SzaCgrmw9eGoBX2Vgh5cjHJMhOnGy4RXISSPbiHU+v4Zk83g9cCY/5Gt4twlgzmDwpXp5oVnLJ/ZJa70bo+eN56kWOIY5nZL3NIBBskxpK+OTW9evUhcpx5QrjZr/Jf4WgFOo5Ih4piE80m0vSG3bv2gjnusX8J6J8bQLTzbKkTJAsxTRhQksU2OqC90EjukVjMeGnvkX0Q+P8tLMYcVb2a0aJJXFEhzLj8kf9rHUonB6C0cx+/nd3b3H5ZqSBD8tOEEEMQ1y8QIlmbDI1rxoHN0rkRjr3qLzwMDv1aI1lCqFqxYR0AP6WYWJa1Az7Gl+zdSUEpcia0LSyFKXxEfNX8MUshvG1K+iEzI8BbxKyZTK+NeUtgRI5a74KX4WxG2B0u4EaOECznD76wC26OhLPeslAGMx011Gxhy73BONy6ibZHfQ8qFtDwoNDlpdWNtuy/R+Xz3Ca2mIrqCwwvjPkHDpnJQKrjFg9+cHUkDf8nz9LcRnS6KHcsd8CutEVtAoh6Xf9EYVbbioXIfUSNqEG2SkQp/50s6JqVyzFbnl9ltKci2co659HLxPKMaEQHjtx5HPD3cSWWzFdS6B7sreapgfR8wDS858gTrK5aw/iegwVazPm8etTnXRc6JAEizZAicNkcBbb6AP5Qw+Q3shwqmsPlCw/u675DvlF3dH3qM5MFu1cEBKO1eJ4O9o+k1oBBFwxEMb8WsVhgIQ6uLz7/YoRYhNveHeuUk4t/4gnq6FQHsbax92D/LNpihJwD11q/1qYl/3+b9+UEG+vchY+T86I/eTMhNrZ2zUv45hygKvfKNgdcwakqmX8GsIaeg9qQYYo+ORsuNPL+FGkGfaOIxdwb9oDOrhOj1vfWBA0QHLfVUEnqlYLK5qotdWlpznBA/PP7Cx7pceRU90ib0YHfIH7OdSp5lWbiICfoG9EbkXa3Mu0OJQPwRN5DOSH8kqa1cLWbQreTM5ixM5plyiPB20nAb56iGksICOd6tPyadlyR1pYAd85uVfvxApVhTIDty1q1n5wmOviiTS+ZEv3HaUTZlNEPjFyCSLygyPzcS3Tv23FeVMD3CdBIntvQWUJxWHo3wbkkzzzDsRMn2A4wqkVEHwyc3RnAGQmPIP+yuWKXbyuqernVhgUxqv8MiJ2gyC8D9eR/fS1uMaV9xrFQ3GJDGoWfE8IxiNV9O0Pqy0Lzmk4Bz65QMJM6VzAAJI3jYB/LJ8oVy3eKTCEmQO2AXwJ55FzYeH+3Keq2G2W1paMdbkcnrhwYjqrCsIa4LSSijV8rCCS1WfexnUmonXdvhH6fKGHfQmjs61DiP55F08+scrtGMrzqE6RSflmrS5UzOWnfVifeY0jm6zh0UK6CW+REHEnuzOoOG2dH9C15QVgOnZugJI6MuikNEbGTz4IP1KPKzyTYlPyn0j9Yw76+5wD4Lv7prxCRLJvVr1qbDPsHz0cBE9G/7A=","layer_level":2},{"id":"37eb76a4-408f-4074-834b-15419c52e978","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Metrics and Analysis","description":"postprocessing-api-metrics","prompt":"Create API documentation for the metrics module in TyxonQ's postprocessing system. Document statistical and quantum information metrics including normalized_count for probability distribution conversion, kl_divergence for distribution comparison, and expectation for diagonal observable evaluation. Detail quantum state metrics such as entropy, renyi_entropy, fidelity, trace_distance, and mutual_information for analyzing density matrices and state vectors. Explain thermodynamic quantities like free_energy and renyi_free_energy for quantum statistical mechanics applications. Describe entanglement measures including entanglement_negativity and log_negativity using partial transpose methods. Include utilities for reduced_density_matrix and reduced_wavefunction for subsystem analysis. Address numerical stability considerations (e.g., epsilon clipping) and performance implications of eigenvalue decompositions. Provide guidance on interpreting metric values in the context of algorithm convergence and error analysis.","parent_id":"83498097-8e06-410c-bf59-2b4a228d19dc","order":3,"progress_status":"completed","dependent_files":"src/tyxonq/postprocessing/metrics.py,src/tyxonq/postprocessing/__init__.py","gmt_create":"2025-10-10T21:27:22.021123+08:00","gmt_modified":"2025-10-10T23:01:03.438895+08:00","raw_data":"WikiEncrypted:TP8KP13wWUq5FizrfXDdgo6CUrT/Dll3uzsWu47IN7eQCR4aWwgo69EQNIRNUTcEedE2G794N+aedcNoOYyrGN4VyYdUON+IcLH7oBnJus902a3OCXBjQ04fTq63jhqFSflqf435jYLe2WiENIpIJ7zD2R0+ks2ETOeZwq/0JRxD+a2pbPE6o7olpsSOFl8PIrT7I6yKJNxiDADtJJ4k6JeFw93xDTdtj48FcajWRl1dM3iIKo3K2u+6gjK76SIZz4R+3iPvfMWpktKjRT+0YgpwIfI1osDc+SeHmPyGp1fUzPLRRpaAuVfqHLPqpEwLv7yg549ZVLXttv62+TZpC/omKKxCFtimZBjjJIKsnBAMRqyq3CLdj6URc9Hn34oPqYpGwvBY02k4PLOhDarjDupDDinjeBwBHK/nbtQJbY61S4cAbFRTWycAN9yAmdQfLICxFQK4lFw5ztA46i5xYNJRayufLNKzlqb7BbBuGQv1lTmfHIfEyobE92MNA2SykgSQjK4pzn5nUPlwb4HmlJY2PUQJb9xcTBOID6sKCA7XPfOal2jECtQnjJHMDUyx03L56wpVrFMB0BIDOK5mh2goi8+l0QG6Ae1dilauuY2/b+XeqcrSa+QF3EhWcq21vsZfUHVKn6ID0dtivp1VW/mliLWvHRWMaG6fiwSlEJ5+KVsX3c4+wjyDs4++n5Fw7vs2AV2mRDhXeUEjrmgJ1Ibs/PK7bDZK7zZ149Q3FO9CCA8NXzrqXPB+nypo9G8yXvcm65bzgqZxDOV+zJstvMbfbBdaVtHlvKw7bAXcfi2Rk7tlZQtaEtSWLTJgQhd7yfciCalBgkF3pQlYjan5Sesd7HUWFVbt2QmJZmfRbz/FDI00lrZk5Pv1VNl1iXANiLs82wskNF7D06LsVqjMbnttxsyjUals3BA3Z8maaLlFRlkUmF0IbyzK4eD6Rb/aBiYYNduIPeYN0meRWvV3AGugwD7Kwf0NPz1JCiQuNsWn+hAq8ArVG3mQhzjbnBgKWIFhb6lZYRVU8bh56R633+CaqnW8qdgGSt6Yh2BSxGZUiEfkgxGPuhO+FUDUhdMcIA6ykiz8tzVN/rIIuEn/vy8JizTzghpEsfgRmc/Y+7gNW/zSxpkh7BccQh4x4PR+Ri8OTVf+Bdl1mcqn02T2t7vNZiyYIgMml8CmauM98Xc8vK61xD58pxyRyfjdmYAOJb1dB+D1DSnbhJk6UHUDamZBLS+MEGy8+XoF9V1hHCDfrhQCy1aqcVk7i/cKBHBFkJXpjStHLAojzuyBUfMYRQK2MbiRtG6lc4R5dya0hvumJEydVvyE4BK96ufNmueW+2+b8uyMCMPx1u3QgbuZquctkLse30t/TveFF/+MK/kfbQ6sIoaLHrpq4DQ9xeHQAZKpJLVjDue0ct8eo9waLg4NCLGO6Co40HDPsYDh95LSWQMo7zF6i6MGIyUENrguyj7ghm5wmetpSifkpX8axyXv0upetnthi8aNvrYfUjLkIpNk7H++sWCbE3IosqZqNJ4EfLqsTcYaPdYa3MmiOKiNfhaKYq7ED7F2EmhP07WZKiGcEoWP1mVdzHE5utuD5uTEqjvEa8UDa3jctKZsu5QSuCzgrD9lsZE40COtdQfH6t+e7kCSZmmQSYzNaaeuj5XNlIFmpsleWOfD8JVKouFtW02EtlmdWrl8mEDxnp33aaUtYh5pU9xXY+LuoAy5TFdw0m2enIx6BcDILe8N/zRra0iEmxLqOJD7uRDnqqqgHwMTPcwfnX+zond3URpX/H/XYhWI2Zlx/qmhSVUAP+AZRNwHBBFdjCZz8vhLjD8lVJtpXUIwispMBY2Sm6imZxI5KxUBNiWctCY8z4MvpW4Vpf0G50+IK5kS+xeRktvhZG6cJdIpVRqk9Fff+RamFK5an6B39Enk9qpwNAhwVfUxIdG+tb9UXKjUtnt04/YIrPXBA2rUtWtzAZb8nmVj","layer_level":2},{"id":"14432827-d5a5-4774-b749-76056af792a2","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Optimizer API","description":"api-reference-optimizer","prompt":"Create API documentation for the Optimizer module of TyxonQ. Document the SOAP (Second-Order Approximate Optimization) optimizer implementation, including its interface, hyperparameters, and convergence behavior. Detail the interop module for integration with external optimization frameworks like PyTorch and SciPy. Provide method signatures, gradient handling mechanisms, and configuration options. Include usage examples from examples/vqe_noisyopt.py and examples/vqe_shot_noise.py where torch.optim.Adam is used alongside TyxonQ components. Explain how the optimizer integrates with variational algorithms and gradient computation in the compiler pipeline.","parent_id":"597e341d-c253-4c4c-a540-40ddd08797df","order":3,"progress_status":"completed","dependent_files":"src/tyxonq/libs/optimizer/__init__.py,src/tyxonq/libs/optimizer/soap.py,src/tyxonq/libs/optimizer/interop.py","gmt_create":"2025-10-10T21:27:23.211679+08:00","gmt_modified":"2025-10-10T23:01:19.445913+08:00","raw_data":"WikiEncrypted:C34GewOyK1SlumqKiPsSg1OcK5JzrvWRaSeeGDicJddG92/4qPzUaCEhAJJ6CLDHlIWspH6JS619Hr+/paw1yQ2JYE9s7/be3WCbCxwKZQ89tNrAhHVbCCMx2mIdRLvrHglASw37ycZ5utTJCaj4u1K356Gb+bzckjTFpAz3HpRc+JgAoWzf4kZ0UKFiqtpUKUSndHJrpvGma0IoJGqYbf5z0bgPyccdiE3devcYUulN6Xx47R/i0dT/RMn0s+OMctAGwD6kwkOq2UpK2Fz/unIF6s0QmJcrFeX2JGrikjfnkdYanm9GYfsCMxIllj69F3k56u8qDqFwuBl9MvTNdrMTDHTFRCgtAkGPgffbCnZlXyRsuvQjA2T9l6sdw6O0tZuQaLsPDPt66ROF7LYI21i3hS8PBlWJlH2zZPG+i3kcPbEKfFvMeoNobzKjZu8sQlId4cxYtfmO6ktdE8qTdBDQ4sJp3fmRRo+iCKIa8JtYFa0TLabcPbYf+sd3kA+1IMEn1G6u367h/fzEI9vtUCpk/HW5EM2U3du/iSnF5C3VzFqx86lFpzUqmmvlBPQqhVdZvanRS0Oeulh9NVeaMbgea7BM/ARTwSme1RX0qJsT49LQhyvKslxt3SvEsLKETpHvVJ5V2fn8QkzBB5CkHCJXHNUk2jDeIYamt4ZcK7zyks6GO2/yX49/+zWi6lrAn5FiV0u5HP1dl9JLqOQbgtpn14OAO5pFEaxBn8gA4GI9H2UcLIP3/uD2ymL+BxF+/Vnu4DjgtmQC4FbtJoRfiFj4Gr/MJEBLxuHOUaoIJEdyo1081aykuBVuKi+tg1WdiSzwVz1CLEwpdvbWqkuN0gvQ8X1LYdgkEHw62QUORWHAwa4WCudL3wkRoJP28+6vNV2/n7WVmtbO7LX4tK+Wi3/+Jxcv/TO/o4IqeTM8uXZJ2A65DO7FFalhsSmh/dC3awoz+LXswy52qshMo7AMLkNoornjxt4hX8iZ5Fbn5tFd9orZj4GubNvAIGEG+Cv9DxizXnt7rhE+qdptYDxoBBG/dWTxzZXRyNrDygIgLmbHXlGhKAv73iYCllOiv9fmzQc81Fnt8VQHA9MWu0+Uu+lATQ+/5XnbuX/JRnQEfZkGk5AMnuzjupl+GGCefc0hxU25WBb/2Z5h87YqozY4Vfx5EV4VfGVzkUWMCFeWkb3hMp9jGgO94dm41orgU7Q0jGuWpmRxswzWB9M7hiBp3g3KsCXHoytYXRT8I9vP7yJIRcH77O3gHeClz0jTKAfBJuZMBsiYj+EYeMuiteilyoibtJfrQfvAUt0GUJyEetmCWzO6KFkD3iEbkfdq+MaYwIzOM/H+Ti9JZCyq9kqgSQzkFFiIr9tbFitDPxyTIVFSaqqwKkw78jMmPZgNmgjwJ5qrgl5FNMY33IvMxkPvG7AmjYdrX4Viq2g0gnaTYYWPSJYtHJ/f9dp7WEqQjq5JLQhhJTCC2STynGDPk0Rc1uGj0KY03wpEfNt6A2M9Rn6zDFbuh6JwFvI2XSrGnLNR","layer_level":2},{"id":"0399a4d3-c442-4dbf-aadc-78e9ea2323c3","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Scheduling Stage","description":"scheduling-stage","prompt":"Develop detailed content for the Scheduling stage in TyxonQ's compiler pipeline. Explain how shot_scheduler.py allocates measurement shots across multiple observables to minimize total execution cost while maintaining statistical accuracy. Document the shot allocation algorithm that considers observable variance, commutativity, and device time constraints. Include examples showing shot distribution for VQE Hamiltonians and QAOA cost functions. Explain integration with cloud API rate limits and device queue times, and how scheduling adapts to both device and numeric backends. Address common issues such as under-sampling high-variance terms or exceeding daily shot budgets, and provide best practices for configuring scheduling policies based on accuracy requirements and cost constraints.","parent_id":"e948006c-6a9e-4afa-a0bf-dff490882d5e","order":3,"progress_status":"completed","dependent_files":"src/tyxonq/compiler/stages/scheduling/shot_scheduler.py,src/tyxonq/compiler/stages/scheduling/__init__.py","gmt_create":"2025-10-10T21:27:51.840552+08:00","gmt_modified":"2025-10-10T23:27:25.529874+08:00","raw_data":"WikiEncrypted:Ixm4kI/Z7v0V3JxitGlz9e+WS4pGv479TFJ/vGyMx4M+WqBLtJpeez4LPODRcR8yW/r4Be9glYfrVFsCJSkEjwymW2uKSSAzr/0jtMu2W0cz2cdKkTnvNXO3QHeAFV/MUb++8Ke3mCJzlGh9yNxUznwPGeEe5eJLZRjpMAHR2jQp8pkjo+yNKncVrM7Pu6P0wthhnor+LrJBkdmpb5MiGa5OhdQ/QNbqSvtWz/vO/bhq9y/IbuUhUUHqGQk5AsVe05AvNIj6ipJdS3aib0rivEmPJbR4laaueFXyp65tDw0m7q1qot4Ut8wN7hRYzmRPOQ3K7MokzUx59dvM9SHH4AyV+bMg9ol+lfJKzbDgxP3/KR/tduaHJhAA9t6JqBFl1Wbz4Pje/Kt9dlFMVK/knL1Lq58qDt5p3oblmPSmVNvIlsJGXn07Q7CSAiPXEAqz5mLLciFdPWrpF8AzYaY+Ouk6IaYYPYn6CJK5F4lweypYN/yob/fpCseEnDj4lav1DLzYp8/bdIUwIsW82hhEyWiwYo9+oxwmCV+V51KYYGqosMO0FeelBJCB/7SSpfAgGtzyUQSovEJZ90H7kVrpVqLfi0Qa/N4Dc1CeL8yJrGnktNvm7lvIffGwBvNCRH7Hh1TdRIZbsGdQFFtER7cl3182ORSqcXsqCHgi3/FdwGaitEH0Tm1XNKjeqvhFa8k6gzje3iSGMGE3ymneXwwNE1ZI/AsVc+TUAcPAMXQMBeCWrvnqiWm4FhjHozPeAXlMszSsnatnevpmPEiaL8J68RMOA74YYWTcCxWiQTNWysn93SxpT/4KxwDUZuFE60pgZsF+tx3VgXSazgRafGlWyaJ3Xxq4krGqK6+C6ZhjjlGBXrqAyeYqaknY3oaq8ueQOhiaM0Nt3RJhbGtoMxJ3uwg9WCbXl5sfGveDHDp+ml59P82duv0bQnoQyN+XK+tJUa6M+ZHQfTte6YzXqrJTQmhpxxGTS37heW6BqN+2HZcJgNsnvTQFNUs7qwgOz2WbQ1OOKlxIiTKRq3bMYh43EZp/EvGih24MZUr8k3I8yLjYYXbT8w/e6zSF6UQMI9wZbwS7DjKIbFdjfjAJ9IGEAojgxI41uzZ9PLjdE9r1NZJ0/qtS5xB61PX19+1Foojxrw2rj08laF2sZTeOCvIEkHyaqDJ8yAny5mDsEWyDeASmvIqdOhxEf53qSG9uG9ofQXpqxrSTzus1smNFWfk1nLzSIioMCKumwzy1TWwcbSQa6IZqC6muFDPN6nkpfHQ+5XsCwfFf8BPkpo/sR09T/mMpZDiJ0QSzuoVSf7E13P3isOKAE3mjk2BoACG4/U6IBqdK71I3zNm5ShlF5xApuJuuRVm8Qr/M5kL05A6e4Wcc/0RM/yy8pBiXcjzY15oxAUwL/x6BsAHGawQv0CcPEDJOQmwIv3m7bb5ghyOg5uYHXuL9c+lW3mk9287O8Vyd39tcByjrFmkCp5BsbrLa2I2X5HBcjRtffdxKMrOMxGg=","layer_level":3},{"id":"1a9646d2-aba2-452f-9029-899a1d39e892","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"PUCCD Algorithm","description":"applications-api-puccd","prompt":"Create API documentation for the PUCCD (Pair Unitary Coupled Cluster Doubles) algorithm in TyxonQ. Document the PUCCD class initialization with molecular input parameters, active space configuration, and initial guess methods. Explain the pair-double excitation operators that form the ansatz, focusing on spin-adapted paired excitations. Detail the circuit construction process and parameterization scheme specific to paired excitations. Describe the energy calculation and optimization workflow integration. Provide examples from the codebase showing PUCCD usage in quantum chemistry calculations. Explain the relationship between PUCCD and other UCC variants like UCCSD and k-UpCCGSD. Address configuration options for different runtime environments and numerical backends. Highlight use cases where PUCCD provides computational advantages for systems with strong pairing correlations.","parent_id":"61df0675-6efe-434e-8be6-66c5bb88ae9c","order":3,"progress_status":"completed","dependent_files":"src/tyxonq/applications/chem/algorithms/puccd.py","gmt_create":"2025-10-10T21:27:57.614262+08:00","gmt_modified":"2025-10-10T23:03:17.909614+08:00","raw_data":"WikiEncrypted:6Fw6zeKwEGma9eKCQx5Pd/tAlndOG8DsWCsOgN+hlPMJsqMTQwFBL+L639lOxgDPQiET3yojkA09PJJSYYGo6fSrhDJOLncyHEQVIAguYwhA+j9oKqygo7+r/0wybetaR//KLXG3HU590XQHf1YNVGyixIICJrtY71GNr8KBv3sMjycsMjbAnDDeQbVOyvbCBgizPtz4YZmATihSKow9l2JSJa92VdX+GYB9l3ag0g5BgnEYPIt4ZZ8uMhtqz0PRGyEytCYbqeWhCnXYarc+TTpYWRWkjhiAAXy2RAEENZTiWYeNnRr65qxPcEskgkom9h68EcvgNLraQfaNQng4OFZD8KalcFqxNb/G+OG/dhCAUXUxwq3XjJ9ZVXedWerLlkpnb4la2Nzv5YMyTvS3KAY66GhAbjzCRiXfAOVnuNyAUAUNM+WiYFU2QAyfaQpCd9IfG6pVqk7IQGLtPa58jkory6UQAXy5BhWwZefIrFqlSaMIuhmWIU4MnFCjCrGHAd4vEmfjbd6uiBwv5NBBObSrvtyWjlzliKnuaHLJI/FMsYDF+5e4Xs2paGibGn9RkdDV0FrE6jWYm/7+HxY06SMgfJKZljzEjy+iwTWCYLp435ks3L6OPcU8j6CEolYpCJPJgchmx5FuQbJAO6kKBKhESFHSurlMHOyS11zLGvdursStbsNKHU8x6s+b1mmjgoPRrzLuJPlBayD6Yr3gaIv3Pr8DE8K6eFmk9UKe2BTyHZU2H5bQ+F/aexVXZ0rusv4Ic0BJeZIuX0A1hyO1qsbt7AXYdq/orQRkttJt9qOqkT6r6d0LTGsBrkbCBIXUVDh8VWj00vAmTUUpcWzdPTXDecXxZML+HpfAj9mftcIETo9HLmSK83RJiEiN4TZdc55NX8TalkowqauNXJWzIVuFVWj7w7JFzJKArnRH9R9pzznJ+E6rAesUyiTX8NymQjmQRS5KhaI7PrVZwqza0oQfHbpv33zU78lQYTjFbdGjA/vu0BlZnok3h4Ruvb4GBKaXce1S6JcYtsM1+4EH0z59iZcKWFRmACmPrn7GT1fvavOwRTnLdHq/zi2Uz58Y3CSbZb915Ycylt0yQ0JM+nO3ggjb/5JjP0hm3Cc0DfppEoPx/FPB4hZrfXCMVn6cbuw9h7eFDNSnwYSOqG+Gkx7V4dHqWwO6ZxIOcZv4Po0d9TR79muZbtVoWpaWvfSjthRQRrv1vq/YmoMFwNZx3o88hE1Tr6vV5LCvmGxwEAoWn+2ouw0D+96t73aj5B2FdVWlMYB+yIq7XV4xQcKWdjm6z72f6oK7e1vI3SzuApXiCt3ZBTFKiFxkuTz7Gw3RfR/ZXXCVCunK+CNe5UPxqnmWEGrrAimxpKpundINTH/RZ6W5LOOG12tOYfFfT56fG8Z7RUspr4BdHt5YgYV7agaYANEN6zfF16JeiuocyvAAQBmIXtn2LspyEcyBI2GWtf+Fe2MQyIsjarbjtNDLF99U/5xCMjm6varVtTzq6o84/fu+8QH3LAnlCLGDw811bda44tNK3p4Tl6zw4EhrcpgFXawfHoGrdp4K9xn7Zvz/gcssivtKhqUl3/iLiIUvANQRtXWSDA1vBweonKwwhr1tBWs++WyrjD5twNQdJICgG0wCneixIC0al2hcbByXjgE6falqEAkIN/BrYZ1EwA==","layer_level":2},{"id":"43d98a3d-4023-4a8d-a7fc-4409a383d142","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Shot Scheduling","description":"compiler-api-stages-scheduling","prompt":"Develop detailed content for the shot scheduling stage in TyxonQ's compiler, implemented in shot_scheduler.py. Explain how measurement groupings and shot allocation are optimized across multiple observables to minimize total execution time. Document the algorithm for commuting Pauli terms, grouping strategies, and dynamic shot distribution based on variance estimation. Include examples showing scheduling decisions for Hamiltonian expectation value estimation. Discuss integration with the postprocessing layer, configuration parameters, and performance benefits. Address common issues such as suboptimal grouping and shot starvation for high-variance terms.","parent_id":"8508fff5-2f92-4c35-ac55-80934ab85c63","order":3,"progress_status":"completed","dependent_files":"src/tyxonq/compiler/stages/scheduling/shot_scheduler.py","gmt_create":"2025-10-10T21:28:31.942262+08:00","gmt_modified":"2025-10-10T23:28:00.219901+08:00","raw_data":"WikiEncrypted:r1dbw1ciiG74lYTjPig5U8LQ1W3wNniBBxQ85Hcl4zFShf1kNBO7JGIIgj7RzY3slP0yEyz04MEzv82GY1o7Tmq7+p0Uo0zprNwBfDMLgwqcR1NNuGVZhbVbOTZBhQ9edxR6Z1jNJbHm5B5mGCj0R6yeqU3wVMOkjzf8uB7oG5/SLDhq33U+VGzhJVkBbT0cHEVDGzR/ItMpuAcYiTBAszjl6Jj3sf14wQiw3MlsPATpSZQ1NIogtiLFN0391vlHl82dU+okda4sm4Jk9qVSiAf7e/4nFdZJui6dtJ1wF15OOjGO9pdYeR6ljnJ5JFEHevPNJFSddqEDlSqp34gyKpSAg22yF2S33ILu2n6hhxcOXhghm98iTCJETKEbqlXW3mCReRd4jKj1jL28FI/o07vJ4odSKV7RNHYvQfhzPp+U1RO/KRbsYiiLmeo+iezYCvNHoU6C98nKZo3Mm571kOnGrZa74H8Q5caeUVHDBjVBBG11elkkYMCVNG9nkYYaSApOSLAq98A+i4Z0gacA4wmoq501XKF79QtqNlyxW68RzMqt7HzQIsr6H/SU5nCWINg46OSBPEdZgg8UX51UeM0SeYo1zlsbITx0BnnBBkd8KDijhbhpLeUD/qcS/vkjq78N++Cnr2MzaxbyTtExRhevrmta59h0VqCtSAPS6XemPFAwkF7UqNQcC6vA6BnaTzVP2FLbWWFOGRDlQG0K7XZuxRRvbJGeaZqmVO5SscWbVFjfN5nhN8b6YGAzxaJW2S3iZzMCsCA2MFbEzxMkA9sSqA+3/ahCgs8PZfVTKb6jZy3wpYC4JYykYIBD+jJZZrTRGiA7RgFxY59Q2yXfnupGGCJJ/1HPJTxPbIht/2KQTl/NWSRW1DIyFpRxv62jYDO0FWYrzSyEYrdxDvuhn+YLqY/SBvF4s5895jMLHWsPToUnUCNGhbMibuK//Y2IsS0HIvRsOhnj1y9kr5Bu4WLILqrHjYXbt+R2YI124u046EgPEKikqFColgploRge31Y0YFeCtj+JyHamfM759xVP2CXRTkKdeeJjqzOWHdkJOaFz6agZqV+pElSrXjcZRKyXKtvKv8xbEPhE5+NWB0lTuPtqrkJI+Ev/hLj/G5pnmrmaSgbTdIqOKlFVQYV1Nugr18DnP2CASvlBaOXOwb5t7+Pjhd1SeGfQY37M91zHL049g6jDoLQIppTBqtLOGC4MYlSuwlXAtOjKF26i+VNvDPRWY+Sj1R21ZrTHFTORmfwS+pYEhU0M+DrKS271","layer_level":3},{"id":"dea255e2-4db2-41bf-8ab9-434145d013e2","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Noise Modeling and Channels","description":"api-reference-devices-simulators-noise-modeling","prompt":"Develop detailed content for the noise modeling capabilities in TyxonQ, centered on the channels.py module. Document all supported quantum channels (e.g., depolarizing, amplitude damping, phase flip) including their mathematical formulations, parameterization, and physical interpretations. Explain how these channels are integrated into the Density Matrix and MPS simulators for realistic noise simulation. Include usage patterns for constructing custom noise models, layer-wise noise assignment, and calibration workflows using noise_calibration.py. Provide examples from the examples/ and examples-ng/ directories demonstrating noise injection, error mitigation benchmarking, and robustness testing. Address common challenges such as noise model overfitting, simulation slowdown, and validation against hardware data. Include best practices for balancing realism and computational feasibility.","parent_id":"c0aaeb49-cf8e-4379-951b-94612e4ef81f","order":3,"progress_status":"completed","dependent_files":"src/tyxonq/devices/simulators/noise/channels.py,src/tyxonq/devices/simulators/density_matrix/engine.py,src/tyxonq/postprocessing/noise_analysis.py,examples/noise_controls_demo.py,examples-ng/noisy_sampling_jit.py","gmt_create":"2025-10-10T21:28:52.773304+08:00","gmt_modified":"2025-10-10T23:28:16.030904+08:00","raw_data":"WikiEncrypted:C34GewOyK1SlumqKiPsSg1Q7++qbaPnmH/WOa1nfihrL663LkHul0kzU+2QzNKFnWBSGmdnQEu12OMPwA3W8KhhUDBBrPsBeWm0nzcp2k8gCNcGbi5nOGuLW/cdwY9g+L/99ZLN2IMv5dBIFERQiEBRfWHde9gBiQPPQHbQ5r1dZHL3E++C8iLTDmnAs4azWQbCiShKTAqroD4SEqUNDdA97j4QPQp25zbj/g9Ch4+uSOrVNJIItvmM3mn4dSAGXmWUAw6iOzWqAkqL5DtiKhxfHpmd+wylQ35H5u96RdnaLmSVuaxXjwA1RoYjQvZQA5hgNx4bDUiM1KbNqBRfe9+w8UKC8MN9+9c4ksG8TeO64iKQy8aT/YX9n1V2LME5HQu/y0/VksAWClJY2vrLEfwKK+s3b05ZpCpNepeer1IfVAu+QjoThLZBwTkOk7iWVEo3DViwNZf/9qT4je1K/6wRJvjaXK0e0u3N8Lw5romKtTvoNz1Kx0RbXfCs6nP08X/CfcsmIqW+uega8o82AK9E3Vx/TrJKVzI8K44J6TFnaqYz5HinJuudfayKUvDpvogWX0yC5To6Fk/zP/AmaPiS4DMmAG6iARk7AQZlL7TOHpYce0Ca8LhU6IFBILSC2NP2wQmk7yKU8DCJQIoBXkHmlmG6Z/CUrVfFNE4JtbVNqvBV71r6JY8qbhvKwGGxtAvKSyrXrEVrClGoFrx1Gsuh7U9z0lj+eCEvhmJ2B8HxqELFQGaP6SK1OYhfNdqHOblKqLF9Jmz2gJjxh9wLvUJc97AsQYosvSDFisuCIgrEquBF87JkYVqUmmEIH5ngtMa/J9N6lbjv+I6iUpbWSgBdjncEed9t8eX+mWOeetMJGN3UsWwFm1hcx7A7aTz0SnsVAy3R8stSAwaQeBUcpSG1g3NcUx7EKNNiFutHH/wBRSMiT4kRMt6LiFIWpSLj/P9wCv5rjQ3RY1gwx+TfxJj25AqusDNHCVPrvDHYNz7w/NOCarAdHBs1jWJx4olXidu4MTQ2bdb0vyE8FzqQbX7aqALMNzzyaBSLq50lmkE481cJFL3qvMlo2WlIT3TY5LYRasbRvl3XAoDYaOFR6HU/C1DhG0jRaDu3PwQWMJC3o35gzg0AShUiX7tJ97JNV+jX+o/K6Kautue1okQWxKfEOTTsgJ302esz+vSbQoBtARdnK2TjtpxVSqndB4tmMaU41FKS/puoEfaVxVYzFXIKAejMJst+lB+q/M8ro668mhXeF288cOdgImLXSMaKJxt/WfxuZOlGUXhwtOYQbsxX1evW+4h736YqVDknwR/LHM7TdvR0M5LuIrw+eOc4YcDaNPSn8V297LqnxyLyfSjEO9+xsUALJEJpUk/GFzYCUsmq3C6afifZqu/7K2WlOTHDXPs2YcxeMioRZz6dZlCP3d9CQ7H+2usDXhzr333gO9iQX6rqFug5X35l6Ljc5i2CrXx5YTr8hMxCHzqZwYCBYNtoX9orZ1/XjeqzGVAdhdzfC/3u85NhjQGBFXlJiMZTxf4c89KUzAx1z8480lGEM0Swr7xtEV4VLC3CKNATUAMdxFvuEfFAeqqF73YnzVH3h9Ssf0kHjjUzRpQdPhz06EwZbTJ2ip/8avf4iw5JcXWKhNXYilfVcMKlXyrzy7qzLTsnsMj3NMtUYme7d1y9lInOg55kzE+kWA1qZDMigus2RXsFZJvgndBgsrOucRVrDyE7bqGCYJOR7U0YgZ+f3xUbolHEcMktc/OyIM3aV9WaQCFXxBNmbqeh8YgOrPWqeKyGzKxMG3lh20kcF5hDnNtCrCN28Zw9bcKLM8t2YOP9oELbZfSo6ls+3uRlFpbXvxWj8wIkHUrFupCmF6lPSDS6Vv9dgBhiCkLsdvQdF3O8B+BtccyJn9WbJuAYi1ittMff95EN3qSTN1gBBcuzDO0Ef9RubNP/ctKZfkL1JM9eF35fcDtx0C129R/n/yvdurxAnUeGUEbkuyN6HvtJnZXXUNDxlwR8ZIpX2mikAkxIVhG59MSihonFqzTk4","layer_level":3},{"id":"3b831207-fcd5-4807-8c4e-9081f9816fbd","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Hamiltonian Term Grouping","description":"hamiltonian-encoding-grouping","prompt":"Document the Hamiltonian term grouping functionality in TyxonQ. Explain the group_qubit_operator_terms function that partitions QubitOperator terms into measurement groups based on compatible Pauli bases. Detail the group_hamiltonian_pauli_terms function for grouping Pauli-sum representations. Describe the return structure containing identity constants and grouped terms mapped by measurement bases. Explain how the grouping enables measurement optimization by identifying simultaneously measurable terms. Include error handling for non-Hermitian operators with significant imaginary components. Discuss the application of these grouping algorithms in the compiler's measurement optimization passes and their role in reducing total measurement shots required for VQE and other variational algorithms.","parent_id":"5cbeda6b-e47e-49ae-925c-755196501fc0","order":3,"progress_status":"completed","dependent_files":"src/tyxonq/libs/hamiltonian_encoding/hamiltonian_grouping.py","gmt_create":"2025-10-10T21:29:39.422988+08:00","gmt_modified":"2025-10-10T23:28:33.592814+08:00","raw_data":"WikiEncrypted:5f2I+3eR0GPEzObW9eh9RkAacpv3xDlCc4k4VcWe9zrCu2X13xFT96zIJ9kmSIQ64TnPgEI+Qhqu0Xwvh7o5Jd3TKML7KrYaditYFsS52jLebGEGgBTuHiFF4bszR+z6ZgPKl25DL/1WVfnKwilUhDOEGE/icrFWwxkFyhUZTYCmZHKV4TNpqn4BuAwCcq22kSaww545vSCgTsOQl91Lv3chl522ycki1gnLXWaIiq5ElwgXMTYKQlHY3S5yXZVZaJa7su5gcja3qEolVOAMas7g+w+Hw4zYvEfF2BlC/tRQAbWyxYWrPZvsl5EXOHmJo9sf+dmaeBCWEb+6fvPrVvnh+BMqXkf4TCRYlVdIozP7MO5yf4NAjI7H/2v7BAPwCbvTuv+NmTfXrSJ1FmwdNm5OowZd55wwyAMEMjbSlc1MIyMF8gT020bK8Uxiwp0UpiYvCIDtcf1VQ4CbKdFtJmRO+IVNOfW/aIJBIOkPj9oqIENZSTCNd2BzctumCnWbI3pxxzUqOusN6zNxNIbne6jth+SSSAQbkJpzw04T8WxP6fYy07x8fsssx/E9/HeJQnC/rx03IniYZUnxtC0qwJSu7+uSDan3edjZpXGgEy+0drsxp+mEUtdXsMxguWEx2vNavyyB86uOw21cKvM+5DWB6H3iZKvbGy0SktYAH/FmHOzbHNSdoOr9MqFtsooNkqfXffViLTtneH8QoFCjLniv7u06rs8OhSERLQ5Oy7+bfREC4pVryZMkiTrL2t0VsKXesSzSBSyDCl2K/GTOtwTcd9D3+dyPTMOqjrbkqPz5co9KuybakMGpjD6s/HRNrIGOnrYJSAZus8jDuhcvp/eg24UFq5Q78Kd3eVIuOX1xLi7IQ3vPGSAda1Z1a4AHkXSHO1be8UrHD02gXCL6QUUnTU0yBgPYt78ntNWYBjM5ITjZzCpTKEp6gsOQAoYuIPWaouRpSTC6yRpYw0QYQYafWJ6oUH2guCqg8XndB6AQtwN/uoaQI/ZYucaOW3UdgK/cLkvl6hzzOBzQqxJQXa0VdMpuO6CJ0qeHH7WIVptKo38xodyPrAUtnoHGSBG2RNe8wKW+nsfA4tw26oOfZ6DE8tMEvy2veCiJiQWbuq7Rhh4CUg/Wzm/+obuyrEd+sCzMOqfkWfZcaK0s56vkbA+8qvUyDl31uQc91W0/BVCZ7UZWzkZbdCNrevDI/F5cP5sA9dzzLzg//7xxMMSoYbA1TsTEV/H11FrIXsAobcQ2+qIFGbHBJZysnMigsISzjDVrFRqQ57/uQI+zV+EMnvlQHwFM2FMG7Kt2GVka2mtGw6Y/lItNpcPJR8IS6fAi8tj2+oXNayVyaxRZS6z80Sit2Iww+uJBGorHf12gaMQmrMMzhkz1I2RzVUYTWCye6n2giQa4t4RrYG47REu66i6DoxuRiTwOqu4lxkoqxa2FccjLasH8kjX1uTBZ5ZN9fS6Nzi0GYBxIlDjVUTEKjxTO85xy+1oDkTsN+DXo2zJ5qlTKBQv8gGe1niMumRixcjgt1QnbB1+I14wX9GSzIIXd0nCQwyB7KmEEiv5BXPvvDeVr5NNosH20mb/DEbkfsTAWhVheoUJSg4at5Dc7lFfNA+up95KO3+Dp7mTGzWA=","layer_level":3},{"id":"e424c1d9-1855-40a3-b1b9-f90adeb9bc6f","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"UCC Circuits","description":"api-reference-circuits-library-ucc","prompt":"Develop detailed API documentation for Unitary Coupled Cluster (UCC) circuit templates. Document the `build_ucc_circuit` function parameters including `params`, `n_qubits`, `n_elec_s`, `ex_ops`, and `param_ids` for excitation operator mapping. Explain the Hartree-Fock initialization via `_hf_init_ops` with fermion/qubit mode handling and orbital ordering conventions. Detail the `_evolve_excitation_ops` implementation for 2-body and 4-body excitations using CX-CRY-CX patterns with Jordan-Wigner string operators managed by `_parity_chain_ops`. Cover the `trotter` parameter for switching between gate-level and Pauli-evolution implementations, and `decompose_multicontrol` for advanced gate decomposition. Explain the `@lru_cache` optimization for repeated JW transformations. Provide usage examples from cloud_uccsd_hea_demo.py showing UCCSD workflow integration, and address electron conservation rules and excitation operator generation. Include error handling for unsupported excitation types and parameter validation.","parent_id":"d5c1aef1-5986-4ca2-bba8-ba24a030df89","order":3,"progress_status":"completed","dependent_files":"src/tyxonq/libs/circuits_library/ucc.py,src/tyxonq/applications/chem/algorithms/uccsd.py,examples/cloud_uccsd_hea_demo.py","gmt_create":"2025-10-10T21:29:43.361937+08:00","gmt_modified":"2025-10-10T23:29:38.549664+08:00","raw_data":"WikiEncrypted:C34GewOyK1SlumqKiPsSgwvphYGzcvsk3C9IAaxg2TMaLz/FAj0z+5b0T1GCiH2+E+r6ahAXak5SBdrKSgmvXApbNqLNr763IwYNjRG2Lx5NdVe9OfTPNVkmAftwLDpy6nqGKzlaczgBLdHrF8gYVj7S6A4fREDM8g2U8fB5847hjHeXZrNqcUDF4sFTBiIFoXIsvmUUjXmJMRfnu30uFvvgi8LLi3lJah+49kv6yxGCmdvIimwJd5NwPxc7m2p6uYvLmOaamRRCv2XvTh3c7J5VR3W5ks4wmDT+9T/fVr45hQdBJ1h1TsBcsLPyGGTnA4IW15JpijezwLoNTRDPetyfYQS2No1ONC6cI6qmwRqiAvaO7UJ0DTORiBAvfLa4GIBOh1OiDoBLlBnwWyKa08GCUZk4q7kcZeYr2nDUAEukTrDJXS5aX6BgGV/j67oDH++Q7DmHr3ziTVBRXaZQ2ptzTeu/s1QKijhG3kH7uj8OY8UxZ8Raj140hgeM9u4UNcGkEjNRadFGRuk+OFOxrwRtl1gDVHahRxX5fAZ6aKOCxuhh5Got1hjMLkmwoek+mnN5VTAW5MbjlBfa6JNyLC+5W75c79hJr80MncqlUWOHErJaszYmsCvmcLZUKWJ6gl8LsOz0hF8BImaViWgdmobJPrZAjL/s7IQXpDEP+cwOPOoGqTG9oMVEgbs6SW4dnN8ft7HPodH5nK2nXSHVDUZCozpvFunYVfP/2dbpk7w5dMkgPln0oGlLxZ4jGScSh16NftS3nQxzLQlC0dHM4aOsvNBiO1Vgpm9YejTF2cpoDgDVsLy/MfSa4nbNX0EsnU9WsDkvE8g1chhYPbV3q2A3BZPOHFNNA9DsbJLo/oVSXFd3j4MYCmvYRS84pSFTI5SeYqa4lHKlarBISCHmm0D71nguTzt3jDQ+zjhvlaqpcVtj3yG8ze4s94KisPFuAdz1eg402m0CsR3F56502P5x35IXcKc8KAa36vS7fVaXlnFkPiAO3712dp+3qUqX600V2qmi4tYYF4aFo7V9hp66VEX2JlVPaDwZIf2WvUXFauXO3fPBL+icsv+YvBAT8yplJwGA8Qzjnijlbe+Lct+/OJ2qqLBzKEFfzikV75fWbiDw1AJkWFVREZW6hTQU4T66IT6+Vh5MiXuZg9qPjCjne64n65vY5LgBSE3M9RFqmbgd9A/xJ+0KG0HneQYUqdR7zp1pNbq6lsRHF53919kbz89soqxVMc86dzC/WJt5OjDSmF8AoFdDzHyqp+VEKqzipWWsfc55Cj0toKqTQW+pmAmQvQvLEEZuEhLVt7uD7VxJ7xohg7Vk/mgAJ7Oor99uHOqOtYx6zcAL3DnMJWIHvrtG8houeoIY2dZJIeIKH1x9VhWs0hv4NUXwa9Hu4oBye1gGHvWfEyNDSEAYhJ2CL2OL+B4+In7eTDFdXWNXrgg3ujgOks50NvCEjLiNZbMKqKuvj6EIssa6WHwVmZbOpiz8KANLnJstPABSbbqa8Ibh53uIFrlhNM7aRgtxQdmXuLlQK2Q1VzpN8/kyg9/jXTDYFlktYj0QtE8arE9S/gff45j7XxJi5r5q46EIUEuqiTEmROjqHq7Gr69xGLvu5PBLzOmtc2VkJAHeePlowC8rY5uXPiMFKEcd/WlcEeJjAL4wkzPg8kUPfgazwO7+lQlmXYA+KLV55f0BBur6jSN6d/QgR87R7MMCaA82A/hIZCsnGStO5ETkUy6CS1EcDNMHnQINMVf8HhQxZ9kkVo/yet+cYK0MfTBW9jbXnfWoRoyxpDqwnCG3ivs9dcXF5Fj9WP00e3yab0n68iVtIeLg51b6kLW9OLcf0vcY1fxztEjFO/B7rONsyr75kR2nT1KIedGADnrVyuQFLXD+1tCPbS1GDUimrTAFcFn1IpI9U5NNvLWUEzTrRPhu+w==","layer_level":3},{"id":"0c8622ee-fcc6-4ed8-be67-8402175b4ca8","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Merge and Prune Pass","description":"compiler-api-stages-rewrite-mergeprune","prompt":"Develop detailed content for the MergePrunePass module in TyxonQ's compiler. Explain its purpose of simplifying circuits by merging adjacent single-qubit gates and removing identity operations. Document the internal mechanics: the use of DEFAULT_MERGE_RULES for gate fusion (e.g., consecutive RZ rotations), the iterative _merge_once and _prune_identities methods, and the wire-matching logic. Provide examples of gate cancellation (e.g., RX(θ) followed by RX(-θ)) and parameter merging (e.g., RZ(α) + RZ(β) → RZ(α+β)). Discuss the lightweight nature of this optimization, its impact on circuit depth reduction, and its role in preparing circuits for efficient execution. Address configuration via custom rules, integration within the rewrite stage, and limitations regarding multi-qubit gate simplification.","parent_id":"b292168c-6a64-444c-aa77-1b87d6c36550","order":3,"progress_status":"completed","dependent_files":"src/tyxonq/compiler/stages/rewrite/merge_prune.py","gmt_create":"2025-10-10T21:30:29.154859+08:00","gmt_modified":"2025-10-10T23:46:25.475513+08:00","raw_data":"WikiEncrypted:r1dbw1ciiG74lYTjPig5U0HJ6OlSrwQwGI2vuY5+G6dLhIVV3dNuQgQVDjG7PsrOPpZg7RrrrpXJ5n6nyXREgrYV8QHdiyRHAJklGhwv8JmGr0CYbjRujbEXvpMoNrstZ8bvbzLRt5W+sGTHHULrUsXErfpzV3/U7h/4Hw3zBosko7fkj0UHA7L95mcbvgSxmxVjyOFP9MWIY9nI7GQUgyB8FTfYvLIfwqlXje4vxCpz/15BQRi/isw2/jNILfnM8xznNeiaD7UX1loxVe90KxVceCDV8h1Wg1C6WalIKfVqxqrbnhbl5O2sGNV8FtvYaIZLpg1nYLAG4jYiJzOzOPuKlCBasVEGFSn/5m/X9OfAlGifFO9uQubKGsO3Mjhx9RysrTDUe+fPVjsq77BlpZkaLDS4yTlIJ2xwkaDl1G++muGILWZUwRvOyaCkVmluYfeyS3NmlJr+7aEzhaI6oauXAF5zBbxHtQqg6F6TABaH75Jdl6IiePWLBRCco4+d7U1hCoXBkyq1/P+tpDI9xGlolaUlObBK1StwkAXgrh0PQXAaigY0lvZqmGuuK9jMcJmK4rji48GPF7sRnjDMyW4+ERVvAK/3HARpcSbLMkrgl8HsAl1EBkvBa+sfD09MfxFxXr3jlnoP97KPXzGjjQZn9jOlqi0j4RGZg4QmRq/uk+JBwhoxTscQlpfCw7eERhE84jf2VNGTZPglaPMx2Lcxvq242fj9mtC7my+S4UVH1+8RXtlVrgycVuuK5YAkfPuZAp/TbD3W/es9TW7GxI+0ecPXpWLavReC8ylBOek807cmunP2ks7SMl1wJQyatT+89wN/DnlUX/Zl6dgJGHxUSYMXnCUSwCm2Q0ymOX5QpExL1QALBZ3ZE8n8fUe5bYN28Jir5gpGpBLPjJUUOyCvQRuBqbRPRJi2PO15LvHEUzDaq5fKHYzatA6m0fK4RvT/szdeSUaye0dCXgFQuO1CUQmCjyt/X3yyAHiHTLLu9d5bnleBnTFE6qRa5hJd8WA6mKtErTmncR5miG5CKT9jwr7Smo65lcB4zJkwVErnLZ83oNbwndA6+uAHiiAg9fip6UVttX7vxh7NVCgAPwQiwjJO+E7rDOHDZ5NJQfd2tOGUnoRzYkb6Hrxu/EijhFIWQiHucyDhsr1DXZLr0RoSBzbNjcHxRs+zD78TRFocyJu0fKuo+iOwml1EoXciDL5A47boQuE/y88iHLZz9xYAT/SuLRRw13iwN4ov6tBl7arwJ2sJtIb0EsZDDjvCymltQyRs6+cp9wY51vxrUtuM1cij8XMDES+NVu9/n5aTsGRLWwWbou4rfkVnlLAY0HJKC2LjMomhkwD2ekwkZdYz00ED3f3eQnEH+F7tgIXIHbdAq/7DoJTQqlqS9bAmg7gGpxNw70wtHAvACK0ZYDJZiOi3x6cQU6gYwE8Gkx3+drwRDU2Pn8tasRg37QwmfD7iD1SzQ6kHRKThc24ptwV8pk1mnqBHzGdsF/XOqHQ=","layer_level":4},{"id":"dc2b65bd-3715-4f0d-afbc-df0b59596e7a","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Unitary Kernels","description":"api-reference-quantum-library-kernels-unitary","prompt":"Develop detailed API documentation for the Unitary kernel module in TyxonQ. Document functions for constructing and manipulating unitary operators, including gate matrix generation, controlled-unitary synthesis, and global phase handling. Explain integration with circuit compilation and pulse-level control systems. Cover function signatures, numerical precision considerations, and backend-specific matrix operations. Provide examples from examples/circuit_compiler.py and examples/pulse_demo.py to demonstrate unitary circuit construction and decomposition. Address performance implications for large unitary matrices and optimization strategies using tensor factorization and lazy evaluation.","parent_id":"c4c05f68-9315-4d95-b71f-26fb64ba1b27","order":3,"progress_status":"completed","dependent_files":"src/tyxonq/libs/quantum_library/kernels/unitary.py","gmt_create":"2025-10-10T21:30:43.574787+08:00","gmt_modified":"2025-10-10T23:46:42.431587+08:00","raw_data":"WikiEncrypted:C34GewOyK1SlumqKiPsSgygb6tZbr39HfU/NYGshj5UiAYC6shHCS97r3LRvFmIqcmbmgTmxkDgGNcWys1IildTEmGLEGED8ehAKSX2LkR1gBO+fcPyWks2fj51NvyUvUon3C7ZjjKDHNTgN3XvwI+vrdvL126FJJEgSju1m4KlBfokPI0Ac5jW4Rxr7G8nH+QYtI+7M4Av9p4+5Xj1vMlwSJt6ASxQouysUJKvkWx+AexKEz3dysZOx/HkQ0UVRH+wBlhKsW40ugx2lCR+TmtP5wOEPjF0aDcEv7Yk/um9DSP6tMplEqwF1n42CWFM715oJ3au6XGw2MpSfX2ylkc7+IQtlyFXXM8tH60k3Wa3ny5tNmmcG1MnmLlgCfsEK0W6eAsE9OUS0YGcNQevuHnSOG567pQnMDmDaAK0rcfiG0t/GzNWwk07S2rgZ3j9ZAv+OzIF4fGNTZFBtsAbVyG6r5RA/5rpCRO2bR5s96xyZIsicVg3WTORLFHsefrwqYyCY8czJYrCrfi6Jb4G7qbbSVI8xtTjfBLWtCwVuqWexKa20pwWZKQYw3JNSVAHI6HmHQ8Bn4jfxow64fDO8jXRKCedf2uPs0GgQYvktSGNJP71+pp3vHgXLzOJu2NTHMQ64dYLWihD9mD9tjsbh4s/O54FE+MCPhUtFFehE03EAFPgJpUxXq8eQC0sWP9kiURm4+CTNfJsOi9OgiK3KenfCJxXkp6qeb1/cACBWXiBWbRqib7BtBbgj7tdGI/vxUsn6o0yKggMawxkEQOYze+HsyWyQ0XjSsDB4VNYI1fCcZXLXmi4QyjcHG4t/e1pDex/tOJYNAjJ2qK43ETeRnSm63PCNA/NxQyVDSt+OiO9XKzfOtyVToSQsHEDqhz7TbtBS5nDHTwtp9Ykn9/wQz7zF2P2Y3H+JAvlQdh2SRXCozoYpg+VI/vLAYNRf2iWy51ByPlOvcX14UAcpF5UPuKB0vbtd8walqjRmJPA9nyoZ8mzDbeXW0HZW/0KgbsNaeXycx/MIbro3XlsGMf/NutEPLXaZR7hiw6KqfteoAv53JaX6KpQ/RnLB0q6jO3dVLdgDnFaHVjR8YF3AyjdeSTNTD5rs9Osl2Jz7arWfszc+ErhPkU4Ztc8cDI/InP8hBrff61qK0D3Y/CeMkeD+rnD4sgBXdrS2/nhywfmzP11F1zhi2yhTF2hLG8FuVO26GSzAyWCWhsCauUBGQFkTmAGWWNTqmROIRHU34ZdZTm4crni84jaOI4ST0TYisXq5/9+4+ve5J2fa24Fw4Nb2ejHzUp5S7E4ZKEf2TkDwHgw=","layer_level":4},{"id":"e3263062-6a60-4591-8e69-dfabdcc9cf5e","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Compiler Pipeline","description":"compiler-pipeline","prompt":"Create comprehensive content for the Compiler Pipeline focused on circuit optimization and transformation. Explain the modular compilation stages: Decomposition, Gradient Computation, Simplification (Lightcone), Rewriting (Measurement Optimization), and Scheduling (Shot Scheduler). Document the pluggable architecture with Native and Qiskit backend compilers. Include detailed examples from compiler.rst showing parameter shift gradient pass and lightcone simplification. Describe the compilation workflow from high-level circuit to device-ready instructions. Address configuration options through compile_engine and stage-specific parameters. Provide troubleshooting guidance for common compilation failures and performance bottlenecks. Discuss integration with numerics backend for gradient computation.","order":4,"progress_status":"completed","dependent_files":"docs-ng/source/next/user/compiler.rst,src/tyxonq/compiler/api.py,src/tyxonq/compiler/stages/__init__.py,src/tyxonq/compiler/stages/decompose/rotations.py,src/tyxonq/compiler/stages/gradients/parameter_shift_pass.py,src/tyxonq/compiler/stages/simplify/lightcone.py,src/tyxonq/compiler/stages/rewrite/measurement.py,src/tyxonq/compiler/stages/scheduling/shot_scheduler.py,src/tyxonq/compiler/compile_engine/native/native_compiler.py,src/tyxonq/compiler/compile_engine/qiskit/qiskit_compiler.py","gmt_create":"2025-10-10T21:21:34.901342+08:00","gmt_modified":"2025-10-10T23:50:40.18035+08:00","raw_data":"WikiEncrypted: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"},{"id":"9c1a8bb9-67eb-4e27-9038-e04493016369","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Scheduling","description":"compiler-scheduling","prompt":"Develop detailed content for the Scheduling stage of the Compiler Pipeline. Focus on the shot_scheduler.py implementation that optimizes shot allocation across multiple measurement groups. Explain how the scheduler analyzes circuit measurements and Hamiltonian terms to create efficient execution plans that minimize total shots while maintaining accuracy. Document the integration with NativeCompiler where scheduling occurs after circuit lowering. Provide examples of how shot scheduling improves resource utilization in VQE and QAOA workflows. Address configuration options for shot allocation strategies and troubleshooting guidance for scheduling failures or suboptimal shot distribution.","parent_id":"e3263062-6a60-4591-8e69-dfabdcc9cf5e","order":4,"progress_status":"completed","dependent_files":"src/tyxonq/compiler/stages/scheduling/shot_scheduler.py,src/tyxonq/compiler/compile_engine/native/native_compiler.py","gmt_create":"2025-10-10T21:22:12.670308+08:00","gmt_modified":"2025-10-10T22:17:27.568998+08:00","raw_data":"WikiEncrypted:r1dbw1ciiG74lYTjPig5U62siiTiK0rugTghoeHkQDREelFfE4ED3p+tzQLQL5jwlF7QX6gYRXm5vBRXQfAmNbnnoiKMM3LnATYdPIvzIWedoCxJoADaUNV6cJpvIb1YSQ4RwRL4N47hWsb5P3pPYRW6OnDYVnMlbO0v5KL29GCFlkXnel8v2FQnm3b/NRVJ2M1xnllEqza+vxS5xOABMQmIyylX0eYtYM6Qoj2zz3SWTS8sooS6/3sm17CmwI9MpehPSydGh5Sa4En3etUPrR4wiyo8Fu0yBGTw2NSz9Zab/00Nrg4Xn+0gk4ScnOyZOQ9ExE3Vmm++YVkJJwghDPsX50kT6MGljjiGumpmuNtctpRrLqpbpymY83VIfGd3nYODDe8so8xtAT4o7Qt969YciucqCD8eMGso7xE6qjeRkF7cMnrsIsEsN62hJfxq63NxuTDvhaACHcl462teKlkScKgm2dSDs0FoI0KWNy9IcgH8xGB2T+yM9oeHa0J0AifciYqsB1rvRfq4B3gvVHYyVQMNhbtwKRQTZwl/VN01yH8htxjO75VjtG8anj+mmVoAWwzVseFPeta7CtAR7q0tQ5XHdiOK2mHbv+/sy7a3EVRjzywyb7CcPYGzpKXrr7ZH5fwfBTpbnDbKT4Am9466MPJEcdoeS5fuC78tOAA/o6caXOgNog8F1dEY0UPJi2fmSGLxq62NOpgTAh22BWHh6LyE/dHM2FLwRY1uZZVh0fDbmOncqZqBexgo/Wk5Cov+QhJGxcMVCpaal4N/wwDDVI/kPt1JOeh69WAg3yeeHgQvncVIscGxv6CdkIwTMau2TluSDY7J3+CLTmqNorLBM9P7fgYxSz8f1FOwS60oL1646KZ1AHw6jx6f+RK8ZG2BiKzkN8ROkYsHpTiMRVXFVHdrn6HSy/lbt48PIeOOJPZtaAnalWXajwdolXkoA7W/dJBALdx5NJGKakkNf2rhdNkLYmwCzAjntdyzK6bX7F29kjtEr5gkHaJAkeybnrfnc6oN4x+26GYIYjYnoY4GEg16n5xGReFkOQcbdm97uAIud+oV6JUTEZ1jRA4XGy8qj030i2ei1hjT79LIczlsQSTiNUf4U9B66+zCVifEKM2hZOvaNUyWecHzTGHrcuqy9FGD/inM6+LpDGlxtIfppIk2c3xuNthrCpz6LLHnsKyDaszrnzDRj2erw8aqKDKDMiofcA2aaLn6U9M2/OuX4DO73AOHFsatF5rt+zxw9fDMqwnD75EdzqNnw26sPDk8wJuP1XPpihSHryekJd9OweKwW2yrqIXRY4pyr9hM1Lmmzm3lXNhz+Pha8ov2A66CfUbSBFISEiPt8Df4yLDPchwbe6yM5BIfv4+nnYtR/rKjYYmv9fPvHDSL16Nq","layer_level":1},{"id":"f735e467-518a-4e97-8e6f-9682e2605a65","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Postprocessing Layer","description":"postprocessing-layer","prompt":"Create comprehensive content for the Postprocessing Layer in TyxonQ. Explain the counts-first semantics that prioritize raw measurement outcomes before expectation value calculation. Detail methods for expectation value estimation from shot counts, including observable grouping and shot allocation strategies. Describe error mitigation techniques such as readout error correction and classical shadows for noise resilience. Document the metrics system for evaluating circuit performance and convergence. Illustrate how postprocessing integrates with variational workflows like VQE and QAOA to compute energy landscapes. Provide examples of applying readout mitigation and shadow tomography to improve result accuracy. Address common issues like insufficient shot statistics and mitigation overhead, with guidance on balancing accuracy and computational cost.","parent_id":"40147ed6-4474-4e38-b488-92b8dda915e1","order":4,"progress_status":"completed","dependent_files":"src/tyxonq/postprocessing/io.py,src/tyxonq/postprocessing/counts_expval.py,src/tyxonq/postprocessing/error_mitigation.py,src/tyxonq/postprocessing/readout.py,src/tyxonq/postprocessing/classical_shadows.py,src/tyxonq/postprocessing/metrics.py","gmt_create":"2025-10-10T21:22:16.259112+08:00","gmt_modified":"2025-10-10T22:17:40.279346+08:00","raw_data":"WikiEncrypted:TP8KP13wWUq5FizrfXDdgm5Onzy9IlbZ3A0aMtGORzsqn4NZCv2t/Yd8+UekgOeKFztmFiHtOnDZNwVLLWUtc8LLCHzB/tkb1O8Xr69jwPvsNCa4WD6RLKiYaInbl7bO1jM+k1lSvM57XGVI4Tgna6SJ+NBCUk9QITLxkSA9t5Pvnvxs9lYW33M1jZ6d4vRI9KxEcF5Ywx6h8iIcfuWg8sUYanN71EuJa/XzEkRHRUEGjCETzj8IdAnY7zCyfuTdALAliowJaTLbTN9XtQCjckgir1+tbixv4FDM17QQ8qroFpGJ5EAYQ3h+ZC4QLlLyAd9cI3JQ09Gq3D/KRBOHPbYiklcifhTJZ5mMjEoa7m6bsnSoqtlJsWagB7omxFYgroZATG/nCQ4spRoDJ/eHhcD2a+6p5+McDqGLO1q6jzbbTLy66TYy2myS3T3eocQBSa5c4jEgCuUQBIptFIWCuPw/sgRCIU/qskQcTfL/JicTFF2le7FqSuy/zh7Dcan9lAkpYop8J3fQbhiUk91nZmaKTCetltu6M7oHJa1tGw14hU5c9+p/WvXQQtIL1IAyZBsFXmufvO6xBll+tKj7h4+TNYgJ8m7NNYGk7dwLK7hOdad/hw6QT9aDUPkC25RAD0vN+njrToTrnbiXHvEO89MOEc1tXz92DLwKNBOlDyrknzWgD9x9zj3eB2Ne+vfxWNS4RpLAj/RDs1T+IcdBRj/nOJcKatkU5WgA55zuH7uCb1LncLORpfuC1HHYH0c6CvuBtYtmHwLvZ6cGloa13tO4u+jMT3qrgPVb6Swl3c0GIaC6KDRX9ZFDvQHlkZDWpjgQzB9zivZpAR286ouaCrVCRiI1oObfrVFUiAhZQsVIxmdyn87quy7suQEU4xCGC8pQpzaHpPZR6Ucd7p1lp13r6+yxwJIVpyaKeixahDL8PKJcnjS6TYElM2xZuSw0GPuNY2bIdBsA0hroWI/FxvQI78m0EhjqPTt27uUAcrgLDnJ1o5kyfIbT7VNrpbvUxmRFGKkF2tsp1Ml9kUFUEPtxubEoTQzl+oGEsUxrv4F2xe1A9/NKvL1XsfQUD6OSO3/9bYipWxkYlWMo9FfcpydOlbV0WbDYJObVbNz+Z9MZKUQoswPd11SkPWp+MjiIUtnt+bBt38DS6j5csggHnrL8Zd4ddAQhYDywktyl89KZxtLTd3rMGaYfnuZp3Z4cPd9aEyy0p+bp6mCxq0r/2EeDTtmPoqgE9oUSpQ0sIL4MbrcM88fW/dXIDfF+kHWSPY/CNGDbn4wjyv3khlzwGFtFydcguu09J80ZtNtDMLTWpJiQUnWN0Q2LI4WOx/p2HRsFyKrw9OrjplMWYwk4KcjEvdEEOGHAlh8cKs0njFmvu5kIwvBuOyV+aAGZj0mfsixtSh5mLZZ4le+7F172LWoMBPKkKnKciTycmBSb9UbcjF0YaKZz4rPAxZl+EnSCkgVewG7Gb+37mgOHsfppczt0Hn0UP6I4XxNXJF/kqN7LVmm8xIe/gBAJGwu0yZOK3LMY4t+2KARn0Av82mpGNFpqZSzAqoagHRHERDn84OA+xuSZgJaL6vZ3KJ2TTpuaiPB+34as3skUQPkYHGBytXhmLPjOp4JqFQdIDMcLBiY/qzeI9bIiog0f/S/A9N3Sokry53lEp0nYJyF+msyWmYTswwgBrkgmjL5StNcd6abWVsoKrEJTJ2CpKQmuqinhoW2zBNgVOQ+IF5qr/bXAp+Xen9u+wVlGDiiNU0foQZtQKKEoYHsb5nG1/NXpOc9+mGsEq49j4QNXeG8OSU4ixw==","layer_level":1},{"id":"1db93f6e-92ee-4193-90c9-e3240486062a","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Vectorization Framework","description":"vectorization-framework","prompt":"Develop detailed content for the vectorization framework centered around the vectorize_or_fallback() function that enables batched computation across different backends. Explain the VectorizationPolicy enum with 'auto', 'force', and 'off' modes and their impact on execution behavior. Document how the function attempts to use backend-specific vmap() implementations when available (e.g., JAX-style vectorization) and falls back to element-wise processing when not. Include examples demonstrating performance improvements for parameterized quantum circuits with multiple input configurations. Address the error handling mechanism that gracefully degrades from vectorized to eager execution on exceptions. Discuss the enable_checks parameter as a future extension point for safety validation and provide guidance on selecting appropriate policies for production versus development environments.","parent_id":"b689c08f-8318-4f22-884a-b1ed2f087ddd","order":4,"progress_status":"completed","dependent_files":"src/tyxonq/numerics/api.py","gmt_create":"2025-10-10T21:22:31.959847+08:00","gmt_modified":"2025-10-10T22:17:38.119895+08:00","raw_data":"WikiEncrypted:D9AwxzXN4lDQjY1HwEIjyEho3EP5qBQR8mIln70P4+5PWKGsu4gFgAWl64wtNVUWSkdwMieBcotfKX+0Dt6FkLfmaWKMhYh952LOIiu/KOHdccZhiTAo3sUXs1eVjiDGca7MBS3kHFOLfdKp+qZBGRW/zkP4ny6bSo5Av2wqOw3x1fHE4UhxSAdsgO/0EV568qcYDeN8n4eSlLUkWcTI3e4rO//fb9HT+qQOwRK90nskjAWBpfzxrcBfsQlUkDLaHNpN+5A1PnkR238lvNpSMoWDMHXuPnvAO+8Vd9C1C6El7DW3tM5c88BElmepFeUYWQ2Kh9tv/bepW2oOIMCT/JdGtbmT4wj+YbwgvPktJkY4RERvvHR/ymE/EBfwNQIG2h53KFC8dhBjPQnutu2n1N5djaS/8ZTgAzXQtgRf3XEkS46nN8R88YOWhSJ9Qvpt+GTRybHbxVe8mY3HixhNABxtd09Fh6N9HdG3MbN0ovVC27vIm2ccZqryuY8ADZLFm7HHrbWOo4Oq49DMdxbW07X8NQllV1aZZNCy7f6WhPEuT8vIVFixdxFBzy/KLOvtpewFjYgjcLnUJas7zIDWS4Iobv76QZJalPz+S3wjsVuiqEjLsnMktzwIgmLfl1GVNujMP9s9NvKJTka4o7pftYxggN4z/OMuYgJ4zK4ZWzQ97KeSEuWFADQbt0Sbc7EuYoiSFd12YJPx2u/3KcyuBzK7EGsAqk3omH4zgf5Qx4xYzILEkYyVde5an9nKM/shQAQJk8GjyJYQnZCDb1sbvyXuYlImQkswvb5UG7j8q29Os3Z/D05W6PDF+FL3xr6npEniSicDwHoGrq5Lbg14XG6fwtMroNk9HcDq76tNiT6ktBMPQAV/snuHwcO2ePVBY1pRbfLOOXkeEEZiI7h1Vro/nhKeX8e5u1smDTFhuiZX7hIxYwLvAIA8tm7/BFS8sKAatPL1V2UDJf8Juclf6ctG5ZtKLoejLkw/EnOj2Zq5eeuAa6W6G1mp5qErXa1UtXqTwTgpSHRPwvlnVmIRqXU7Qxm67HvhwYFteRdoTUWzzPucnms8G7XtDu5C5QipPghjgM0UXaQHgeRxKs95IV5Hn8NBv/mXxjUkXK3MEYeHDEJN5MeTgCTYERbHPCw+gNF1U+rvzQ6avbianRMHgRvUXNY9J/uoTGUvY7O1pr612b4sMH/UN81ljZ1RuCitmThpExZuIKvVHn9R9fRT8NCf+RYZEnOPco4LHpToiZHEaaJSmxvd0HHy3rlM+V2CBm3od0dRPMD3IJk6OVAKB9rABoZS0bWosij/GgZxVm8h8MUZlMnh+GsWlyq2/+c2ov+JM0Ityq+CNGOZEtU13S2Qyb4aeWP1W3O8x0cyLZt7it+P6Efj05g/8V0G0UxI3C7eMhRck2qQEXma+6gF8XqNiNrBhoSjDTk4/zcVvro6kFpCwh9qiKaiR4By03PfBpjt9aYxO8Lb5OvzBL90gy2yiMZviBsC1kPIejcHzWK2Cbum39+U3gmemR4SgR0eIg7xa9u9JwqE4lw9aKV+hQ==","layer_level":1},{"id":"38694c6b-27a3-45b2-985a-d1a9bb5abee0","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Pulse-Level Control Examples","description":"pulse-control-examples","prompt":"Create comprehensive content for Pulse-Level Control Examples showcasing low-level quantum control capabilities. Explain pulse sequence definition and manipulation in pulse_demo.py, and parameter scanning for pulse calibration in pulse_demo_scan.py. Document the interface between high-level circuits and pulse-level instructions, including waveform generation and timing constraints. Provide guidance on designing custom pulse schedules for specific hardware characteristics. Address common challenges in pulse-level programming such as calibration, noise sensitivity, and gate fidelity optimization. Include practical examples of implementing high-fidelity gates through pulse shaping.","parent_id":"be2b789c-6423-4d7d-89dc-b724ac123462","order":4,"progress_status":"completed","dependent_files":"examples/pulse_demo.py,examples/pulse_demo_scan.py","gmt_create":"2025-10-10T21:23:23.923098+08:00","gmt_modified":"2025-10-10T22:18:29.633648+08:00","raw_data":"WikiEncrypted:k6HqU5Hmj11neWjN6pDXpIeKRlXZ6ch/qNauMqwP4ENPAfB4kc1BaLK55Rd26e6tHEsMKjVMyTQJi4c521hKruUElCW9Yz9fYzOuUbokwi+kvjtVyWuk7bhN9Kr2otwJEwzGyr3CgdJzzudrhOJ1/LXE36/b0crEpH8o9NXtWWDePUBacNggP3uUiHgtbz2MKJacgs5hmDkdFO1lENFm/ETo4HHx4MZHoKiN0cMgIuwgR/BvxeqzoG4B+Jjcm1xgWmSKH0sur532vMyYLR6xUqiIoTDc6gIfDxn+Fhv47LIMoBEYHSiL2fY3z+bPiRm4kf4+5ZP9g9e2Iinz8nguOG0PuPPnVKbMvO7jIKefVj4RiwjjuGF6sKjdHZ/cmuLUyqlNW7pnX4itUosV9wmrzsiJx4oELMnQYbeElEOzb6WPfQSXl5wu2frA84dPHNoeJZnynGefuvy/str3dDnYUXlukRaFTt/6EMe10hz89B/RHfXXMSZju7KDneS/iuY/BEfSxJ83NX55f5xxU/pXMrRuUG48gyRN7pHLPSuspOIVeVbkYmvML3tGw4tQ3SA70IlLhXNe14HzM2MtvQNLXwl26KRJmv6o2WRMplwonEQzIgoW4nwMFmHyP8cbHkoOvWFjfc0seM3l0pFOeT9Os1NqoT11LOAp/yeyaINAdmMboTMwGetAt9Xw3VY4ivKPGzT1PZd4m4Ibcq99TZ2xPoCy4/W0ZTniOXiYrp2kVoVwXyQoGkv96Q7ioza6rQH+kawRijrjIwUkkEI/yC2NoW2UJM9lHy+Od0dLADJPts6va7+c4PvVS8cuVYcFQWYxaVzhHtt9lt7AInXL8LurAylaCBWJWlegpAEodWBW9tLnyNbGWTUdR3qvQcc3VgVBpeEK5UTnE+qIRwSxwe0k79YCubJvEvCB2MUSHlVbmfJ2BvSt3P3U4KJ5p9C5/rzIDPed5fH8uohe/uCQWyh+KXbTjgcw4driYFXpWQsCEx1Uzb+BFB9Kyh1i51Y0cYP8yyib3V4TUzoIggKkCEQHvCpay5p0rl0ZZkfl/PAa0tJ4BodWY9sW1BUFzUmLOCREV731V4z/EFUKOIqkRiky2uQ9OPpgLKyqxiD0qmqOK9aVhBWcTFKQXXZvoYmyb0PiT7XB02Lf4LNO5e/aH1g8PuMqaBkgfHclBIRuSqxnlPaPgTiPrvh6dLaBsEOjD9w8lzRadI3Mda5xkVEwVBxuQcXPgns+PLo5xnmI89yA9Q6EnA5Ep5RFcT3uPx0D235s6umqzinXBEcfm5hkedPbL7AwI7e+NilJjfxPRI907GL1R9N7wk4CjFjE/8QX1FvQs1axON2TFXWgLJ23sWDWoA==","layer_level":1},{"id":"83498097-8e06-410c-bf59-2b4a228d19dc","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Postprocessing API","description":"api-reference-postprocessing","prompt":"Create API documentation for the Postprocessing module of TyxonQ. Document the apply_postprocessing function as the main entry point with counts-first semantics. Detail the error mitigation techniques including readout_mitigation with inverse and other methods. Explain the expectation value computation for Pauli terms and sums. Document the classical_shadows implementation for efficient estimation of quantum observables. Include the metrics module for result analysis and the io module for data handling. Provide examples from examples/ demonstrating postprocessing workflows. Address the integration with device execution results and the configuration options for different postprocessing methods.","parent_id":"f53ef1ed-0ee1-49f7-a90c-99d15b936574","order":4,"progress_status":"completed","dependent_files":"src/tyxonq/postprocessing/__init__.py,src/tyxonq/postprocessing/counts_expval.py,src/tyxonq/postprocessing/error_mitigation.py,src/tyxonq/postprocessing/readout.py,src/tyxonq/postprocessing/classical_shadows.py,src/tyxonq/postprocessing/metrics.py,src/tyxonq/postprocessing/io.py","gmt_create":"2025-10-10T21:23:57.627249+08:00","gmt_modified":"2025-10-10T22:18:51.857101+08:00","raw_data":"WikiEncrypted:C34GewOyK1SlumqKiPsSg6CEWiFXnbBuNYJN0YeyDd8dE/Q6HHnUYl3/ImCfdWEzb6PTwisQEW23CeM9b5KQreNHva43+jU6SDRlHHoB+dfjxHdjEiSHaXhY4Xk6EjENgWzCptzcip6hYzs0Lr6ecIRDnEgkbCVIOrXXzv0y2ij4rnA8AuNMWyBKPHswrKWvbIV2138RWglyJUyvlTkBTzBE6awgMIZo/LsFDRnGbkv0OiXEiG034oUS5fdJ8yIOaCdIuOa9PbYFEtFvpiUtehTxBrda9ACbs7V7m0rRyqkCJr0TJccjjCw51QDrySiocfliIQm4SCOhaL5qcw2ppDsw1yZAUwsxQbSfvjmnjdPqDI71h361gFIR5MZlIgppaWy75BPJ+C9qaa47rYQm1pKYX9fneLwewmjU0yQoYdErl8WNe2FRSG35XQFYs6vMwax2KtgUSc+XlEKyDzLCZkAt1J0MFLRrJmoo/M/f02CTLoEnnsr3kFvVU9WUdfI1zsy+lTkc4ZF6NruZZIQRiup2QIAM8MZ7PLYEQ/iyzDEzmjvkN6b91Evt/F2pm8AvEO4LeYQ58jSnqSA9Dvr+IA7gtfbv4xGdFRgNt2mMi4l5Vkn59P2MH+bJekmeROq1FqMScKMSPJz1poQ+RReNvxm+9j1Jxe1WvwzeUKE7cPlE70vQ+kngKy4x6QLBgrNsyYAzkNT2nsHpoRFQrXKw0noWHfcFMru+v2ZoNsqk+hAqLF4pJ3JAY+613PBqifyMpSIhYo74k3EKJSP53UPJmvDecu4xdwW2E91Edqzx2+xSIJ3+ilqRmZ2/w3c2AhVnpRXudM2QjUYgCRQlxzRQHnBV5r3h1odfeg6URUOuBElo3BVnRrlgBeDOWWDYcqtGYoldhqh/juUaGlT56UrXqPfCPQVDCVufTTMVALPDwoNJoExcLiEuDv9ynNd1iko95yffy6jvy96wpZiPXeGuQzOB9+7XUthA/Y0Jkgpc/IIYu6ciU6AnIOIlsnl4LiQ60gC4b1SO9+LSqm8OV2b2N3B0JmrEM032I6UdiBwDMZMlhQ2M916+f72SuD9ZKzJk5XmtWijthhsBLyQIWAV/PAgLxeXJttGIvs/Md2RRaNEC4g4T7diWEdZU3XQy++KhYlbKobp7KLoAbL2hR1ECIoDf2f9Bh/Xc1c2TdGIrBvzvYkVgjWe0h7U8pOQSk0z7KKknadzesrEN/z3MC5EYXzCaMPAS/EybVFtriI/XCh5agO7SWkKDDgs4kDWR4STMbqby2k0n879zNCk+gu0FRv+X04jTEMva9YY3tZQvJP3IPPTPfpyz0abBfM7NOFwUuXzqBQ9nYZONqYVMm2oHb5tGc0GrDmGXFBW4rAY/wfwQFBgPR9clNOvXeFLf48WDLXNOR3ULM9ebbPJQ1JMxenx87yXHTQfHsWQJnzzO0FDhXGjAIZ+WN+6KC3W5+PAjcAR+axAFqnHidlIv1ekgcpcTyRivh/kETgOT3KLyluUt0+STqoG6Sn8PYKanlDdXa8DdwIvjF/sTVITnYL48/R31nQX4reTxAaZ67D8accbg4hQSev7BzXptlCqEcSDQTJKYhIhRuOP91jlrM0gIpUDs7B4ezGSB1zyG5NlCABJdOYWaUaEgAq1aueSPwsUgCntOg1IQPWUoBxl0CIxPtK9aT33yGcfVOQISSQA3qaaCFJjjZgf8LU4yp4QCeCUA5ZtlLyTnJqTSf9QP+M8WqZ4ZomXVV0YzkC2FIvlv/gY=","layer_level":1},{"id":"77e63c8f-03a1-4580-9024-ff3a623ca46b","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Dynamics Numeric Runtime","description":"dynamics-numeric-runtime","prompt":"Develop detailed content for the dynamics_numeric.py module that enables time evolution simulations for quantum chemistry systems. Explain how it implements Trotter-based and exact time evolution methods for studying molecular dynamics and excited states. Document the core time_evolution() function that propagates quantum states under time-dependent or time-independent Hamiltonians using Trotter decomposition. Describe the support for various Trotter orders and step sizes to balance accuracy and computational cost. Detail the integration with UCC and HEA runtimes for variational time evolution methods. Include examples showing simulation of electron dynamics in small molecules and convergence testing with respect to Trotter steps. Explain configuration options for evolution time, step size, and backend selection. Address numerical stability issues in long-time simulations and provide strategies for error mitigation. Discuss applications in non-equilibrium quantum chemistry and photochemical processes, and how this runtime bridges static and dynamic quantum chemical calculations.","parent_id":"21884915-2785-4d06-874b-5407f53d00b2","order":4,"progress_status":"completed","dependent_files":"src/tyxonq/applications/chem/runtimes/dynamics_numeric.py","gmt_create":"2025-10-10T21:25:30.567586+08:00","gmt_modified":"2025-10-10T23:03:30.658358+08:00","raw_data":"WikiEncrypted:6ZBmIIAvpApVjZqEgvf8g58CzYYAZhHdjKDT83OcTdGQCIwPsM/ZIS7fuKJfqDpA6KmUJCpLCZeQ/yU6LctSHMV+Ra4afQCK53YPpU1uwrSSFZKB0pJLhdO/STL5y3phMsEVzlyEb5e1Lr05anKmWEEf7hJZ8Q1kWuovfNEYWhYoNZPSNFp+2AL5rIh0DJkKXqKNTp+lV7e5jtndeuA9UQfXCC3hlrr99N67HJxa+ymAZn+f33eJn5QmYq+3EfOkuONq4ZFF3T32dPb7rTbzTpgYzlmugfICw+QC9sn2dmYA39imkIWkLxzPFlKb4nAc1xH2DMUUD1JBM6gVOVgx2nrzQiN6K7NpBfNpNvaA4SHSF6Gv3+hSa0ElfkE5Vlm6QD8LSlPIRA5U4FRQsEBrZjvbJl6DQWnywgQFbTqce44sIcNELxm4v1vOtwl1SyNrOgATLBY4Hco0TOF7l0UVedn8bBIq//GVgyfdQq8GPaj5CfrWIzAKt5cRbb+MSxrcHy6w3pDIzJkJaKQHTdGE5oScnJ5ToErEeM3cAJ9WUQJSvtsG9hmpgmo9Kvnjv1Ccg3KiCp8gUCtSE/nSZx0g0iOJZg7C8azE8ZKsTkkGp4uCP9A8iwR/pdMz8SomJPF0TXJ+x3wpigruTDCHzu50lwbDHmWDFMyuZc09RDurN31zLMbu8ceH9BevHW1/vNuPi1FeBIOVJWEbfw1NnQKw4lmtsG7l0a39jZ1eRBugpUnOnyaS6UojPBnkSZPvyeEdZyx2JGKCvI8bp697JEv8Yonh3Bkpf7wNx2gLxIJIg6ge9vWNhO1O8FXxO9+r1dKC32K1NE2Hmq8YZRnunrdi3GBn6SuoGXQhBDcdKwDxvrPMOvLz3cDTz0YkJsJfUtMRkjP5BXa8h08/Ug6ZuNfhTpRkeYfZqRkPqXiAExW3j7Z0ganGkLl/eqJrrOQUtl5A3u29O/gwjFoDXMbe+Gu42PCz+ObURjbSYDg3JrhuXtu5hqdk20zFR+obidyfQNKmkLFDuQuSPSZIb2LQDFxyKbzGbUwMpeHGiaWDsWR8tRMtlJBOixPmGw2i6DQzmvTYvBudypJdznKh1hV6Blj/2kPczvU2zlUQpL5z7ylLk/tNJt6Z96nKx9bJrNosCxNmM9IGeYLCeEJgDuvOvyoJpNlZoR8DkRw0NwSNJLQbEBOekRnM+TiydgWpGOTrWpnLzsDLHXk7akrqp2k1VVnEpTh1PxUDZVjdwkimLpjopBC4mAvCWeKrmxQjKpCjEJmakrQ/aaiTbCk5nt8RgmrVqwNVottUFLSwoizyEhRJuN+WsdkYtPKaCoB71MpOn/kopWd28f5qVzrUkyPAbEEpwTbotPinwy2IY9Idgg0pKQEDUBu+NOfmvmquU9ln379yaMKWnmjaRzrDzfa65cbeK/0rl/f/ZciSTJ/WtsDnIi+91RBeRm0In4rmi0UqrJifylOHVBBx+QTrEJbfLGfOwmPde0YWMMwGRKF9riz+Tlmbnq1nlFVtR5h0sqqPMBy/J6awKcDMNyS/ry8uwPy17CkCKUBqgJ7Cm76wf7foJ/K+pJEBEeRpk5kSVmG6P8Ct9ep/viCKbEysom7Cqs0FCP02EvQzpLacpkquU/5Sn9SZUOY0bcTuYI++PGsSdg+AjS26DQAQO1bIY85VRhmLPoFxaAN+1CAZL4Wl63GfpacniJ6oR/ZOIMTHri5dSHvTbisvJjl5/pvEXr0pruSOjWNF5epQQ+uB7UZqt7cf7fDzWWESdiOUFGwsmrNgaIzs9jZuYp7o57bMZlEEtOQLjVRBWn03yysWQdU7aVoR+6fghOiCskHgBrvmyN73wwDg0oEKeH08H7sykvqKVY5elA==","layer_level":2},{"id":"7eda7c15-de1e-41b0-afd3-de7dd756dd56","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Hybrid Computing Pipelines","description":"hybrid-computing-pipelines","prompt":"Develop detailed content for Hybrid Computing Pipelines focusing on integration of quantum and classical processing units. Document hybrid_gpu_pipeline.py for orchestrating quantum simulations with GPU-accelerated classical computation. Explain analog_evolution_interface.py for analog Hamiltonian evolution and variational_dynamics*.py scripts for dynamical quantum simulations with classical optimization loops. Cover data flow between quantum and classical components, synchronization patterns, and resource allocation in heterogeneous computing environments. Include use cases in quantum dynamics, optimal control, and real-time feedback systems. Provide architectural diagrams, performance considerations, and debugging strategies for hybrid workflows.","parent_id":"24f839b8-80ff-4231-a0d2-bb943e93ce61","order":4,"progress_status":"completed","dependent_files":"examples-ng/hybrid_gpu_pipeline.py,examples-ng/analog_evolution_interface.py,examples-ng/variational_dynamics.py,examples-ng/variational_dynamics_circuit.py,examples-ng/variational_dynamics_generalized.py","gmt_create":"2025-10-10T21:25:43.526204+08:00","gmt_modified":"2025-10-10T23:03:09.059492+08:00","raw_data":"WikiEncrypted:L7OndHh2dwLmabLWQjqqMn/1A7MWNco/J0gRB+c4LJNRQekWyyUo3UDsMVKJy8K1tnkIqiU7h7kEQ0iLV9OnZzewVBdO+4hDagZJmiBi1ppmiwzqzZOK8N12fyRfaJVtTT7TL59Y+Z1NfjDNKA8xdJwwNzhEazpmCXCwoagOO9G+4yPyP7wCbnmoaTdOjr7wZJaiylE7gNKWgkiy79D7LHm1Tll6y+tNQtHxwzBlLFWzZOsjDfsmSQPln+3asL4U56owRlRgW3rq3f30KnsiYlcqLObM8lJXRKGEnjCzBk8nAE9cPBawbdLtyobzTgAN47P5L76o05cZZzP3/IV0veg0Qj8y1TbZmjicxKO1NTA3a6XXyjw2aN1gZSuWuNGejlAj/XiQ35nPx1DyaaZs4yMjU/CdXQ2rj+RUTDArXIhzKM4jingZ/dI9rPE6Yx/TVbr7rMjwKiUlgJ1pUDkQ5lW5SoZAgJTdJzu6zsmHkj0bFEu1CS0YHQS7TVxbQaonml/ec3OlCb4f63/4uBnh2BzxdvG03dyB+XH3UpmqEBmrC3E349A6IU2nfreKJHM7LqfQrYJmisgrcDERUr4lH0mI1v3PbsBn3jqAnfnRI3Hcmzw8n0ZEemiSdLcGAz5X+Qbo0iIgZtjfgAlaTdW0oyUoyBmNCCSD5qrfKv8InhCn+2mURO2s9icydZEFiFd6O1fRD7jLu0D8U1AAvdqoRBRnUSCxfToQaq362xE5t6z32F9sqST4db6muiYwU9oD1+d2KTJ1xNDPpBicVyFwCUZb+TONxomPxX3Hs+ffPokzGulsD2u6jnW753NhUBUxvtFVtIq64fQ3On0BWutsYKLLNaQcTHOKajLy18rpGszs5ycqgV+M80SuArXLzEWehYIJWV9gC4x8J4QV1Z7d9kAbmyap700Hpz8CeQhU/CdVKzGbs98P9H1eCtQdPrrRwsO/5Xgs6RnKKJN1I4pmTOaEFiozFjsWUSynlbtcSKr4uGi1IVNiiM5VS2yLeFvLuNQpjsIoFRVhtZr19mW1+z+OIsiZW2AyMrTK2OvI7ON6B618LeOr6UQHJZY/X0ThDFa0FnERKtHPP4XDP2+wy1m19zsv2vULUDDjTyVz7XWe0eQiu7LW2r0VVsYmbf28oNn/z0lfp0XgG2Slm2lKLOuOBCWxUiAey5nwne5rzeF4UfAoA8dVgnu+Honp12HVaEnsp/dbZXM65dGhu0rVT2WH5/tbdYpb82BVLWKBZoy8Z7GraMZ8i8x44/B5MfP5Gp9JpW7Mbs2eQX2s45hIWXco3sHmU8vdglGl1QMXTz8icpaJQL98sAyIBLOiyxHcUxNR4+wh8kMNP8sWAI++KRzBZ48Lrv/kCQXnQGqZXDPsvz6syns2bc2iEJMFU07lzkS8XoD597tdDbEIAOzu6lT7QlhRrhAhNFfAbF6EMnvyh/OprgSJmAFC7LZo8sH9wmztWq0qLiWkxfYnERqmqRUgf8K8tAQZQw0GTIEl+YC9S75349P5ywtmPZOjWHS9lOHs3QsvAJDgGHEFgp3aL8zRQL+//Wb1m1RBIX3WpyrQU0pWCZnTtFs1AvZc9po/acbBn0LKal2XBc2X6ZWzuR7lIwfMFIiJoiKvDI6Ie9w=","layer_level":2},{"id":"55c89a19-3f8d-4051-8923-e136aad1ba3a","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Vectorized Operations with vmap","description":"vectorized-operations-vmap","prompt":"Develop detailed content for vectorized operations using vmap as demonstrated in matprod_vmap.py and vmap_randomness.py. Explain how matprod_vmap.py rewrites matrix multiplication using nested vmap transformations (vij and vvij) over tensor dot products, enabling efficient batched computation across different backends (e.g., PyTorch). Compare the performance of plain matprod (using @ operator) versus vmap-based matprod2 through benchmarking across various matrix shapes. Analyze the role of JIT compilation in optimizing vectorized kernels. In vmap_randomness.py, explore the interaction between JIT, vmap, and random number generation, demonstrating how randomness behaves under vectorization and compilation. Discuss the implications for Monte Carlo simulations, batched quantum circuit evaluations, and stochastic gradient estimation. Provide best practices for managing stateful operations like RNG under vmap and JIT, and highlight backend-specific behaviors in PyTorch.","parent_id":"5d091cd5-87db-40a8-b6f3-190eacdf7e76","order":4,"progress_status":"completed","dependent_files":"examples-ng/matprod_vmap.py,examples-ng/vmap_randomness.py","gmt_create":"2025-10-10T21:26:08.353668+08:00","gmt_modified":"2025-10-10T23:04:47.732523+08:00","raw_data":"WikiEncrypted:D9AwxzXN4lDQjY1HwEIjyF7X6fnLk9mLvagTHHnGAUOLjMn9pAeWWSOx1725bvPGbXeWd/h9Dfbo+AJik606lCD1Iq77DmhoGue4qRo302JlLz90+jy/Gzr+GqT7BLwBcEYLXSaHjlUSkdzitQbmq4nKSh1Wh4R0DqeSMjiSY1TC172qGFlNAc5unY1kjA6yDWbwnau7l0oZT1kWf4Yv5t+NFFsU1Ap10sNlcRD+oCRjdzNNq4M90en/ieSLpXBdw2LbiRYGc12G368rN/2c5hDXpGuLADiwqTwqgcSys79njZ8YDKhpBvrbwFT3pZ1a/JYvTJjSu/DIw2O8uMsAXh1WuekKluA3Sc0EcQeSYZdmA6KxPv+QwrDTtKSzEvYBfZP+EEScKls4Egqibjhvagdmxj/azPtO4Diog+m+X4c9fAC8DiFxZMNZdkkD/5m5QlgB0JIlO1cJW0iZtZDad9gZC7GGrRgdhMgGFtHku0TU4U+EXfa3vpi7QoYyf1J7UIHWOo9C1LLwHgxWpd5cu6yUIr0Q2IYmlB75BFoGUI2vqDuvw1DbJDZwu8kMANKuw3EgRpCf3I4RAHRdpdqViEIo8QKDdaaXbYlZHmokPKAYb883wj5SI9Yrxr20VzW7k8q+Jp+eRwcMyAuoTvi7rSDjFBnT2EMSid0ZO35bU3Wd1UHft8UPdi64Ifm+80X3V3UNHNVYwEsKcnenMBLIpNhW5C3wPqm1c/4F2/pyHVts36nyFCfHAKjQdYm0vuUDXt56dXtTO6OS68YTliQzRNh/Y0zu3j7tabyQpd1lYubAH6qzo1kercjLgpcwbBzwR04eTW404+1CWthv5+5PIf9cWEmPB2l4QH84My2n9MtIHBQbSwmR+kw66Arx/FzA4nbiRqZu5tTshXU31ZC9rgOaqKQwyYYNUm4suayAEzmMBlmLAe+j9Ssi4OEfsY8f2eoUcyPPsAtOWGpKPNA4gk+/Yjm8dPGZEptTcam9MUIYB2JKAe6rn8y4Y4sBnNl9pcGy8pTDl5XE+zTjQ0iXBcRkItLj2SBb5eg6hW21Yf+CvimivDV3++VZlTcJrWqn5Eq0KMax4BBC61PnYFUJUTLinhbnWeVS5MS/SLyd8WwqEBNOtxUkAwmSjcBqJFn2L7kx7IzBCQLOC3AaXtFtdnENAVRykLEehO+KQrAIoXkPpzD8oWVvrZvHk+Zevc6LOh5/eZFIgJIa41+yxqNYBbmQ0lPdIFOqPjzVTpA7uM1B7xzJKW8KHru7KSgRBjFbR589FZp0riaR49fMP1+6n5npCVh3a8ltZ1LSvBp36HmqTT4zW5Ze1j3S3WvSgC/c13bCnOFEzUVmTGkEexM5kNN2CbSXErlhjaDGMKgkhoCTkzvK+QE6d69angBZ+dCW6TtHNcDLMu6tSYcbF+JXptx99nahKcR1b81c0WzEKqNut/reUx8zLpm1UdEY2a8+JNI6RTRO/NlbmuV8KMxLrwBpEwIcUNPqjH64rf0TDb1bLpaRk5sHXjRPWeEsZDUR7aq38tSdIwRuClcB0tWP9ppr7PmiY6S6ZqHvESY+SfiiyxIHaoTvh4GkTh1918MgJ7lxyzv35QKj1FF3SILWhcuHUJVvtqHso2f91HJwLNZ/tZj9d6mTPC/0+zaHpwKmFms15uR9OOjvg12X7xgA9G2RGVtZHmH2A9Ri9ZJubEiL9LDHJlerpNaZPHWDUVsb7QaEc/KDiyumCwEd0tyElA==","layer_level":2},{"id":"fd12d405-81b3-44d7-88d2-e20ed3741a88","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Postprocessing Testing","description":"postprocessing-testing","prompt":"Develop detailed content for Postprocessing Testing focused on validating TyxonQ's result processing pipeline with counts-first semantics. Explain test methodologies for metrics computation, classical shadows, and error mitigation techniques including readout correction and noise adapters. Document verification of quantum expectation value calculation from shot counts using test_postprocessing_metrics_io.py. Cover end-to-end testing of quantum error mitigation (QEM) workflows and classical shadow reconstruction. Include examples demonstrating statistical fidelity assertions and noise model calibration validation. Address common issues such as biased expectation value estimation, shadow tomography convergence failures, and adapter configuration mismatches. Provide guidelines for testing custom postprocessing methods and debugging statistical anomalies in measurement results.","parent_id":"cc8cafdc-4381-436f-8dff-751098968a48","order":4,"progress_status":"completed","dependent_files":"tests_core_module/test_postprocessing_metrics_io.py,tests_core_module/test_postprocessing_metrics_extras.py,tests_core_module/test_postprocessing_io_extras.py,tests_core_module/test_postprocessing_noise_adapters.py,tests_core_module/test_postprocessing_qem.py,tests_core_module/test_postprocessing_readout_adapter.py,tests_core_module/test_postprocessing_shadows.py","gmt_create":"2025-10-10T21:26:16.550717+08:00","gmt_modified":"2025-10-10T23:07:02.432896+08:00","raw_data":"WikiEncrypted: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","layer_level":2},{"id":"b8e3be98-a93b-41ff-9abc-d0f1c23ffea8","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Gradient Processing Stage","description":"gradients-stage","prompt":"Develop detailed content for the Gradient Processing stage in TyxonQ's compiler. Explain how parameter_shift_pass.py implements analytic gradient computation via the parameter-shift rule, and how qng.py computes Quantum Natural Gradients using metric tensor estimation. Document the transformation of variational circuits into gradient evaluation circuits and the handling of parameter dependencies. Include examples showing gradient computation for VQE and QAOA circuits, and comparison between finite-difference, parameter-shift, and QNG methods. Explain integration with PyTorch and JAX backpropagation systems and how gradients are preserved through compilation. Address common issues such as vanishing gradients in deep circuits or singular metric tensors in QNG, and provide best practices for choosing gradient methods based on circuit depth and parameter count.","parent_id":"e948006c-6a9e-4afa-a0bf-dff490882d5e","order":4,"progress_status":"completed","dependent_files":"src/tyxonq/compiler/stages/gradients/parameter_shift_pass.py,src/tyxonq/compiler/stages/gradients/qng.py","gmt_create":"2025-10-10T21:27:51.841096+08:00","gmt_modified":"2025-10-10T23:29:50.190938+08:00","raw_data":"WikiEncrypted:ml8BaAj0jaHV+MfVjTTSgh8gJqCs4NRGzgFHVj9nJP3GeZ3fdjkRvPkPzVhq+35lDgqwaj56E4UpuKeQevOc1tNF5z65Hfbepi2ONU9QP4gGFrs7GF6nq2csaiRWKfV5D0hYV0JtXzgyTDFoDs3k4hbcTIgAiIjQTVPa2OMPPH08X7CuysRpiPpUq2v1JqhFqRPQdnI8t7iMBEV87IoYW5FUwf8ho5ObsAURAab0WPGQdw880yZcpheavjg/UFrttIMyCUTfNYHax6L5nU9G8TKbn2HOT5CHHP1cEmEa7elrVLNbsKODbymNCzyc+l+F/dtLoGsVk6DtcS4ZkeN0f0Ge79IXgV/YsI8c819XyepbIJ/gkhAlo70XKjURho+VdcffTztWz2onIc1wLq15imBGvPXuWPN5PfD14etwrSurX3xb5IWT3F5uM3OxOHkJqXg4m8w7E5i5HvIm9ttevV5UA6Q2/skJTJ+fPgvHfYr7L+XbU9IrFmNiMTZ5/fPUjq8su1e9i7oeIg22U6FE9/IPRN3//E+NkBtmVgbtvYpcuNGiF2dIvOZ11VdLs8M0e0O8ISRj65MV8U2lmTFkPJdOCf/d+xS04G1y0Qoh+PKn5TfWwGQK6EuoqLR+yzHVA3jeKr9cxrLFIXBj+jvxBPbtaMd+MxPJmSqtM5Z2cM1Ef9jJM7ysJjWhFFOyjJMIp49NJDGxZRYytUkYpG1mFML+q4KrTznLreUpI3GQjfXviEnKMgYRa/0+0+tsteEFgvSVjRwlsFk4QrHNdJKv8z9w3C3rZTCRDRB2S8vqjN3nvgJa3W+p/0yW8WOSN4CtaRBXrmkkKn7wZiiuahmjuHaQPhIw3iibTC76NbnV4FNgwtOA2uJVweC3qsgurYQ6uDoyPgU//oiFQwDcCAnwQzl5av/IrKYPsq/Bap8wjMYBjwf3v+sEdRDdlRX2vNJ7B3Tzxxst/o1tzYLtw706qey/pZW9Kj3/cvm2dt3frJBHtNtuCmpWTUvWCUXGf0M0IPrWG4zYOY2BRBwkNmO+dmRKIBTQlO/tcJTeJiqLIpgYTHzIx/+Nya+26I77bJNu8mYt8WStSWb0PtOyMFBeRQ0UYSDjOPtzVu0UfxHyNaMOFvjxwiVGZz8Ocg67k241FmV1JiO0qCKDM1I4aUccpl2bdlea0lxQlSjJE+ONvf+qVj4dJcjyY1e2LGnVttzTW0QvmV4STWmMGnV+qXY1qe3x4bwp5Rqzq0wBIVH079e0Jm68oMxcOEUjzKmm52t5Wut33Kz12CtWerEwkVVBHbG7wdbGsN92r2Yj+XIS/2qeoyER1gO/8e/YZnj2fh23Hdk7vMcOiqd0thTaVnuN5EZDew4Ldl4ZelaOFKPeCsTSzNCgfnuyfU/4pRm5peumBKykJVRKHt7x9z8jIKym+XCRQ6A3aFUDj0+SK5Hi2f923vshUQB7zY7Y5J/VKYfvhzpLclreB8x2i0dPOr8avYXE+EaZz0zbCmiixcZMRg/g+Ga7EVm5unHWX0hP/NidSjLPsLqaTfUeS/x14BvROPWEQvUHLUV8IIwQloWolszISxdbGWs5i/dGam/PHuFE/w2XdTVQC6AXdVoaApW3y2eSC5dmJ+15C+3fBKZDNi0=","layer_level":3},{"id":"257c9ab1-368f-4c86-a241-63baba469a92","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Runtime Implementations","description":"applications-api-runtimes","prompt":"Create API documentation for the runtime implementations in TyxonQ's quantum chemistry applications. Document the device runtime classes (UCCDeviceRuntime and HEADeviceRuntime) for executing quantum chemistry algorithms on quantum devices or simulators using shot-based evaluation. Explain the energy and energy_and_grad methods that implement parameter-shift gradient computation through batched circuit execution. Detail the Hamiltonian grouping and measurement prefix caching mechanisms for efficient evaluation. Cover the numeric runtime classes (UCCNumericRuntime and HEANumericRuntime) for exact numerical evaluation using statevector simulations. Describe the unified interface between device and numeric runtimes and their integration with the core framework's device abstraction and postprocessing layers. Provide examples showing runtime configuration with different providers, devices, and shot settings. Address performance considerations and use cases for each runtime type.","parent_id":"61df0675-6efe-434e-8be6-66c5bb88ae9c","order":4,"progress_status":"completed","dependent_files":"src/tyxonq/applications/chem/runtimes/hea_device_runtime.py,src/tyxonq/applications/chem/runtimes/ucc_device_runtime.py,src/tyxonq/applications/chem/runtimes/hea_numeric_runtime.py,src/tyxonq/applications/chem/runtimes/ucc_numeric_runtime.py","gmt_create":"2025-10-10T21:27:57.614762+08:00","gmt_modified":"2025-10-10T23:06:55.016359+08:00","raw_data":"WikiEncrypted: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","layer_level":2},{"id":"c3884954-1dbe-4411-b9ed-e9c63e9bc7f3","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Circuit Simplification","description":"compiler-api-stages-simplify","prompt":"Develop detailed content for the circuit simplification stage in TyxonQ's compiler, focusing on the lightcone.py implementation. Explain how lightcone optimization identifies and removes operations that do not affect measured qubits, significantly reducing circuit size. Document the algorithm for backward traversal from measurement points, qubit influence tracking, and gate pruning logic. Provide examples demonstrating simplification on large circuits with local observables. Discuss performance gains, limitations (e.g., global measurements), and interaction with other optimization passes. Address configuration options and common issues like incorrect dependency analysis.","parent_id":"8508fff5-2f92-4c35-ac55-80934ab85c63","order":4,"progress_status":"completed","dependent_files":"src/tyxonq/compiler/stages/simplify/lightcone.py","gmt_create":"2025-10-10T21:28:31.942647+08:00","gmt_modified":"2025-10-10T23:30:20.410223+08:00","raw_data":"WikiEncrypted:r1dbw1ciiG74lYTjPig5U8SFjVxia4bewtqfL170OOxMXGPFvQp/0ihkLKvpVIlwbQoNPhPt9H/Gfq2fbj9INb3ugvhkB8xMoi+KIyqRohTTCFDgiTbw7M4i37GQf8JpKFoV4TFvIWLTXTalRQxUI+E4LI9VHLxQyrXMquPDIbh+CW4nQTb9ZSO1m5e/ogIk1D1ieQs5mVN68aNxBIqXf521MnlXcFe9BbUT+mJf9R9f5ydRjMM+TwJ6JWu1CILDP+2TDdKHkcXB5RHrvkmp1YGpEHrMJwGnjoRVlVZy3xMq5Qcv+jdaeaxWN2CzLK1AveCaJa0O9nHoAX6pOaZKy2gNcYstlNmC6iH1WCy08jdo7LcQpdxnmw3jnHzbCso+v0m/qsGya0JBNRZkbL4sqIaPzmcrPhgg+CzWs9nDpbMUBtdnHgoJiFUk47a+hFiwQ1L9UHx2f1Jm2X60p2ZcaMHADnW9DY03j6T+aCCj2Fy+05ShPx44nustkwc317ZsESw7hpPSP1MmGc2AKpNGrnG8KgdDkkIBLWB8luq40xgXYrQnXGbRIfTul3fceYLfQur5n5vLSdS6g61PdkXSftrjALnP2YzdlVojQrxePYU25YEO6pYEYYt0PJeRVDot7VOj2xn511kxZFU9vMC+OLOn3C9ajA+2YH0/SRjnxd4DYbIqob+737r/N3ktBAO6L/WNVlNr7Vqr4qzUfkzyx9hRnK3Du55tNbl+jlqzN9cZRr4xL+E1HNfNNs2YnF/taXxBUdD99vgDbNvMMjFjREOntwP3oHX7wFU9l5oniPvL94Kfa6fejd8NLeMklhvNBVYdu1udY+pzxPJOhgJsPI8AAJlQlVJn40wYkKit8GKqD7xdvCZ5ybdvnTcOW6kqvUIhGUSpdETAapEirhZq3n0E/AVG1Sd3ubsAd/uBTpodYMw2FNx0lz0n4OZ/eplyV5UJdwsexK89qcjWKkxBPEqfVnkkvAlyxg1SX3D3h5idl1FqfuZT/xmURx+mo+U8fO54wXA5Z5keakAAFJq2CuArACyJpPbj8gJrYZwUAbtWBdeYn9w9eZEYr9CoXBFdGuSABDDWhK6M+nbf0Op6Fzu8217Vr9CL+WQFgS1p1iipcqiK35352CenZLxNSS08aV92faj3vTF/P+Tw05jKoMvAZI1XG69CR3WNsK5+Sb6Qe7OlQO/3BNon3gt4+5NDiz/9k00JZ3FJHQdV7gRgiBWPbucsFGEDb7vpfo1PqLOm701KWJNl/U8b9EcO+om/kwbb96KYUUOfrlmWQ0jNeQ==","layer_level":3},{"id":"57bbcdd8-af3f-4ea0-b537-9104727b3fa5","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Gray and Binary Encoding","description":"hamiltonian-encoding-gray-binary","prompt":"Create documentation for the Gray and binary encoding utilities in TyxonQ. Explain the get_gray_codes function that generates n-bit Gray codes using recursive reflection, and the get_binary_codes function that produces standard binary representations. Detail the get_encoding function that selects appropriate encoding schemes (unary, binary, gray) for bosonic degrees of freedom based on the specified boson_encoding parameter. Describe how these encodings are used in bosonic operator transformations to map multi-level systems to qubit registers. Provide examples of how Gray encoding minimizes bit-flip transitions and how binary encoding optimizes qubit usage. Explain the application of these encodings in quantum simulations of vibrational modes and other bosonic systems.","parent_id":"5cbeda6b-e47e-49ae-925c-755196501fc0","order":4,"progress_status":"completed","dependent_files":"src/tyxonq/libs/hamiltonian_encoding/gray_binary_encoding.py","gmt_create":"2025-10-10T21:29:39.423428+08:00","gmt_modified":"2025-10-10T23:51:03.998337+08:00","raw_data":"WikiEncrypted:5f2I+3eR0GPEzObW9eh9RkAacpv3xDlCc4k4VcWe9zrvFX/VruIDeaNzjXjOgfdLeVKdg1DBjWNDSSp6pavicc0Yxw2I8IS9NIJTw/Prp1AHLGz450IBKnoiew7NcAyLXW5NLxEYfJgxLYTuBucgyKMjVfzDXhZfKDcJvLeGnnxYwNtzXyqe6dJP89KW1ddWejBH4ZervaZ0r8DKIa55WgN37GwPgSnVToWPLZ/4BSDBCUeR89oTYcG5/2uF31mOnGHgVUkT9gpLv6Hf+pN9AzmByyvF6lPYCcb5lOA1t3dtTG3ChC868Dmxt8T12aBRGEJEhvgDNxgVElVKc66vuIWf1qGGMa58mPSn2dqdBpP45EaultPB1vDBvN/VLLOQMZNpGr2ejTRBx5a/jFZ+oZ6yfpszF63deFizNAdedhHw9TX3Wf0ktPd+uD72T/yQltJrOob2HVIv+aziJm8swb3q/IBH3QToFBjpYDBdcTgGoNl3jR7B9vzfgf4zy19Fi24PM4vivHTQUs5uhi+mEvMUrIaJ3w7vHHrHwE63v4+xyXj316EUr6J9O4HH9gkPoVg/72L6vYPM/MVkb9URsxW33LjaFjaARUR1CViJjIh9q1c+O/sBtMCPjU8/efRSuByKalJUSe7NyYWVy7kioft/OXTPnZEP/J56lua2EErV4mR9zhN9yK1PqmvZWtosrnWzBhZ/RtPcLBWqfjyNdjwBZfM859RCEnQ/tlREweYhJb3wfagiwy+9CpnrtFyy3Tzohn4YV/gCeAMbIa+URTQkRvzm6tFqBgoMexqBd5jFKmBSFsfvcyK7tg9UrUokdoZXVjwdcTn73PEczczrcrw/vVBn6nw0toO4PS0a4kAJhez3S5XjVEQ6bM3iPL3qwG4/hro9WvGvRQUbz6QJ692koVUXXqcbB/LtGF3osVMPqzj0lteG9/+1PAcsZPAZAfRZdDFw33xwRx1YjDqiB6AnQxZsixmumw7nxH66P4Ab8KsztgWNkWxyc+1IQXKkypzlVQD8q+gTjQwNtq++seeJqWCB1c3MsXRTmK+YPuLCUkVxKkdZLGLeVjMZh43y49RNyZ7xJGtaQmc72U49WVW0Ek8qKBE7EXP+H4cun0UUAqKFOwIWaSsXUb2t7febYcnsmJCThgQPaM8dBNvG0K9wsAHAsDVzXw+EspSTNR+TYFx1JqGG50fgfFX7ssu+0cWsh3/mC7Oz//ccM2VcHMI5AQE6JKka8YqV3ZqExlh95QeVbpzM0CxKn1fv6wxmQ+M7BajYyaw1dJp1Dkr7Fxftxm2qjvi3WKU8YQMigQ43dXKOI9rY/BbY24JNS+p8Z9UmZ8VINLJVcEuD8r4DbhMAl6p/TNA1SuemUFpEt86oxGVhGLhGb7MiY5WQoppeuqVCuGYP4MgzgFp5bapd9AWw9Ng6VaI+e4BktfM4J8QHJrWRyUDi0VMo2l0mMmTd1H1umRWiPvlWaf2WMN+dnsnZrBsndqtGOzD4H5lmLDdtJi6Ennt86FsvH5lG9BteERv6K0RcirNPXrPpb077rcFV+NUCbBNZBFrnmFAFHiBLRpWyViELCt37zSO9JqjSFecicbGbliPpNK2Dmqg37g==","layer_level":3},{"id":"0ad77409-07d3-46ad-adbf-fdaa7d2d67de","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Variational Circuits","description":"api-reference-circuits-library-variational","prompt":"Develop detailed API documentation for general variational circuit templates. Document the `build_layered_pauli_circuit` function for constructing parameterized circuits from grouped Pauli operator lists, including `compile_evolution` mode for direct gate decomposition versus exp1 gate usage. Explain the `AnsatzOp` type definition and layered parameter scheduling via `param_ids`. Cover the `build_ansatz_state_fn` utility for creating JIT-compiled state preparation functions and `get_jacobian_func` for finite-difference Jacobian computation. Detail the `VariationalRuntime` class for variational quantum dynamics with properties `params`, `t`, `state_list`, and methods `theta_dot`, `step_vqd`, and `step_pvqd` for time evolution. Explain the `regularized_inversion` and `parameter_time_derivative` functions for solving the normal equation. Provide usage examples from variational_dynamics.py showing quantum dynamics simulation, and address numerical stability considerations for Jacobian computation and time step selection. Include error handling for matrix inversion failures and parameter validation.","parent_id":"d5c1aef1-5986-4ca2-bba8-ba24a030df89","order":4,"progress_status":"completed","dependent_files":"src/tyxonq/libs/circuits_library/variational.py,examples/variational_dynamics.py,examples/variational_dynamics_circuit.py","gmt_create":"2025-10-10T21:29:43.362281+08:00","gmt_modified":"2025-10-10T23:51:50.148247+08:00","raw_data":"WikiEncrypted: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","layer_level":3},{"id":"f39896e9-a1ff-4d39-b26f-ae04ea64c7e4","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Pauli Operator Kernels","description":"api-reference-quantum-library-kernels-pauli","prompt":"Develop detailed API documentation for the Pauli operator kernel module in TyxonQ. Document functions for Pauli word manipulation, commutator calculations, Hamiltonian decomposition, and expectation value estimation. Explain integration with Hamiltonian encoding in src/tyxonq/libs/hamiltonian_encoding/ and measurement grouping in the compiler pipeline. Include function signatures, binary symplectic representation, and support for sparse Pauli sums. Provide examples from examples/hamiltonian_building.py and examples/vqe_extra.py to illustrate Pauli-based observable measurement. Address performance considerations for large Pauli sets and backend-optimized tensor contractions.","parent_id":"c4c05f68-9315-4d95-b71f-26fb64ba1b27","order":4,"progress_status":"completed","dependent_files":"src/tyxonq/libs/quantum_library/kernels/pauli.py","gmt_create":"2025-10-10T21:30:43.575171+08:00","gmt_modified":"2025-10-10T23:47:44.547855+08:00","raw_data":"WikiEncrypted:C34GewOyK1SlumqKiPsSgygb6tZbr39HfU/NYGshj5UiAYC6shHCS97r3LRvFmIqQeaP/dI+BLrl3CPOvAbJVAcOW0dnWWaY2Ode4EQJ0dvpNuOGv+FAZYfUT3LWprzrukfRdT3k3Ap0q1DqsXV/H4diArZz942gm9d19HHb1HJAPiWL6z3PuEJ01HGGV+gs8SCtT5+722Kr223nqS+Sw1Qb5Zp2NX4Fc6MfvMPmb2sPa2O3/0KrrfWXmflnE8K8g48AwC/9d2DYBchHlzWOFJmqm8lZUpY/C9d+/bxqjz0+szMx9qptDJEBC7XrKsW8Se2/Poc9eFxNsqxODLq906T6NBaKXgLVEtMMHLsIh2iK/sIYRQuLnSf7TKsWAQcQzcwW2+x+suY7/k03lAtHiZhZZY/ORw8Qp8/S1tJVx68COcbW6gBZDAbShRTTreKn3jfm1bnR+aFu9nWegRt82Nzd13c8V6kbNBT/SzqK8BufKdfpTC/dIWlZXjmcxgL1fEnl/O39ow65ndScHv4AKMqvCp6bVUjcegdENLO7mXz7U1Z7I4wrNwpwkK/svajpD/qmLg9cO93DOhS740OBvDq2xeSp6vRpOFibTQP/lvdTHd+jU5go2brezJtRUqS+mF04i5yjc9RR4KHgfowlxjLnx2G5TdwHtPHVlRifYU7blaN3wwJl7zetBJjX0AYeBO2g//P5ptC8E9H0UKURLKc/1yDlQFzyUy14ChHm8D5LfZv7c2QgEJ/5WXu92rIqk/TbFhHS+2z6xjNYrEuravvw0DQvy09DNtJyuFXx0hDtBWuy5zj7Tp3SLz38E4XIcm+yKo4/mTKeqW19sySTX0H5N5l2XHd9s5yjopkSFFc0Gc1Uh3NiKvZTbYjLzspVZK9W9BOrUEo/aYnhexTQVxMLNdRSkIPpkS1Df43a7cvZolUjlPvw5Ic05Tszb1YlVhYmi0NyKdm7uzslGsNnZId5aQl1WCms+CZ7zwG3YaAoDpsOUZ59x0prwCbjjC3C03d34vhURTWy+IptZqytLPzS1UWBN4DkoZFgzvgEGXXH0zNzV1H7Z/e5fCrXZdzb29uU8blfVod0zJjxC1AuA6XT/bT/0lY3c+egRjvvzRxXo7EO2+FPSNEiTtdMGLMJMbAYkAKRHmvIKHm/YRWFKRY+qgN54RnubBfzV+189u7viKJCPbq4RJ05PCrN2P5FkbixVhz/yqHy2OO90py/iMgQKAdLAMY09//jTyFvlWl3KiNteeqUfodFFtANzcg74uEKQy+LHJWAEvv0X95K8w==","layer_level":4},{"id":"653a4c79-b781-44a0-919d-4ab57987530e","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Device Abstraction","description":"device-abstraction","prompt":"Develop detailed content for the Device Abstraction layer focused on unified execution interface. Explain the base Device and Session classes that provide consistent API across simulators and hardware. Document simulator types: Statevector (full state simulation), Matrix Product State (MPS for large systems), and Density Matrix (noisy simulations). Describe hardware integration through TyxonQ and IBM drivers using cloud API. Include configuration options from devices/config.py and session management patterns. Provide examples from devices.rst showing device selection and execution parameters. Address performance characteristics, memory requirements, and accuracy trade-offs between different simulator backends. Discuss error handling and device-specific constraints.","order":5,"progress_status":"completed","dependent_files":"docs-ng/source/next/user/devices.rst,src/tyxonq/devices/driver.py,src/tyxonq/devices/session.py,src/tyxonq/devices/simulators/driver.py,src/tyxonq/devices/simulators/statevector/engine.py,src/tyxonq/devices/simulators/matrix_product_state/engine.py,src/tyxonq/devices/simulators/density_matrix/engine.py,src/tyxonq/devices/hardware/tyxonq/driver.py,src/tyxonq/devices/hardware/ibm/driver.py","gmt_create":"2025-10-10T21:21:34.90219+08:00","gmt_modified":"2025-10-10T21:49:17.018127+08:00","raw_data":"WikiEncrypted:W4RZ6LTz4rg+RteR0TdbvEcB6TVFiY5CusHBjBx+MoP/4PrRBbBpfbG5ibBnQMTA+JVuq+hDvvtRriJeo8xOG+PPK8ACln5MMfFJm5VTy9s5E2tHvp+3HyPTQtHaNULGfGYM29eAPE6a9rFFPN6r4dVjczQte7j9SmbIbEBH8DwWMvgbwwgm+i9he6X/Ri1HOUq6qqlWOHcXjLXw4xmCrqGUndLFNAoT4+wSWed/N54C7PQWCy2nUzR9s5rxWKSpcmnvPOW9AOu5nAKNINeHlVZmlH9C3YajyJvH5bnf/yYnsCEZniXwOtKtl7ugW7m/oKg1rAKDCUtdF3p2gYqkEagTRQu+4y9ANj35C2+FsypsOu6BGa7T5IP1mAFUl063rg9PLb4QVt5cpeyaqh8eIrGg8ePqawS2h7ZBaLgJSV1Qd0ATigaheSeFGM0mKxSO8M+SpMyMus8hJRy3FDgxMD7dwimLfGUVFVYXAMWoGlLC3zBFh/X9QN9P0+zk6ssRSSI0sz8iuWZYn4QXmnIWiI29q2Oa83n65L4K4QqIgdmo0Ty0Li7MUCNsur6c2X+fCwssuquvxMuRUEHMaAieyxFwYwzzFLsfZFG+uPEZ+he/rqAs5Oy+NVfUOlYFkanXz1fTRRUu9VtKZiibhG9i9fSoNrSWhDihsuyY5s4OWr+4QsnsAcSLN2W/A6LF6HLaksE8sVDUk8CVJimDURCIbIjYWp5qT1TkhxEPAs49l2yYxeSMfPU49MwmJ3C1PCK8WztyIzIGBtwZvzNDIcoKhqk/9xDlb70jq1eYzJ0w0ZceET+BqoyfgPBu4P+fhud1SOwAACg9J8XiSK55ecLvajDJfHKouI3kGcXaw9yC5xyzRMqJxvOHChdh2Zl2YyXiUTxM/OqDIobudzO0N9QELV5/7X20Q8AMKqcThWqMM0IhVOUiJ/r6DUHm5i56wEnOHg98aSIesM0lx+KjpZBsL5ecG4PfyKxAihZvW1I3g2sL6dFpL1dFyM0mFCxfKeCk1Mycvgbs3M4vsO+0WJcfeIi2dTHubdLW4UpdxBhr7L9U9IGeI5iJq9nrg3nat3I8/1WzmS15NUoy9pM9ixQB03hCWkVEG0jCCGxZfZeuSYxB4FngKVw6V5LGHmtoG5nr1vhiaqufByT0MQPDnSK3LodauGuPeDgJrzEm61nbnTZPVT8OWDKtXxKcG98epJ3Zqk0DflqYRfciY3LTz5Vc+6N4gd59TGQj2gNTmolivHJ5utedzQewO2A531I/S4gMx0fu+EwSSl75rHsYUxPGhR6KcZmYELUD68JhcDiPG778j5WsFIl6BSUclBe4wwhGIKZz8g8FsZk/dz0e2rjhknXkWyz+/g7Bo7rviRhEsRw+36C/QzaBCZHz/nT9318qDc3GrGaTGyZ0/GoKBnbzlq9s0Fwn3dUZf5C/zeHeMjSY36A5/uYDzJPvwTRggqhJUn9rSlFdKctyqhRa7EDdiBrCaEic8aZyaSNCiJrbGdQDOG1QrDKVm4YMa2nxqQgrjgZvLSKmtSxKBC09DBoA8upGTXO/mhWtjgC14KEWJe781WcLEeIikRycHVkQleNTKjvMRvn0cWaDYvSzF08qm7PEowZ3yJ2kwk3kMABvwc5kSAqWS6Xn26NIdcVfw+9HUtnbsuYZ2Od0IATyKrB5cSv+ybSarXPPrOXzjHDYHcLkJUhoLj6DTNGfUoepV50EGSdp283diLAi4/eyRgz42LjjdyDyA9R/oqQwou+cUeDQwoejojF7SRsnPxab7OpVz+IdPGqdr8b3UZ3tExU0+J56oQrMQHBMT9QriFmHbogJVdK1fO31ov3jUbJOrsexcVa0DzNVighkQJN3ODLYtX8O2tWsJ9J2GYgcdYW4rLa8aWt+EagxVy6wWr1SBWvl739IUsB2PE28k3w5AsPy+2QcMUEDRQ4PNfMC9Vez4H4="},{"id":"0338adc6-5527-47df-989a-a79660d3a14e","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Backend Compilers","description":"compiler-backends","prompt":"Develop detailed content for the Backend Compilers component of the Compiler Pipeline. Compare and contrast the NativeCompiler and QiskitCompiler implementations, documenting their respective strengths and use cases. Explain how NativeCompiler provides a lightweight, dependency-free compilation path with built-in optimization passes, while QiskitCompiler enables integration with IBM Quantum hardware through Qiskit's transpilation framework. Detail the code in native_compiler.py showing the default pipeline construction and output format handling, and in qiskit_compiler.py showing the Qiskit interoperability layer. Provide examples of when to use each backend and troubleshooting guidance for common interoperability issues.","parent_id":"e3263062-6a60-4591-8e69-dfabdcc9cf5e","order":5,"progress_status":"completed","dependent_files":"src/tyxonq/compiler/compile_engine/native/native_compiler.py,src/tyxonq/compiler/compile_engine/qiskit/qiskit_compiler.py,docs-ng/source/next/user/compiler.rst","gmt_create":"2025-10-10T21:22:12.671163+08:00","gmt_modified":"2025-10-10T22:18:53.280858+08:00","raw_data":"WikiEncrypted:r1dbw1ciiG74lYTjPig5U0GKxq7sq8TcPT31bCSuMisI5LIMFxAwseKTabmA3U6UePH6Mah6GYdS9APAvYaFujekVjHBvhDByTr6kCH4r4jMq1dxCV3yhckF7nn+7RP8iDsGvpdK59KyUgtx7pxrXxI7x26L8ssDXcWx5MzufoGwQwJ4F9L/E+IZRP5pSA3NtlW083SsF8qaDOopvz6hRFpt21Nxng6Qe0k9RVwvmI1o23wEQHKqzLmrMk4/pITxvlFZUuGb3eAXuP86P2kt0COd4cRzRWv4i9e3XUw21yjmZiEo1UoavV7mzVaqaQ4w/B605GLANbCYPaFd4OwmNd56i6KfVgabtYd28ax5JxJeFQtDa5oiSno3YqOHOeLATSOxnPYGrhAhq5IZ/7xsQ784hGUeYKevY9uZ2aJdSESE6yutcMLm5MzznVfb9EHSyoUVXtrTsLVWOL/t1wE3iV5fWoXgiWLaNsJp9F/kFIsIZw4Zcgvbh7FzWaOOZ3B+Iqt58GKQlX2RvVVI2dw7v+QDvDVITxrIM7sIWf4jlg2oywdh1GtwW1l6imLLeZRibnfHBQPlpp0qzKKpHnk4fg3PN+Vf6dUdNTSah7lj4Ie5U091aLDJyLDQhcUH3RjnJ8QTX5CDc84LO5zl1xuUS8YYp2CzmeyNfcu7u1j/27wTE1Hwiy4123LhmmVG8BYn1C46zA52mnOUdjv+Uym54FmsEQgQpewl6SOtyKA6SadAep6ZgZb6F7x2+XMaVyJ8/4uAy+sU5gHGv1N1YxlGTpyW2r8R+5iZzQvUTDTiIPdOABW2/KF/bbkrZahe8EJ07i3Vj6+kCijpotM5ixQZeD8JCYLcOSDRYdggwc+PwEexVMxVKXwZQyeC5P/h9EQrKzE1DXdA3r1Ty4rnsLt0/eA6Qd63TTAqiwv8+L3+ooR1mH5ZRtSumAXM3VfcBbqabv397puXxHeUgPE+xCf6zbrMZtREfmTkP8JEGRxYwB+QSnWw1laLVE6CKBcVHos41cbRzCenFxsXyIuBESt5h6o8FX8Wj5XvmTv/qaU1/tmzIghfHueuqJhLubPpEarB52/c+dFB8exnjPGviJj1tC1fkmvdmc8MphakrI2DKEhjBoexbhpxa4uT10Kf0XdRD0gmbbSJVo8GxR2uN1/AtYPTb+f/1DCe9+2K6Bz2Mt2Jj5k+etCh8wQrf6gyzKphgS2/dTvtxqeoWzYRaBFhkO2r9KR8aA9jx3sj5Uv3xinKC+UqzGaU6DUnq4+fTbxd9cf8f8vDMAz4OBhzMKeHJqBoLABcR0IXd2MH1FfCiKv1lumQABTCd0RH0AVhJobSeNRm9Rua5gQIK+FyKRYI8jBaBHlTmtqSXuqPe3wpF71UjjvcrGnYg/fo2jbRbcBPFtRdIFwH3D2wiqnVmk4nGeeQPO78B6BUowMsQ9O6/BtrQ9EehZpeAKkYZz4EljsyYuFdZ3Mqe7OiVEt8JaRqLBS8/VgzDBCEH1IesWWCijqhMTcDfjXzP7aY2IflOD1V","layer_level":1},{"id":"5d091cd5-87db-40a8-b6f3-190eacdf7e76","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Differentiation and Gradient Examples","description":"differentiation-examples","prompt":"Develop detailed content for Differentiation and Gradient Examples covering various gradient computation methods in quantum circuits. Compare autograd-based differentiation with counts-based estimation in autograd_vs_counts.py, implement parameter shift rules in parameter_shift.py, and calculate Jacobians in jacobian_cal.py. Include sampling-based gradient evaluation in sample_value_gradient.py and vectorized operations using vmap in matprod_vmap.py and vmap_randomness.py. Explain the mathematical foundations of each method, their accuracy trade-offs, and computational complexity. Provide guidance on selecting appropriate differentiation strategies based on backend capabilities and algorithm requirements. Address numerical stability issues and performance optimization techniques for gradient-based quantum algorithms.","parent_id":"be2b789c-6423-4d7d-89dc-b724ac123462","order":5,"progress_status":"completed","dependent_files":"examples/autograd_vs_counts.py,examples/parameter_shift.py,examples/jacobian_cal.py,examples/sample_value_gradient.py,examples-ng/matprod_vmap.py,examples-ng/vmap_randomness.py","gmt_create":"2025-10-10T21:23:23.924162+08:00","gmt_modified":"2025-10-10T22:20:01.124617+08:00","raw_data":"WikiEncrypted:A/y0V7FBEV0r9BGwCtqbOMKqhQfbNiTRFwtv6hTfrPhwQcpCO93fCGFkR5BKlnLgnYn34wTgeZFfqN3LlQk07JjbYYIHlCOKDrY66E9YgwuiducRdETpG7Mf8Gu7yll3zUIxmxR+qDk9/rJeBNH3oTQe5GZf0FINbZy2+udPuOlhfvwYf8nxfo4b/9n5n/v4W0khz2ygtvJW7y5PDREVH+9TPm9EVgZZl7QxKwoBsDsYHWvYRMHcjB62gYdrdZasKqKghk3+gMiKvF/l8xGWKYUe9bf2vTD/M8AdQSGkJ6Gn2haukAbKvnSwQba121GH8yYk6V93WrYzlzcs0F3oKGvLO5EjoRIeqD5xuH9urtMBG2u/aYSMbLMmt4+tb0bpLwXM9GG6w8p5fs5FO/CjkvltuyCbNxf1Z1x3uilqbCpw78mX7nk0BPNFJrEYbkZtcvox8rXikjWd6oG7gevRn/CJOp/VSEzMfv0BP0fWOpWnk6dl+U9r1Hkx/nSdwfWzuAy0+z3dlrM8sJ8bijI4KIUx+WbADJEKur+JxWw68Zo4PpcAKj5TeP1r9xXd1qkW6ydIfUjV+lyipT0xv+B4X4xvj0S7TVfqCU6ZInI7l+z+EwHJS29iY5rvKBjUgF+ulr1Mym0wBLqTnImo24NOQ6JxLgdj6zGje0DnqtiK3ag0vRooHsL1jfEtK29qkznlhtlq284VAffhsDxBI98/fU1WcKDJEAd2PO3jnXZgTVcbzROKpIBnFdq6QdcKlf46mGI0H2IO7wQfeavl3X9/NyQUxgi35UgZkFawBht8t+u2kktryH3m9kGPQfvBHuB2XSJlLpg2Q/3K5zdBPjXutWCTnxCngb3FJ27cl4k/azc8XfcBDFl7e+acBkg3I6y4QiKE5Re15sF4+5WtyoCqlNh9P+SkZ95IDcZWp5OT39mi0467KjES5L7qMEF8g0Gu1CDp4r6ajnYO3GP2agEfvc+TIxi6eNs1qmbzFld1L/HZCRrOhG2wt40l+gj8zfuwDVmevIkvf+1ocqIbdotH3MlS/ZUBwdIZZMo2sYRUTe+EQzTu27CKH23b1CHCbtn9PzWKRbcaIHzHGnHXy1+cR+ffYjjGTOp2hCZ+FsdcSEUIkVABK50O9Nglh1azOSce0JO0AgppXjAQbOHC4XMEVGQDQqR4XSlzpj0rD3hjHMIffTZTZXqjd3X4PGZl3Q5KdgzX2Pi5uR/r8I1Zsg3fwDY92k6vDBnigMchl2xz+jsDmqtn420T8KDSLOkAbmkMjRnDQBe2XmWd2vhkRjz4us+Bn3eYKaLZ+6DMI+NEgxmsvJfTZ43gou6QMgCb3iJiyzmjLo7Smq+vMS2y9+wpG0fdLITtg+Oiq1XsHMfK6Mnz7cfUkE6cvnwBCGNeMyl8mVVckPFrDAACH+evLQf6hUjucizgDmMXUgXLF2lT3CHcPvNhBH+lafM70CT+CsaZm+Tb6XODiUOkQXd3E+gT2QRVdXWPxMmB21R25cupjKKCCB0bhph3PVyCKjfa6ky6o+0tWyAhoewR6zJ4djCByiT7zR3H/JukcZf3QwnzWIMqKhHMhJkJ/F/CfsclpMFJqYuHBtEt4g0cTitWIy6oi1hT2Qivpa6Ecoxb6uDXhSODOKCE0T4qdXMPsdbMxMD8gobTz4hY1AK6jsuTDILYZY1Lxyx1xK8uvosvrjddZYRzm204WSQYJ+p5Zk+jd+GX","layer_level":1},{"id":"597e341d-c253-4c4c-a540-40ddd08797df","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Libraries API","description":"api-reference-libraries","prompt":"Create API documentation for the Libraries module of TyxonQ. Document the circuits_library with its VQE, QAOA/Ising, Trotter, UCC, and variational circuit templates. Detail the quantum_library kernels for statevector, density matrix, matrix product state, and unitary operations. Explain the hamiltonian_encoding module for fermion-to-qubit mapping, Pauli operator handling, and OpenFermion I/O. Document the optimizer module with SOAP optimizer and interoperability features. Provide examples from examples/ demonstrating library usage. Address the integration of these reusable components with the core framework and application layers.","parent_id":"f53ef1ed-0ee1-49f7-a90c-99d15b936574","order":5,"progress_status":"completed","dependent_files":"src/tyxonq/libs/__init__.py,src/tyxonq/libs/circuits_library/__init__.py,src/tyxonq/libs/quantum_library/__init__.py,src/tyxonq/libs/hamiltonian_encoding/__init__.py,src/tyxonq/libs/optimizer/__init__.py","gmt_create":"2025-10-10T21:23:57.627632+08:00","gmt_modified":"2025-10-10T22:20:33.719717+08:00","raw_data":"WikiEncrypted:C34GewOyK1SlumqKiPsSg1YxqeSPBxUCYAYlDPg6wPYA6pciJN93B2vbbmpM1fbNmkXlgrS0tklBWCKQwDdcqVwYuwUo3MHkadUw5HUMN+TqJIxDD9iKvR76JLGnAXEozoKCUuV4k0qpsLN3vzpkItjSG0Yj2n+x0xJSZeHBZcv/szVtWonNFMmyr+PQnM+k40yeVySs+eNrHo0drfCOZaGJOLQ9BMwZQTOy1/r5lpKJP9zNGc9tGRRHKM2g9jZN2cuIA2HbdfTP0WATc2GJ3iwf483C7JZoOfQuIN3JMhMk7wPF/sAywSwSanjhwJnNTsUveumX+w/ocM8ovXHUzyck3InxMp5dIqtsqzyH1aKElPSqWSYZMUNqs2u9Y8XMTMUaXYJzOIczpaj2baCVbLOKST5Vm3wJz6nO3YCflQJ0zTFONFUlZc0uEdhexT3eiKL+Py5u0vn/bXGKIhugUn+OIYo2RYFtRMxBv6RbOzSr3yEayZ1wuduTYCkrlOhEPC3QCpglj0wITLFOXH7WIQDKDSt9TAkai5oXed60aoOC/QWjOG14WjH0zTI5CdovVaFoNbNfxGbbFWCk/jgGNDEMRFdRV+EvVyIoSvGNQioo/CVFSVMtRNuQdbg9TKYbtHdCeN76coVlDWA/mucKFsRjA8ybFx+RGx+T3XSDemTlwkZBIktSczNrW7X7BTZUyuzs4JE/rNf0nXB6+eVSSICTIqc3Dj1YyyiNKXJSX+pLmzq/7Z4eGrt7kPQHFLuvR7B1M58Ox7lHdnLpkS74uh3qcDoQjfgdrKiqbnyw5smGSHmMud/gCCEM3A0LBsx5yNEuvsTVgEY8W1HiuNOcl5b4/+RNrOQzcQcRZddLHHqJf9m/tw15vp6rvbpwfnY+PCEHSsLHTrEZX3YSB/Lc8LViuvIUuNKzIimFT8PiVZrGEuhibV288N7jsyWk5MGjAsazXfGAyWVUpBUIcDhibGk0JMOFlkwS6KxJunw5xtZAT1oebkwtycYQtRNTZ27DXh417uy6UsQDr5PqGpo+IjLMwq6zWlnnFu/e7sI049lpUOb2ZfrxiGhhSIOZ67Njw5GQDtJ+dZpfZba10rsaJn9CbI/a0Sfztd4quuXsjjRERxNA3416GmXloxBzxIQvXU9F80oUBdGPMrvVFyKFw3KJY4l7PSwlSLMg4HJeQHkkZkFPfUIJaig4XWZ6eY/9mhMYPHYkYvLCScn2AvZUstt7Z33IcIfgAbOOZFE7ExkChtE4xFoubl9mMIiXrwalk3RwLf0CpKUZaa323CsDYfpani/uhkSMdhK2NHPzQyVa5crp/o4O48SjuYHRl2PlMfyXXInfxLgOg5b14gxRFpO+Fl6rqE+aw4Z3eQWBguy5/Swi6xIFWPNOBXYsHvnfFiSGTkhx2nHwS7sOVvVSwxaGYHcqVut3HejiSddm28D+rXV5tipHrZHwSQcQfarDSgNgB+RZ3s3Ks12MNs6okGxueofp+9DYz4Z91+T9PwnLHLBUa2erJskkYUxUstsI","layer_level":1},{"id":"04f76030-b2d3-458d-93c7-952c67717212","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Molecule Class","description":"applications-api-molecule","prompt":"Create API documentation for the Molecule class in TyxonQ's quantum chemistry applications. Document the Molecule class initialization with atomic coordinates, basis sets, charge, spin, and unit specifications. Explain the integration with PySCF for Hartree-Fock calculations and molecular orbital computation. Detail the property access methods for retrieving molecular integrals (one-electron and two-electron), core energy, number of electrons, and spin configuration. Describe the active space specification capabilities for reducing computational complexity. Provide examples from the codebase showing molecule creation for common systems like H2 and their use in quantum chemistry algorithms. Explain the relationship between the Molecule class and other components like UCCSD and HEA algorithms. Address configuration options for different classical computational backends and numerical precision settings.","parent_id":"61df0675-6efe-434e-8be6-66c5bb88ae9c","order":5,"progress_status":"completed","dependent_files":"src/tyxonq/applications/chem/molecule.py","gmt_create":"2025-10-10T21:27:57.61525+08:00","gmt_modified":"2025-10-10T23:06:24.556518+08:00","raw_data":"WikiEncrypted:6Fw6zeKwEGma9eKCQx5Pd4aY3vxgnmmLnrL/Q2AUPZ5sZFf/Mjs9wAwj7fHx1eaDePEDBikO3wjOwEBeAhK54FjbLQ7O44P+nVjz1o3pgnLKlHRJVatcwsMcPkBifegYJ2oqIHkbXgFrAk1lU1CaTWcTXEechMe51Q+zWp2pSDa2+k6exL34A69ZbsxrmGWwfY334om5Cwh8NqT42QW9nHkYbaG2c4rwJRX2qkhO4k+6++YodvJ1eYMp9IbvCRolobgrBN2OPxURwvd1G+R6rwF7gDf0WyjYhUxyMveAKc9WDyGzg/wrD2+qR+rR5hFd+5aym22RrFRTEVFEzf22IExnwqIBgnnyRqYhWfBCPvrP6EV84xi71oNsexbQduIii/wqH7ebiJoAhkhUOvS9Ku2rMSKM7AIsC9W4qNLZO/gzYGkhYwR0OdhxG3ad4w8Sq7MUz1axgUf7GsmdQcJLhDbgs4BQAlsholrjqYKJBTzEwib8HuLIN3/EvnyzLgLn6X9sRTvuOpnKuGXYyMY9zUmp3DhLhWAAbriGmPANXTor7R4eGF+H2C1+QXzjS2SQW34uXCw8Ya/NMUc4tU9mlrP1WeIMPNFlSg60PbouAwz/NxJ3buv4q6c5lyKLQyJNiNoHit9+8M9Vew//tUkbNn/FIOp+663FAWZq7q9/msWfDcgREqMQYE0t2Q4GDBh3Xjm6Te9ioJZsGnZwitAW+q4xu+r+Cl+lhr79urTL/DxHG7W04bTTV7Pqz2Nns0aYJAOnsgXdGoqP5tgnp3gy93hy+A6tK18xQKLZ8grbfwy7xZb0Jh2IKs/1hxuB+sBH2rwlSlkBNE1pEajHTd8YMam935QWEejgjvSDMY4ZnncoOPjhkGaUWiZ3BgLSdJlkOA4XwhhTqrJUZqeCbFmlXxgy/hMZL3IFG0mb62DIKYw+RPScDo8anSRF9UOlbcdm8ddj/7wumOi2AcBzwVVtL5EkK9W0Ch/xHJGGfi8wpQKlz48rdtnxvgtywLmPIMtHKjTb5sPk/uANoYba0meuonqq+mD0/wxoygNTuAHHXMokW/Aak1IGwU9BwPmYEYJ1dHi1bDxq5Ps6tMuioMezegfYNSiQerCUM+/RUjqMAiHE4CkC32OU2jHpHc/Rl8EoDOaBURC8Qk2Dga+3+5mehosh3GQ6Okrptz7xJiQ6CjSuwe31fR0hvS/99wk/3eq1x0EDFZyoOzvIAkhT+sgSdVp3Cx15b4kgqS8JZ3hyPvN1ebgR/sk4HVWE6GiUfytz69WCgAOwCoKgudyjyWCp5BYM3+8anFwqvkA2ImegA27SVgkgVkmov/wnrTwc7Zle7lsNYaOg21D2kJuLAKd2mJiUw2XDeq3alKY/bg09XvmdjZyIf+YlZVXyr4HUICpg34gNVBn1G4mQK0dvRVruATHVzpI9sZW2jhVFjssdvBS+tbXnnaGZsBqMDAEyp0xPG0zTkw9/KnBdtcSMpnASBqUcqsmEopcJXkL5o1yAzZm9D/6/Az7gj+HhZXHem4Kgnu/ObYnAAEMHgMbIzR03ZHz8iWfk8mNb/NTCN5QVGiWVVdSOX9MdNpeuiYoToAQd+v4CgSHAuAbmcAK1frLWUg/P5AM35U1doqQLNbnYKDen9G8Y91wCAS8GcGpTNs2xIHNqTnmEECdYOl8zochdeHM6c92ya4CIaoFwkMg/pe8=","layer_level":2},{"id":"7b1499bf-72a2-4863-850c-399744f968af","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Gates and Common Utilities","description":"api-reference-quantum-library-kernels-gates-common","prompt":"Develop detailed API documentation for the Gates and Common Utilities modules in TyxonQ's Quantum Library. Document all standard quantum gate implementations (single-qubit, two-qubit, parametric gates) in gates.py and shared utilities in common.py such as tensor product helpers, qubit indexing, and basis transformations. Explain integration with the core IR and compiler pipeline for circuit construction. Include function signatures, numerical implementations, and support for automatic differentiation. Provide examples from examples/circuit_chain_demo.py and examples/simple_qaoa.py to demonstrate gate composition and parameterized circuit execution. Address numerical stability, gradient compatibility, and backend-specific optimizations across NumPy, PyTorch, and CuPyNumeric.","parent_id":"c4c05f68-9315-4d95-b71f-26fb64ba1b27","order":5,"progress_status":"completed","dependent_files":"src/tyxonq/libs/quantum_library/kernels/gates.py,src/tyxonq/libs/quantum_library/kernels/common.py","gmt_create":"2025-10-10T21:30:43.575571+08:00","gmt_modified":"2025-10-10T23:47:59.517589+08:00","raw_data":"WikiEncrypted:C34GewOyK1SlumqKiPsSgygb6tZbr39HfU/NYGshj5UiAYC6shHCS97r3LRvFmIqHJNjqOORhz2FH58cVwOyd9hB6UJ56Uc266+ardlHnqkD8nyrpaO6n/7JyqMp2OUe6PFym4/WgJiWyyW45IBdtEvwg00XeP3o+Q2CMBRy4/cJgV4zG9E3Q0Jr+64tvKnYpP2OEG+WEv2LWeWENAApu558Tf/C/EZjlg1kBhBeWsgXPtYWzf3BaqrMfhj1hqIkgOFEeuFs5U4AvMswwgYTuJAadeL3xk9DYRdZshdGo3JLCkS1ENubCCNRcfz+n+gDi0c71TsxMb0vV+Bjm3H2z7APjVO77MQhNv2qZkktNBqbjbEYQ25XYktskbUC9SQEzUT7PVvDMcuA8cXnZwHd9U046GqFQzb5f+GAcllchGWOJj57hzgfSx794/4LeN1c0/8z+mgDqy4patqvRPJW/svGnwhNk4swgza92cTSjLz4t574ZCdFxflHgr7H5Hza8y8j8b1Vy+nQtan3vhV1BZ4IkDKWVNYXpmDZpBJavQFFQ6Qs1TdWxEDdxJ6Rx0jV3CTrb+3m4MAZ6w+sQ7Cs21UWM1WowBVC20//i212hqxFvX+KTWkESRr0ukQWH1YrKqhyYvVo5roPSNDlnH7Vkv58jss5q3ky+eqvm2IOaNi9BXHFGhBKAPZrXKq746eULZj5+ANyD2ba/LpfxmbjDVjNlsEG0B59xiznfPKWi1t4QxKyRUKrfJS678iDbU86WTNTbtkB7AD0R+76Ae5BepOSp5XkjZ7/3SKRjmY1j84HQA+BsN4k+CvTza4x2nQhvVHoUINsZRgnQIbp8/ONPw5UXH2dJZHx7sWEk2mDtKSQqtgUVLoH/Q8+rR51qHTLllwE6xqv2BRDxa+bY+S7WseD7uZkrGgwyNrEFe5aQ5IfI9sFaKOOo3S0pfEAfvxdgqK7fMqdakYGAOB1B6PgKO/2xIDPUglhCLveej+HS3AZF3gPIj+3jfn8BFLQq4NuVOKbcqOzXkvWJZ9o06m30qJUBiw9nz9+aTVopZzsKGVo/MSZTYHJ8T4Pk+B0SXkejpsdeAknkngRa1RRzwVApwBqV0Pxq0qZEtlHhELvcqcLMyF+W2qxQyGQYekj/TqNwJMYTO56TH2ftrR4VBB15HhFBMHKcW1craqaU4P9po6rsff//Zg/BGyxaoFHczcuiNL8pHdyaBNzld/PrWb8PAYlRdNrSbvzUzE1CVUymIUDJcDIVPSqxityVVK2f31ntLvf9h8RL7IdPc+gr2j+VjPYqE1irgcwfJqOFBd1mjZ6qgMtgXjBNZTdvDfSBW+WcwUB4ZHxXKeWz5kgizzShD3J6Ukg9JQKXMh4vl+Z4qpGNJfvUQJJPiWgvGQqC6/YXRqUyb/euscRQYnIAvnOFKUik16jvCCjO6ivr91sxNOpzevlwf9H0DH7gK4ZDIq+tJw9mZF80+tLrJlAbdvA7P142xwXagBbkY4f/5Mjpuzf9DliTlp1jm5si8Puh9+MuifLXbjSuqGurqI1uGYVVQ==","layer_level":4},{"id":"b689c08f-8318-4f22-884a-b1ed2f087ddd","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Numerics Backend","description":"numerics-backend","prompt":"Create comprehensive content for the Numerics Backend focused on unified array operations across different computational frameworks. Explain the ArrayBackend protocol and its implementation for NumPy, PyTorch, and CuPyNumeric. Document backend selection mechanisms and context management through numerics/context.py. Describe integration with gradient computation systems and automatic differentiation. Include examples from numerics.rst showing backend switching and performance implications. Address memory management, GPU acceleration, and numerical precision considerations. Provide guidance on selecting appropriate backends for different use cases (research vs production). Discuss interoperability with machine learning frameworks and scientific computing libraries.","order":6,"progress_status":"completed","dependent_files":"docs-ng/source/next/user/numerics.rst,src/tyxonq/numerics/api.py,src/tyxonq/numerics/backends/numpy_backend.py,src/tyxonq/numerics/backends/pytorch_backend.py,src/tyxonq/numerics/backends/cupynumeric_backend.py,src/tyxonq/numerics/context.py","gmt_create":"2025-10-10T21:21:34.902993+08:00","gmt_modified":"2025-10-10T21:50:12.002171+08:00","raw_data":"WikiEncrypted:eXTykzkDgCICZh19Bs/J2DOV/i3F1OwmEM9Nb61+haa5/P9M+R+SDzjprDyce7qqj4KFixathovDTFdpFKd/3VY8WRTHpX2SQJerl+WSp90LxWDJ+wls8X4+8B/w8Bp3vS4SwT5b/rlGdmobIK8sW6hFAXKZqKykYVm44wGv0CAianuZZ/Cdm/rdeI20KY3MPKIxIJ1HYqaJn0icDmljSnINtWsOjlC4reCpNSNB+Z0gqbk4YTEEH1g9d7sATxvsOFx+wh4Y857MT51+0VN2Q6qEWM4+7hdGnxgZ+KK2NIweXI6JAD0qb2Io0po20UQDP7dltAE+lTLlC1L4yezRZX5nLQ5kwm8iwmmx3Ttn3y+LUoPJukqz2KAt6htK7E8G4nKClvazpUQBexpxUPoZ/cWqD2F0qdQVt13wcJwV2+EjfXKSVnsrgCWEDYV0V6c30BzDMsDXrY1OkbHRdOckFktzTAgce0lCce3P+XKgQs4Al7rAU3Wbz9k+dIBVEmqQSWh5t4NLBpJ+SlZhYjvF9UIPGpjDWtwsJqeKB9Wcxzv8dJtBq4YbZuoW8ZSbla/j+shlvGZHpKe7LzG/aYmW42l2VyIi+vUp8k8AxsiCS7Eribr7xeUXzv3aH/UuAs/eEKcmV9DWKI8NrJaQUiSvWRMnK0CIuoojEKrY48O2pB5n8ZYlWteCcS79DXHwTd1WDbS55/ev1mAx/ih1IzyrKY+HZo2TyEohkbehUPxBDhk3R+iGXj2fmO+E1hOuZ/BYzHSPg4yTm1b8FfFnGEvzvKH58dwJgC503oSmX/XwJiidpousNQnGNK/gH339id8ay/KIFvw/kcfs6KzE2q/y82QmQ0CJjQmmoLjpOWOX5xlneUQjUigaz+J+P+JdmNtWYfgHAxnA7ggxOhr+ZG0wUVyqaYAiW0QQkdoTdN3/EduR0lvojE1lvvr2SVRPhQjv5TRIm0wpVKawrYdfDdDnU/BGJnII8ld2I4kq0aVPTi14ZxeFkK1gg4rV+11k5V1aG1s11WDip7FppwJjuGjpOrz4s6XQvu8X7Gl3niafpI8CMWMCSBXtd5BV8GGduP6cbAi2D+0di0HX/pBOH4CGzMBWzesr1pIanTiN8RNLYJl/QMgfh6rS0THJvtDfLCygfRbpUp/un4V0V6OvRHMWrME8KGjADYI7qiY3KTDaYm3IWPJt4zIj7bo39ZaV91KosaE23wpoKGtPdB0WUsu6PsJ/4V1DEuXV+tw2lPHfbB0lygpYhWkzhuEsv3PAYY4xxMil0cmyfeWSsuNvwq8M315kHFRDQAWzK6rJZX8O3yDrLlcmViSXnnQ9+e1PhKfM60qRgni+DZLtpcyR757TIcrEzJ5UTgxLkhQBoWO1TBzBcldd4cgg2ToJ19W49OB+cTurVLAfDpmcYRXXhnn+DlWRaRH8ifdXI2BCLGAXqdJtmYU32q1OIDDNrne8q4TqpR0eoCHxgsuDLBBuuHWnP7ETthVjgOOCUEROAdycg/7q6PWXezeQUoV3mI1rFcXpQ5JjEpPUsI0wbxbQToCQSEwqxULv/bk+zpnXWiqepxbeNOyVXWnpw8cMITBLk5kZkobfhoDdJv55gcH4j9SsI6lCezmQx8gstlF7qZVY4t6oDMkJ9dS1d8lLbRKcCNAAkrEKYzgOwh6N8+Dx//nv1w=="},{"id":"5b5d6df6-131f-417f-9e77-eea9ca79ac70","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Error Mitigation Examples","description":"error-mitigation-examples","prompt":"Create comprehensive content for Error Mitigation Examples demonstrating techniques to improve result accuracy in noisy quantum systems. Cover readout error correction in readout_mitigation.py, Monte Carlo noise boosting methods in mcnoise_boost.py variants, and noise characterization in mcnoise_check.py. Include noise calibration procedures (noise_calibration.py), noisy quantum machine learning (noisy_qml.py), and JIT-compiled noisy sampling (noisy_sampling_jit.py). Explain the principles behind each mitigation technique, their assumptions, and limitations. Provide implementation details on noise model construction, measurement error matrices, and correction algorithms. Offer practical advice on combining multiple error mitigation strategies and evaluating their effectiveness on real hardware.","parent_id":"be2b789c-6423-4d7d-89dc-b724ac123462","order":6,"progress_status":"completed","dependent_files":"examples/readout_mitigation.py,examples-ng/mcnoise_boost.py,examples-ng/mcnoise_boost_v2.py,examples-ng/mcnoise_check.py,examples-ng/noise_calibration.py,examples-ng/noisy_qml.py,examples-ng/noisy_sampling_jit.py","gmt_create":"2025-10-10T21:23:23.924966+08:00","gmt_modified":"2025-10-10T22:20:21.185902+08:00","raw_data":"WikiEncrypted:Jt2SeH9cQITjBGdB/YEfX5piCrIODGcu3YqGZgtyz9dZIcqzNyUxB9d3sm34O/h6lfA6EivAIDpBoaCxlvWZzrf6BESMpGlZioK7/FqKMerErWARdv70OwVTOivqcQkU5mGqRDUxtRwu+su9gYv8hd0acEBlZjXSOWivFSba7tabK1HCs0ZPB5qiyCw+wTIIQ14bC7Z8dNkWC1Ktx1kxvfTgntXr6JaMGgmnd7nimLAHa6zeNinJn7qYp1IPrt8WgIwjjSnY9ClESxWtIMetclpE0fp6wOHn2GIDplADG2bk6pe7cOaTALEezJXeT7VwfpNHEjei6S4P9Wv4lNaJORIQ0VxA3c+m5Iz9n41PFd0gpE+7FUtHJAyv/+dYCyhLi8NUhWmH03EAOKELaQHwK0+gkamcLsd147QDmQpp4Vcpnd4+cID8daL64C4qySzgvjGSGD77e4z4AewsgbnsyHQSqkatr5bedZo2sJjxRtCKwYVA0PTO32awORQdUoJpZ/RZh11VGvHFEyYcm60d3N3Rmz/BPbYAGHhiylbsT1+ivQm24fLK9GJfbgie+mCri8danfzaObeK9wB/m2uHB7Su5jCWQRVzKeMmVQVJ2AjljtFYFV7L4M8NZ3NcahegPJN1F9MOP8DknePCeYHEhcd05V3QVYEEQ9YPnRXxwiq+NUjCL+hjOOqZNVxD9oRjhmtrdK25mcb9xTNkdB6KlCDNYFjH9MkKT0If0MEKrVUhS04EEjnmS0DAaZHvKNfycPioNDHMqvDFD9Exv2ArWYIW9NUn4Ze8YSqBWOqUvQBrDhbeMPCNCfwV/AFhd7yVkNBGzP7hK3efrUIDzlDaFs3geELjttYiFPWjexIoo5FFLnmNNFKfleaCHqLIwa6yjT1QbvJlWj+evYNHU4virmfTTtAalhtwGjKrT3jGNk3y6MtFi6J/5y11qOtwyUOm77snk8SeoOsmQpd5aYltyHbILi69tj0fSqdXC00h3m0iMBU3FuIVFNGWzIDMyaRR+X93WxVt3aZNygB/1h5WPPRi5eQe7cA8B/QhdB2hVvRS0z0BaH4DQKCcdic/ORYWmqOvnNfT5QzMLDhAIbzcEt1seswOlCkHQ2p/plK3YtKMC8gFokZ3WTG5mhUG8Sr62n9BI247EE2dluAdyDqY6Ov5oleCLHc9Me4Ul5iDgoemgKHdP1ik9ebfnGCPQRFsWHYeLnHYmc5NkbanpMQ5DMk35nytZr0I/A4sG3F5aOIGjBZ0dL0/qRZJk+VJCMesxf15i8tXY4oyA19+tA+qsCgetOfdiNrXW91740u11VsA8Fs4IuOr9YrkfpGJpJA87SR2VmYtYXJZ1gL5Jm29wUvA0Jkykq5JxmKJzJsK0/Ps7Q9O5SY8GucpTNR73cJMB2+mRuQg5ttgtL7uEeyB7Xtc5SZN4gYKvVlTrWoI4orZNNWTPwaxg9ruP77S45mISDvIsN8NzYQvXmYnf7+6SL4TjbjPWdWD+Wn4jqYntSsWUFDmjeNo970VFHlKRvIysxUzGgNYuWsVA2emYjPDz6qLJZkdbi9sbRdOgecKi5VEZvX/HgOIhG7zFJC7xuaZSPNyPREfl5v54Yhb9oiUktVqOXMnxwEctLpjrZS2ZzAFs6nKvjexLCUWpIwlxvGtW7QvUBgKC0vxRWZh5WI8mjLzpd/7C1VGSoBCEo/B0p9dwml4k6R0jVxbI/mx7G82","layer_level":1},{"id":"61df0675-6efe-434e-8be6-66c5bb88ae9c","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Applications API","description":"api-reference-applications","prompt":"Create API documentation for the Applications module of Tyxonq, focusing on the Quantum AIDD (quantum-assisted drug discovery) functionality. Document the chem package and its algorithms including UCC/UCCSD, HEA, k-UpCCGSD, and pUCCD for quantum chemistry. Detail the runtime implementations for both device-based and exact numeric execution. Explain the molecule class for molecular input and processing. Document the classical_chem_cloud integration for hybrid quantum-classical workflows. Provide examples from examples/ demonstrating quantum chemistry calculations. Address the integration with core framework components and the configuration options for different algorithms and runtimes.","parent_id":"f53ef1ed-0ee1-49f7-a90c-99d15b936574","order":6,"progress_status":"completed","dependent_files":"src/tyxonq/applications/chem/__init__.py,src/tyxonq/applications/chem/algorithms/uccsd.py,src/tyxonq/applications/chem/algorithms/hea.py,src/tyxonq/applications/chem/algorithms/kupccgsd.py,src/tyxonq/applications/chem/algorithms/puccd.py,src/tyxonq/applications/chem/runtimes/hea_device_runtime.py,src/tyxonq/applications/chem/runtimes/ucc_device_runtime.py,src/tyxonq/applications/chem/molecule.py","gmt_create":"2025-10-10T21:23:57.628013+08:00","gmt_modified":"2025-10-10T22:21:46.264094+08:00","raw_data":"WikiEncrypted:C34GewOyK1SlumqKiPsSg+6RTYcSQE1Yocwf7mzpIZy8xPuugefu2bUCnMVdoew3qGu0N7oPLNiU0Y/ylXD7eroMK3poSGQ3QDVGG2hHlf7jxEpgtWOkwMnOkyiVcIonGoiNPy/sVCeFIQUdUwUeoL/xY0OZjuMecwnjtdqa5QzurdmFTRtEB4UrS/XORJDkbflPO3n7haz/p46roN1uiDBvHNbPzc2lvOPoUGaGs9BuyDICC+UnJ1+U45Iv3D6pKsg2AWanpNvZ5/HDbEpurohQ9zFMoMM/oarRLou6enKf4jPFOdgW8Scnr4j0bi7tyYJd7mB2Z4HR/Bg5f3iEb12dGY40PiwCwTTtepO/+cUl8QLaFotIhIbOOJnRkVQ5dE+ELZKvuQ3PFcfiXlv3LZ0oxLrcz0ULXVi/0zozG8+bj60jrvWf0jYFVmXqaf+H4bQrjC4NbTSOOfuuFa8pBGUX4Eh0+WRRqGzCVPNEU9d979qncdJjfHSX4COxaeTimRJX0XptTzBek8NviL6crB7YYjHCgCMLLtIpbqRLTI1tGjv+RKmUAgauWtS+A+ho4tydeynP07T229UVe8wgKS2U/frMA/k+atpgN8ez75VW5vPs+1JvgScbapuJJidGPbvkCLKxEG7Gpm+W8PE460UFzUtdL6f7Vzfmap9zrN9j6/O30wGUfmSV/nq1LeVWQpLIPwvUo3vdzKIVvBdPNoOwA5LGo67XSPgLkD8Hcx5js6eaX4rkRvSrI5pyJDkX0rMyG780j1MMICQCPyRrmEDdZKbwOEIWKxC695hZrYsz1wqqYo1qCOL3FcGjpqCb2Wr9g4oEBUGTM7aRResXzOLtUN5bWprNQjTT8gRFKHFbBj+gaHgHjAB2b9m3z4n5QLGua+J4lA8eJIUexue2sv0DEHT9kztSpiFUJJLFtg0buH9TGq2CM8/UW9pd6VMJQ6C4f5Sq/Yrr60K7UWi5XfMaCUpn9JVwxZpy2VFeSlX38ZBucewufmGUwXRBKOVoZwTiFUQpcmb80aMtU1RHr6Cd4GSeWpGvJODFvsNUXvvPIw6HnYW+3lvV5zzYziu/1rngq4kOHPt04HqQWNU56fHV36HQovug/Lr3U6P1casYDH/rnh6VrRaMZQjYZacjkCU5o4TB7Qoq0DYolJ1ZqcXy+NUgSm0jaaMADQgn7uLOzBQI84s35OQSnii1GuIyXA8UNA+35IapZOR0qVvzcVzdxzIrt54ltJzwr5zQSKWL7Eb3NoOSx+uRDjEFB4eVoHPoHKMLZnve/xfGDqy3UQCcCyPszFLb3E+4htlkwulHSLw2sma8Fqex/buoQ/+xOb+yVaYSG+POo3K6S+z5nPBr7t3quldoQU6XwGth4y/ooA/HhcwuLENMiUTWMeI6bPnnUJy5G2H23Ar5Ahv/tx29tvm3ORHJrbGUOez++DLf4Hl5DBLp9+1crN1DwZ9kaWJTYNKFPEp9diOjUzGkse/DQ6qVBoy9NR6jnxnDnExF+Xk6BFzYuWHDUGRqd7IMvYvqGueTfD2sKcP5ysUrs7BaE04J3F0ovFCqvieVK+hvbnBA/FLgon0Gxmk/v5HWGY62QzLt0eRkd0EpXTMSWNStOylqWrCR9cBUU6tl+hCe9uGGjHXsOjqNy2zPRh5ZfeT1XlYbRcxn/9s3WU/LaiVOQbo2yBGmwCTbnwg0MMOc4sd9eEJIv8qzbH9X7egB8N6DApJnLO4gR60gU2wmvk7XlONuLiZh3YBDTF4wTasfhqN3O+CI8jQvDTdOjHa3X4Dn4u3d3SOf98FBqtQX0d1L9ItYFX+XCZc8rHDqD9ClsxJDGTWSw1K4CuYD4wrxpNb7+vxrD8jQsOWNtW01g7+7VWAF/2qBUSEz9HL4h7I=","layer_level":1},{"id":"6e114fe1-b696-4897-9078-346dbc4008bb","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Postprocessing","description":"postprocessing","prompt":"Develop detailed content for the Postprocessing layer focused on results analysis with counts-first semantics. Explain the design philosophy of processing raw measurement counts before expectation value calculation. Document error mitigation techniques: readout error correction, classical shadows for scalable tomography, and noise analysis tools. Describe metrics computation for algorithm performance evaluation. Include examples from postprocessing.rst showing expectation value calculation from counts and error mitigation workflows. Address integration with compiler-driven measurement grouping and shot scheduling. Provide guidance on selecting appropriate postprocessing methods based on circuit size, noise levels, and required accuracy.","order":7,"progress_status":"completed","dependent_files":"docs-ng/source/next/user/postprocessing.rst,src/tyxonq/postprocessing/io.py,src/tyxonq/postprocessing/counts_expval.py,src/tyxonq/postprocessing/error_mitigation.py,src/tyxonq/postprocessing/classical_shadows.py,src/tyxonq/postprocessing/readout.py,src/tyxonq/postprocessing/metrics.py","gmt_create":"2025-10-10T21:21:34.903767+08:00","gmt_modified":"2025-10-10T21:48:54.78125+08:00","raw_data":"WikiEncrypted:TP8KP13wWUq5FizrfXDdglegjjVcX8/3J/65qJLLKl9xZIveXGhT3IVhhe8LaFcMm/Amhf78HsRyzBq0VAQ7J07GoTnF5iVNCNkFBngGBRU8x5pRG/UGhbdkFhepQ4IH8CXHBdTMXn6fGoFa9qZJ+y3d/DerrY7WNe3Z9a2ovf+/S298DDgqsvKdvbCugbdsy/CQhOqFdB4QfCNNFy3a9/SO3hsIHrdxOA5LzzLguE/GtntrzuqDHRjyVB3wqQX9fcBdYAqwkFTyCWfvMiCzrSk7pdCNOW86phgNa+gfoOw93XgNrTOAexhWx0/tbRbesDeNOgbyFyWsYyTnwVJaKYdmoBkza00opV/CyXbYmvKp60G1KE/IyFjOMEK4uMEBO07L24I6ptxdDc9P5g8MTv06dvVrLxjqnePWH/+5IC/Ayd5hRDoOW3fKQkctucRYE9FTaQxpNVRjTsbGpkgX9ZeRxbwtopbN7+yDEVzaDvXZpJbV3RzbBjJQPNsTI9aFsoMKe7X54gllQO+Knp1Q7OXHMg2kLEAfVeMfJFIGVZNEINSuk/brJeqtNgk3NzW3i508jD27S7Stf+fWyuWs1yxvG7D5LwPBjJyfjTBoWhvaHH01lXN3DTwQ8LDvQlIdh2h+OIDCtORjYl68FQ12WkMLkpgyqIHoewYdv/G0mQY9xlDLT/MiHHyJVfy6qAH/t4vcVMe2w2sW9AkCXl2djlP6Ap3DdRNzyDjJRbBHuMMgXABsRmP4R3cQJcc5PmazYBR/KIAozvD2ozPekdf5/0mDYUJDO+hBUiTPWCVn7E9s52ZBzEI+7lpkk1p5W73Mm6FQfVobC/ZkIHtUUbFzrpxD3mO+o3KC24MTyvHje7lQ4FH+t09jtxJred1pYYx70RVaL1YrLo9+LRAFybe2BJ15fcBfT3EkF18zqiffVhNhoOHmeLuVnTvyde2II170g/kC/yl8uvOtHK6ZkirGURfzTKTBuKr5PFcRYztqc3RKFAKebXSN+9AfS2uxt05h5JKr+pD16vf2Fv7x3O00045Txs8d+k+uvYiYqzu07Mjwn08+kvcd3U+SMii9X7EAGuAP9aWOTqfmvB3sLoMQ8387WScRXGXO8mbqthuuVvxdDJqn6+YYS9jC4oSObqnxJnPYG6X1WCWaQMS8ttchxMHAQ3CV8i7cvc40HMXodhip6CNPo6SiK+nQZIs5tkc+kqCiVyfMcAZ4qt6392aZ+Pr5qV3GpkyBlUcmJqcXKmxZmvcQfXhbU4a2z0gKo3yWaI81JxrUHn/+1+4bNF6k4h1nRKHK+bEPYw6ciWxu8EBTaGxHA0xizpfakDAKib3PPQCSfW+G4ujBU/1CsMFnVt71ZTCiAFZY0sFbz2ANj0YMU5H1EQKeFmh1KHEtoXlNOz/4/Aq9vZ0l03mS/reUJ1CjOPOL2++RbsCVaY28I5N8Hb4g1OHO16S0VOaVmUg59GZZ0TDM6qrg98TBQmyISzTHd/NvlB3/oh662WF5uDwSismyR9FkoEgTV+lsvXi3/K5YpouQjThzO6eUxRBnb5MXp+R3hLbKmhXm0Ydd2GlI7j5nQAjcIE+5ZAW/mhTdCibXUAWKgo/oCs3V4Yes14eA6w/wRFJ/Z6b2vJL6fqX1ES2qyBtyMJPFolecifNBVEt+Zj6CCw0+h3hM1eKGh2J/8zFov1NBNnGyrTxS6qJ/e01USYNGOXv/2GSIXITOfRhQ6e34MRKQ7IPtu3W/j2jnLGqvFW8Iz6+17uNa8ZQ="},{"id":"d48a9499-37ad-49ab-82c7-3109e14c4e9a","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Utility Scripts","description":"utility-scripts","prompt":"Develop detailed content for Utility Scripts that support development, testing, and performance analysis. Explain PySCF numeric diagnostics in diag_pyscf_numeric_tyxonq.py, convergence comparison between numeric and device execution in numeric_vs_device_convergence_study.py, and chemical simulation profiling in profile_chem.py. Document how these scripts aid in validating algorithm correctness, benchmarking performance, and identifying computational bottlenecks. Provide usage instructions, input/output formats, and interpretation guidelines for results. Highlight how these utilities fit into the development lifecycle from algorithm design to production deployment. Include examples of integrating these tools into continuous integration workflows.","parent_id":"be2b789c-6423-4d7d-89dc-b724ac123462","order":7,"progress_status":"completed","dependent_files":"scripts/diag_pyscf_numeric_tyxonq.py,scripts/numeric_vs_device_convergence_study.py,scripts/profile_chem.py","gmt_create":"2025-10-10T21:23:23.925794+08:00","gmt_modified":"2025-10-10T22:21:42.512665+08:00","raw_data":"WikiEncrypted:SvMc2PRoWqDcMfdzcPf97NUxbjFdXb/7gJeKg6W16/b2WTHEPjgsTPjkTx0FwCUu2TVxTq2F2MG3/oVFlWv5gRjF5sNHlF6qK86x4B91Ky+E92qhN31Q3CVgQsvZ8oZBHup7IutjYV/fFXiDumLcqT4onUl1hd2RZ8Wspvc5WhUqjpbM0R7yMvEevkXRUDv3rR7/C1cWuZUZen9B+aIUxg8+O2SBQ/JKAvhv4qagk0Ld9MMxoGlTTlXzSKWdtHJ5DzpC7piq066C1e5zUMPBa0ZC50WcE68wXl5scTp2xlR33I9oZh47k5+HtfcoShMqAfnevqGTpzyXGJPzJoP627jFSnfmRQDm03WkRczjM7d7L7LNfqB3637H0RHLdvS5Kh1fGEdQZMR3oEB7CHHuAq2UrGdUkDG8APO7yYnoT0VbAIL92pcDVYZw8itNirWza4GqPAKvE64kqjpO8a4iGNqne9hdg9g9ALcBrSY4+boKAz788+oRxjH3oNaFMx/AsYtYQqWvUqgBoGeGATkxU32KzTr2lt2CEaqe4iiek5o+CQqCW6gb9nCbv9jcLoSfgooIVXd0TlL9SUd32dgVlDa7hOfP1Rob73RcosiF8V6sXSOOhY9QTU3l1hSUWok6U4YL86HClNY1qs8ufFLOe8iGPiFmUa9DJ3KjubPg6P44HMATWpWPhNEP2Ie7RaPOzdmSNq4aMG1vx0bDJTMK2cGPJ7blRZ2XnTWJidO9Qm70DOqW4guTEZyTsN8FOT4OE+BzPtWWr6fe2RcAmj/NkVY/jf+E2lMNNln31VdXfQqXJ6rTRmBHFyoY/M+c6LbP6f8oBnzZBXauJ97pu8Xuoik7sj39Y0syNq3jDLuhqwj9bihWKIEwNc6nbYrKlMZjtNorEw2+wLaJC4CNuPG9sWskE9tKliqg3eLHP4inKSLmH8vFc57Vf3yf06pfY4SU13GYYEVQ4KYT7qK0NM8evFzmSTk17mhdjsU8Pqp6lGll61sx0vx1An46TbJIonKRLze/hn2p8hKr6oc6QS3M/9EbfP5mWk4EPPGuoGrH0qzflZqyz9UnV4bxVa+q20M2Ex8VSiQBgF7MdmTGL0iYU88eAcSWdV1yszVWhYx7pUebA8iTtul9A6t2IIrYSCP7jsnO/wfNswwucep++CbcQl+b/d/vENfzMBYPMS+cRMVvuEJkciTtcJBy/wcqJHS9FToMxKMFzzXtfYYvf1t6dZpJ5CBvPDDerVwIwTrjCdlfsSMEW0TcTQr4ZhwWSSsiTgrg5M8c7xMD71nJwnGFtjweV7B5s5eFHyZYA0L6H1p4MZcw+VTrelRkgW7h0bAyA2FyaaduMcmHM5irKWaNcdWgE1m0r50zYaTe9cLMnHbv6AlUm7t5A0vH3Nn3/6OPDysDoXkCN7gd6Mj/cYNDNqx9Kd4J5a4RBjGxL3f64Y42tAvpqQnRT/deN8lUAmpnnIoqhq8nNn16F5DOWYvU7A==","layer_level":1},{"id":"b08e6312-36d2-4fe0-8059-1572b13c8cf4","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Cloud API","description":"api-reference-cloud","prompt":"Create API documentation for the Cloud module of Tyxonq. Document the RESTful quantum API gateway with endpoints for device management and task submission. Detail the authentication mechanism using Bearer tokens. Explain the task submission process including device selection with optimization flags, shot configuration, and circuit source formats. Document the response formats for task submission, task details, and task listing. Include the SDK integration layer that provides high-level functions like set_token, submit_task, and run. Provide examples from examples/ and the cloud API documentation showing complete workflows. Address error handling, rate limiting, and best practices for cloud integration.","parent_id":"f53ef1ed-0ee1-49f7-a90c-99d15b936574","order":7,"progress_status":"completed","dependent_files":"src/tyxonq/cloud/__init__.py,src/tyxonq/cloud/api.py,docs/tyxonq_cloud_api.md","gmt_create":"2025-10-10T21:23:57.62837+08:00","gmt_modified":"2025-10-10T22:21:37.594256+08:00","raw_data":"WikiEncrypted:C34GewOyK1SlumqKiPsSg9uT9KF+1MlZZS5a4xVGcWjr1j7Ttb03Lk6Ml3uukw7+RIfiJe1QwS2dsWa3yISGSSS7b4ymHsxY2l88HmgtY5o00pIP+5lKTVqH/KztHjbn2U5eh1JBZC/QbRQqBWlBRddJss0Wn3eaxlc4jLVIumC85EPPl8VL7Q+zMeeVkgJWRnjOsY3G1VUC+FiHmT/Zri47Mv1pjFhnEDuZYEvY126Qyf10RS5/TvfnyELQhZ7CEI9ZXy19jZOKqs2PyMJCinSfzHB+97uLZa4JqGQtra5Ugpt2I6n5/nwCHFZZRlnlBWPTjjImBKG8oFX+ys31/jSnpSd+tI9QxO2CtDMZb/pWTBhF3IN53XC6FntpFpwPAyfyOH0NBS5R2QM1wuJGtzM+Zy5srV6xFU8+RIFZF6aDeayjs3j1I6+TqycnX838Z5vCeRRnYm/sqZE1Zqh7FMB+L1RCIFVRwViU1o9agO9EbmRIHOgpUvXGPQwYCi4ZU7H2J1rgBsJplinIwtwKhjBAMuQwYfsZpFz5SpBDINZ5vwl+dSoGBbKum+7Xp4OgliOTjd+hzZhemG2NCSobJ3r9NQcvVDWx5xlfwQpvEQXQ/e9M+U59qI9CnIR2wrvvwRKdPl8N6mpgoFa0mC/qLGF3Z103ttD6SV9NHIDBaEODLaSe2tRGOxwfKElfevuIDQOvE2X8n1toYAOmyA17a56a0E6qiO3Y2GMvxj8pvaE7iIQOZ5vZIPEMIpzoPI/X15I29q0syzOI/5UcnwMxxHCj/qP+JpljjcTTsoAgZn3h1YLPEVPGuDvWhxBo8rRCNfeAR9YrFl1COE0PqyRYPxq9xjLDHodKmJg5WVB31Z5lJlXgTp/7i8m9JLWuzj0D3hqfG0hDpua5Niabjpd3Q1xb1HGO/5s/JeAjSVGANE6mCq7+XYHQGDzRDD97M4RjaH+61asM7dyBny+r92G1utMnYtqQSChNEiX4ht8gHjbw7decea/9IleU7ydXeZvblXfX1EoZk4xExNYPvghJl7m490cGEKiWr+qTyCzaOGEFn4Yt3Wee36/3APzmJE623ZyLWwCoraiMrdl75Pfh+DoqJLKepZp/m1VgidjV+9I/6AX0Dd0BHQpszgTmzcrIv+neMa1ejWuWC4kAbCIpzCEhv/yPhcQiDkWLhYJehFf8wDmzIG2r9HGRs+wT8pUI5ExwbmBtw8XZn/H7k9GPhgPiu1AZQMPNPUBEpn1uVSaOjLYE+M1NHDNHPGPk8S8mCxBfIIwgi/JyFrROdO2bhXilAg557UZoIayPUXZLznTjbTzSaHGzq6UWZc/kL5nnE07HWVc3MCNKa6B9XRJe/r8I6iihEdgt559BglriJbVndBT+qBZMEpfzHEo6eGiJ","layer_level":1},{"id":"7fc12bf5-cf13-45cf-b21e-370f5443525d","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Quantum Chemistry Applications","description":"quantum-chemistry","prompt":"Create comprehensive content for Quantum Chemistry Applications (Quantum AIDD) focused on computational chemistry algorithms. Explain the implementation of UCC/UCCSD, HEA, k-UpCCGSD, and pUCCD methods for molecular energy calculations. Document molecule representation and Hamiltonian construction through chem_libs. Describe dual runtime systems: device-based execution for real hardware and numeric runtime for exact simulation. Include examples from cloud_uccsd_hea_demo.py showing end-to-end quantum chemistry workflows. Address configuration options for convergence criteria, orbital optimization, and active space selection. Provide guidance on interpreting chemical accuracy and comparing with classical methods like PySCF.","order":8,"progress_status":"completed","dependent_files":"src/tyxonq/applications/chem/algorithms/uccsd.py,src/tyxonq/applications/chem/algorithms/hea.py,src/tyxonq/applications/chem/algorithms/kupccgsd.py,src/tyxonq/applications/chem/algorithms/puccd.py,src/tyxonq/applications/chem/chem_libs/hamiltonians_chem_library/hamiltonian_builders.py,src/tyxonq/applications/chem/runtimes/hea_device_runtime.py,src/tyxonq/applications/chem/runtimes/ucc_device_runtime.py,src/tyxonq/applications/chem/molecule.py","gmt_create":"2025-10-10T21:21:34.904649+08:00","gmt_modified":"2025-10-10T21:50:27.037717+08:00","raw_data":"WikiEncrypted:o/V1DzY9J1knzt5DomOylSu3bQYmLOCoT++mj9O+ouRiZPZprdJHeoZoMS3XSX+rsYIAqFIyygnpJJjGzYdT4BBzRVhVg93ui9SXZzsuYif/JQ7nWfNla6YO5NhIvSITlitpkZz6pSF3oDHxKTobrofhTbZpiDrM8S8XhJblKVkfeSGOmPYkzDK0nfTzxGJkVPFK4J4eclgODhFasbCyD+0wlloM7JfpPGdMWiEE47JiJTlgrQZPmAUoKC0v5hAResmk8GfuQY/PrK3Uw/Bc8bp98/MGCrzTdTdbpCylsYR53JahYFHmy9mSBb2JfHjoXBIO54WSKUc1jFo4mngRjEGTm7eqinO3VJMzjI87QWTS3nt5INu8LaMrPTTyf9CqH9YgeEAtySBLD0V8HmqhP8NDAH74y5yKyX9Ix4hUlZ8dGsvr9cQBNnMtHjL+DreKVsm76qX3F1CpF7yuWfvROE/excRs87deuWV/4XVkLxi61bS2nqkVIQwsg9AJCvnKk56o9JLQzj6QqFrjWu1WOLdkxqh3vRpmi1/QqptSGF6R7WHXeEkiTDKBMsaCJrxnNHZxH0jsai5Cg3ruEaWL53jOBXrBDJSEMjU6RbA8Fi5vjhp/CGNStZ14DXTHO7aTKoQOYj4NuVGm+ydmgD3KvzsjS2e0Ez4rMSIOKujLTU/ZJ1/Cw7X6tmWzxdLAB8TVOibkyew3xdHN2vxJ1e+lQ/4mCSEXU5XS/7jY/VQaZtCe6yhTkL8+EKg10kcx36YxudIzra9KzH/hQ+05MBz7MCqAo91VKExmlkOLogV0DncMcxby+StFiZg/+oYLTRCQSYXnDbY3QXjbzzVX78GQDuXepLp0HvyeGh3HJnYkaIRIhVJQj+5WoZelu1r01ceYSOZ60uCUFxhYRnMcIXLA7PyeqkmMKwYYvVtzbftNCAlhuhgb7SX02nm0o4xZoK59aGZ/bfsHgI1fSNhiLKWZTPDqrbhFnIBzuH+VenWzK6l2IeC1Xh8jiIIcRF8bOaryZmnfhsTwhyFu0Ponz4MkIUY8EfnGSspknlVFK0BmRwtgRrALXi5B2jQswPV0E1Cs972cyezFXnyQJCUf21H9jwqxjgRnn7FsLEk2EicSD7inT2g2lQZbNZd20b5Xbhc4cl4eZ+KpWCgXuRJipk2lQH4p7zDhiex0x0OSSIEqBdKp9XyKghaeBQttbPVSU8gwy4N3gnHO+BU3wZAmlsh9sXcK1xmmdRxwCcTZzNQMtNTzSY9nK67ciNs7+J/N5TgGxZfGlWjtce+fSJWMVRQrigx6cDMTPDUbdHlzGvGI9CUKUQuse6sK3oSFu+klcFaZHXP9hJejVNk9BWst9x/6wFFd5T3buCKeQdg6wb+Ix1YammnECIC6hj9gY6ZIf3scdCFr61KhOy6wN8IEBjunzhO5EXhsGTttBD7AOD/SbTnSNlD1mcPQ79+8OBiXkE2exO5hKwQ7T65YCaqcIX47IyULXgK3DAyZyWK78Kj8jMz/48AlcNRcQ3+/QYjMvfqCb3b81/pkG4zDmyLx2pLyYPkWnwQRf3CiJssWdw2zbY1jc8JygVJRw7Xd/aTzp1LC7T1634uc8y9dCUkqWoGnxhOi+wuaIKBna9GIo3nf4404uCVQB3dw4sfI43T8O0dnLKCpjZe1JZQHTQtDGMpAMVltV5N5s0cS8yoEifaomHl+XjV9+A64VxkOSuDrFH2+p0H6S89V75UnSlplJWxjMLGSj6kWCajXf5VaYcIWwaGNt8RcE8gtHhZG+Nqcb83GsIFa3VAm17qWQoH11rv5gxFJEExmJPs+0L5I+oyx3d/AQRdKEE7bf4DZMALlOF+AUOjB/hZoI74qERcBh7ciKI6vOpBn2q931H9mVaDwIiK7rkC6U2tq6uwSZ1qbaLHb"},{"id":"5f9a37c3-59ab-41c6-ac09-34c8680a8b44","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Libraries and Reusable Components","description":"libraries-components","prompt":"Develop detailed content for Libraries and Reusable Components focused on pre-built quantum routines and utilities. Explain the Circuit Library with templates for VQE, QAOA/Ising, Trotter time evolution, and UCC ansätze. Document the Hamiltonian Encoding library for fermion-to-qubit mappings (Jordan-Wigner, Parity, Bravyi-Kitaev) and Pauli operator manipulation. Describe the Quantum Library with numeric kernels for dynamics simulation and measurement processing. Include usage examples from circuits_library showing parameterized ansatz construction. Address integration with core framework components and customization options for advanced users. Provide guidance on extending libraries with custom templates.","order":9,"progress_status":"completed","dependent_files":"src/tyxonq/libs/circuits_library/vqe.py,src/tyxonq/libs/circuits_library/qaoa_ising.py,src/tyxonq/libs/circuits_library/trotter_circuit.py,src/tyxonq/libs/circuits_library/ucc.py,src/tyxonq/libs/hamiltonian_encoding/fermion_to_qubit.py,src/tyxonq/libs/quantum_library/dynamics.py,src/tyxonq/libs/quantum_library/measurement.py","gmt_create":"2025-10-10T21:21:34.905412+08:00","gmt_modified":"2025-10-10T21:50:36.773323+08:00","raw_data":"WikiEncrypted:b5ec9P/cXUzvz93UCfH1FrzyKy3lRpXqGOS3sMTYYAjGhI1xughXpN6bEd2ZLMC6qPKMF6M/XskiyHHT+aTQaCdYV015GJja5HWmhTOrL9VXi71lB1xsqCOnMBDSeYzCeZHsqL/yRaZmfXWYyMf4Vtr1paNIQN9nMWgAxhI9TlYpGvntoStho1gQog0+AvUQMtdtiSFPWV0SzD3NjZfgAjxyXN0rxkbk5MWDRM7bY05FEYuNpsUHO4Ou4KTQ7uJr4rFBmq0fWlH068V8k/o0lGCX+B1l6Z+sIh8gyWzAp/yN0wRCYyl97+n9Eiras5uMBm3evQ1M3PyITvizI96vENOdfWz/mbCoo/J+vx0mSVh1vlppEdod0v8PqEG060Vr0bvQMiKbXu812/Ckn4fePI/qWsp1Bx51P/5Xb15DIV3N61TEZGg035sBTg0HBlZGs0J7NNHcLpPVdJf4NE1k0SbSUGI53EfDbmm6tQGQpuEgwRvuRQu2fBrAeNNRzneHA8OSOOxhm9FXRmA272kDQLdBWob5yk+EqpDRgBSuGqW4kTKdFGTLrOdq6TGJOK8p79rwPUmBu1Q0A4fkAN4nkOx/62x6nEoOUVRyEDVh1hx+25n+7yorRaEqvExtioqWe/hDGekJEwTAfyzd5qcdE2KKuG0Oq9Ig0xHA73Vr8Na45VloG8cYYCdyBgHXuBFe/iBq0uT5nTSUA8jUklcHSWfwwXn/j38M+VuC4ZjD2BdfDQ0tGBnI7wdTD21/IeGbTcDiU8suX4p1Ty5PGBValkRapoe4Fgt0Qm+4YPRDwRshn36Ih4K9AkkIAmGQr1QC/FnJxgIRMW2EOnZFxh0ynWCxKEOe5vciLHGMZguu1iE+p0IWYkT0qCVh5T0TQ0nRSm5BWY0wK4x1DoaGcxnE9CipOCw9SQVNA/OI0h+SvNrvzv1QiBeD5t1vK30ZNKb8Ivb2v4XC+RD1ew1tEAGhG9mdqzfJI1aIKCu4LDTa1bZ3sZPubzpcvjthxJWowrO4HnbyX4iph3J4f2gzOqE7OHCZw28RH0Q1B7Cz8GnmLXM2LUJZ42fzfQ8TXgaFtX21t3DtVlMjnZnN+nOndoxsBimMGKwHojpRYNrnmk3lhddf4bl0hGLmUQ4YqmM548/mTYz3U2rMPkHAf9sC5RmUh9cfJqhwKkEuGyO/hUVxt10BfmAfRWKSa4xaAGASxy3RWvI5eMITUUhYhXFfhUpS+pfoStXxDUDO7R1zelYy+QaftZxjWgiso5qc8XT26TtJ5PULlTjsseem3M6WDzCrh28URn/Xdg6XytplXl9R/FCvsr2L8Rz8hicKlCV/yDEkb3PUZ/uRuos1FdbFEcJXMfbKjG1tGJmXH9QZU0o2dOANPUBtW6UuPjMsw5CHF6ytBeRVBOCSHtYzX00DWg0JxO7KEKpofqdqZ6euYVj3QbvAwgrTgYHyCn69bOo9C3+hH7XBUGPckjqISZAyx8gnvDf3bCgJ74uWMK3gT4jVCmnS8Lf6W3kfarBCfeGrvQQTuQw4Wg+RrSuwhfiVYqrcQL2R98DCH3LMTJrC6d4LdMpgFdLcyhi4oQ+OghoKTkaPuW40RPaQFnIHuc+t2WBkSt2wYc1eBF+gWsCurRvbfgwMSbGsOjiPwR8rkOpar3H5iBKVrB750/ixH0uk87rc0rMlJb+DxQbTB4m4NCSv45fxnvcfrAeO/VVsXVCfPxLLUmLGjRRzdpFTi+/Ur3dscpkiL9nsA/z1zX7ECAAy4ENKLqOKm+YcFRgoHf8HzRbA/TOcUthwUn15IDuRACBwyLzmNYbtOK1e0LhBiuv7RG0="},{"id":"be2b789c-6423-4d7d-89dc-b724ac123462","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Examples and Tutorials","description":"examples-tutorials","prompt":"Create comprehensive content for Examples and Tutorials focused on practical implementation patterns. Organize examples by complexity: basic circuit construction (circuit_chain_demo.py), quantum chemistry (cloud_uccsd_hea_demo.py), variational algorithms (vqe_extra.py), and advanced optimization (vqe_parallel_pmap.py). Include next-generation examples showcasing JIT compilation (hea_scan_jit_acc.py), hybrid GPU pipelines (hybrid_gpu_pipeline.py), and large-scale simulations (rem_super_large_scale.py). Document utility scripts for benchmarking (gradient_benchmark.py) and profiling (profile_chem.py). Provide step-by-step walkthroughs with explanations of key concepts demonstrated in each example. Address common modifications users might want to make and potential pitfalls.","order":10,"progress_status":"completed","dependent_files":"examples/,examples-ng/,scripts/","gmt_create":"2025-10-10T21:21:34.906074+08:00","gmt_modified":"2025-10-10T21:51:45.76559+08:00","raw_data":"WikiEncrypted:VDiDZJYWRQTud/QhSweUbci5nmvbKr1XjRGbfx/FFZfqsM00JkOg+W8hrUhKeg7dP2uDnc8+6sJQ9ReniYyTgwCqjo+pY6z6R19LY6pFt/ZfTpQjbEbjPEp//346UeMS6mV2OY/gVZBED8W26CRPuLVnWHZ3SFs57Yd2EztVQec1j16tVwOwmNobU843dqTXuO+u7cVIcagerkK0ZdbpW/NxwajsiV/2DGrGhZz+PGe46/dcCee6qJmAyqUopQrWk7ZhlLt5JP65XK5V+byOd476vUm4MqUlci7Yy9AD01bXlyAun7VSIeLxVxOetwwElNnnBqsjCcZ1fP1/Llei87Gf4bAC08gBME9ecjZ3MeCa7fjAzmDCdvfbv4Rfa6KCXRJ9UB+p+ZzjWVojTZsLB6gTAy7+lnv0cm9+aRXfkhaseOqD15k5tj2VY6QFio9hulo54mZAbuC/we++UrFKjguFpz2nAbuLX4Nc4jvBBDc6GkRchbrPUXL0MCvRRAt9nDhf5+g7iMnlyTXfcZmrKsnNwh+/O6hUEpq3cMISJ4H4h2JV6FvRc4kpUFARO8qW0faPd9RQr0OzUy0yfc9zZnwcsxyRdyiMOvhf1U02WvEUKDbqLxKzHaC2EDuvr/3vv4CcQyzF+MEAHxK2BpjEnxRITaS6N3R0ynIc3eFEJwix1BW01UHcbwtAjUOWBXw8Wg7et3bALQRUoRTXQUalb/9WnYSqywD4ZIIoyAcmZO+fB4EfQr2kQkaLBJDIpoIzEymLulEZnksUOtaejrFO7Ze5jt6jCPjF0vsGKtsHOEgq+oznHszE0nhBPYtUYrHfwkXQmLvN+I2Hoe3/poD5UZ81Ovib8dNRRLuP4owbc1PGyQXOQOTVG74RX2cV+1X6jMsuDjmJqljN9Ehc7FIpwfDCPuQfcZUYzyIcO9cA+qDxcGjzYHoR8VY0YGAj9vVW4Ios4gc8t08Se8z8H0qwHgGOYDOLQBH2swlWPlhPyv/HS8XZ2k8+noimhnxzm/iWBOsB3l/Up9DQ7UsxDWH842+xhxJkSevoKY/eAmBeDaGbHO0BtTrPVUepPVWBpYf9yrpyNfTDePlypeJbHGRoLfsVnvSPcndJsMXMrD6XabFhpkM+RqYfJMLqpnZCR/kB5HLrhk8SD2mTLK+3vNPrPucKN6VuHoJ26jpafN8/0Lpb1uGcNhLtWYEpdy1Ow6zNyURaUak8z4HLdAVCj4JceY2FvfLL6ITYIchT2SO60H5xVuHUG1KXDoTMZW1oMT7C7ov64F5UglzGHmFSQLofng9sZiJbdeLGwP1VARq2FR33FaKNH+gABaJh6NHp+avfb5LBu8cp59wgYHqCTiCH0Uo9C/o382ZgQRV31qFhxha4Zm5w20wKHH1tpEylAS6PVKvm1JsWAW8pg5yIgx/pQNOCaJmkk2q2q7DSivgRwbI="},{"id":"f53ef1ed-0ee1-49f7-a90c-99d15b936574","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"API Reference","description":"api-reference","prompt":"Create API documentation for all public interfaces in TyxonQ. Document module exports, class hierarchies, and function signatures with type hints. For each public class and method, specify parameters, return values, exceptions, and usage examples. Focus on the main entry points exposed through __init__.py files across all modules. Include detailed documentation for Chain API methods, device configuration options, compiler parameters, and postprocessing functions. Structure the reference by functional areas: Core, Compiler, Devices, Numerics, Postprocessing, Libraries, and Applications. Provide cross-references between related API components and conceptual documentation.","order":11,"progress_status":"completed","dependent_files":"src/tyxonq/__init__.py,src/tyxonq/core/__init__.py,src/tyxonq/compiler/__init__.py,src/tyxonq/devices/__init__.py,src/tyxonq/numerics/__init__.py,src/tyxonq/postprocessing/__init__.py,src/tyxonq/libs/__init__.py,src/tyxonq/applications/__init__.py","gmt_create":"2025-10-10T21:21:34.906845+08:00","gmt_modified":"2025-10-10T21:51:40.59641+08:00","raw_data":"WikiEncrypted:C34GewOyK1SlumqKiPsSg+WPNa2UHH7yP2PPjE4/OPlAbu3AvGLNlwH2YbJEsK2ZFah4wHB5r1ikrL2gZxnF1Jjj7OZ/cNvnGVzQbySriWCC/x9cdFE8QhxhRA2KwuA37NuosID/89jzZrSvPTuDcdUekAONZv4q+7otYfhMuMSv15wQgk1eyyvg8sHcP3AuxJ8uOiG0ncFMI4YDis4iZLg+fU2S0YqFnRb0Y6E4Y8LBW7czWYdQeuY5FQ0Oaz9qDcJ5gJHlW/XLpt52BndzsG7DyUS4fUTsHAj/lYheAMRbY9u90g3+8ElxfbmJCTvfRwdlgP796n5ZvpjpvzFggMX4TC+ApFd+FVZtdw/icOoBs3nY7ROKXciI3cMdcSYORIPbCxH6FpP5H8kQ48l43ZjCH0iAwUtSeBWjeTs0yJ87h/X3TKBJP/flFTpEI+A1uigcJsusfEJ2Da2437bK6YRT16bdF9qbbM+PTn1hUeeVhBQ2I9Vurwt6KdhZHYafsPSDZiGNUzJGjQyuhVOlqaMlv5aKyWRbGrfId08yNvYz4LTC+inPElzOggdjMLuH3RP2zun70vgGCeF1PnV8T+AR2yc7ZELtr4zvkX6OY8rtCo/hNPPhP37ywrJQel9zfr4RdDXrIB1tHcxA48xRAIjf768RawV7N/ghM2XXPrvpspzwMIH/mUEGeGw7I6d0DrC1bA5CKn4H9/ZzXhHpSkGjmXXoDXHe0HTFOQrcQ4H4gIbSSzmhVkvxfT+9hpfBfGPzdLxuraFoFrYipEbX1oA6n5Nysb5VtpX+Da7FcBbzDuIxIeuOPUIomGIYNdppCN6a1YFcothErbDA5FRENkj91Atb7SJ5S/1o8CN30x+l8sSEdVOMc7ds+qPdhKHK5cQ0uziws21v9fMLyiaaQyKY0aVTROEYTFoK/qX9vS3ETydEdc4NrhBzZI+17k2C7fpAfjxqyl4uiq5apK6iXT3XbDVQjj4BqVe5S3ytBifv/5kHwB2LAKQRR/ZAoR1n9QrXWLSMWmxKMPG8p78nWg+O7mDaiFhxr2WFIVeCvqTHrG9D3ZvSMV5tAbOJhyo5pxCN8JDrBupZkGxceWwVBU7iOIAqX7xDrkARf8CMW7HrMHvXf7oZ9kdgb4Q1hpRGm81YqBZADa6mag6xTELmoO7c7SG8cw3anAx8F4Djoqu6gJIbgNUf6/0HFSR7XZjKDY7EJsVBWfa3zQByxdJZgr8LimJ1rvg0CKXIUbbDkKUr6E/uWJKJlYRIEnIDDwa0CwqwoqKQPKwLmdFRGpDOGDCmDsjXJ8pkBf7DyzhQl9URmH78p60vjQz+lZVLeHLMGCP3uFx1ltobAXC82AwuCWU4mmcQpGAEzM9hyQgO49m93Yf2OMZc6gakpj1G11knIouJZ50N2xHGeWUqLlu3nCvManfBrq6phTkBgpLn0p2/cjI4CR7Co7W4ZbRGkR0P1eUC1eHS+cS1EszedRHDB6Gvxiz3PG5rh4s410HLOwQozoEnhDdoQlTo4akVF1yWaW1RmwAYVe+90SKMZ8D33/ZoPQynBH0PVq9xi94USgs="},{"id":"0a04a277-3d67-4ad3-9572-9adfc478c2fd","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Advanced Features","description":"advanced-features","prompt":"Develop detailed content for Advanced Features focused on cutting-edge capabilities. Explain pulse-level control using pulse_demo.py examples for precise quantum gate implementation. Document noise modeling and calibration through noise channels and error mitigation techniques. Describe hybrid quantum-classical workflows with GPU acceleration shown in hybrid_gpu_pipeline.py. Cover cloud integration patterns using cloud/api.py for distributed quantum computing. Include advanced sampling techniques with shot noise simulation (vqe_shot_noise.py) and parameter shift gradients (parameter_shift.py). Address use cases requiring fine-grained control and high-performance computing requirements.","order":12,"progress_status":"completed","dependent_files":"examples/pulse_demo.py,examples/pulse_demo_scan.py,src/tyxonq/devices/simulators/noise/channels.py,src/tyxonq/cloud/api.py,examples-ng/noisy_qml.py,examples-ng/hybrid_gpu_pipeline.py","gmt_create":"2025-10-10T21:21:34.907781+08:00","gmt_modified":"2025-10-10T21:51:36.855787+08:00","raw_data":"WikiEncrypted:qSUmbhu+RuqdVWUcJ+wGd4e+ZlhOlcU0FTi9snO9I333hGFp1gmtcga/bpsuJGAo9fOYhg6U+uv5xd/Jo0u9Em9sOAVeoN4V53qTBhktgCBZfldvlhy6ejIwDhwOKmrpfMiJQlpUmwJNtVwkii5FV1eCOZUwnQdPNX4ILIV8+Mutp8QAT6MbJSDbQEVJhs0wlSOGXG2LyYA/w89r7L8gpILD6Hn4bsId8+FTJ76fwmuk5hnWxrqO68xSb3soTheS7jMhlSByTeEtaO5xenTpe8SobMSrd2dgDtqhqjN/R1nt9JcFd2vCmU/0HoiFmKO5JspzANTvJusMfKYf+KdvIwuuoNwpvE8NJl+1E6pj4Pr09tBq3jV7pqpzPcRT2KuXACA3Q8Aq6aVQ+BGW2/TxJAOYDSe8GYwRyxMn+hODov9ik/Iw8rhbdrCpei6qA/lEvaFZF7evVtbXds/UlbAsAtr7kUrIJxJg8Gsjx7unddeNmU7PZ1Q92Gr6Me8LbXdg2YkzyuO3ibR4FaIdztLhuI+J8DImTlIvocizOZpo2rnUSgLnGT6GE5rg2SWRqttPWKQAWLlxePp3YwNBYjVkY4MLGAR7xzxmqKe1keAG6cuguVtw0pwjkQXZrADeMM7WZZv5avXwWGuHsaysC9Wm6brxSKjff7Ox7CPdHCouFSeEZoJgOizoBx4yzz7enKimKtV3cnVjOz9WgT+FPNUxm9dub56U9iRzKqJdlzsQql8X9XnJNeClK9Qkm/HPjQtN2LESqXJyT+9yjvi8Vun0xPQqksRuKxfTSylK4Ay/41qQRSGvyMHoKlKdZarLHxp5bbuOR7zqoM9Veyxt35ZdYTh1D+InMRNDjCpifSwZhyGPsDXsoXV4r5XBpBfSbpiB/diNI0+ttQ4vJ1Olb1ArJXDD6tvOqdq00jVC3Fy+K5RYvUA8LlnptbsF8eZkEvQ9oR5WfwSVn39moiKqmnLYkMHw71fHl2t7LlZct9e7a0K0h4dGA1nwUKr9NrftYpQNyrndtfTGIR0uN1mb0BCjDecltYeLKIFWKcUS6+5sSX3lXmrXGOVjRdwdnbz9+uP0GZhcbUyzQB6dtMVeidO73sXGbjHmJnE1lF7+liKjCTP8HaxGr9v5G7/Rb8vghQHlsxVrY+6LKwHV3KcJ0c1dapW2M5PvZ6NxTVbnFK2XFnAp50mtclxHINAj1joLxIhlaVv0i3rINnLCDJtHFoYfldfq4+EBaI1yJwoRhmkez7BXFTHbDlR9lZT3N4r6KRVrgG8mOCGoFGjeldgJaTiwZtnp+2n9fnKw7ageQAMiuRYTuJyNrlz3jjDIuP3nUgiqFHDrkHCsU5hlfI44K90O/HWcBhgcMItR9H6Nj3BinH3uOcUWWpPjxDR34j1MS2zt0R5vVDSWSsnOEPQJl2IaoJH2odxlimhYRFZU411YcxwusVMtqNDc0d7bkjg2KnQOF7xwi5UP1uZENijWB3DymZE7+2fnL8kGU0wCzI5XUVQ="},{"id":"7972cfd4-c320-4a66-ac0f-409aa8b4cb1a","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Testing and Validation","description":"testing-validation","prompt":"Create comprehensive content for Testing and Validation focused on quality assurance methodologies. Explain the test organization by component: core module tests, example validations, chemistry application tests, and molecular validity checks. Document testing strategies for different aspects: IR correctness (test_core_ir.py), compiler transformations (test_compiler_pipeline.py), device integration (test_devices_simulators_gates.py), and application accuracy (test_uccsd_device_smoke.py). Describe benchmarking practices using gradient_benchmark.py and sample_benchmark.py. Provide guidance for contributors on writing effective tests and validating new features. Address continuous integration practices and performance regression tracking.","order":13,"progress_status":"completed","dependent_files":"tests_core_module/,tests_examples/,tests_applications_chem/,tests_mol_valid/","gmt_create":"2025-10-10T21:21:34.90861+08:00","gmt_modified":"2025-10-10T21:52:50.014251+08:00","raw_data":"WikiEncrypted:a51tw9+B5Xez88YuZqi4cFDEbjebvmDSTr+lpUreqeWJxl8P/Nu7W+z9oycBxIIh7IYnju/nm1KLgmilt6EjWClV7WKrTxdjPJ5eU756xfSDq51V85M2DzDlqP6AsHTR/0jhG3RvjfmrQxRmwyzCj4h+7q1JZtp1wfRZRjRlAeSjtLFL+hKRkIJDhdmrbfEnzHEEFFcxs0Iyi5m4BEHi/00bUh595XU4qdl1G/Uc7SPqQxMMschdiBVcQinRlE+yC1SoBt4q0heVcC6i17aR2hwtKuI96AOidEN9/Bllm2tIDMf9nwhNyNipgHzGyYn4z/w6yCalSxsvBMtgog3bimmGFnGrRMjN5Jw2tOa0vXUoorwd613cD6KlV1epRt82DAcjwOTv0X6AilMOQb5auoMIUlcD57vYZ/TCDapMEKjujU0r9wZe01VBrpyc+5yqXpwjBxIxaxnDsAZ4U0VkXRIwC6x6ViNxX/a0Z4Yy5NbE1PC9RnlrqgNzh3k1wEr+eLJhywaSOiyRZRKIcui9sO0TjDzlgjwcO/pMqflDZOmOKoHKhyWhbr2kGIWPkJ1rE2t6JwBVpg+CxCrzVpj2VQvOT6cXv/9cQpZRT7rEDeoT+qWlog+sPEBWFqtmImdmqYm+Atk34h3HINI9Qd84bLjlS4d18cmlVPk4c1gSxON8k+K/xFuF0zH4Oig8MzS52m43tbBCMOPiMQkfdnJXV1awcT0Se7Utz3b/zm3AkcT8hl7YPg6U7EVlRyFbgRDp5DcFb1kHywr/ZZcwUyzi19OeJWOsNHd4q3m70nIM0oVaiODCRXkKqEeVlKJJwPVInOZ+5p00yFCabZ1dU2FWkKcAoywjFu1nOYfaMLF1QYrlpyulLww/OjURQt/zYfPLa5eBIlTj2KXkr5D7gnNHR/NKatPQ5PIFLT07Ol4tLnd28gZaaM7ydQnGt3yT977Dnl3NAA6jpqG1PDnTm/3D7em85Mdp9AF7paprPzNKNo3IbpjiWpc9lcmYv30eOw+trG4Unj/gwhdJNQ2IWjlnS+QsALOm4H34jVqZaqp74T5Zc7xWNupPHOHOfGb3+Vgq8ZlqFWsCU47RpCVRs5hpvxvkpOLTm3wayO2groijzzMPCMCiS43aTaetgdeZ/CM/EJbu0TIZZyEbSZV/xQQ0Y9RNKJAkp0I2b2rVEPbjju3vHp8iAiVogpPeMGvUevUoPfINA/osIA5GVIaqY7Ix2QuQfmK5lOuHSc9bkLL/Nvfy9/YUSku3PdFy6YMeosDLUqSL61SZtOvSAIxW4rhTUqw1wH6ZcwhroWzTIPUSNMNTl3n1mBe+NwtoSGjtIli0BowD+3CMXEbrTVMd5eq7ylyX6wq4NzzeSiuko8LhEr49McIMgEGHsvuss7whUbc97ruIqOp8dU5nGJ9X6+4BUA=="},{"id":"d098b674-d19e-4445-8089-ef411e2aa603","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Configuration and Customization","description":"configuration-customization","prompt":"Create comprehensive content for Configuration and Customization focused on framework extensibility. Explain global configuration options in config.py for backend selection, logging, and performance tuning. Document the plugin system through plugins/registry.py for extending compiler passes, device drivers, and postprocessing methods. Describe customization points for compiler optimization strategies, device-specific parameters, and numerics context management. Include examples of extending the framework with custom components. Address best practices for maintaining compatibility when customizing core behavior. Provide guidance on environment-specific configurations for development, testing, and production.","order":14,"progress_status":"completed","dependent_files":"src/tyxonq/config.py,src/tyxonq/plugins/registry.py,src/tyxonq/compiler/utils/hamiltonian_grouping.py,src/tyxonq/devices/config.py","gmt_create":"2025-10-10T21:21:34.909289+08:00","gmt_modified":"2025-10-10T21:53:07.173505+08:00","raw_data":"WikiEncrypted:aC5ZtUyEKPSxjzg//aVllKOp167MIMMk/Juev/hVoGZ4liEPsikuBn1GN5VOdL4KKvIoXIV84BA/cFlrMLRCvwyO9wUvEjCZ/L8rVtFsQvn/eZZrKw11OOWLNXTMRu49FXeBhs+PEAeoLPPs4sYQc5B1AIMOIxTaz7CZ4x69QYXQSXnwV4jV+w1UoB8rGFSXyGzndfWVZpnO9Nq0IxQtUcLgwF897o/HMDIm3qYLXTA4/RE8swRw0n2PQRHB21U8WBXTExi7ghaEijQabKRcLM0jfhr8NJGDPE2bXUYMUQLsfT4D56rew7m2Rfzv46GcWzNcarLkX6b+t/nE5HfZ/24w0Z3yHJWoUjwkyfXj6qa6I2bvoz9bTaynl/Mm83TS5PaLMfF1CjlHJMuhMCMv3ZIoT51FjkTMvrxbXEbcnwkaNB79/1FinwkSiI7ng3i4VFSkfvKWsUIthFuIOqOxcvTAfQGoBB40RDq5VMj/HDzK7MAs6/AWinmppacjybGxiuo96saHLTkGvCaht5OqSVLArWX9UCQLaqWBJcc9Q0RX1Fmak/anIBlMX46JNeliG8QXHd3ZuSnn+Oeg79HOCFB8Y4a5wUe4U1cZmWTzmkPGRJx43n2sA1aP1Euy6/fGEUsfHsa8QSXvDdUUkLOq3QD2nk0zvn5CMdCJykVFhxRNqQmUpZm3XiXqDZQvK+4DpIiwIPAQC4yDze4Z8a9G2mv3rJUyE6xMxw+TXdfq4hXpmAhNKXsODaQQKSvXZ0kGCYOfsTmjFCuy2GNKrno9bCvesR3t9hI2oeYE39XyrGttV9T562+6ek18FaZJ7aaD6WYrv169BXVAOvSxzlfiiUy9Q2TZINA3hjb4ay0SMp5NToDGX9tChVWTLmXGbu5wEc9ER/fPC52g5hKkCoI4O/2DPb8kNbiF2djrq7phdhS3XIFyqiwDFzJbGq0CGJgrBdQ2eWema7bOiJNHiMMs4sD895MKyNX6cr/Ub8sytQKn+9nmQ9lpIwZ4V7AyAE1BZITR+dZ10dPZTRhbjCi7lgI5TLfK0wgYTCCV5Xb2D5AESmBjK/IzZiYHlZiWiggRxSuGjyHxxkgm9u7KskAvsS9iO1b0KdBU70Jv3rRT5Eflp7JVR578wKDmzAqBo8bJbgnyaJKbzDMTYmFKW1ZKHour+icW3+KHHMeuzVBD/kUNfapC9MPHNPZl72hcn1a+8bE9UuBG5Y/qS1dZ2rlG/5T6HKY6ntW5uQCn7KW7ATvObOlzRoe4c8vy4bxnABoGuSLa63/OCJzeE+MFEvAduLVBZmLb0S7iK/SMA30uJo3xzdv7P/+R6zzQUUlUTVJt6s3goWDiIRLSM8SbmYJcs0+FNgxFIVw7dM0n5FvmGLWKP7UD8kJVIAayuKksK5/XWYDxCmXxbHrgjX1Py/T7zs3/nZQjyVrezMoMr9B4gp1ggCjXQX2TrqYwcPgIwZAo2/yF3rNKtgglrSgiAmV8qA=="},{"id":"a9d2aa67-937f-46a5-bc9c-0dc571fc30d0","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"Contributing and Development","description":"contributing-development","prompt":"Create comprehensive content for Contributing and Development focused on community participation. Document contribution guidelines from CONTRIBUTING.md including code style, testing requirements, and pull request workflow. Explain development setup using pyproject.toml for dependency management and environment configuration. Describe the testing infrastructure and continuous integration requirements. Outline the release process and versioning strategy based on CHANGELOG.md. Provide guidance on reporting issues, proposing new features, and engaging with the development community. Include documentation standards and review processes to maintain quality.","order":15,"progress_status":"completed","dependent_files":"CONTRIBUTING.md,pyproject.toml,tests_core_module/,CHANGELOG.md","gmt_create":"2025-10-10T21:21:34.909939+08:00","gmt_modified":"2025-10-10T21:52:40.124392+08:00","raw_data":"WikiEncrypted:BxDZrTl5aGXx1MaECOB3NU42anCRf6zbyqH+YdDe6yJYax2zvmFZdhqvt0147tDa1kPBnVBUAM6L8rOI9trBULS7STG7uCSimoHtwL0+eHBFN9ueFKOWffyJ97GIttYW+HaTj1rtfbK89+hfRhvstLP0kirDX2i9jcgzeTC+ptvBmuyhLf60Bt67+BQlYIY4946KjziTKbZO6gmN1wUa0L1RBbpz6w4DdppmoZjvA0i8v/NUWxVNMFvndkd31LzCnjwD+DutFt1WdsS7xJ8HxzQZBc80GEhiNgqn9JQnDQx4YVG+zvy6P04PgVhIaI+xNOW2FHMewK3fgQdxa8mUY7Qqll8koOCcdDsJyJ2602I1Tr1HYMS6lT7Aa8oo40YoT48oVJoEzST6RCbH9Ix7siIWiobFSNpLB5CWakZ4eVzBfLxm2/sbWQoxTIbftFnQHTG0XVfwRG/+NYzv4Hcysv91BxweFUdrDR3pef62axHEqjyhDFzV5gRVvAfZbTUdKbE6XauZYHiS9ruHpr56xA0Z08r/EBWgUhBvXa9K1Ap3d2ePv4t7BVxmfhD3y7AGBegr8Jjhg8FqLC2soIv0LDTqugRwRx2fYXQgTL6mDeDAD5EPHmvQ6w/+34hvvBBpcVYUhSuzKJm7ePbO3tWC2XXIUnHGM2UjvBDrhOyZ9f6EAcn8Oxuz1d88L65bYS6hWh8oCBxkeftbcqABrLEGWAId0ievAPBNLHotns+HfM9aQeU5UuuavrTCxs6VfVpvtYhDI0vJrqr49e66an1wF22gcT/77tdD3Dp/EYG61nOXIH1i7vGH6XcRLEW/qBGmUSc2iVAjM75RUnzfDdL2wUzE3BCXGfuS9aHZGbdIoeD9d1qwee5r0/fKUgwpg41mqg354k+fVP47drCUFStUVyN/WnpLvsoBnotQQD8c/9DhbG+OgpAsgHwMlk8w4L960lDWeGDISd04/KKJJalZv29kZwZ/G/wctzFHey/5/wirs/iM6lWM9ionptv9yjsHWvd3e0EkXlhBR9nxqN8+B+M/wgFX1srLr88UdgZKCKM+lKgeWzsa+qYqM9eXn2DU9oK5Bs7BWHpIRYWvld1u5bU1VXUXOpYC5U5Vqtl4LJDpEFK909ZegKDe+9bSS8yYnClDdhASZsDVPlWjfojqr3YxK/D+PKryUD2F0KvhxY62DLSVNNpjSCs2b1Pl+M+UBS/RWvYS1S2upT0fATYulGMfdFVRIn1N7nVSvWG/TUTAzu6N6w4K8REC+sVFG1IppPf7OKzhEanWTLbJ7ESq/5mfKqCja+XhCJw5rIIwGpXRM4DvuRN1Cd5SY4ltFGm4rWUmxcdFGtrVipkERSQzQ/JmmtStbkEkEJ5LUeg7bUI="}],"wiki_items":[{"catalog_id":"6e114fe1-b696-4897-9078-346dbc4008bb","title":"Postprocessing","description":"postprocessing","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"4e3192e9-65a4-4d76-aecd-d5bb87b83c99","gmt_create":"2025-10-10T21:48:54.778636+08:00","gmt_modified":"2025-10-10T21:48:54.781458+08:00"},{"catalog_id":"653a4c79-b781-44a0-919d-4ab57987530e","title":"Device Abstraction","description":"device-abstraction","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"73581c52-dd47-4997-aad6-03322c0beaca","gmt_create":"2025-10-10T21:49:17.011389+08:00","gmt_modified":"2025-10-10T21:49:17.018527+08:00"},{"catalog_id":"b689c08f-8318-4f22-884a-b1ed2f087ddd","title":"Numerics Backend","description":"numerics-backend","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"e5698a80-098e-4168-9145-4395fd1bc593","gmt_create":"2025-10-10T21:50:11.99671+08:00","gmt_modified":"2025-10-10T21:50:12.002572+08:00"},{"catalog_id":"7fc12bf5-cf13-45cf-b21e-370f5443525d","title":"Quantum Chemistry Applications","description":"quantum-chemistry","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"c20745b5-b5ba-4fad-a4a9-e623206cfee8","gmt_create":"2025-10-10T21:50:27.030778+08:00","gmt_modified":"2025-10-10T21:50:27.038029+08:00"},{"catalog_id":"5f9a37c3-59ab-41c6-ac09-34c8680a8b44","title":"Libraries and Reusable Components","description":"libraries-components","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"7a80a7d1-6cd6-4604-816d-37b7c7c7eca2","gmt_create":"2025-10-10T21:50:36.767395+08:00","gmt_modified":"2025-10-10T21:50:36.773753+08:00"},{"catalog_id":"0a04a277-3d67-4ad3-9572-9adfc478c2fd","title":"Advanced Features","description":"advanced-features","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"ca9c74a8-9901-44c1-a72b-6509ee0d3ede","gmt_create":"2025-10-10T21:51:36.850185+08:00","gmt_modified":"2025-10-10T21:51:36.856252+08:00"},{"catalog_id":"f53ef1ed-0ee1-49f7-a90c-99d15b936574","title":"API Reference","description":"api-reference","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"ea2a0401-f03d-44f5-a7c4-1da714763098","gmt_create":"2025-10-10T21:51:40.59019+08:00","gmt_modified":"2025-10-10T21:51:40.596859+08:00"},{"catalog_id":"be2b789c-6423-4d7d-89dc-b724ac123462","title":"Examples and Tutorials","description":"examples-tutorials","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"9bef10f7-3c93-4efd-a935-f34d26fe0b0e","gmt_create":"2025-10-10T21:51:45.758929+08:00","gmt_modified":"2025-10-10T21:51:45.765992+08:00"},{"catalog_id":"a9d2aa67-937f-46a5-bc9c-0dc571fc30d0","title":"Contributing and Development","description":"contributing-development","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"686ead34-d683-4ba8-81d0-a92953060c51","gmt_create":"2025-10-10T21:52:40.122372+08:00","gmt_modified":"2025-10-10T21:52:40.124519+08:00"},{"catalog_id":"7972cfd4-c320-4a66-ac0f-409aa8b4cb1a","title":"Testing and Validation","description":"testing-validation","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"2d3c8f93-2f72-41c8-b4f2-433d351c4b97","gmt_create":"2025-10-10T21:52:50.011634+08:00","gmt_modified":"2025-10-10T21:52:50.014376+08:00"},{"catalog_id":"d098b674-d19e-4445-8089-ef411e2aa603","title":"Configuration and Customization","description":"configuration-customization","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"b3583c62-4d2b-49de-ac31-65e0f4740e6f","gmt_create":"2025-10-10T21:53:07.171038+08:00","gmt_modified":"2025-10-10T21:53:07.173621+08:00"},{"catalog_id":"95fcd0d0-7c8a-4b89-a1f9-c3bf74024ca8","title":"Decomposition","description":"compiler-decomposition","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"2135a4c3-d9c0-44d8-a1ea-a0e033adf323","gmt_create":"2025-10-10T21:53:50.278608+08:00","gmt_modified":"2025-10-10T21:53:50.280998+08:00"},{"catalog_id":"0bfd492c-46e7-4150-9932-f585a8aab84d","title":"Simulator Types","description":"simulator-types","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"5eb4ef16-4d9d-4146-8fee-e15aa725834c","gmt_create":"2025-10-10T21:53:52.297875+08:00","gmt_modified":"2025-10-10T21:53:52.299961+08:00"},{"catalog_id":"0a956462-bfc6-464d-a19a-8011c77c1247","title":"Intermediate Representation (IR)","description":"intermediate-representation","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"ec96b684-1ced-4024-8991-83c41dc6b4a3","gmt_create":"2025-10-10T21:54:25.936225+08:00","gmt_modified":"2025-10-10T21:54:25.938862+08:00"},{"catalog_id":"c3341845-1926-4637-abfa-16233e29389d","title":"Counts to Expectation Value","description":"postprocessing-counts-expval","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"a9878038-a700-4445-bb42-78ba9e280c8f","gmt_create":"2025-10-10T21:55:06.643314+08:00","gmt_modified":"2025-10-10T21:55:06.647651+08:00"},{"catalog_id":"8882a765-e183-4f8a-82c0-6e3fd22d8151","title":"NumPy Backend","description":"numpy-backend","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"ba5091c7-1c89-413b-9a4b-7f3e8cfc62ee","gmt_create":"2025-10-10T21:55:21.717666+08:00","gmt_modified":"2025-10-10T21:55:21.720833+08:00"},{"catalog_id":"fce3f19b-7a9b-429c-80a9-d262086cbba6","title":"Basic Examples","description":"basic-examples","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"d4a9c3e2-0ed0-4b34-a88b-93a4343f2978","gmt_create":"2025-10-10T21:56:27.034026+08:00","gmt_modified":"2025-10-10T21:56:27.036816+08:00"},{"catalog_id":"2908ee36-24ff-42f8-8ce1-1fa2d5c5a768","title":"Circuit Templates","description":"circuit-templates","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"26e42962-f735-40ae-b444-1fb3394b0c40","gmt_create":"2025-10-10T21:56:27.71836+08:00","gmt_modified":"2025-10-10T21:56:27.721357+08:00"},{"catalog_id":"edf523ec-869a-43b8-8588-fa64de51197e","title":"Quantum Chemistry Algorithms","description":"quantum-chemistry-algorithms","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"8aacfec0-9e5b-4a22-80ca-27e9aac356aa","gmt_create":"2025-10-10T21:57:08.118518+08:00","gmt_modified":"2025-10-10T21:57:08.124741+08:00"},{"catalog_id":"f522bae8-096a-4271-861f-fc9e8efec81f","title":"Global Configuration","description":"global-configuration","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"4a7f5b25-d0a4-433e-a44f-55c4fc9b4a3f","gmt_create":"2025-10-10T21:57:47.615612+08:00","gmt_modified":"2025-10-10T21:57:47.619376+08:00"},{"catalog_id":"c5c47ac3-e9e8-4208-af6f-74020789ecf6","title":"Pulse-Level Control","description":"pulse-control","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"bcf3bf08-a661-4bf3-98fa-65bac2391f52","gmt_create":"2025-10-10T21:58:00.122467+08:00","gmt_modified":"2025-10-10T21:58:00.125704+08:00"},{"catalog_id":"cc8cafdc-4381-436f-8dff-751098968a48","title":"Core Module Testing","description":"core-module-testing","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"d5aceb05-6ae4-492e-8321-8fa701762e13","gmt_create":"2025-10-10T21:58:22.522663+08:00","gmt_modified":"2025-10-10T21:58:22.526269+08:00"},{"catalog_id":"6c8f6250-34f7-4454-9594-366d3852f97d","title":"Core API","description":"api-reference-core","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"8b840c96-418e-4af3-9229-ef64b9133c3b","gmt_create":"2025-10-10T21:59:24.434268+08:00","gmt_modified":"2025-10-10T21:59:24.437436+08:00"},{"catalog_id":"1a03aa9d-ae93-4749-a247-5aedf18fbeaa","title":"Gradient Computation","description":"compiler-gradients","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"d9c67b32-f58e-4ab5-9d37-a1e1e40c06f7","gmt_create":"2025-10-10T21:59:46.635456+08:00","gmt_modified":"2025-10-10T21:59:46.639184+08:00"},{"catalog_id":"f751dd23-285d-4789-a3ee-7e7751afc26a","title":"Hardware Integration","description":"hardware-integration","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"0d3db307-d6b1-45a3-ba8d-b94dcb54f059","gmt_create":"2025-10-10T21:59:57.967184+08:00","gmt_modified":"2025-10-10T21:59:57.969875+08:00"},{"catalog_id":"7c4e6d3f-6fa5-48af-b8d0-79d590675b42","title":"PyTorch Backend","description":"pytorch-backend","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"99114343-7f46-4c98-8d4b-9bb0ee32b12d","gmt_create":"2025-10-10T22:01:17.279693+08:00","gmt_modified":"2025-10-10T22:01:17.282341+08:00"},{"catalog_id":"1025635e-2468-4594-8f2b-fb991b09d9fa","title":"Error Mitigation Techniques","description":"postprocessing-error-mitigation","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"67ec7855-999e-4a4d-bb46-b0ab4547b3a0","gmt_create":"2025-10-10T22:01:18.732542+08:00","gmt_modified":"2025-10-10T22:01:18.735281+08:00"},{"catalog_id":"24dff1fa-63ae-478c-9b64-1abf59a976c9","title":"Compiler Pipeline","description":"compiler-pipeline","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"57d8eef8-2f98-497b-8ff1-beda8ff52f3a","gmt_create":"2025-10-10T22:01:24.306959+08:00","gmt_modified":"2025-10-10T22:01:24.310513+08:00"},{"catalog_id":"803af8ef-6286-4940-8330-8480eae2ff8f","title":"Molecule Representation and Hamiltonian Construction","description":"molecule-representation-hamiltonian","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"acab04c7-008c-4dfb-aa30-6af803b5d5b2","gmt_create":"2025-10-10T22:02:43.830494+08:00","gmt_modified":"2025-10-10T22:02:43.834699+08:00"},{"catalog_id":"c6cedf75-b743-4003-9940-317421d67b64","title":"Hamiltonian Encoding","description":"hamiltonian-encoding","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"531ca7f4-f05d-4b74-be34-6c3382098ca3","gmt_create":"2025-10-10T22:03:00.070513+08:00","gmt_modified":"2025-10-10T22:03:00.074293+08:00"},{"catalog_id":"7bdf7164-b7bb-4e90-9d5d-2f730dff0972","title":"Quantum Chemistry Examples","description":"quantum-chemistry-examples","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"cd725ece-6015-47ca-afd2-53675ba729b7","gmt_create":"2025-10-10T22:03:13.22763+08:00","gmt_modified":"2025-10-10T22:03:16.331819+08:00"},{"catalog_id":"52a603d1-e4bb-4c84-b984-0fd087bd2217","title":"Plugin System and Extensibility","description":"plugin-system","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"ca109cdc-ccd5-4683-9947-1d2afa02f140","gmt_create":"2025-10-10T22:04:14.091542+08:00","gmt_modified":"2025-10-10T22:04:14.095731+08:00"},{"catalog_id":"628d6fa5-1ce4-4502-b031-90da66c16b34","title":"Noise Modeling and Calibration","description":"noise-modeling-calibration","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"192385e4-80e1-46ad-a09e-12e3273dba04","gmt_create":"2025-10-10T22:04:33.486238+08:00","gmt_modified":"2025-10-10T22:04:33.489465+08:00"},{"catalog_id":"66b4fb87-da4d-4649-9598-2ad8db90abc1","title":"Example-Based Validation","description":"example-validation","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"472b31d8-3d2f-4614-ab01-b0d8e4558f73","gmt_create":"2025-10-10T22:04:39.11407+08:00","gmt_modified":"2025-10-10T22:04:39.117372+08:00"},{"catalog_id":"53dddf26-4ae6-4200-b5af-45fca433de77","title":"Compiler API","description":"api-reference-compiler","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"32d29899-42db-4810-a8ff-440ad38e4697","gmt_create":"2025-10-10T22:05:39.588882+08:00","gmt_modified":"2025-10-10T22:05:39.592373+08:00"},{"catalog_id":"c7c56472-98de-4941-9b29-17c901e2c677","title":"Simplification","description":"compiler-simplification","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"87de7f09-2b70-48cc-9d4c-990f51af692b","gmt_create":"2025-10-10T22:05:43.151769+08:00","gmt_modified":"2025-10-10T22:05:43.158094+08:00"},{"catalog_id":"34671a99-bb8c-4c04-ade7-cc2d2968111c","title":"Device Configuration and Session Management","description":"device-configuration-session","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"c92e066b-922b-42db-921a-847317bff3e4","gmt_create":"2025-10-10T22:05:45.958929+08:00","gmt_modified":"2025-10-10T22:05:45.962864+08:00"},{"catalog_id":"dd5fbcd8-0302-4064-94d2-0d00202b4748","title":"CuPyNumeric Backend","description":"cupynumeric-backend","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"980830ee-5adc-41f8-b533-9f786685234f","gmt_create":"2025-10-10T22:07:15.35918+08:00","gmt_modified":"2025-10-10T22:07:15.362601+08:00"},{"catalog_id":"0cd0b4d4-c089-40e1-9589-664bcb6ef57c","title":"Device Abstraction Layer","description":"device-abstraction","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"a1553b04-ee92-4229-84f3-19bbadb06336","gmt_create":"2025-10-10T22:07:20.640992+08:00","gmt_modified":"2025-10-10T22:07:20.645669+08:00"},{"catalog_id":"c0dc8988-73dc-4799-a01d-fd1a416e62db","title":"Classical Shadows","description":"postprocessing-classical-shadows","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"4b269d5e-2021-4ec0-8330-0ad361efb025","gmt_create":"2025-10-10T22:07:29.2923+08:00","gmt_modified":"2025-10-10T22:07:29.296728+08:00"},{"catalog_id":"24f839b8-80ff-4231-a0d2-bb943e93ce61","title":"Advanced Computing Examples","description":"advanced-computing-examples","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"052c5f89-6c83-4481-8599-d65ef6cbc5ee","gmt_create":"2025-10-10T22:08:39.857616+08:00","gmt_modified":"2025-10-10T22:08:39.86089+08:00"},{"catalog_id":"1a21d47d-03e4-473e-887c-f53946666031","title":"Quantum Kernels","description":"quantum-kernels","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"fa382a5d-8d72-40cc-b39f-ee7ad4a67971","gmt_create":"2025-10-10T22:09:02.393023+08:00","gmt_modified":"2025-10-10T22:09:02.395943+08:00"},{"catalog_id":"21884915-2785-4d06-874b-5407f53d00b2","title":"Execution Runtimes","description":"quantum-chemistry-runtimes","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"6f712fde-30b6-45ed-b4ca-94e417ca6419","gmt_create":"2025-10-10T22:09:42.710517+08:00","gmt_modified":"2025-10-10T22:09:42.714723+08:00"},{"catalog_id":"1ab35330-ab1a-4a44-bf35-cc676e60e719","title":"Framework Customization Points","description":"customization-points","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"a2c8ba95-d24d-4f5a-ae7e-0fed25509220","gmt_create":"2025-10-10T22:10:47.478073+08:00","gmt_modified":"2025-10-10T22:10:47.481319+08:00"},{"catalog_id":"4b3f6dd7-6e5a-471a-b25c-d6b5de52b601","title":"Hybrid Quantum-Classical Workflows","description":"hybrid-workflows","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"e2219534-de74-459c-9330-120d359789f4","gmt_create":"2025-10-10T22:11:07.452836+08:00","gmt_modified":"2025-10-10T22:11:07.456671+08:00"},{"catalog_id":"f4e8439e-a568-49e3-82d4-e512b2d06446","title":"Quantum Chemistry Application Testing","description":"chemistry-application-testing","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"6e476855-9df7-4389-a934-5534914f72b9","gmt_create":"2025-10-10T22:11:10.396704+08:00","gmt_modified":"2025-10-10T22:11:10.399973+08:00"},{"catalog_id":"623db65c-51f7-4fb3-bb49-e20dddd2cba5","title":"Rewriting","description":"compiler-rewriting","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"d4a38953-b9e7-48be-af08-399b9f3e0c0b","gmt_create":"2025-10-10T22:12:17.338578+08:00","gmt_modified":"2025-10-10T22:12:17.343572+08:00"},{"catalog_id":"8237014b-8913-4e25-86c3-7aac3af21348","title":"Numerics Backend System","description":"numerics-backend","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"cd1ff556-53f1-401c-bfe4-f440f59f8733","gmt_create":"2025-10-10T22:13:04.470926+08:00","gmt_modified":"2025-10-10T22:13:04.477425+08:00"},{"catalog_id":"4ac4cc07-f04e-4128-a47f-bfdca70bf55d","title":"Devices API","description":"api-reference-devices","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"3d0ec67c-127f-4368-a340-0f9c92194bde","gmt_create":"2025-10-10T22:13:18.240765+08:00","gmt_modified":"2025-10-10T22:13:18.247344+08:00"},{"catalog_id":"b74a4569-b634-4110-9aa7-45a2370c037c","title":"Backend Context Management","description":"backend-context-management","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"9e29bc51-2bce-422f-8261-d82a07814f03","gmt_create":"2025-10-10T22:13:23.509766+08:00","gmt_modified":"2025-10-10T22:13:23.513118+08:00"},{"catalog_id":"cd0d1ca4-143a-46d3-868b-0e2a408584d8","title":"Metrics and Analysis","description":"postprocessing-metrics","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"929463ca-5e28-4924-a594-941da705e160","gmt_create":"2025-10-10T22:14:11.527272+08:00","gmt_modified":"2025-10-10T22:14:11.531202+08:00"},{"catalog_id":"8b67590c-e2da-40c7-afe6-f200c43b8182","title":"Cloud Integration Examples","description":"cloud-integration-examples","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"9528e77c-920c-4113-aa93-85562786c2a0","gmt_create":"2025-10-10T22:14:57.146225+08:00","gmt_modified":"2025-10-10T22:14:57.151566+08:00"},{"catalog_id":"80f2b5ca-5184-4918-ab68-ad1c7984e0be","title":"Classical Chemistry Integration","description":"classical-chemistry-integration","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"8eea8756-2674-4f74-8301-09e063306235","gmt_create":"2025-10-10T22:15:05.791549+08:00","gmt_modified":"2025-10-10T22:15:05.796034+08:00"},{"catalog_id":"240da10d-b9a5-4dc1-9e43-c75cd2e4853d","title":"Molecular Validity and Dynamics Testing","description":"molecular-validity-testing","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"48ed7e4a-1efc-4fcf-87d8-4f1263287922","gmt_create":"2025-10-10T22:16:09.180205+08:00","gmt_modified":"2025-10-10T22:16:09.185878+08:00"},{"catalog_id":"0cf47eb4-51ab-4cb4-b357-0d61e8aae060","title":"Cloud Integration","description":"cloud-integration","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"971724e2-f829-42fe-9886-203007e83193","gmt_create":"2025-10-10T22:16:19.413074+08:00","gmt_modified":"2025-10-10T22:16:19.416421+08:00"},{"catalog_id":"82a3713d-b244-4c4d-89c5-0844d8d02c02","title":"Numerics API","description":"api-reference-numerics","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"aac62b31-c98c-4033-bdd8-061b6368958a","gmt_create":"2025-10-10T22:16:37.369686+08:00","gmt_modified":"2025-10-10T22:16:37.373345+08:00"},{"catalog_id":"9c1a8bb9-67eb-4e27-9038-e04493016369","title":"Scheduling","description":"compiler-scheduling","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"293cc077-874a-4510-9447-29a8af98c1d4","gmt_create":"2025-10-10T22:17:27.565514+08:00","gmt_modified":"2025-10-10T22:17:27.569247+08:00"},{"catalog_id":"1db93f6e-92ee-4193-90c9-e3240486062a","title":"Vectorization Framework","description":"vectorization-framework","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"0a45218d-86aa-422b-9bfb-d9ebc44a89b2","gmt_create":"2025-10-10T22:17:38.116985+08:00","gmt_modified":"2025-10-10T22:17:38.120085+08:00"},{"catalog_id":"f735e467-518a-4e97-8e6f-9682e2605a65","title":"Postprocessing Layer","description":"postprocessing-layer","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"cbdbb3d5-1152-4277-bdec-f210a27196d4","gmt_create":"2025-10-10T22:17:40.275153+08:00","gmt_modified":"2025-10-10T22:17:40.279593+08:00"},{"catalog_id":"38694c6b-27a3-45b2-985a-d1a9bb5abee0","title":"Pulse-Level Control Examples","description":"pulse-control-examples","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"46262da5-0423-4a8b-8954-953e8f604a6b","gmt_create":"2025-10-10T22:18:29.627654+08:00","gmt_modified":"2025-10-10T22:18:29.634066+08:00"},{"catalog_id":"83498097-8e06-410c-bf59-2b4a228d19dc","title":"Postprocessing API","description":"api-reference-postprocessing","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"3ed0f163-2103-42c0-b43a-9c336ee0653e","gmt_create":"2025-10-10T22:18:51.851043+08:00","gmt_modified":"2025-10-10T22:18:51.857592+08:00"},{"catalog_id":"0338adc6-5527-47df-989a-a79660d3a14e","title":"Backend Compilers","description":"compiler-backends","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"e9da5532-d6db-42cb-83bc-3ce668d5a876","gmt_create":"2025-10-10T22:18:53.275609+08:00","gmt_modified":"2025-10-10T22:18:53.281165+08:00"},{"catalog_id":"5d091cd5-87db-40a8-b6f3-190eacdf7e76","title":"Differentiation and Gradient Examples","description":"differentiation-examples","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"a1247e57-5f21-4b27-8e60-b1b7c7138885","gmt_create":"2025-10-10T22:20:01.11826+08:00","gmt_modified":"2025-10-10T22:20:01.125084+08:00"},{"catalog_id":"5b5d6df6-131f-417f-9e77-eea9ca79ac70","title":"Error Mitigation Examples","description":"error-mitigation-examples","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"f511d5a7-9405-46d9-9c2d-ea83830e094c","gmt_create":"2025-10-10T22:20:21.182812+08:00","gmt_modified":"2025-10-10T22:20:21.186072+08:00"},{"catalog_id":"597e341d-c253-4c4c-a540-40ddd08797df","title":"Libraries API","description":"api-reference-libraries","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"0784a26b-d671-40be-9e91-558585c560ce","gmt_create":"2025-10-10T22:20:33.712817+08:00","gmt_modified":"2025-10-10T22:20:33.720179+08:00"},{"catalog_id":"b08e6312-36d2-4fe0-8059-1572b13c8cf4","title":"Cloud API","description":"api-reference-cloud","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"f42a4754-d71a-43c1-b2a4-cec9507c13f9","gmt_create":"2025-10-10T22:21:37.588348+08:00","gmt_modified":"2025-10-10T22:21:37.594684+08:00"},{"catalog_id":"d48a9499-37ad-49ab-82c7-3109e14c4e9a","title":"Utility Scripts","description":"utility-scripts","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"99af759f-4ea2-4052-a88a-b6cba57ddf9d","gmt_create":"2025-10-10T22:21:42.508285+08:00","gmt_modified":"2025-10-10T22:21:42.51289+08:00"},{"catalog_id":"61df0675-6efe-434e-8be6-66c5bb88ae9c","title":"Applications API","description":"api-reference-applications","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"1b2fa8d5-0ae0-445f-b4cb-3b52dd977e2c","gmt_create":"2025-10-10T22:21:46.257142+08:00","gmt_modified":"2025-10-10T22:21:46.264506+08:00"},{"catalog_id":"8fc7f87e-cfb1-43e0-a576-b8e3544748da","title":"Parameter Shift Rule","description":"parameter-shift","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"7d45394a-025f-4ceb-8c38-6c59b3577a0a","gmt_create":"2025-10-10T22:22:42.169409+08:00","gmt_modified":"2025-10-10T22:22:42.175399+08:00"},{"catalog_id":"71ce98b6-c48f-4ba6-8145-443b2a04d8d8","title":"Native Compiler","description":"native-compiler","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"cf85393e-b0bd-46a2-9fe9-d8d775ce56ae","gmt_create":"2025-10-10T22:22:49.99248+08:00","gmt_modified":"2025-10-10T22:22:49.999506+08:00"},{"catalog_id":"681a8f13-d455-457a-ada6-6643d47e67f3","title":"Measurement Optimization","description":"compiler-rewriting-measurement","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"6f630909-86ae-4a9a-9121-2f59c6d46bd5","gmt_create":"2025-10-10T22:22:56.071994+08:00","gmt_modified":"2025-10-10T22:22:56.078702+08:00"},{"catalog_id":"558308bb-a46e-459e-ab50-c56909d20de9","title":"Simulators","description":"simulators","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"98a966d8-5c33-42ff-b433-f3f5c3ccd60a","gmt_create":"2025-10-10T22:24:03.120358+08:00","gmt_modified":"2025-10-10T22:24:03.126147+08:00"},{"catalog_id":"e948006c-6a9e-4afa-a0bf-dff490882d5e","title":"Compilation Stages","description":"compiler-stages","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"2ced0744-8f18-485b-9dc0-99bb277c9f39","gmt_create":"2025-10-10T22:24:11.874683+08:00","gmt_modified":"2025-10-10T22:24:11.877355+08:00"},{"catalog_id":"408ab438-3ad3-4721-aeec-9bd022aed485","title":"ArrayBackend Protocol","description":"array-backend-protocol","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"d4617346-9c29-480f-b370-e6f60099a965","gmt_create":"2025-10-10T22:25:12.445727+08:00","gmt_modified":"2025-10-10T22:25:12.44909+08:00"},{"catalog_id":"55dc198c-7342-4f99-a7e1-148956775108","title":"Readout Mitigation","description":"postprocessing-readout-mitigation","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"198ba559-06b6-4cae-80be-7f95e6dd36e1","gmt_create":"2025-10-10T22:25:23.383191+08:00","gmt_modified":"2025-10-10T22:25:23.385882+08:00"},{"catalog_id":"8f054d9d-5117-4000-8298-a61ec1acd85d","title":"UCCSD Algorithm","description":"uccsd-algorithm","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"205d3fc0-f594-4182-ab30-0d5574057684","gmt_create":"2025-10-10T22:25:34.802412+08:00","gmt_modified":"2025-10-10T22:25:34.80676+08:00"},{"catalog_id":"8da2b236-1373-499d-a4ad-35b11c0d9286","title":"HEA Device Runtime","description":"hea-device-runtime","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"031a9aa2-ed96-43b2-a345-51fdf05a57e7","gmt_create":"2025-10-10T22:26:30.887666+08:00","gmt_modified":"2025-10-10T22:26:30.890421+08:00"},{"catalog_id":"56894733-43cc-4b83-a6f0-b73a5caf8a90","title":"High-Performance Simulations","description":"high-performance-simulations","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"852e1da2-62fd-43e2-a2a8-6ae82e32852a","gmt_create":"2025-10-10T22:26:56.208835+08:00","gmt_modified":"2025-10-10T22:26:56.214494+08:00"},{"catalog_id":"e222d9e8-97cf-4e27-a5df-222d0d987fa1","title":"UCCSD and HEA Algorithm Examples","description":"uccsd-hea-examples","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"903844a6-0d6c-47c4-abdc-c089a9c88244","gmt_create":"2025-10-10T22:27:14.368667+08:00","gmt_modified":"2025-10-10T22:27:15.095259+08:00"},{"catalog_id":"69c81c3e-5f0a-44a6-b5df-5e96b452ed22","title":"Readout Error Mitigation","description":"readout-error-mitigation","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"6f25f78d-6b21-4ecc-bba0-63a4cce0fc72","gmt_create":"2025-10-10T22:27:34.752921+08:00","gmt_modified":"2025-10-10T22:27:34.758716+08:00"},{"catalog_id":"f7db03dc-e925-441d-9288-36b26bb491d0","title":"Basic Circuit Validation","description":"basic-circuit-validation","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"366f10cb-1ec2-45b0-b67f-9c2657c2dcf8","gmt_create":"2025-10-10T22:28:30.360513+08:00","gmt_modified":"2025-10-10T22:28:30.366361+08:00"},{"catalog_id":"16498fa8-9146-4dab-8293-52bc16016348","title":"Autograd vs Counts-Based Differentiation","description":"autograd-vs-counts","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"e5736bac-a5f9-4cf0-aa6b-f53f9a3e1c8c","gmt_create":"2025-10-10T22:28:35.974284+08:00","gmt_modified":"2025-10-10T22:28:35.980301+08:00"},{"catalog_id":"53e3dcc4-a5f4-4102-a2c2-55a3187171b4","title":"Intermediate Representation Testing","description":"ir-testing","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"e5416436-17c6-4f4e-bafc-6946979b9107","gmt_create":"2025-10-10T22:29:00.245927+08:00","gmt_modified":"2025-10-10T22:29:00.25297+08:00"},{"catalog_id":"42a54b63-7530-4e4e-abc0-d5696e50a24c","title":"UCC Family Algorithm Testing","description":"ucc-family-testing","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"a2103048-e14d-48de-ba2e-21747433a402","gmt_create":"2025-10-10T22:29:33.390905+08:00","gmt_modified":"2025-10-10T22:29:33.397322+08:00"},{"catalog_id":"66f9f4c6-043b-481c-8e37-b60febe1e2a9","title":"Molecule and Hamiltonian Validation","description":"molecule-hamiltonian-validation","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"b293e340-0b1a-4324-b983-1b6221ae35eb","gmt_create":"2025-10-10T22:30:00.694524+08:00","gmt_modified":"2025-10-10T22:30:00.699219+08:00"},{"catalog_id":"6de1b768-8382-4ad9-94f2-6d78190b69fd","title":"Circuit IR","description":"api-reference-core-circuit","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"025ab8f8-7c0f-41bc-8237-405f83a7a5c0","gmt_create":"2025-10-10T22:30:06.155546+08:00","gmt_modified":"2025-10-10T22:30:06.15816+08:00"},{"catalog_id":"80d82a6f-12e2-47f1-8284-d5d5c2086b88","title":"Native Compiler","description":"compiler-api-native","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"e412ae1c-c890-4d51-a92f-88a74dcfc62e","gmt_create":"2025-10-10T22:30:47.561407+08:00","gmt_modified":"2025-10-10T22:30:47.564464+08:00"},{"catalog_id":"e8bd0624-be4d-47ee-a6bb-9f7c7bfb08c8","title":"Core Interface","description":"numerics-api-core-interface","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"28184f26-f1ec-4ca8-bd2a-cdba2ca47bba","gmt_create":"2025-10-10T22:31:11.613534+08:00","gmt_modified":"2025-10-10T22:31:11.616028+08:00"},{"catalog_id":"c0aaeb49-cf8e-4379-951b-94612e4ef81f","title":"Simulators","description":"api-reference-devices-simulators","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"2e8fa9de-28cd-4ca6-9f8d-a50e5d4d8036","gmt_create":"2025-10-10T22:31:27.855405+08:00","gmt_modified":"2025-10-10T22:31:27.858391+08:00"},{"catalog_id":"b677f3d1-718e-45bd-8846-a9da593d945e","title":"Readout Mitigation","description":"postprocessing-api-readout-mitigation","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"e061e253-699c-49b7-b37e-c3cddad3df53","gmt_create":"2025-10-10T22:31:43.314075+08:00","gmt_modified":"2025-10-10T22:31:43.317425+08:00"},{"catalog_id":"122dc7cf-96de-4e8d-8267-b2e1f38acb09","title":"Device Management","description":"cloud-api-device-management","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"664295b6-5d47-4b93-9dba-d0c995082e37","gmt_create":"2025-10-10T22:32:23.105207+08:00","gmt_modified":"2025-10-10T22:32:23.107771+08:00"},{"catalog_id":"d5c1aef1-5986-4ca2-bba8-ba24a030df89","title":"Circuits Library API","description":"api-reference-circuits-library","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"9387749e-6bfa-40e1-9cce-b4eeb62c1f92","gmt_create":"2025-10-10T22:32:31.920152+08:00","gmt_modified":"2025-10-10T22:32:31.923021+08:00"},{"catalog_id":"9bdd7a13-4ef7-4811-ac40-cd769d89c4e1","title":"UCCSD Algorithm","description":"applications-api-uccsd","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"2438b51b-283a-4574-8587-f24bcfe40eb8","gmt_create":"2025-10-10T22:33:14.275875+08:00","gmt_modified":"2025-10-10T22:33:14.278562+08:00"},{"catalog_id":"cfa786ac-4a99-424f-88ff-0ba4928d55ca","title":"Quantum Natural Gradient (QNG)","description":"quantum-natural-gradient","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"e87b8aab-1768-4140-b20f-23e4c5df9535","gmt_create":"2025-10-10T22:33:24.767365+08:00","gmt_modified":"2025-10-10T22:33:24.769761+08:00"},{"catalog_id":"1c0886ae-905d-4218-8110-8eb8c3ceb40b","title":"Qiskit Compiler","description":"qiskit-compiler","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"348cdc60-d785-4920-affa-10f42d6b206c","gmt_create":"2025-10-10T22:33:28.344387+08:00","gmt_modified":"2025-10-10T22:33:28.347145+08:00"},{"catalog_id":"cc347ab9-fd50-4183-930e-4941dfa6a389","title":"Gate Transformation","description":"compiler-rewriting-gates-transform","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"aa425a8a-9ec7-4c3c-82d9-7bdb5f3afd1a","gmt_create":"2025-10-10T22:33:54.595143+08:00","gmt_modified":"2025-10-10T22:33:54.597919+08:00"},{"catalog_id":"5f420082-8ec7-4b8a-983f-a408a905692f","title":"Compiler Backends","description":"compiler-backends","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"64edcb76-a309-4516-9a22-e2d87e7ee76b","gmt_create":"2025-10-10T22:34:54.800459+08:00","gmt_modified":"2025-10-10T22:34:54.803381+08:00"},{"catalog_id":"9e22ca4e-a835-4f25-a17e-1639908dbac3","title":"Backend Implementations","description":"backend-implementations","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"1d573a3e-d520-44ad-97ff-cf4649119936","gmt_create":"2025-10-10T22:35:37.423597+08:00","gmt_modified":"2025-10-10T22:35:37.426575+08:00"},{"catalog_id":"f739b450-fa6a-47c2-b1ad-9cacefa5ee7c","title":"Noise-Adaptive Processing","description":"postprocessing-noise-adaptive-processing","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"6541d0cc-2589-47ad-b581-5790db711148","gmt_create":"2025-10-10T22:35:47.274857+08:00","gmt_modified":"2025-10-10T22:35:47.27738+08:00"},{"catalog_id":"88c1dd4e-4203-46d3-9671-b0d694cb10fa","title":"Hardware Drivers","description":"hardware-drivers","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"cf18455a-adb7-4ee4-adc4-188584f778ca","gmt_create":"2025-10-10T22:36:29.643847+08:00","gmt_modified":"2025-10-10T22:36:29.647345+08:00"},{"catalog_id":"e35538ce-de18-44de-b8ee-8da947e174e3","title":"HEA Algorithm","description":"hea-algorithm","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"31aa94ae-5035-4fd0-85b0-e4f7e6b97ad7","gmt_create":"2025-10-10T22:37:06.964151+08:00","gmt_modified":"2025-10-10T22:37:06.969492+08:00"},{"catalog_id":"ad9031d4-e88d-4d8e-9a0f-19025c1f4b8c","title":"HEA Numeric Runtime","description":"hea-numeric-runtime","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"2cbcf05c-bb52-4630-b23c-b34aaecca91d","gmt_create":"2025-10-10T22:40:46.940652+08:00","gmt_modified":"2025-10-10T22:40:46.944386+08:00"},{"catalog_id":"805f9b38-95ce-4bf1-8305-83962821b97e","title":"Large-Scale Computing","description":"large-scale-computing","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"8a5ad08e-190c-4e28-bce4-b7234bc00f79","gmt_create":"2025-10-10T22:41:11.355926+08:00","gmt_modified":"2025-10-10T22:41:11.359997+08:00"},{"catalog_id":"1252cd5e-6f56-43a6-9e3b-b68eaf3cec52","title":"Classical Chemistry Methods Integration","description":"classical-chemistry-integration","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"29bd15fd-11e6-4b8a-9ed2-c4edd7830a9a","gmt_create":"2025-10-10T22:41:19.367772+08:00","gmt_modified":"2025-10-10T22:41:19.37238+08:00"},{"catalog_id":"902b7d04-efe8-4ed8-988d-8db59189d4f5","title":"Monte Carlo Noise Simulation","description":"monte-carlo-noise-simulation","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"368b9c8a-da7e-408d-8f92-0afe4f0bc421","gmt_create":"2025-10-10T22:42:16.180704+08:00","gmt_modified":"2025-10-10T22:42:16.184567+08:00"},{"catalog_id":"6c99fc99-b198-4b04-b502-755a2810c285","title":"Parameter Shift Rule Implementation","description":"parameter-shift-rule","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"26651272-9afd-4127-b2a4-99801850d1fb","gmt_create":"2025-10-10T22:42:20.329559+08:00","gmt_modified":"2025-10-10T22:42:20.335472+08:00"},{"catalog_id":"2e805944-c094-4435-9cb2-e030a539a552","title":"Compiler Pipeline Testing","description":"compiler-testing","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"719dff93-0b80-407d-8cb7-e7cac22af963","gmt_create":"2025-10-10T22:42:38.324117+08:00","gmt_modified":"2025-10-10T22:42:38.328171+08:00"},{"catalog_id":"ec7dc711-e16a-4f2c-a389-96c080c24a50","title":"Variational Algorithms Validation","description":"variational-algorithms-validation","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"8fc74ee6-17cf-4a8c-8227-2e539e6c544c","gmt_create":"2025-10-10T22:43:25.082891+08:00","gmt_modified":"2025-10-10T22:43:25.087236+08:00"},{"catalog_id":"0c28eda0-b650-4d75-9f60-42ecd19f6ae8","title":"HEA Family Algorithm Testing","description":"hea-family-testing","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"d3cc48a8-77bc-44f4-ad58-377d7d779be1","gmt_create":"2025-10-10T22:43:47.102127+08:00","gmt_modified":"2025-10-10T22:43:47.106899+08:00"},{"catalog_id":"3e6ee33d-42f8-4437-9264-5f05b5dcb22f","title":"Dynamics Simulation Testing","description":"dynamics-simulation-testing","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"fdd04305-fc2a-43a4-b033-723255d5d3b8","gmt_create":"2025-10-10T22:43:50.93692+08:00","gmt_modified":"2025-10-10T22:43:50.942337+08:00"},{"catalog_id":"38924dc8-d09d-44e3-880b-8bc6ed8d2f3e","title":"Qiskit Compiler","description":"compiler-api-qiskit","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"532f609e-66d9-445a-9024-f299cc10c3f2","gmt_create":"2025-10-10T22:44:48.609902+08:00","gmt_modified":"2025-10-10T22:44:48.615463+08:00"},{"catalog_id":"2c6b2a18-8f43-4074-b538-aac932c4ac3e","title":"Pulse IR","description":"api-reference-core-pulse","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"44178e7f-775f-4417-96f1-4e9809f11f66","gmt_create":"2025-10-10T22:44:54.179596+08:00","gmt_modified":"2025-10-10T22:44:54.182767+08:00"},{"catalog_id":"f408be04-4cd1-4017-b39e-94b815d79ece","title":"Hardware Drivers","description":"api-reference-devices-hardware","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"631fa5bf-68d1-46a1-8821-afcebfc76b68","gmt_create":"2025-10-10T22:45:03.786189+08:00","gmt_modified":"2025-10-10T22:45:03.789667+08:00"},{"catalog_id":"d11f4e66-3dc9-4a65-92aa-2f1182bb7755","title":"NumPy Backend","description":"numerics-api-numpy-backend","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"f6fc270f-ec3a-4f8d-a1a3-50bdd5fa1b69","gmt_create":"2025-10-10T22:46:16.264865+08:00","gmt_modified":"2025-10-10T22:46:16.271192+08:00"},{"catalog_id":"2781649b-70b0-4032-b104-f4d19fd42ec3","title":"Expectation Value Calculation","description":"postprocessing-api-expectation-value","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"e1cb3e5e-4803-47f6-ab89-13ae4a8d66b6","gmt_create":"2025-10-10T22:46:20.866689+08:00","gmt_modified":"2025-10-10T22:46:20.869791+08:00"},{"catalog_id":"f5c3c08f-a7e9-42e2-8c07-6ddb5fb47bf5","title":"Quantum Library API","description":"api-reference-quantum-library","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"5e6e2ab7-e698-49f9-8553-557e1c62b76a","gmt_create":"2025-10-10T22:46:29.575766+08:00","gmt_modified":"2025-10-10T22:46:29.579613+08:00"},{"catalog_id":"b26fd035-234a-4623-b465-c72f588078d7","title":"Task Management","description":"cloud-api-task-management","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"a1b427fe-2938-49e9-aaa8-1158267fce70","gmt_create":"2025-10-10T22:47:17.974931+08:00","gmt_modified":"2025-10-10T22:47:17.980594+08:00"},{"catalog_id":"f73f3d8b-079a-40c6-a29d-c2ec75b8fe48","title":"Auto-Measurement Insertion","description":"compiler-rewriting-auto-measure","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"ed23b605-0f04-4500-bf23-561109911f70","gmt_create":"2025-10-10T22:47:24.235055+08:00","gmt_modified":"2025-10-10T22:47:24.238266+08:00"},{"catalog_id":"c48ea2c3-7167-4d11-8b27-d0b8ebc699d4","title":"HEA Algorithm","description":"applications-api-hea","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"d3c8cb19-072c-4eb8-8b1f-e80e385634cd","gmt_create":"2025-10-10T22:48:04.918221+08:00","gmt_modified":"2025-10-10T22:48:04.921696+08:00"},{"catalog_id":"fc93400c-d676-491e-8495-6e418de8845d","title":"Context Management System","description":"context-management","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"0bf9a153-905e-4f0e-89ca-fc23d7d1227b","gmt_create":"2025-10-10T22:48:29.326862+08:00","gmt_modified":"2025-10-10T22:48:29.329595+08:00"},{"catalog_id":"231def21-08a6-4a24-9919-2687a70ea79a","title":"k-UpCCGSD Algorithm","description":"k-upccgsd-algorithm","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"5437c20f-4763-4258-acb6-f557eb0d235d","gmt_create":"2025-10-10T22:48:42.716395+08:00","gmt_modified":"2025-10-10T22:48:42.720609+08:00"},{"catalog_id":"e15fd39b-82ec-4947-92cb-431eed9f9d31","title":"Hydrogen Chain Hamiltonian Modeling","description":"hydrogen-chain-modeling","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"99e319d8-b568-45aa-912a-264a6b3a63d2","gmt_create":"2025-10-10T22:49:19.471751+08:00","gmt_modified":"2025-10-10T22:49:19.476659+08:00"},{"catalog_id":"53897d59-8e72-419a-aa8c-e8057365beb7","title":"UCC Device Runtime","description":"ucc-device-runtime","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"ecb55a5f-ef93-47a2-a3d2-e3c8eeb73105","gmt_create":"2025-10-10T22:49:44.58712+08:00","gmt_modified":"2025-10-10T22:49:44.591017+08:00"},{"catalog_id":"d5d0d023-2230-4c15-ad5c-88e517fce926","title":"Optimization and Benchmarking","description":"optimization-and-benchmarking","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"f65bb8a4-42b6-43b8-9aa0-56e132db1e95","gmt_create":"2025-10-10T22:49:51.388161+08:00","gmt_modified":"2025-10-10T22:49:51.394395+08:00"},{"catalog_id":"4daf5f10-d943-46fd-932d-93db8a97718d","title":"Noise Calibration Procedures","description":"noise-calibration-procedures","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"5d027844-0183-4bb6-9ec7-b9eb936a6d69","gmt_create":"2025-10-10T22:50:18.94002+08:00","gmt_modified":"2025-10-10T22:50:18.94457+08:00"},{"catalog_id":"0dd6e84b-e9d3-4bff-a365-307b0ebe7170","title":"Devices and Simulators Testing","description":"devices-testing","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"009ccee6-74df-4e67-8577-2d36b2f0e914","gmt_create":"2025-10-10T22:51:10.197274+08:00","gmt_modified":"2025-10-10T22:51:10.200956+08:00"},{"catalog_id":"7db12be9-df54-4cd6-8727-83901bdf2368","title":"Jacobian Calculation and Numerical Differentiation","description":"jacobian-computation","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"b07b4a6e-3bdc-471e-92cc-8999ff332d6e","gmt_create":"2025-10-10T22:51:33.419425+08:00","gmt_modified":"2025-10-10T22:51:33.426459+08:00"},{"catalog_id":"5393e6a1-518c-46a7-a731-8fcab0625fb1","title":"Time Evolution Validation","description":"time-evolution-validation","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"afaee586-e0c5-41aa-83c2-1b3ed67cce00","gmt_create":"2025-10-10T22:51:54.304915+08:00","gmt_modified":"2025-10-10T22:51:54.312334+08:00"},{"catalog_id":"a2b4e615-0949-42b1-979b-ccfa4bb2bd22","title":"Optimizer Integration Testing","description":"optimizer-integration-testing","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"92a13fec-6beb-411e-a572-b9c8e32693a4","gmt_create":"2025-10-10T22:52:37.796916+08:00","gmt_modified":"2025-10-10T22:52:37.802974+08:00"},{"catalog_id":"c05d71bf-d4ef-47fd-8d31-be6a5c9590d3","title":"PyTorch Backend","description":"numerics-api-pytorch-backend","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"340e1bef-d105-486f-840a-816c68d0f8f1","gmt_create":"2025-10-10T22:53:12.494121+08:00","gmt_modified":"2025-10-10T22:53:12.497507+08:00"},{"catalog_id":"8508fff5-2f92-4c35-ac55-80934ab85c63","title":"Compilation Stages","description":"compiler-api-stages","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"5e514c38-a0e7-4460-8a0d-791646c79d11","gmt_create":"2025-10-10T22:53:21.257172+08:00","gmt_modified":"2025-10-10T22:53:21.262186+08:00"},{"catalog_id":"3b394efc-dad0-47b6-968b-2f6362485751","title":"Classical Shadows","description":"postprocessing-api-classical-shadows","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"5b753566-5cde-48d4-8c10-f4f5b41e6f31","gmt_create":"2025-10-10T22:53:54.879436+08:00","gmt_modified":"2025-10-10T22:53:54.885809+08:00"},{"catalog_id":"8bfbae32-96b1-4209-9258-09baba3453aa","title":"k-UpCCGSD Algorithm","description":"applications-api-kupccgsd","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"10d20898-bf58-4603-a790-2158f1e91514","gmt_create":"2025-10-10T22:54:39.346331+08:00","gmt_modified":"2025-10-10T22:54:39.35285+08:00"},{"catalog_id":"5cbeda6b-e47e-49ae-925c-755196501fc0","title":"Hamiltonian Encoding API","description":"api-reference-hamiltonian-encoding","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"7e5282e2-d2bf-4332-a810-b29d871bb13a","gmt_create":"2025-10-10T22:54:50.542906+08:00","gmt_modified":"2025-10-10T22:54:50.547144+08:00"},{"catalog_id":"5fbdb810-337f-43b1-a965-505342443fb5","title":"Gate Merging and Pruning","description":"compiler-rewriting-merge-prune","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"4e5a57f2-4a38-4309-82e7-eddd79e2e778","gmt_create":"2025-10-10T22:55:27.316066+08:00","gmt_modified":"2025-10-10T22:55:27.319726+08:00"},{"catalog_id":"e8bc80fa-e865-4eb7-a0ec-a35723e274ca","title":"Vectorization Compatibility System","description":"vectorization-checks","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"a18c8543-6173-4bb9-a74f-a4e8c3282628","gmt_create":"2025-10-10T22:55:41.430863+08:00","gmt_modified":"2025-10-10T22:55:41.434074+08:00"},{"catalog_id":"2d106356-b31b-4b80-93fa-30421fbbd322","title":"VQE Implementation Variants","description":"vqe-implementations","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"6f0c858c-ab8b-4813-aa80-cc908700b5cc","gmt_create":"2025-10-10T22:56:52.213219+08:00","gmt_modified":"2025-10-10T22:56:52.217615+08:00"},{"catalog_id":"2dd2da2b-c18f-4fba-8dcc-816c8058cfc6","title":"PUCCD Algorithm","description":"puccd-algorithm","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"232b26c3-df60-44b1-9086-40ae43fabd3e","gmt_create":"2025-10-10T22:57:30.6181+08:00","gmt_modified":"2025-10-10T22:57:30.623828+08:00"},{"catalog_id":"42ecc0c7-f226-4f35-bfca-b93b3f194eac","title":"Circuit Optimization Techniques","description":"circuit-optimization-techniques","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"a9972996-6e84-45f9-bc66-2dc99a5d04b8","gmt_create":"2025-10-10T22:58:18.780748+08:00","gmt_modified":"2025-10-10T22:58:18.7858+08:00"},{"catalog_id":"b292d9a5-f34c-4e82-83e9-9c0d538faaaf","title":"Noisy Quantum Machine Learning","description":"noisy-quantum-machine-learning","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"f7f6ae18-35bd-41e4-aaf4-0e0a59634ffa","gmt_create":"2025-10-10T22:58:46.695623+08:00","gmt_modified":"2025-10-10T22:58:46.701969+08:00"},{"catalog_id":"5a992cb6-1c56-448c-b189-8ccba9239d24","title":"UCC Numeric Runtime","description":"ucc-numeric-runtime","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"0be4cf66-9e7b-4f80-97b3-e184edcacb37","gmt_create":"2025-10-10T22:59:05.233593+08:00","gmt_modified":"2025-10-10T22:59:05.241534+08:00"},{"catalog_id":"aa2b8d02-368b-4335-b57a-2f213ef1b147","title":"Sample-Based Expectation and Gradient Estimation","description":"sample-based-gradient","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"51b1d8de-68ed-4adb-96a4-279b277ead93","gmt_create":"2025-10-10T22:59:58.869568+08:00","gmt_modified":"2025-10-10T22:59:58.875693+08:00"},{"catalog_id":"6f5c8303-e24c-4391-b15e-d12db7f941b2","title":"Numerics Backend Testing","description":"numerics-testing","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"bc46292e-600a-47ee-b227-5640151f9ffd","gmt_create":"2025-10-10T22:59:58.965127+08:00","gmt_modified":"2025-10-10T22:59:58.967406+08:00"},{"catalog_id":"811b5b9b-0c75-401d-9021-1344dcf4c79e","title":"Benchmarking Validation","description":"benchmarking-validation","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"a0080c9b-b0b3-4985-a8e1-e10868c51548","gmt_create":"2025-10-10T23:00:15.025236+08:00","gmt_modified":"2025-10-10T23:00:15.032264+08:00"},{"catalog_id":"37eb76a4-408f-4074-834b-15419c52e978","title":"Metrics and Analysis","description":"postprocessing-api-metrics","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"b14fa4bc-4330-45f2-bd04-12765f9f2f30","gmt_create":"2025-10-10T23:01:03.432973+08:00","gmt_modified":"2025-10-10T23:01:03.439332+08:00"},{"catalog_id":"14432827-d5a5-4774-b749-76056af792a2","title":"Optimizer API","description":"api-reference-optimizer","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"05914796-2f7d-4a85-8d1c-2775613c6df2","gmt_create":"2025-10-10T23:01:19.440097+08:00","gmt_modified":"2025-10-10T23:01:19.446276+08:00"},{"catalog_id":"41367953-7eee-431b-a5bc-9d35515f11f1","title":"CuPyNumeric Backend","description":"numerics-api-cupynumeric-backend","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"ded6dfd7-a4f0-4992-b0a7-c1121c7951cb","gmt_create":"2025-10-10T23:01:45.181919+08:00","gmt_modified":"2025-10-10T23:01:45.189166+08:00"},{"catalog_id":"7eda7c15-de1e-41b0-afd3-de7dd756dd56","title":"Hybrid Computing Pipelines","description":"hybrid-computing-pipelines","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"19cb09ae-a152-4b14-9f91-98d2a6a4cbde","gmt_create":"2025-10-10T23:03:09.055271+08:00","gmt_modified":"2025-10-10T23:03:09.059705+08:00"},{"catalog_id":"1a9646d2-aba2-452f-9029-899a1d39e892","title":"PUCCD Algorithm","description":"applications-api-puccd","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"82c730df-b981-4a96-a443-40395b5585c0","gmt_create":"2025-10-10T23:03:17.907133+08:00","gmt_modified":"2025-10-10T23:03:17.909771+08:00"},{"catalog_id":"77e63c8f-03a1-4580-9024-ff3a623ca46b","title":"Dynamics Numeric Runtime","description":"dynamics-numeric-runtime","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"ee504798-26bd-4cf2-8fec-0c2f4344fa45","gmt_create":"2025-10-10T23:03:30.655694+08:00","gmt_modified":"2025-10-10T23:03:30.658494+08:00"},{"catalog_id":"55c89a19-3f8d-4051-8923-e136aad1ba3a","title":"Vectorized Operations with vmap","description":"vectorized-operations-vmap","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"4a350c42-98dd-4734-a913-f1b41717fc31","gmt_create":"2025-10-10T23:04:47.729938+08:00","gmt_modified":"2025-10-10T23:04:47.732696+08:00"},{"catalog_id":"04f76030-b2d3-458d-93c7-952c67717212","title":"Molecule Class","description":"applications-api-molecule","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"46007df7-a3a2-4511-b121-1d5105e0f4a2","gmt_create":"2025-10-10T23:06:24.554375+08:00","gmt_modified":"2025-10-10T23:06:24.556641+08:00"},{"catalog_id":"257c9ab1-368f-4c86-a241-63baba469a92","title":"Runtime Implementations","description":"applications-api-runtimes","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"f0a4cdb4-9cf2-43c4-86ea-b2a331fd005a","gmt_create":"2025-10-10T23:06:55.013634+08:00","gmt_modified":"2025-10-10T23:06:55.016486+08:00"},{"catalog_id":"fd12d405-81b3-44d7-88d2-e20ed3741a88","title":"Postprocessing Testing","description":"postprocessing-testing","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"de5d6b3a-6f91-4229-aae2-1d07e6f7d65e","gmt_create":"2025-10-10T23:07:02.427009+08:00","gmt_modified":"2025-10-10T23:07:02.433225+08:00"},{"catalog_id":"836ceecc-5adc-408e-9147-464f7ab8fee8","title":"Decomposition Stage","description":"decomposition-stage","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"a0f01ec7-599c-40eb-9e62-4d832f751db1","gmt_create":"2025-10-10T23:08:04.491222+08:00","gmt_modified":"2025-10-10T23:08:31.948256+08:00"},{"catalog_id":"5e31ad1f-058c-4c77-80f1-dc476029b1d9","title":"NumPy Backend","description":"numpy-backend","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"3be18ebf-9cab-498c-9fd6-4d7cd862c1de","gmt_create":"2025-10-10T23:08:15.233773+08:00","gmt_modified":"2025-10-10T23:08:31.943731+08:00"},{"catalog_id":"f5209b15-a952-473c-ba24-cca725679052","title":"Performance Optimization","description":"monte-carlo-noise-simulation-performance","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"20697ebe-bd74-4fd3-850b-549d2e30c587","gmt_create":"2025-10-10T23:08:24.860059+08:00","gmt_modified":"2025-10-10T23:08:31.946077+08:00"},{"catalog_id":"d0167ef4-00dd-44bf-9464-e284b7458d72","title":"Decomposition Stage","description":"compiler-api-stages-decompose","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"6086f695-7b1f-412b-8ea9-eb89ed8a2773","gmt_create":"2025-10-10T23:09:59.217452+08:00","gmt_modified":"2025-10-10T23:09:59.223724+08:00"},{"catalog_id":"8804d78f-e964-40b5-bcbd-e7221e840b3a","title":"Noise-Aware VQE Optimization","description":"noise-aware-vqe","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"839ba8fe-3f75-4f67-8315-2fe462d5a50d","gmt_create":"2025-10-10T23:10:05.01538+08:00","gmt_modified":"2025-10-10T23:10:05.021564+08:00"},{"catalog_id":"41c67a10-496a-4043-bbb1-4b6372ee6c43","title":"TyxonQ Processor Driver","description":"api-reference-devices-hardware-tyxonq","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"5cd42e87-2037-4172-8dfd-aa208a0cbbf8","gmt_create":"2025-10-10T23:10:14.427732+08:00","gmt_modified":"2025-10-10T23:10:14.433751+08:00"},{"catalog_id":"dab9665d-78d4-4f19-866e-2f23b7be5fb8","title":"ArrayBackend Protocol","description":"numerics-api-array-backend-protocol","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"a8282e89-647e-4b47-9d94-7220788c2819","gmt_create":"2025-10-10T23:11:33.913251+08:00","gmt_modified":"2025-10-10T23:11:33.919176+08:00"},{"catalog_id":"a80bc55c-3284-4428-a22d-23c5d467e593","title":"Statevector Simulator","description":"api-reference-devices-simulators-statevector","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"4e365aba-487c-4f88-931c-8a6094e5ba2b","gmt_create":"2025-10-10T23:12:10.388+08:00","gmt_modified":"2025-10-10T23:12:10.395018+08:00"},{"catalog_id":"c4c05f68-9315-4d95-b71f-26fb64ba1b27","title":"Quantum Library Kernels","description":"api-reference-quantum-library-kernels","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"ded9cf05-660c-44da-b50e-0aebd5f70bfd","gmt_create":"2025-10-10T23:12:13.116211+08:00","gmt_modified":"2025-10-10T23:12:13.123398+08:00"},{"catalog_id":"d6824d70-ace8-40ef-8087-5f5af1c80e00","title":"Fermion-to-Qubit Mapping","description":"hamiltonian-encoding-fermion-mapping","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"a402e10b-e335-4262-80de-920f7a252582","gmt_create":"2025-10-10T23:12:51.688599+08:00","gmt_modified":"2025-10-10T23:12:51.69508+08:00"},{"catalog_id":"b3922f83-67ff-4866-aa1b-6b2f5107b748","title":"VQE Circuits","description":"api-reference-circuits-library-vqe","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"4f0c09b4-1760-475c-889b-417d6cf38e2c","gmt_create":"2025-10-10T23:13:34.145374+08:00","gmt_modified":"2025-10-10T23:13:34.152289+08:00"},{"catalog_id":"2ada98b4-60c4-40cc-ae6a-72742aea35ae","title":"SOAP Optimizer","description":"optimizer-api-soap","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"70ffefb8-f612-4b8a-9437-9ba703b1f429","gmt_create":"2025-10-10T23:13:44.812548+08:00","gmt_modified":"2025-10-10T23:13:44.818897+08:00"},{"catalog_id":"d3e933fa-59b9-4f76-be4f-3b16e4ebe15c","title":"Task Submission","description":"cloud-api-task-submission","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"b589ea51-e026-47f8-b8bb-c48ac29ced4f","gmt_create":"2025-10-10T23:14:42.833995+08:00","gmt_modified":"2025-10-10T23:14:42.839833+08:00"},{"catalog_id":"df2a8baa-b1f6-4960-a54e-3a2001012daa","title":"Device Runtimes","description":"device-runtimes","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"876ec5a0-8a26-4bac-99fb-70bd5341a0e2","gmt_create":"2025-10-10T23:14:48.728992+08:00","gmt_modified":"2025-10-10T23:14:48.731466+08:00"},{"catalog_id":"96827f47-ed1b-48ff-99c0-8787d2b556ea","title":"Rewriting Stage","description":"rewriting-stage","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"b6c2d508-9fdc-40cf-af7b-085c57910ff5","gmt_create":"2025-10-10T23:15:06.156108+08:00","gmt_modified":"2025-10-10T23:15:06.158405+08:00"},{"catalog_id":"e0be298b-dc4d-42be-89cd-52fdf0095876","title":"Correctness Validation","description":"monte-carlo-noise-simulation-validation","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"33163858-4bf6-4b08-b09b-886d31275944","gmt_create":"2025-10-10T23:16:21.154329+08:00","gmt_modified":"2025-10-10T23:16:21.156963+08:00"},{"catalog_id":"8603157d-29a8-4b06-af69-3400b1a4c2c4","title":"Parallel VQE Execution","description":"parallel-vqe","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"eabe95d6-f0d5-4296-82ec-7451e77b467a","gmt_create":"2025-10-10T23:16:44.988647+08:00","gmt_modified":"2025-10-10T23:16:44.991254+08:00"},{"catalog_id":"69cfda98-e945-4c6d-8e56-afffce8569d3","title":"PyTorch Backend","description":"pytorch-backend","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"8e58e242-20e4-4d4f-9487-f375d18b34e6","gmt_create":"2025-10-10T23:16:59.644047+08:00","gmt_modified":"2025-10-10T23:16:59.647116+08:00"},{"catalog_id":"1e5e1639-6c63-4d5d-bc4b-c485be44ea96","title":"Gradient Computation Passes","description":"compiler-api-stages-gradients","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"63389838-c307-4361-98c2-45d57dd87f69","gmt_create":"2025-10-10T23:17:41.166881+08:00","gmt_modified":"2025-10-10T23:17:41.169518+08:00"},{"catalog_id":"ba2d6e15-7316-444c-bdcc-f23a49ee0791","title":"IBM Quantum Driver","description":"api-reference-devices-hardware-ibm","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"1d59b46a-95cf-41b9-803b-75cfb1977134","gmt_create":"2025-10-10T23:18:20.450902+08:00","gmt_modified":"2025-10-10T23:18:20.453633+08:00"},{"catalog_id":"8a000b97-af36-4a2c-bbcf-e8afcf3dd344","title":"Matrix Product State (MPS) Simulator","description":"api-reference-devices-simulators-mps","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"37eb9b43-4eb7-4468-8338-6afe8aa786ad","gmt_create":"2025-10-10T23:18:28.624588+08:00","gmt_modified":"2025-10-10T23:18:28.627761+08:00"},{"catalog_id":"53234648-0ccb-4afc-86fe-b008790dd829","title":"NumericBackend Class Proxy","description":"numerics-api-numeric-backend-proxy","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"b14c4375-97d6-4eb9-b909-15a814294b44","gmt_create":"2025-10-10T23:19:21.862442+08:00","gmt_modified":"2025-10-10T23:19:21.865276+08:00"},{"catalog_id":"9c7b9044-0961-4a87-b8a1-b6c1279526b4","title":"Dynamics Module","description":"api-reference-quantum-library-dynamics","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"214beabb-f064-4a26-8d0e-79d1672b203f","gmt_create":"2025-10-10T23:19:29.970839+08:00","gmt_modified":"2025-10-10T23:19:29.973588+08:00"},{"catalog_id":"260885a2-4c19-4586-a52b-dcb3a902d972","title":"Operator and Basis Encoding","description":"hamiltonian-encoding-operator-encoding","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"c1bcc0a7-1ccf-4734-ad88-1ac24d750d2b","gmt_create":"2025-10-10T23:19:59.22746+08:00","gmt_modified":"2025-10-10T23:19:59.231451+08:00"},{"catalog_id":"1466249d-33e2-43fe-b944-1d0b3df53481","title":"QAOA and Ising Circuits","description":"api-reference-circuits-library-qaoa","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"cde97c0d-3751-494c-8e19-883e45949a5e","gmt_create":"2025-10-10T23:20:30.210225+08:00","gmt_modified":"2025-10-10T23:20:30.215473+08:00"},{"catalog_id":"f25b89b0-98c1-4925-9a2c-1558f866e1c9","title":"Optimizer Interop Layer","description":"optimizer-api-interop","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"9b4bbb2b-50ef-4fa0-bd50-8307095d9c15","gmt_create":"2025-10-10T23:21:20.107271+08:00","gmt_modified":"2025-10-10T23:21:20.113624+08:00"},{"catalog_id":"113cdd2a-565e-4e6e-9dca-5a978489b1a7","title":"Numeric Runtimes","description":"numeric-runtimes","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"e8806b31-2bb8-4aac-82f9-a05ab7641b3a","gmt_create":"2025-10-10T23:21:34.160458+08:00","gmt_modified":"2025-10-10T23:21:34.165732+08:00"},{"catalog_id":"81e75dde-7274-43b5-ac93-1cf940239076","title":"Task Details Retrieval","description":"cloud-api-task-details","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"ea4a1da1-87fb-47fe-80bc-d97ee9fc2da4","gmt_create":"2025-10-10T23:22:09.019601+08:00","gmt_modified":"2025-10-10T23:22:09.026217+08:00"},{"catalog_id":"bfdc4f62-9c38-48fb-bad5-a36663f2f535","title":"Simplification Stage","description":"simplification-stage","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"ecd2e058-fe96-44be-8c76-f2a6d81ab8f1","gmt_create":"2025-10-10T23:23:02.712399+08:00","gmt_modified":"2025-10-10T23:23:02.71888+08:00"},{"catalog_id":"2bd3eac0-fdcd-4212-81bf-09d694071443","title":"CuPyNumeric Backend","description":"cupynumeric-backend","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"4dd55257-a14d-4037-a10f-396bac420e7b","gmt_create":"2025-10-10T23:23:12.362548+08:00","gmt_modified":"2025-10-10T23:23:12.368234+08:00"},{"catalog_id":"c615a941-7e0d-4ba3-b2a7-99078c612d02","title":"VQE Benchmarking Case Studies","description":"vqe-benchmarks","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"b23d6cd6-e9fc-4583-8d9e-4824d7aa0baf","gmt_create":"2025-10-10T23:23:47.795649+08:00","gmt_modified":"2025-10-10T23:23:47.798465+08:00"},{"catalog_id":"b292168c-6a64-444c-aa77-1b87d6c36550","title":"Circuit Rewrite Passes","description":"compiler-api-stages-rewrite","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"beaf4bb7-5a13-4b35-b7b9-92740dcade66","gmt_create":"2025-10-10T23:24:16.54354+08:00","gmt_modified":"2025-10-10T23:24:16.546073+08:00"},{"catalog_id":"8378892b-ad09-4086-b159-8c17decebc71","title":"Density Matrix Simulator","description":"api-reference-devices-simulators-density-matrix","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"915c2584-0390-4872-b948-ec9c7a65126c","gmt_create":"2025-10-10T23:24:21.175324+08:00","gmt_modified":"2025-10-10T23:24:21.178087+08:00"},{"catalog_id":"47bf76c7-b9e9-492e-b03f-b433b0b24c73","title":"Measurement Module","description":"api-reference-quantum-library-measurement","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"c4a34b98-3fa0-4e71-a2df-2e2825e81c46","gmt_create":"2025-10-10T23:25:31.863625+08:00","gmt_modified":"2025-10-10T23:25:31.86747+08:00"},{"catalog_id":"40c947aa-1765-41bc-84cb-42faf8289fd1","title":"Backend Management and Configuration","description":"numerics-api-backend-management","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"82d99e17-d70e-40a9-bdbe-4359f145ea65","gmt_create":"2025-10-10T23:25:40.241297+08:00","gmt_modified":"2025-10-10T23:25:40.243902+08:00"},{"catalog_id":"328442c0-3bbf-4dc7-82a6-829d7289a7a5","title":"Pauli Operator I/O","description":"hamiltonian-encoding-pauli-io","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"20e8415f-b0d6-4d95-abd8-d8da796c0c0f","gmt_create":"2025-10-10T23:25:44.436721+08:00","gmt_modified":"2025-10-10T23:25:44.439318+08:00"},{"catalog_id":"364a2802-e32a-4e84-bf95-9e2e1af8c398","title":"Trotter-Suzuki Circuits","description":"api-reference-circuits-library-trotter","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"0fd77a32-bdad-458c-b018-96e46797f017","gmt_create":"2025-10-10T23:26:33.887278+08:00","gmt_modified":"2025-10-10T23:26:33.889752+08:00"},{"catalog_id":"29f22e66-fde3-4a50-807c-991a927c2342","title":"Task Listing","description":"cloud-api-task-listing","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"ebd88e6e-db44-4540-82b0-f858296a7a55","gmt_create":"2025-10-10T23:27:04.787809+08:00","gmt_modified":"2025-10-10T23:27:04.789904+08:00"},{"catalog_id":"0399a4d3-c442-4dbf-aadc-78e9ea2323c3","title":"Scheduling Stage","description":"scheduling-stage","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"e7a84b89-6f1b-41c1-9dd1-1705de4470bf","gmt_create":"2025-10-10T23:27:25.527307+08:00","gmt_modified":"2025-10-10T23:27:25.53003+08:00"},{"catalog_id":"43d98a3d-4023-4a8d-a7fc-4409a383d142","title":"Shot Scheduling","description":"compiler-api-stages-scheduling","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"e1315b6c-8d9f-4cf7-b9cd-32c9e0e1f627","gmt_create":"2025-10-10T23:28:00.214187+08:00","gmt_modified":"2025-10-10T23:28:00.22025+08:00"},{"catalog_id":"dea255e2-4db2-41bf-8ab9-434145d013e2","title":"Noise Modeling and Channels","description":"api-reference-devices-simulators-noise-modeling","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"f5cc0baa-575f-42b5-a748-e14a4686c3fd","gmt_create":"2025-10-10T23:28:16.028162+08:00","gmt_modified":"2025-10-10T23:28:16.031079+08:00"},{"catalog_id":"3b831207-fcd5-4807-8c4e-9081f9816fbd","title":"Hamiltonian Term Grouping","description":"hamiltonian-encoding-grouping","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"8ffe2d25-5acd-4e9f-b58e-53ff16714b61","gmt_create":"2025-10-10T23:28:33.590213+08:00","gmt_modified":"2025-10-10T23:28:33.592941+08:00"},{"catalog_id":"e424c1d9-1855-40a3-b1b9-f90adeb9bc6f","title":"UCC Circuits","description":"api-reference-circuits-library-ucc","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"14bf5fd3-6e69-4f7a-a1fb-d682432a63b3","gmt_create":"2025-10-10T23:29:38.546888+08:00","gmt_modified":"2025-10-10T23:29:38.549806+08:00"},{"catalog_id":"b8e3be98-a93b-41ff-9abc-d0f1c23ffea8","title":"Gradient Processing Stage","description":"gradients-stage","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"1cbbe6c9-5aee-4b95-afb5-b4b9ba959583","gmt_create":"2025-10-10T23:29:50.188236+08:00","gmt_modified":"2025-10-10T23:29:50.191094+08:00"},{"catalog_id":"c3884954-1dbe-4411-b9ed-e9c63e9bc7f3","title":"Circuit Simplification","description":"compiler-api-stages-simplify","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"f79a7cfa-15fc-4dba-8f7e-ae9cf3970be4","gmt_create":"2025-10-10T23:30:20.407498+08:00","gmt_modified":"2025-10-10T23:30:20.410354+08:00"},{"catalog_id":"178bf0f6-68e9-4d21-8af6-355a6b04ac7f","title":"AutoMeasure Pass","description":"compiler-api-stages-rewrite-automerge","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"fc1e66fe-ff96-4003-b63a-40e6fb76b6be","gmt_create":"2025-10-10T23:40:28.205983+08:00","gmt_modified":"2025-10-10T23:40:28.213688+08:00"},{"catalog_id":"078f46c0-ec0e-4c17-97e9-eeb269fe3bc1","title":"UCC Device Runtime","description":"ucc-device-runtime","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"dc1761fc-1654-49c1-af54-e035ab4247f3","gmt_create":"2025-10-10T23:40:52.012068+08:00","gmt_modified":"2025-10-10T23:40:52.017875+08:00"},{"catalog_id":"febb5e7d-f0ec-4c3c-b5f4-60e961cc3e7a","title":"Parameter Shift Gradient Pass","description":"compiler-api-stages-gradients-parameter-shift","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"bcce97b5-b5b4-4d91-92b5-59b30a307d57","gmt_create":"2025-10-10T23:40:57.624666+08:00","gmt_modified":"2025-10-10T23:40:57.631471+08:00"},{"catalog_id":"312a66c8-8236-4249-9b03-7ba64fef2f77","title":"Statevector Kernels","description":"api-reference-quantum-library-kernels-statevector","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"6180a7d5-9a75-4206-bb77-a31ad3a5280a","gmt_create":"2025-10-10T23:41:45.809896+08:00","gmt_modified":"2025-10-10T23:41:45.812368+08:00"},{"catalog_id":"564d75e4-cfae-4277-8b8d-35803075b973","title":"UCC Numeric Runtime","description":"ucc-numeric-runtime","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"8bf54fea-0bd0-405c-906a-28833263d52a","gmt_create":"2025-10-10T23:42:10.089481+08:00","gmt_modified":"2025-10-10T23:42:10.092653+08:00"},{"catalog_id":"8b9333be-5061-408e-be44-3230857a89f4","title":"VQE Physics Benchmarks: TFIM Spin System Simulation","description":"vqe-physics-benchmarks","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"cf4ba018-3d8c-432e-9edc-6f9b576004b5","gmt_create":"2025-10-10T23:42:26.172495+08:00","gmt_modified":"2025-10-10T23:42:26.175254+08:00"},{"catalog_id":"c1a9ca7a-7b98-4991-a3b2-887e95a4a284","title":"Quantum Natural Gradient Pass","description":"compiler-api-stages-gradients-qng","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"b7cbf9f0-0550-4d9a-b63d-3dfc62aaf102","gmt_create":"2025-10-10T23:43:01.348186+08:00","gmt_modified":"2025-10-10T23:43:01.353556+08:00"},{"catalog_id":"6c0bd5c3-db32-46f5-8e04-da588571f28d","title":"Gates Transform Pass","description":"compiler-api-stages-rewrite-gatestf","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"ff1240c1-0923-471e-a7e2-964baf6b3aee","gmt_create":"2025-10-10T23:43:34.628011+08:00","gmt_modified":"2025-10-10T23:43:34.631382+08:00"},{"catalog_id":"e770d202-9e88-4b0f-9e34-df111b2880d7","title":"HEA Numeric Runtime","description":"hea-numeric-runtime","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"850f4fb7-1b26-4d8c-b609-25d624fad9e9","gmt_create":"2025-10-10T23:44:26.875895+08:00","gmt_modified":"2025-10-10T23:44:26.878396+08:00"},{"catalog_id":"b3c86b61-49fb-4e2d-a302-bf54474e9c44","title":"Density Matrix Kernels","description":"api-reference-quantum-library-kernels-density-matrix","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"e889df05-674c-4a7d-b362-ea0a79c3d08c","gmt_create":"2025-10-10T23:44:42.140023+08:00","gmt_modified":"2025-10-10T23:44:42.142726+08:00"},{"catalog_id":"8357ee7c-6d5a-4164-9857-2be4d15266a9","title":"HEA Device Runtime","description":"hea-device-runtime","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"6cf1cc1e-b6c6-474c-adda-677271819cb7","gmt_create":"2025-10-10T23:44:44.468272+08:00","gmt_modified":"2025-10-10T23:44:44.471498+08:00"},{"catalog_id":"cd97c797-6503-4a96-a4c3-41ee1441e2d8","title":"Measurement Rewrite Pass","description":"compiler-api-stages-rewrite-measurement","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"a5c8245b-3775-4a4f-96ac-4238c9f9fc79","gmt_create":"2025-10-10T23:45:36.874331+08:00","gmt_modified":"2025-10-10T23:45:36.88084+08:00"},{"catalog_id":"57e25a54-955d-4e3f-a86c-9bec659c2312","title":"Matrix Product State Kernels","description":"api-reference-quantum-library-kernels-mps","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"1c08fab7-60af-4df5-a018-325e92cb27da","gmt_create":"2025-10-10T23:46:19.010504+08:00","gmt_modified":"2025-10-10T23:46:19.017596+08:00"},{"catalog_id":"0c8622ee-fcc6-4ed8-be67-8402175b4ca8","title":"Merge and Prune Pass","description":"compiler-api-stages-rewrite-mergeprune","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"82cd8638-95be-4f44-9a6b-be561e5d845e","gmt_create":"2025-10-10T23:46:24.918767+08:00","gmt_modified":"2025-10-10T23:46:25.476249+08:00"},{"catalog_id":"dc2b65bd-3715-4f0d-afbc-df0b59596e7a","title":"Unitary Kernels","description":"api-reference-quantum-library-kernels-unitary","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"c73281f7-b1ed-480a-b7e4-0cfc8c50c411","gmt_create":"2025-10-10T23:46:42.42544+08:00","gmt_modified":"2025-10-10T23:46:42.43191+08:00"},{"catalog_id":"f39896e9-a1ff-4d39-b26f-ae04ea64c7e4","title":"Pauli Operator Kernels","description":"api-reference-quantum-library-kernels-pauli","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"86c70060-421a-44bf-9895-406b5e39687b","gmt_create":"2025-10-10T23:47:44.54138+08:00","gmt_modified":"2025-10-10T23:47:44.548367+08:00"},{"catalog_id":"7b1499bf-72a2-4863-850c-399744f968af","title":"Gates and Common Utilities","description":"api-reference-quantum-library-kernels-gates-common","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"78aa1733-9cfa-4432-9057-3f31f1d44894","gmt_create":"2025-10-10T23:47:59.511423+08:00","gmt_modified":"2025-10-10T23:47:59.517891+08:00"},{"catalog_id":"eb608613-86ea-47f8-90bd-e757064f2c22","title":"Getting Started","description":"getting-started","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"cde53471-5dfb-4d54-a8cd-d2649fe98f9e","gmt_create":"2025-10-10T23:49:04.71766+08:00","gmt_modified":"2025-10-10T23:49:04.720514+08:00"},{"catalog_id":"40147ed6-4474-4e38-b488-92b8dda915e1","title":"Core Framework Architecture","description":"core-architecture","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"d98338f3-9f11-4cc8-a39f-16a136e37c10","gmt_create":"2025-10-10T23:49:33.63255+08:00","gmt_modified":"2025-10-10T23:49:33.635661+08:00"},{"catalog_id":"1a0eab68-421f-4259-b391-3e8144347d27","title":"Project Overview","description":"project-overview","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"7664c013-9cc9-4728-8124-b1dd575ae7b6","gmt_create":"2025-10-10T23:49:47.824233+08:00","gmt_modified":"2025-10-10T23:49:47.827125+08:00"},{"catalog_id":"2749ee23-e21c-4769-aa0b-45a79cedb18f","title":"Intermediate Representation (IR)","description":"intermediate-representation","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"f8abc164-290e-43d5-a60d-980f5984c61e","gmt_create":"2025-10-10T23:50:33.662706+08:00","gmt_modified":"2025-10-10T23:50:33.665309+08:00"},{"catalog_id":"e3263062-6a60-4591-8e69-dfabdcc9cf5e","title":"Compiler Pipeline","description":"compiler-pipeline","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"b9c77151-5578-44d6-8c88-6498d82be2e8","gmt_create":"2025-10-10T23:50:40.177838+08:00","gmt_modified":"2025-10-10T23:50:40.180504+08:00"},{"catalog_id":"57bbcdd8-af3f-4ea0-b537-9104727b3fa5","title":"Gray and Binary Encoding","description":"hamiltonian-encoding-gray-binary","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"af166729-a153-41c0-b652-39e5ec1bd519","gmt_create":"2025-10-10T23:51:03.995529+08:00","gmt_modified":"2025-10-10T23:51:03.99848+08:00"},{"catalog_id":"0ad77409-07d3-46ad-adbf-fdaa7d2d67de","title":"Variational Circuits","description":"api-reference-circuits-library-variational","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"de38062f-dee6-40fa-8be1-a8357028a4c1","gmt_create":"2025-10-10T23:51:50.145559+08:00","gmt_modified":"2025-10-10T23:51:50.148398+08:00"},{"catalog_id":"7a0a123e-fe97-4556-b48b-bdc2bfd3b6bf","title":"VQE Chemistry Benchmarks: H2O Molecular Simulation","description":"vqe-chemistry-benchmarks","extend":"{}","progress_status":"completed","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","id":"16382d7b-d246-4b4d-bafc-c70b2a3e4a3e","gmt_create":"2025-10-10T23:52:36.306293+08:00","gmt_modified":"2025-10-10T23:52:36.312749+08:00"}],"wiki_overview":{"content":"\u003cblog\u003e\n# Comprehensive Project Analysis of TyxonQ\n\n## 1. Project Introduction\n\n### Purpose Statement\nTyxonQ is a next-generation quantum programming framework designed to provide a modular, full-stack solution for quantum software development with real quantum hardware integration. The framework bridges the gap between theoretical quantum algorithms and practical execution on real quantum machines.\n\n### Core Goals and Objectives\n- Provide a hardware-realistic programming model with stable intermediate representation (IR) and pluggable compiler\n- Enable Quantum AIDD (Quantum Computational Chemistry for advanced AI Drug Design) with PySCF-like user experience\n- Support dual execution paths: device-based (shots) and exact numerics (statevector/MPS)\n- Create an extensible domain layer for quantum chemistry algorithms and applications\n- Facilitate AI-driven drug discovery by providing robust computational tools and microscopic quantum chemistry data\n\n### Target Audience\n- Quantum computing researchers and scientists\n- Quantum algorithm developers\n- Computational chemists working in drug discovery\n- Quantum machine learning practitioners\n- Engineers developing quantum applications\n\nSources:\n- [README.md](README.md)\n- [pyproject.toml](pyproject.toml)\n\n## 2. Technical Architecture\n\n### Component Breakdown\nTyxonQ follows a modular architecture with clearly defined components that work together to provide a comprehensive quantum computing framework:\n\n```mermaid\nflowchart TD\n    A[User Code] --\u003e B[Circuit Builder]\n    B --\u003e C[Compiler Pipeline]\n    C --\u003e D[Device Abstraction]\n    D --\u003e E[Hardware/Simulator]\n    D --\u003e F[Postprocessing]\n    F --\u003e G[Results]\n    H[Numerics Backend] --\u003e D\n    H --\u003e F\n    I[Quantum Chemistry] --\u003e C\n    I --\u003e D\n    J[Cloud API] --\u003e E\n```\n\n### Design Patterns\nThe framework implements several key design patterns:\n\n1. **Chain API Pattern**: Fluent interface for building quantum workflows\n2. **Stable IR (Intermediate Representation)**: Abstract representation of quantum circuits\n3. **Pluggable Compiler**: Modular compilation pipeline with multiple backend support\n4. **Unified Device Abstraction**: Consistent interface for simulators and hardware\n5. **Single Numerics Backend**: Unified interface for array operations across NumPy, PyTorch, and CuPyNumeric\n\n### System Relationships\nThe components interact through well-defined interfaces, with the core IR serving as the central data structure that flows through the system from construction to execution.\n\n### Data Flow Diagram\n```mermaid\nflowchart TD\n    A[User Code] --\u003e B[Circuit Construction]\n    B --\u003e C[Compilation Pipeline]\n    C --\u003e D[Device Execution]\n    D --\u003e E[Postprocessing]\n    E --\u003e F[Results]\n    G[Configuration] --\u003e C\n    G --\u003e D\n    H[External Services] --\u003e D\n    I[Numerics Backend] --\u003e D\n    I --\u003e E\n```\n\nSources:\n- [README.md](README.md)\n- [src/tyxonq/__init__.py](src/tyxonq/__init__.py)\n- [src/tyxonq/core/ir/circuit.py](src/tyxonq/core/ir/circuit.py)\n\n## 3. Key Implementation\n\n### Main Entry Points\n- `src/tyxonq/__init__.py`: Package initializer with top-level exports\n- `main.py`: Primary entry point for the application\n- `examples/`: Collection of example scripts demonstrating framework usage\n\n### Core Modules\n- **Core IR**: `src/tyxonq/core/ir/` - Defines the fundamental data structures\n- **Compiler**: `src/tyxonq/compiler/` - Handles circuit optimization and transformation\n- **Devices**: `src/tyxonq/devices/` - Manages simulator and hardware execution\n- **Numerics**: `src/tyxonq/numerics/` - Provides unified array operations\n- **Postprocessing**: `src/tyxonq/postprocessing/` - Processes execution results\n- **Applications**: `src/tyxonq/applications/chem/` - Domain-specific quantum chemistry algorithms\n\n### Configuration Approach\n- Global configuration through top-level functions (`set_backend`, `set_token`)\n- Chainable configuration via method chaining on Circuit objects\n- Provider-specific configuration through device options\n- Environment variables and API keys for cloud services\n\n### External Dependencies\n- **Quantum Libraries**: Qiskit, OpenFermion, PySCF\n- **Array Libraries**: NumPy, PyTorch, CuPyNumeric\n- **Scientific Computing**: SciPy, SymPy, SymEngine\n- **Utilities**: Opt-einsum, Requests, Python-dotenv\n\n### Integration Points\n- **Cloud Quantum Hardware**: TyxonQ's Homebrew_S2 quantum processor\n- **Classical Chemistry Software**: PySCF integration\n- **Multiple Backend Support**: NumPy, PyTorch, CuPyNumeric\n- **External APIs**: RESTful quantum API gateway\n\n### Component Relationship Diagram\n```mermaid\ngraph LR\n    A[Circuit Builder] --\u003e B[Compiler]\n    B --\u003e C[Device Manager]\n    C --\u003e D[Simulators]\n    C --\u003e E[Hardware Drivers]\n    D --\u003e F[Statevector]\n    D --\u003e G[Matrix Product State]\n    D --\u003e H[Density Matrix]\n    E --\u003e I[TyxonQ Hardware]\n    E --\u003e J[IBM Quantum]\n    B --\u003e K[Qiskit Compiler]\n    C --\u003e L[Numerics Backend]\n    L --\u003e M[NumPy]\n    L --\u003e N[PyTorch]\n    L --\u003e O[CuPyNumeric]\n    C --\u003e P[Postprocessing]\n    P --\u003e Q[Error Mitigation]\n    P --\u003e R[Classical Shadows]\n    P --\u003e S[Metrics]\n    T[Quantum Chemistry] --\u003e B\n    T --\u003e C\n    U[Cloud API] --\u003e C\n```\n\nSources:\n- [pyproject.toml](pyproject.toml)\n- [src/tyxonq/__init__.py](src/tyxonq/__init__.py)\n- [src/tyxonq/core/ir/circuit.py](src/tyxonq/core/ir/circuit.py)\n- [src/tyxonq/compiler/api.py](src/tyxonq/compiler/api.py)\n- [src/tyxonq/devices/simulators/statevector/engine.py](src/tyxonq/devices/simulators/statevector/engine.py)\n- [src/tyxonq/numerics/api.py](src/tyxonq/numerics/api.py)\n- [src/tyxonq/postprocessing/metrics.py](src/tyxonq/postprocessing/metrics.py)\n\n## 4. Key Features\n\n### Functionality Overview\nTyxonQ provides a comprehensive set of features for quantum computing:\n\n1. **Quantum Circuit Construction**: Builder pattern for creating quantum circuits\n2. **Dual Execution Paths**: Support for both shot-based and exact numerical simulation\n3. **Hardware Integration**: Direct access to real quantum processors\n4. **Quantum Chemistry**: Specialized algorithms for computational chemistry\n5. **Pulse-Level Control**: Low-level quantum control capabilities\n6. **Error Mitigation**: Postprocessing techniques to improve result quality\n\n### Implementation Highlights\n- **Chain API**: Fluent interface for building quantum workflows with method chaining\n- **Stable IR**: Dataclass-based circuit representation that serves as the central data structure\n- **Pluggable Numerics**: Unified backend interface supporting multiple array libraries\n- **Compiler Pipeline**: Modular compilation stages for optimization and transformation\n- **Device Abstraction**: Consistent interface for both simulators and real hardware\n\n### Feature Architecture Diagram\n```mermaid\nstateDiagram-v2\n    [*] --\u003e CircuitConstruction\n    CircuitConstruction --\u003e Compilation\n    Compilation --\u003e DeviceExecution\n    DeviceExecution --\u003e Postprocessing\n    Postprocessing --\u003e Results\n    \n    state Compilation {\n        [*] --\u003e Decompose\n        Decompose --\u003e Rewrite\n        Rewrite --\u003e Simplify\n        Simplify --\u003e Schedule\n        Schedule --\u003e [*]\n    }\n    \n    state DeviceExecution {\n        [*] --\u003e Simulator\n        [*] --\u003e Hardware\n        Simulator --\u003e Statevector\n        Simulator --\u003e MatrixProductState\n        Simulator --\u003e DensityMatrix\n        Hardware --\u003e TyxonQProcessor\n        Hardware --\u003e IBMQuantum\n    }\n    \n    state Postprocessing {\n        [*] --\u003e ErrorMitigation\n        [*] --\u003e ClassicalShadows\n        [*] --\u003e Metrics\n        ErrorMitigation --\u003e Results\n        ClassicalShadows --\u003e Results\n        Metrics --\u003e Results\n    }\n```\n\nSources:\n- [README.md](README.md)\n- [src/tyxonq/core/ir/circuit.py](src/tyxonq/core/ir/circuit.py)\n- [src/tyxonq/compiler/api.py](src/tyxonq/compiler/api.py)\n- [src/tyxonq/devices/simulators/statevector/engine.py](src/tyxonq/devices/simulators/statevector/engine.py)\n- [src/tyxonq/numerics/api.py](src/tyxonq/numerics/api.py)\n- [src/tyxonq/postprocessing/metrics.py](src/tyxonq/postprocessing/metrics.py)\n- [src/tyxonq/libs/circuits_library/vqe.py](src/tyxonq/libs/circuits_library/vqe.py)\n- [src/tyxonq/applications/chem/algorithms/uccsd.py](src/tyxonq/applications/chem/algorithms/uccsd.py)\n\u003c/blog\u003e","gmt_create":"2025-10-10T21:17:49.733538+08:00","gmt_modified":"2025-10-10T21:17:49.733539+08:00","id":"28c7b112-587f-4892-a5e5-2d440fe0449f","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040"},"wiki_readme":{"content":"No readme file","gmt_create":"2025-10-10T21:16:33.089769+08:00","gmt_modified":"2025-10-10T21:16:33.089769+08:00","id":"a57b384e-2695-4b0d-8187-1a11a2ef2715","repo_id":"3d7367f1-e468-4a11-abe2-a7f7ff415040"},"wiki_repo":{"id":"3d7367f1-e468-4a11-abe2-a7f7ff415040","name":"TyxonQ","progress_status":"completed","wiki_present_status":"COMPLETED","optimized_catalog":"\".\\n├── docs-ng/source/next\\n│   ├── user\\n│   │   ├── compiler.rst\\n│   │   ├── core_ir.rst\\n│   │   ├── devices.rst\\n│   │   ├── numerics.rst\\n│   │   └── postprocessing.rst\\n│   ├── cloud_classical_design_summary.md\\n│   ├── index.rst\\n│   └── quickstart.rst\\n├── examples\\n│   ├── autograd_vs_counts.py\\n│   ├── circuit_chain_demo.py\\n│   ├── circuit_compiler.py\\n│   ├── cloud_api_devices.py\\n│   ├── cloud_api_task.py\\n│   ├── cloud_api_task_qaoa.py\\n│   ├── cloud_classical_methods_demo.py\\n│   ├── cloud_uccsd_hea_demo.py\\n│   ├── gradient_benchmark.py\\n│   ├── hamiltonian_building.py\\n│   ├── hchainhamiltonian.py\\n│   ├── incremental_twoqubit.py\\n│   ├── jacobian_cal.py\\n│   ├── jsonio.py\\n│   ├── noise_controls_demo.py\\n│   ├── parameter_shift.py\\n│   ├── pulse_demo.py\\n│   ├── pulse_demo_scan.py\\n│   ├── readout_mitigation.py\\n│   ├── sample_benchmark.py\\n│   ├── sample_value_gradient.py\\n│   ├── simple_qaoa.py\\n│   ├── timeevolution_trotter.py\\n│   ├── vqe_extra.py\\n│   ├── vqe_noisyopt.py\\n│   ├── vqe_parallel_pmap.py\\n│   ├── vqe_shot_noise.py\\n│   ├── vqeh2o_benchmark.py\\n│   └── vqetfim_benchmark.py\\n├── examples-ng\\n│   ├── apicomparison\\n│   │   ├── 0_tfq_qml.py\\n│   │   ├── 0_tfq_vg.py\\n│   │   ├── 1_pennylane_qml.py\\n│   │   ├── 1_pennylane_vg.py\\n│   │   ├── 2_tc_qml.py\\n│   │   ├── 2_tc_vg.py\\n│   │   └── _barplot.py\\n│   ├── ace_test_for_first_attemp.py\\n│   ├── aces_for_setting_numeric_backend.py\\n│   ├── aces_test_for_numeric_backend.py\\n│   ├── analog_evolution_interface.py\\n│   ├── analog_evolution_mint.py\\n│   ├── batched_parameters_structures.py\\n│   ├── bp_benchmark.py\\n│   ├── bp_validation.py\\n│   ├── chaotic_behavior.py\\n│   ├── checkpoint_memsave.py\\n│   ├── clifford_optimization.py\\n│   ├── cotengra_setting_bench.py\\n│   ├── hea_scan_jit_acc.py\\n│   ├── hybrid_gpu_pipeline.py\\n│   ├── lightcone_simplify.py\\n│   ├── matprod_vmap.py\\n│   ├── mcnoise_boost.py\\n│   ├── mcnoise_boost_v2.py\\n│   ├── mcnoise_check.py\\n│   ├── mera_extra_mpo.py\\n│   ├── mipt.py\\n│   ├── mipt_pideal.py\\n│   ├── mpsvsexact.py\\n│   ├── noise_calibration.py\\n│   ├── noisy_qml.py\\n│   ├── noisy_sampling_jit.py\\n│   ├── optperformance_comparison.py\\n│   ├── pytorch_scan_jit_acc.py\\n│   ├── quantumng.py\\n│   ├── quditcircuit.py\\n│   ├── rem_super_large_scale.py\\n│   ├── simple_demo_1.py\\n│   ├── slicing_wavefunction_vqa.py\\n│   ├── stabilizer_simulation.py\\n│   ├── time_evolution.py\\n│   ├── training_deep_tunable_structures.py\\n│   ├── universal_lr.py\\n│   ├── variational_dynamics.py\\n│   ├── variational_dynamics_circuit.py\\n│   ├── variational_dynamics_generalized.py\\n│   ├── vmap_randomness.py\\n│   ├── vqe2d.py\\n│   ├── vqe_extra_mpo.py\\n│   └── vqe_extra_mpo_spopt.py\\n├── scripts\\n│   ├── diag_pyscf_numeric_tyxonq.py\\n│   ├── numeric_vs_device_convergence_study.py\\n│   └── profile_chem.py\\n├── src/tyxonq\\n│   ├── applications\\n│   │   ├── chem\\n│   │   │   ├── algorithms\\n│   │   │   │   ├── __init__.py\\n│   │   │   │   ├── hea.py\\n│   │   │   │   ├── kupccgsd.py\\n│   │   │   │   ├── puccd.py\\n│   │   │   │   ├── ucc.py\\n│   │   │   │   └── uccsd.py\\n│   │   │   ├── chem_libs\\n│   │   │   │   ├── hamiltonians_chem_library\\n│   │   │   │   │   ├── __init__.py\\n│   │   │   │   │   ├── hamiltonian_builders.py\\n│   │   │   │   │   ├── pyrazine.py\\n│   │   │   │   │   └── sbm.py\\n│   │   │   │   └── quantum_chem_library\\n│   │   │   │       ├── __init__.py\\n│   │   │   │       ├── ci_state_mapping.py\\n│   │   │   │       ├── civector_ops.py\\n│   │   │   │       ├── pyscf_civector.py\\n│   │   │   │       └── statevector_ops.py\\n│   │   │   ├── classical_chem_cloud\\n│   │   │   │   ├── server\\n│   │   │   │   │   ├── api_request_examples.json\\n│   │   │   │   │   ├── app.py\\n│   │   │   │   │   ├── cpu_chem.py\\n│   │   │   │   │   ├── gpu_chem.py\\n│   │   │   │   │   ├── mock_classical_server.py\\n│   │   │   │   │   └── test_data.txt\\n│   │   │   │   ├── __init__.py\\n│   │   │   │   ├── classical_methods.py\\n│   │   │   │   ├── clients.py\\n│   │   │   │   └── config.py\\n│   │   │   ├── runtimes\\n│   │   │   │   ├── __init__.py\\n│   │   │   │   ├── dynamics_numeric.py\\n│   │   │   │   ├── hea_device_runtime.py\\n│   │   │   │   ├── hea_numeric_runtime.py\\n│   │   │   │   ├── ucc_device_runtime.py\\n│   │   │   │   └── ucc_numeric_runtime.py\\n│   │   │   ├── __init__.py\\n│   │   │   ├── constants.py\\n│   │   │   └── molecule.py\\n│   │   └── __init__.py\\n│   ├── cloud\\n│   │   ├── __init__.py\\n│   │   └── api.py\\n│   ├── compiler\\n│   │   ├── compile_engine\\n│   │   │   ├── native\\n│   │   │   │   ├── compile_plan.py\\n│   │   │   │   └── native_compiler.py\\n│   │   │   └── qiskit\\n│   │   │       ├── __init__.py\\n│   │   │       ├── dialect.py\\n│   │   │       └── qiskit_compiler.py\\n│   │   ├── gradients\\n│   │   │   └── parameter_shift.py\\n│   │   ├── stages\\n│   │   │   ├── decompose\\n│   │   │   │   ├── __init__.py\\n│   │   │   │   └── rotations.py\\n│   │   │   ├── gradients\\n│   │   │   │   ├── parameter_shift_pass.py\\n│   │   │   │   └── qng.py\\n│   │   │   ├── layout\\n│   │   │   │   └── __init__.py\\n│   │   │   ├── rewrite\\n│   │   │   │   ├── auto_measure.py\\n│   │   │   │   ├── gates_transform.py\\n│   │   │   │   ├── measurement.py\\n│   │   │   │   └── merge_prune.py\\n│   │   │   ├── scheduling\\n│   │   │   │   ├── __init__.py\\n│   │   │   │   └── shot_scheduler.py\\n│   │   │   ├── simplify\\n│   │   │   │   └── lightcone.py\\n│   │   │   └── __init__.py\\n│   │   ├── translation\\n│   │   │   └── mpo_converters.py\\n│   │   ├── utils\\n│   │   │   └── hamiltonian_grouping.py\\n│   │   ├── __init__.py\\n│   │   └── api.py\\n│   ├── core\\n│   │   ├── ir\\n│   │   │   ├── __init__.py\\n│   │   │   ├── circuit.py\\n│   │   │   └── pulse.py\\n│   │   ├── measurements\\n│   │   │   └── __init__.py\\n│   │   ├── operations\\n│   │   │   └── __init__.py\\n│   │   ├── __init__.py\\n│   │   ├── errors.py\\n│   │   └── types.py\\n│   ├── devices\\n│   │   ├── hardware\\n│   │   │   ├── ibm\\n│   │   │   │   └── driver.py\\n│   │   │   ├── tyxonq\\n│   │   │   │   └── driver.py\\n│   │   │   ├── __init__.py\\n│   │   │   ├── config.py\\n│   │   │   └── session.py\\n│   │   ├── simulators\\n│   │   │   ├── density_matrix\\n│   │   │   │   ├── __init__.py\\n│   │   │   │   └── engine.py\\n│   │   │   ├── matrix_product_state\\n│   │   │   │   ├── __init__.py\\n│   │   │   │   └── engine.py\\n│   │   │   ├── noise\\n│   │   │   │   └── channels.py\\n│   │   │   ├── statevector\\n│   │   │   │   ├── __init__.py\\n│   │   │   │   └── engine.py\\n│   │   │   └── driver.py\\n│   │   ├── __init__.py\\n│   │   ├── base.py\\n│   │   └── session.py\\n│   ├── libs\\n│   │   ├── circuits_library\\n│   │   │   ├── __init__.py\\n│   │   │   ├── analysis.py\\n│   │   │   ├── blocks.py\\n│   │   │   ├── hamiltonians.py\\n│   │   │   ├── qaoa_ising.py\\n│   │   │   ├── qiskit_real_amplitudes.py\\n│   │   │   ├── qubit_state_preparation.py\\n│   │   │   ├── trotter_circuit.py\\n│   │   │   ├── ucc.py\\n│   │   │   ├── utils.py\\n│   │   │   ├── variational.py\\n│   │   │   └── vqe.py\\n│   │   ├── hamiltonian_encoding\\n│   │   │   ├── __init__.py\\n│   │   │   ├── fermion_to_qubit.py\\n│   │   │   ├── gray_binary_encoding.py\\n│   │   │   ├── hamiltonian_grouping.py\\n│   │   │   ├── operator_encoding.py\\n│   │   │   └── pauli_io.py\\n│   │   ├── optimizer\\n│   │   │   ├── __init__.py\\n│   │   │   ├── interop.py\\n│   │   │   └── soap.py\\n│   │   └── quantum_library\\n│   │       ├── kernels\\n│   │       │   ├── common.py\\n│   │       │   ├── density_matrix.py\\n│   │       │   ├── gates.py\\n│   │       │   ├── matrix_product_state.py\\n│   │       │   ├── pauli.py\\n│   │       │   ├── statevector.py\\n│   │       │   └── unitary.py\\n│   │       ├── __init__.py\\n│   │       ├── dynamics.py\\n│   │       └── measurement.py\\n│   ├── numerics\\n│   │   ├── backends\\n│   │   │   ├── cupynumeric_backend.py\\n│   │   │   ├── numpy_backend.py\\n│   │   │   └── pytorch_backend.py\\n│   │   ├── __init__.py\\n│   │   ├── api.py\\n│   │   ├── context.py\\n│   │   └── vectorization_checks.py\\n│   ├── plugins\\n│   │   └── registry.py\\n│   ├── postprocessing\\n│   │   ├── __init__.py\\n│   │   ├── classical_shadows.py\\n│   │   ├── counts_expval.py\\n│   │   ├── error_mitigation.py\\n│   │   ├── io.py\\n│   │   ├── metrics.py\\n│   │   ├── noise_analysis.py\\n│   │   └── readout.py\\n│   ├── visualization\\n│   │   ├── __init__.py\\n│   │   └── dot.py\\n│   ├── __init__.py\\n│   ├── about.py\\n│   ├── config.py\\n│   ├── utils.py\\n│   └── waveforms.py\\n├── tests_applications_chem\\n│   ├── test_dynamics_numeric_equiv_smoke.py\\n│   ├── test_hea_api_top_import.py\\n│   ├── test_hea_device_smoke.py\\n│   ├── test_ucc_device_runtime_smoke.py\\n│   └── test_uccsd_device_smoke.py\\n├── tests_core_module\\n│   ├── test_cloud_api_smoke.py\\n│   ├── test_compiler_api_providers.py\\n│   ├── test_compiler_pipeline.py\\n│   ├── test_compiler_simplify_lightcone.py\\n│   ├── test_compiler_simplify_lightcone_extras.py\\n│   ├── test_compiler_stages.py\\n│   ├── test_compiler_translation_mpo.py\\n│   ├── test_core_constants_types.py\\n│   ├── test_core_ir.py\\n│   ├── test_core_ir_editing.py\\n│   ├── test_core_ir_extras.py\\n│   ├── test_core_ir_instructions.py\\n│   ├── test_core_measurements.py\\n│   ├── test_core_operations.py\\n│   ├── test_core_operations_defaults.py\\n│   ├── test_core_operations_gates.py\\n│   ├── test_core_operations_grad.py\\n│   ├── test_core_operations_pauli.py\\n│   ├── test_core_types_errors.py\\n│   ├── test_decompose_rotations.py\\n│   ├── test_density_matrix_e2e.py\\n│   ├── test_devices_session.py\\n│   ├── test_devices_simulators_compressed_mps.py\\n│   ├── test_devices_simulators_gates.py\\n│   ├── test_devices_simulators_gates_extra.py\\n│   ├── test_devices_simulators_noise_channels.py\\n│   ├── test_examples_end_to_end.py\\n│   ├── test_gradients_parameter_shift.py\\n│   ├── test_libs_kernels_numeric.py\\n│   ├── test_matrix_product_state_truncation.py\\n│   ├── test_matrix_protuct_state_e2e.py\\n│   ├── test_measurement_rewrite_grouping.py\\n│   ├── test_mid_measure_postselect.py\\n│   ├── test_noise_integration.py\\n│   ├── test_numerics_api.py\\n│   ├── test_numerics_backends.py\\n│   ├── test_numerics_checks.py\\n│   ├── test_numerics_global_backend.py\\n│   ├── test_plugins_registry.py\\n│   ├── test_postprocessing_io_extras.py\\n│   ├── test_postprocessing_metrics_extras.py\\n│   ├── test_postprocessing_metrics_io.py\\n│   ├── test_postprocessing_noise_adapters.py\\n│   ├── test_postprocessing_qem.py\\n│   ├── test_postprocessing_readout_adapter.py\\n│   ├── test_postprocessing_shadows.py\\n│   ├── test_pulse_ir.py\\n│   ├── test_qiskit_dialect.py\\n│   ├── test_qiskit_provider_extras.py\\n│   ├── test_qiskit_provider_qasm.py\\n│   ├── test_qiskit_provider_roundtrip.py\\n│   ├── test_qiskit_target.py\\n│   ├── test_runtime_end_to_end.py\\n│   ├── test_session_scheduler_integration.py\\n│   ├── test_shot_scheduler_integration.py\\n│   ├── test_simulators_skeletons.py\\n│   ├── test_statevector_engine_probs.py\\n│   ├── test_statevector_simulator_e2e.py\\n│   └── test_visualization_ir.py\\n├── tests_examples\\n│   ├── test_example_autograd_vs_counts.py\\n│   ├── test_example_circuit_chain_demo.py\\n│   ├── test_example_circuit_compiler.py\\n│   ├── test_example_cloud_api_devices.py\\n│   ├── test_example_cloud_api_task.py\\n│   ├── test_example_gradient_benchmark.py\\n│   ├── test_example_hamiltonian_building.py\\n│   ├── test_example_hchainhamiltonian.py\\n│   ├── test_example_incremental_twoqubit.py\\n│   ├── test_example_jacobian_cal.py\\n│   ├── test_example_jsonio.py\\n│   ├── test_example_noise_controls_demo.py\\n│   ├── test_example_parameter_shift.py\\n│   ├── test_example_readout_mitigation.py\\n│   ├── test_example_sample_benchmark.py\\n│   ├── test_example_sample_value_gradient.py\\n│   ├── test_example_simple_qaoa.py\\n│   ├── test_example_timeevolution_trotter.py\\n│   ├── test_example_vqe_extra.py\\n│   ├── test_example_vqe_noisyopt.py\\n│   ├── test_example_vqe_parallel_pmap.py\\n│   ├── test_example_vqe_shot_noise.py\\n│   ├── test_example_vqeh2o_benchmark.py\\n│   └── test_example_vqetfim_benchmark.py\\n├── tests_mol_valid\\n│   ├── test_applications.py\\n│   ├── test_dynamic_hamiltonian.py\\n│   ├── test_dynamics.py\\n│   ├── test_hamiltonian.py\\n│   ├── test_hea.py\\n│   ├── test_mol_construct.py\\n│   ├── test_molecule.py\\n│   ├── test_optimizer.py\\n│   ├── test_puccd.py\\n│   ├── test_server_chem_compute.py\\n│   ├── test_state_prep_chain_vs_numeric.py\\n│   └── test_ucc_uccsd_runtime.py\\n├── CHANGELOG.md\\n├── CONTRIBUTING.md\\n├── README.md\\n├── README_cn.md\\n├── README_jp.md\\n├── TYXONQ_TECHNICAL_WHITEPAPER.md\\n├── main.py\\n└── pyproject.toml\\n\"","current_document_structure":"WikiEncrypted:","catalogue_think_content":"WikiEncrypted:","recovery_checkpoint":"wiki_generation_completed","last_commit_id":"9c2a029029e11455aba3a3bec5ea94115a1ce0f4","last_commit_update":"2025-10-10T19:30:50+08:00","gmt_create":"2025-10-10T21:16:23.429135+08:00","gmt_modified":"2025-10-10T23:52:36.59542+08:00","extend_info":"{\"language\":\"en\",\"active\":true,\"branch\":\"performance-opt\",\"shareStatus\":\"\",\"server_error_code\":\"\",\"cosy_version\":\"\"}"}}