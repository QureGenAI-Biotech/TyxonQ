# Configuration file for the Sphinx documentation builder.
#
# For the full list of built-in configuration values, see the documentation:
# https://www.sphinx-doc.org/en/master/usage/configuration.html

import os
import sys
from datetime import datetime

# -- Path setup --------------------------------------------------------------
# Add the project root to the Python path
sys.path.insert(0, os.path.abspath('../../src'))

# -- Project information -----------------------------------------------------
project = 'TyxonQ'
copyright = f'{datetime.now().year}, QureGenAI Biotech'
author = 'QureGenAI Biotech Team'

# The version info from the project
# This can be automated by reading from tyxonq.__version__
release = '0.1.0'
version = '0.1'

# -- General configuration ---------------------------------------------------

extensions = [
    # Core Sphinx extensions
    'sphinx.ext.autodoc',
    'sphinx.ext.autosummary',
    'sphinx.ext.napoleon',
    'sphinx.ext.viewcode',
    'sphinx.ext.intersphinx',
    'sphinx.ext.mathjax',
    'sphinx.ext.todo',
    'sphinx.ext.coverage',
    'sphinx.ext.ifconfig',
    'sphinx.ext.githubpages',
    
    # Third-party extensions
    'sphinx_design',
    'sphinx_copybutton',
    'sphinxcontrib.mermaid',
    'sphinx_togglebutton',
    'nbsphinx',
    'myst_parser',
]

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
exclude_patterns = ['_build', 'Thumbs.db', '.DS_Store', '**.ipynb_checkpoints']

# The suffix(es) of source filenames.
source_suffix = {
    '.rst': 'restructuredtext',
    '.md': 'markdown',
}

# The master toctree document.
master_doc = 'index'

# The language for content autogenerated by Sphinx.
language = 'en'

# -- Options for HTML output -------------------------------------------------

html_theme = 'pydata_sphinx_theme'

html_theme_options = {
    "logo": {
        "text": "TyxonQ Documentation",
        "image_light": "_static/images/logo_light.png",
        "image_dark": "_static/images/logo_dark.png",
    },
    "navbar_start": ["navbar-logo"],
    "navbar_center": ["navbar-nav"],
    "navbar_end": ["navbar-icon-links", "theme-switcher"],
    "navbar_persistent": ["search-button"],
    "icon_links": [
        {
            "name": "GitHub",
            "url": "https://github.com/QureGenAI-Biotech/TyxonQ",
            "icon": "fab fa-github-square",
            "type": "fontawesome",
        },
        {
            "name": "PyPI",
            "url": "https://pypi.org/project/tyxonq",
            "icon": "fab fa-python",
            "type": "fontawesome",
        },
    ],
    "show_toc_level": 2,
    "navigation_depth": 4,
    "show_nav_level": 1,
    "navigation_with_keys": True,
    "collapse_navigation": False,
    "show_prev_next": True,
    "footer_items": ["copyright", "sphinx-version"],
    "announcement": None,
}

html_context = {
    "default_mode": "auto",
    "github_user": "QureGenAI-Biotech",
    "github_repo": "TyxonQ",
    "github_version": "main",
    "doc_path": "doc-tyxonq/source",
}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']

# Custom CSS files
html_css_files = [
    'css/custom.css',
]

# Custom JavaScript files
html_js_files = []

# The name of an image file (relative to this directory) to place at the top
# of the sidebar.
html_logo = "_static/images/logo.png"

# The name of an image file (within the static path) to use as favicon of the
# docs. This file should be a Windows icon file (.ico) being 16x16 or 32x32 pixels large.
html_favicon = "_static/images/favicon.ico"

# If true, links to the reST sources are added to the pages.
html_show_sourcelink = True

# If true, "Created using Sphinx" is shown in the HTML footer. Default is True.
html_show_sphinx = True

# If true, "(C) Copyright ..." is shown in the HTML footer. Default is True.
html_show_copyright = True

# -- Options for autodoc extension -------------------------------------------

autodoc_default_options = {
    'members': True,
    'member-order': 'bysource',
    'special-members': '__init__',
    'undoc-members': True,
    'exclude-members': '__weakref__',
    'show-inheritance': True,
    'inherited-members': False,
}

autodoc_typehints = 'description'
autodoc_typehints_description_target = 'documented'

# Auto-generate stub pages for API docs
autosummary_generate = True
autosummary_imported_members = False

# -- Options for napoleon extension ------------------------------------------

napoleon_google_docstring = True
napoleon_numpy_docstring = True
napoleon_include_init_with_doc = True
napoleon_include_private_with_doc = False
napoleon_include_special_with_doc = True
napoleon_use_admonition_for_examples = False
napoleon_use_admonition_for_notes = False
napoleon_use_admonition_for_references = False
napoleon_use_ivar = False
napoleon_use_param = True
napoleon_use_rtype = True
napoleon_preprocess_types = False
napoleon_type_aliases = None
napoleon_attr_annotations = True

# -- Options for intersphinx extension ---------------------------------------

intersphinx_mapping = {
    'python': ('https://docs.python.org/3', None),
    'numpy': ('https://numpy.org/doc/stable/', None),
    'scipy': ('https://docs.scipy.org/doc/scipy/', None),
    'matplotlib': ('https://matplotlib.org/stable/', None),
    'torch': ('https://pytorch.org/docs/stable/', None),
    'pyscf': ('https://pyscf.org/user/', None),
}

# -- Options for todo extension ----------------------------------------------

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = True

# -- Options for nbsphinx extension ------------------------------------------

# Execute notebooks before conversion: 'always', 'never', 'auto' (default)
nbsphinx_execute = 'never'

# Allow errors in notebook execution
nbsphinx_allow_errors = False

# Timeout for notebook execution
nbsphinx_timeout = 180

# -- Options for mermaid extension -------------------------------------------

mermaid_output_format = 'svg'
mermaid_params = ['--theme', 'default', '--width', '1200', '--backgroundColor', 'transparent']

# -- Options for MyST parser -------------------------------------------------

myst_enable_extensions = [
    "amsmath",
    "colon_fence",
    "deflist",
    "dollarmath",
    "html_image",
    "linkify",
    "replacements",
    "smartquotes",
    "substitution",
    "tasklist",
]

# -- Options for copybutton extension ----------------------------------------

copybutton_prompt_text = r">>> |\.\.\. |\$ "
copybutton_prompt_is_regexp = True
copybutton_only_copy_prompt_lines = True
copybutton_remove_prompts = True

# -- Internationalization (i18n) options -------------------------------------

locale_dirs = ['../locale/']
gettext_compact = False
gettext_uuid = True
gettext_auto_build = False
gettext_location = False
gettext_additional_targets = ['image', 'literal-block']

# -- Custom setup function ---------------------------------------------------

def setup(app):
    """Custom setup function for Sphinx."""
    # Add custom CSS
    app.add_css_file('css/custom.css')
